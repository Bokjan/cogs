-- phpMyAdmin SQL Dump
-- version 3.4.9
-- http://www.phpmyadmin.net
--
-- ホスト: localhost
-- 生成時間: 2012 年 4 月 05 日 20:48
-- サーバのバージョン: 5.5.22
-- PHP のバージョン: 5.3.10

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- データベース: `vulpix`
--

-- --------------------------------------------------------

--
-- テーブルの構造 `auth`
--

CREATE TABLE IF NOT EXISTS `auth` (
  `member_id` int(11) NOT NULL,
  `secret` varchar(100) NOT NULL,
  `create` datetime NOT NULL,
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- テーブルのデータをダンプしています `auth`
--

INSERT INTO `auth` (`member_id`, `secret`, `create`) VALUES
(1, '3a1cf8263b344102b0480aab748690a2', '2012-04-05 08:23:11');

-- --------------------------------------------------------

--
-- テーブルの構造 `contest`
--

CREATE TABLE IF NOT EXISTS `contest` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` text NOT NULL,
  `description` mediumtext NOT NULL,
  `start_time` datetime NOT NULL,
  `end_time` datetime NOT NULL,
  `invisible` int(11) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `contest_problem`
--

CREATE TABLE IF NOT EXISTS `contest_problem` (
  `contest_id` int(11) NOT NULL,
  `problem_id` int(11) NOT NULL,
  KEY `contest_id` (`contest_id`),
  KEY `problem_id` (`problem_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `contest_submit`
--

CREATE TABLE IF NOT EXISTS `contest_submit` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contest_id` int(11) NOT NULL,
  `problem_id` int(11) NOT NULL,
  `member_id` int(11) NOT NULL,
  `status` int(11) NOT NULL,
  `testpoint` text NOT NULL,
  `score` int(11) NOT NULL,
  `costtime` int(11) NOT NULL,
  `costmemory` int(11) NOT NULL,
  `timestamp` varchar(50) NOT NULL,
  `lang` int(11) NOT NULL,
  `msg` mediumtext NOT NULL,
  `user_agent` text NOT NULL,
  `ip` varchar(100) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `contest_id` (`contest_id`),
  KEY `problem_id` (`problem_id`),
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `judger`
--

CREATE TABLE IF NOT EXISTS `judger` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `description` mediumtext NOT NULL,
  `path` text NOT NULL,
  `priority` int(11) NOT NULL,
  `queue_num` int(11) NOT NULL,
  `pubkey` text NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `member`
--

CREATE TABLE IF NOT EXISTS `member` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(200) NOT NULL,
  `username_lower` varchar(200) NOT NULL,
  `password` varchar(200) NOT NULL,
  `email` text NOT NULL,
  `website` text NOT NULL,
  `tagline` text NOT NULL,
  `bio` mediumtext NOT NULL,
  `gravatar_link` text NOT NULL,
  `create` datetime NOT NULL,
  `admin` int(11) NOT NULL,
  `lang` int(11) NOT NULL COMMENT 'pascal - 1, c - 2, cpp - 3',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;

--
-- テーブルのデータをダンプしています `member`
--

INSERT INTO `member` (`id`, `username`, `username_lower`, `password`, `email`, `website`, `tagline`, `bio`, `gravatar_link`, `create`, `admin`, `lang`) VALUES
(1, 'fanzeyi', 'fanzeyi', '$2a$04$MP01yUggxmvmqlbJRSa/gOw6xCxUA3csY/KLrAc5pqGa5wVUVj4sa', 'fanzeyi1994@gmail.com', '', '', '', 'http://www.gravatar.com/avatar/71de1870e298b3488d75c4cb805f4cf7?d=mm', '2012-04-05 08:23:11', 1, 1);

-- --------------------------------------------------------

--
-- テーブルの構造 `node`
--

CREATE TABLE IF NOT EXISTS `node` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `description` text NOT NULL,
  `link` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `note`
--

CREATE TABLE IF NOT EXISTS `note` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` text NOT NULL,
  `content` mediumtext NOT NULL,
  `member_id` int(11) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `problem`
--

CREATE TABLE IF NOT EXISTS `problem` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` text NOT NULL,
  `shortname` varchar(200) NOT NULL,
  `content` mediumtext NOT NULL,
  `timelimit` int(11) NOT NULL,
  `memlimit` int(11) NOT NULL,
  `testpoint` int(11) NOT NULL,
  `invisible` int(11) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;

--
-- テーブルのデータをダンプしています `problem`
--

INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(1, '加法问题', 'aplusb', '<p>这是一个经典的入门问题，通过此问题，你可以学会如何使用该评测系统。<br />\r\n<br />\r\n【问题描述】<br />\r\n现在有两个<b>实数</b>，分别是A和B。请你从文件中读取A和B，计算它们的和A+B，并把它输出到文件中。（保留到整数）<br />\r\n<br />\r\n【输入格式】<br />\r\n第一行：一个数A<br />\r\n第二行：一个数B<br />\r\n<br />\r\n【输出格式】<br />\r\n第一行：一个数A+B<br />\r\n<br />\r\n【输入样例】<br />\r\n1<br />\r\n2<br />\r\n<br />\r\n【输出样例】<br />\r\n3<br />\r\n<br />\r\n【提示】<br />\r\n<br />\r\n限制说明<br />\r\n<br />\r\n关于时间限制，大多数题目在1秒，少数题目例外。<br />\r\n128MB内存限制。<br />\r\n评测系统运行在Linux下，请务必在程序正常结束时返回0.<br />\r\n所有问题输入输出均为文件形式，请不要从标准读入读入数据，也不要向标准输出写入数据。<br />\r\n除了输出文件，请不要使用其他文件。<br />\r\n<br />\r\n请不要尝试欺骗。<br />\r\n请不要直接打印答案，你必须用你的程序正确解决问题。如果你坚持要打印答案，你的用户可能会被删除，并且被禁止登录。<br />\r\n请不要尝试读取其他你的程序不该读取的文件，或者破坏系统安全。<br />\r\n请不要违反保密协定。<br />\r\n请把你遇到的无法解决的问题告诉我们。<br />\r\n<br />\r\n编译器说明<br />\r\n<br />\r\n我们使用Gcc, G++ 和 Free Pascal 编译器。<br />\r\n在 C/C++ 中 int 是 32 位的，等同于long。(char 是 8 位; short 是 16 位; long 是 32 位; long long 是 64 位)。<br />\r\n某些函数库/类库被禁止使用，请尽可能使用标准库。<br />\r\n请不要忘了关闭文件。<br />\r\n<br />\r\n尝试做一下这道题，你就会使用该评测系统了。<br />\r\n<br />\r\n如果要完全通过这道题，请自己编写正确的程序，下面仅仅是一个例子：<br />\r\n<br />\r\n对于C语言<br />\r\n#include &lt;stdio.h&gt;<br />\r\nint main (void)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; FILE *fin&nbsp; = fopen (&quot;aplusb.in&quot;, &quot;r&quot;);<br />\r\n&nbsp;&nbsp;&nbsp; FILE *fout = fopen (&quot;aplusb.out&quot;, &quot;w&quot;);<br />\r\n&nbsp;&nbsp;&nbsp; int a, b;<br />\r\n&nbsp;&nbsp;&nbsp; fscanf (fin, &quot;%d %d&quot;, &amp;a, &amp;b);<br />\r\n&nbsp;&nbsp;&nbsp; fprintf (fout, &quot;%d &quot;, a+b);<br />\r\n&nbsp;&nbsp;&nbsp; fclose(fin);<br />\r\n&nbsp;&nbsp;&nbsp; fclose(fout);<br />\r\n&nbsp;&nbsp;&nbsp; return 0;<br />\r\n}<br />\r\n<br />\r\n<br />\r\n对于C++语言<br />\r\n#include &lt;iostream&gt;<br />\r\n#include &lt;fstream&gt;<br />\r\n<br />\r\nusing namespace std;<br />\r\n<br />\r\nint main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; ofstream fout (&quot;aplusb.out&quot;);<br />\r\n&nbsp;&nbsp;&nbsp; ifstream fin (&quot;aplusb.in&quot;);<br />\r\n&nbsp;&nbsp;&nbsp; int a, b;<br />\r\n&nbsp;&nbsp;&nbsp; fin &gt;&gt; a &gt;&gt; b;<br />\r\n&nbsp;&nbsp;&nbsp; fout &lt;&lt; a+b &lt;&lt; endl;<br />\r\n&nbsp;&nbsp;&nbsp; fin.close();<br />\r\n&nbsp;&nbsp;&nbsp; fout.close();<br />\r\n&nbsp;&nbsp;&nbsp; return 0;<br />\r\n}<br />\r\n<br />\r\n对于Pascal语言<br />\r\nProgram Test;<br />\r\nVar<br />\r\n&nbsp;&nbsp;&nbsp; fin, fout: text;<br />\r\n&nbsp;&nbsp;&nbsp; a, b: word;<br />\r\nBegin<br />\r\n&nbsp;&nbsp;&nbsp; Assign(fin, ''aplusb.in''); Reset(fin);<br />\r\n&nbsp;&nbsp;&nbsp; Assign(fout, ''aplusb.out''); Rewrite(fout);<br />\r\n&nbsp;&nbsp;&nbsp; Readln(fin, a, b);<br />\r\n&nbsp;&nbsp;&nbsp; Writeln(fout, a+b);<br />\r\n&nbsp;&nbsp;&nbsp; Close(fin);<br />\r\n&nbsp;&nbsp;&nbsp; Close(fout);<br />\r\nEnd.</p>', 50, 128, 4, 0, '2012-04-05 16:22:47'),
(2, '旅行计划', 'djs', '<p><span style="font-size: 10.5pt">过暑假了，阿杜准备出行旅游，他已经查到了某些城市的两两之间的距离及可行路线<span lang="EN-US">(可行路线有方向)，如下图所示。请你编程计算从阿杜所住城市到其它城市的最短路径以帮助阿杜制定旅行计划。</span></span></p>\r\n<p class="MsoNormal" align="center"><span lang="EN-US"><img width="449" height="337" v:shapes="_x0000_s1061 _x0000_s1062 _x0000_s1063 _x0000_s1064 _x0000_s1065 _x0000_s1066 _x0000_s1067 _x0000_s1068 _x0000_s1069 _x0000_s1070 _x0000_s1071 _x0000_s1072 _x0000_s1073 _x0000_s1074" alt="" src="http://192.168.1.252/os/zhuanti/07minlu/djs/djs.jpg" /></span></p>\r\n<p>&nbsp;</p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p>输入由若干行组成，第一行有三个整数，n（1&le;n&le;100）、m（1&le;m&le;n*n）、v（1&le;m&le;n）；城市数，m城市间道路数，v是阿杜所住城市。第2至m+1行是每条路的信息，每行三个整数，为道路的起点、终点和两城市间距离。（城市从0开始编号）</p>\r\n<p>【输出格式】</p>\r\n<p>n组（按城市编号由小至大），每组三行</p>\r\n<p>第一行：城市编号及一个冒号</p>\r\n<p>第二行：path及一个冒号,后面是最短路径节点编号序列（编号间用一个空格隔开）</p>\r\n<p>第三行：cost及一个冒号,后面是一个整数，表示路径距离</p>\r\n<p>如果没有通路则输出 no</p>\r\n<p>【输入样例】</p>\r\n<p>输入文件名：djs.in</p>\r\n<p>6 8 0<br />\r\n0 2 10<br />\r\n0 4 30<br />\r\n0 5 100<br />\r\n1 2 5<br />\r\n2 3 50<br />\r\n3 5 10<br />\r\n4 3 20<br />\r\n4 5 60</p>\r\n<p>【输出样例】</p>\r\n<p>输出文件名：djs.out</p>\r\n<p>0:<br />\r\nno<br />\r\n1:<br />\r\nno<br />\r\n2:<br />\r\npath:0 2<br />\r\ncost:10<br />\r\n3:<br />\r\npath:0 4 3<br />\r\ncost:50<br />\r\n4:<br />\r\npath:0 4<br />\r\ncost:30<br />\r\n5:<br />\r\npath:0 4 3 5<br />\r\ncost:6<o:p>0</o:p></p>', 3000, 128, 8, 0, '2012-04-05 16:22:47'),
(3, '服务点设置', 'djsa', '<div><b>问题描述</b><br />\r\n<span style="font-size: 10.5pt;"><span style="font-size: 10.5pt;">为了进一步普及九年义务教育，政府要在某乡镇建立一所希望小学，该乡镇共有n个村庄，村庄间的距离已知，请问学校建在哪个村庄最好？（好坏的标准是学生就近入学，即在来上学的学生中，以最远的学生走的路程为标准。或者说最远的学生与学校的距离尽可能的小。）</span></span></div>\r\n<div align="center">&nbsp;<img width="359" height="350" alt="" src="/images/fwd.gif" /></div>\r\n<div>【输入格式】</div>\r\n<div>输入由若干行组成，第一行有两个整数，n（1&le;n&le;100）、m（1&le;m&le;n*n）；n表示村庄数，m表示村庄间道路数。第2至m+1行是每条路的信息，每行三个整数，为道路的起点、终点和两村庄间距离。（村庄从0开始编号）</div>\r\n<div>【输出格式】</div>\r\n<div>一个整数，学校所在村庄编号(如果两个村庄都适合建立学校，选择编号小的村庄建学校)。</div>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：djsa.in</div>\r\n<div>6 8<br />\r\n0 2 10<br />\r\n0 4 30<br />\r\n0 5 100<br />\r\n1 2 5<br />\r\n2 3 50<br />\r\n3 5 10<br />\r\n4 3 20<br />\r\n4 5 60</div>\r\n<div>【输出样例】</div>\r\n<div>输出文件名：djsa.out</div>\r\n<div>4</div>', 1000, 128, 8, 0, '2012-04-05 16:22:47'),
(4, '双服务点设置', 'djsb', '<p>&nbsp;<b>问题描述</b><br />\r\n<span style="font-size: 10.5pt;"><span style="font-size: 10.5pt;">为了进一步普及九年义务教育，政府要在某乡镇建立两所希望小学，该乡镇共有n个村庄，村庄间的距离已知，请问学校建在哪两个村庄最好？（好坏的标准是学生就近入学，即在来上学的学生中，以最远的学生走的路程为标准。或者说最远的学生与学校的距离尽可能的小。）</span></span></p>\r\n<div align="center">&nbsp;<img width="359" height="350" alt="" src="/images/fwd(1).gif" /></div>\r\n<div>【输入格式】</div>\r\n<div>输入由若干行组成，第一行有两个整数，n（1&le;n&le;50）、m（1&le;m&le;n*n）；n表示村庄数，m表示村庄间道路数。第2至m+1行是每条路的信息，每行三个整数，为道路的起点、终点和两村庄间距离。（村庄从0开始编号）</div>\r\n<div>【输出格式】</div>\r\n<div>两个整数，学校所在村庄编号(如果两个以上村庄都适合建立学校，选择编号小的两个村庄建学校，输出时按编号从小到大输出)。</div>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：djsb.in</div>\r\n<div>6 8<br />\r\n0 2 10<br />\r\n0 4 30<br />\r\n0 5 100<br />\r\n1 2 5<br />\r\n2 3 50<br />\r\n3 5 10<br />\r\n4 3 20<br />\r\n4 5 60</div>\r\n<div>【输出样例】</div>\r\n<div>输出文件名：<span>djsb.out</span></div>\r\n<div>0 3</div>', 1000, 128, 8, 0, '2012-04-05 16:22:47'),
(5, 'P服务点设置', 'djsc', '<p>&nbsp;<b>问题描述</b><br />\r\n<span style="font-size: 10.5pt"><span style="font-size: 10.5pt">为了进一步普及九年义务教育，政府要在某乡镇建立P所希望小学，该乡镇共有n个村庄，村庄间的距离已知，请问学校建在哪P个村庄最好？（好坏的标准是学生就近入学，即在来上学的学生中，以最远的学生走的路程为标准。或者说最远的学生与学校的距离尽可能的小。）</span></span></p>\r\n<div align="center">&nbsp;<img alt="" width="359" height="350" src="/images/fwd(1).gif" /></div>\r\n<div>【输入格式】</div>\r\n<div>输入由若干行组成，第一行有3个整数，n（1&le;n&le;100）、m（1&le;m&le;n*n）,p；n表示村庄数，m表示村庄间道路数。第2至m+1行是每条路的信息，每行三个整数，为道路的起点、终点和两村庄间距离。（村庄从0开始编号）</div>\r\n<div>【输出格式】</div>\r\n<div>P个整数，学校所在村庄编号(如果P个以上村庄都适合建立学校，选择编号小的P个村庄建学校，输出时按编号从小到大输出)。</div>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：djsc.in</div>\r\n<div>6 8 2<br />\r\n0 2 10<br />\r\n0 4 30<br />\r\n0 5 100<br />\r\n1 2 5<br />\r\n2 3 50<br />\r\n3 5 10<br />\r\n4 3 20<br />\r\n4 5 60</div>\r\n<div>【输出样例】</div>\r\n<div>输出文件名：<span>djsc.out</span></div>\r\n<div>0 3</div>\r\n<p>&nbsp;</p>', 2000, 128, 10, 0, '2012-04-05 16:22:47'),
(6, '线型网络', 'linec', '<p><font color="#0000ff"><br />\r\n</font></p>\r\n<div><span><b>【问题描述</b>】</span></div>\r\n<div>有 N ( &lt;=20 ) 台 PC 放在机房内，现在要求由你选定一台 PC，用共 N-1 条网线从这台机器开始一台接一台地依次连接他们，最后接到哪个以及连接的顺序也是由你选定的，为了节省材料，网线都拉直。求最少需要一次性购买多长的网线。（说白了，就是找出 N 的一个排列 P1 P2 P3 ..PN 然后 P1 -&gt; P2 -&gt; P3 -&gt; ... -&gt; PN 找出 |P1P2|+|P2P3|+...+|PN-1PN| 长度的最小值)</div>\r\n<div>【输入格式】</div>\r\n<div>第一行 N ，下面 N 行，每行分别为机器的坐标(x,y) ( 实数 -100&lt;=x,y&lt;=100 )</div>\r\n<div>【输出格式】</div>\r\n<div>最小的长度，保留两位小数。</div>\r\n<div><b>【输入样例】</b></div>\r\n<div><br />\r\n3<br />\r\n0 0<br />\r\n1 1<br />\r\n1 -1</div>\r\n<div>【输出样例】</div>\r\n<div><br />\r\n2.83</div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:47'),
(7, '通信线路 ', 'mcst', '<div><b>问题描述</b></div>\r\n<div>假设要在n个城市之间建立通信联络网，则连通n个城市只需要n-1条线路。这时, 如何在最行咨经费的前提下建立这个通信网。在每两个城市之间都可以设置&mdash;条线路，相应地都要付出一定的经济代价。n个城市之间，最多可能设置n(n- 1)/2条线路，那么，如何在这些可能的线路中选择n-1条，以使总的耗费最少呢？</div>\r\n<div>&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市<br />\r\n第2--n+1行,每行n个数，分别表示该城市与其它城市之间路线的费用，如果城市间不能建立通信则用-1表示</div>\r\n<div>&nbsp;</div>\r\n<div>【输出格式】</div>\r\n<div>一行，1个整数，表示最少总费用</div>\r\n<div>&nbsp;</div>\r\n<div>【输入输出样例】</div>\r\n<div>&nbsp;</div>\r\n<div>输入文件</div>\r\n<div>&nbsp;</div>\r\n<div>6 <br />\r\n-1 5 -1 -1 -1 -1 <br />\r\n5 -1 50 -1 -1 10<br />\r\n-1 50 -1 20 10 -1<br />\r\n-1 -1 20 -1 60 30<br />\r\n-1 -1 10 60 -1 100<br />\r\n-1 10 -1 30 100 -1</div>\r\n<div>&nbsp;</div>\r\n<div>输出文件</div>\r\n<div>&nbsp;</div>\r\n<div>75</div>\r\n<div>&nbsp;</div>\r\n<div>【数据规模】</div>\r\n<div>&nbsp;</div>\r\n<div>对于40％的数据，保证有n&lt;100： <br />\r\n对于60％的数据，保证有n&lt;256； <br />\r\n对于全部的数据，保证有n&lt;=1501。</div>', 1500, 128, 10, 0, '2012-04-05 16:22:47'),
(8, '备用交换机', 'gd', '<div><b>问题描述</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;n个城市之间有通讯网络，每个城市都有通讯交换机，直接或间接与其它城市连接。因电子设备容易损坏，需给通讯点配备备用交换机。但备用交换机数量有限，不能全部配备，只能给部分重要城市配置。于是规定：如果某个城市由于交换机损坏，不仅本城市通讯中断，还造成其它城市通讯中断，则配备备用交换机。请你根据城市线路情况，计算需配备备用交换机的城市个数，及需配备备用交换机城市的编号。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市(2&lt;=n&lt;=100)<br />\r\n下面有若干行,每行2个数a、b，a、b是城市编号，表示a与b之间有直接通讯线路。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有若干行<br />\r\n第一行，1个整数m，表示需m个备用交换机，下面有m行，每行有一个整数，表示需配备交换机的城市编号，<span>输出顺序按编号由小到大。如果没有城市需配备备用交换机则输出0。</span></div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： gd.in</div>\r\n<div>7<br />\r\n1 2 <br />\r\n2 3<br />\r\n2 4<br />\r\n3 4<br />\r\n4 5<br />\r\n4 6 <br />\r\n4 7 <br />\r\n5 6<br />\r\n6 7<br />\r\n&nbsp;</div>\r\n<div>输出文件名：<span>gd.out</span></div>\r\n<div>2<br />\r\n2 <br />\r\n4</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(9, '中心台站建设', 'zpj', '<div><b>【问题描述】</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;n个城市之间有通讯网络，从这n个城镇中选定几座城镇，在那里建立中心台站，要求它们与其它各城镇相邻，同时为降低造价，要使中心台站数目最少。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市(2&lt;=n&lt;=100)<br />\r\n下面有n行,每行有n个数字。第p行第q列的数字表示城镇p与城镇q之间有无直接通讯线路。数字为1表示有，0表示无。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有若干行<br />\r\n第一行，1个整数a，表示最少中心台站数目。</div>\r\n<div>第二行一个整数b,表示共有b种方案。下面有b行，每行有a个整数，表示一种建站方案。多种方案输出时，输出顺序按城镇编号由小到大字典序输出。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： zpj.in</div>\r\n<div>6 <br />\r\n0 1 1 1 0 0 <br />\r\n1 0 0 1 0 0 <br />\r\n1 0 0 1 0 0 <br />\r\n0 0 0 1 0 1 <br />\r\n0 0 0 1 0 0</div>\r\n<div>输出文件名：<span>zpj.out</span></div>\r\n<div>1 <br />\r\n1<br />\r\n4</div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(10, '信号无错传输', 'dlj', '<div><b>问题描述</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;为提高传递信息的保密性和可靠性，两个军事基地用几套专用编码传输信号。传递信号过程中，发现某些编码在传递过程中容易混淆，影响了信息传输质量。请你在已有的编码中进行精简，既要保证传输过程中不发生混淆，又要尽量使编码集中可用编码尽量多,请你给出新的编码设计方案。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示该编码规则共有n种信号(2&lt;=n&lt;=100)<br />\r\n下面有n行,每行有n个数字。第p行第q列的数字表示信号p与信号q之间是否可能混淆。数字为1表示有可能混淆，0表示不会混淆。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有若干行<br />\r\n第一行，一个整数a,表示精简后的编码规则中有a个信号。<br />\r\n第二行，一个整数b,表示最佳精简方案有b种。<span><br />\r\n第3--b+2行，每行b个整数,表示一种精简方案。<span>多种方案输出时，输出顺序按信号编号由小到大字典序输出。</span></span></div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件</div>\r\n<div>6 <br />\r\n0 1 1 1 0 0 <br />\r\n1 0 0 1 0 0 <br />\r\n1 0 0 1 0 0 <br />\r\n1 1 1 0 1 1 <br />\r\n0 0 0 1 0 1 <br />\r\n0 0 0 1 1 0 <br />\r\n&nbsp;</div>\r\n<div>输出文件</div>\r\n<div>3 <br />\r\n2<br />\r\n2 3 5 <br />\r\n2 3 6</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(11, '运输问题1', 'maxflowa', '<div><b>【问题描述】</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;一个工厂每天生产若干商品，需运输到销售部门进行销售。从产地到销地要经过某些城镇，有不同的路线可以行走，每条两城镇间的公路都有一定的流量限制。请你计算，在不考虑其它车辆使用公路的前提下，如何充分利用所有的公路，使产地运输到销地的商品最多，最多能运输多少商品。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市(2&lt;=n&lt;=100)<br />\r\n下面有n行,每行有n个数字。第p行第q列的数字表示城镇p与城镇q之间有无公路连接。数字为0表示无，大于0表示有公路，且该数字表示该公路流量。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有一行<br />\r\n第一行，1个整数n，表示最大流量为n。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： maxflowa.in</div>\r\n<div>6<br />\r\n0 4 8 0 0 0<br />\r\n0 0 4 4 1 0<br />\r\n0 0 0 2 2 0<br />\r\n0 0 0 0 0 7<br />\r\n0 0 0 6 0 9<br />\r\n0 0 0 0 0 0</div>\r\n<div>输出文件名：<span>maxflowa.out</span></div>\r\n<div>8</div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(12, '运输问题2', 'maxflowb', '<div><font color="#0000ff">运输问题</font></div>\r\n<div><span><b>【问题描述】</b></span></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;一个工厂每天生产若干商品，需运输到销售部门进行销售。从产地到销地要经过某些城镇，有不同的路线可以行走，每条两城镇间的公路都有一定的流量限制。为了保证公路的运营效率，每条公路都有一个容量下界，也就是至少应有多少车辆通过。每条公路还有一个容量上界，也就是最多应有多少车辆通过。请你计算，在不考虑其它车辆使用公路的前提下，如何充分利用所有的公路，使产地运输到销地的商品最多，最多能运输多少商品。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市(2&lt;=n&lt;=100)<br />\r\n下面有n行,每行有2*n个数字。第p行第2*q-1,2*q列的数字表示城镇p与城镇q之间有无公路连接。数字为0表示无，大于0表示有公路，且这两个数字分别表示该公路流量的下界，上界。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有一行<br />\r\n第一行，1个整数n，表示最大流量为n。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： maxflowb.in</div>\r\n<div>6<br />\r\n0 0 1 3 0 10 0 0 0 0 0 0 <br />\r\n0 0 0 0 0 0 5 7 0 0 0 0<br />\r\n0 0 0 0 0 0 0 0 2 8 0 0<br />\r\n0 0 0 0 1 3 0 0 0 0 3 5<br />\r\n0 0 2 4 0 0 0 0 0 0 2 6<br />\r\n0 0 0 0 0 0 0 0 0 0 0 0</div>\r\n<div>输出文件名：<span>maxflowb.out</span></div>\r\n<div>10</div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(13, '运输问题4', 'maxflowd', '<div><span><b>【问题描述】</b></span></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;一个工厂每天生产若干商品，需运输到销售部门进行销售。从产地到销地要经过某些城镇，有不同的路线可以行走，每条两城镇间的公路都有一定的流量限制。公路设有收费站，每通过一辆车，要交纳过路费。请你计算，在不考虑其它车辆使用公路的前提下，如何使产地运输到销地的商品最多，并使费用最少。</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，一个整数n，表示共有n个城市(2&lt;=n&lt;=100)</div>\r\n<div>第二行，一个整数，表示起点城市</div>\r\n<div>第三行，一个整数，表示终点城市<br />\r\n下面有n行,每行有2*n个数字。第p行第2*q-1,2*q列的数字表示城镇p与城镇q之间有无公路连接。数字为0表示无，大于0表示有公路，且这两个数字分别表示该公路流量和每车费用。</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有一行<br />\r\n第一行，1个整数n，表示最小费用为n。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： maxflowd.in</div>\r\n<div>6<br />\r\n1<br />\r\n6<br />\r\n0 0 1 3 5 10 0 0 0 0 0 0 <br />\r\n0 0 0 0 0 0 5 7 0 0 0 0<br />\r\n0 0 0 0 0 0 0 0 2 8 0 0<br />\r\n0 0 0 0 1 3 0 0 0 0 3 5<br />\r\n0 0 2 4 0 0 0 0 0 0 2 6<br />\r\n0 0 0 0 0 0 0 0 0 0 0 0</div>\r\n<div>输出文件名：<span>maxflowd.out</span></div>\r\n<div>63</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(14, '搭配飞行员', 'flyer', '<div><b>【问题描述】</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;飞行大队有若干个来自各地的驾驶员，专门驾驶一种型号的飞机，这种飞机每架有两个驾驶员,需一个正驾驶员和一个副驾驶员。由于种种原因，例如相互配合的问题，有些驾驶员不能在同一架飞机上飞行，问如何搭配驾驶员才能使出航的飞机最多。</div>\r\n<div align="center"><img height="313" alt="" width="201" border="0" src="http://www.ruvtex.cn/mw/images/2/24/Flyer.jpg" /><br />\r\n&nbsp;</div>\r\n<div align="left">如图，假设有10个驾驶员，如图中的V1，V2，&hellip;，V10就代表达10个驾驶员,其中V1，V2，V3，V4，V5是正驾驶员,V6，V7，V8，V9，V10是副驾驶员。如果一个正驾驶员和一个副驾驶员可以同机飞行，就在代表他们两个之间连一条线,两个人不能同机飞行，就不连。例如V1和V7可以同机飞行，而V1和V8就不行。请搭配飞行员，使出航的飞机最多。注意:因为驾驶工作分工严格,两个正驾驶员或两个副驾驶员都不能同机飞行.<br />\r\n&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件有若干行<br />\r\n第一行，两个整数n与n1，表示共有n个飞行员(2&lt;=n&lt;=100),其中有n1名飞行员是正驾驶员.<br />\r\n下面有若干行,每行有2个数字a,b。表示正驾驶员a和副驾驶员b可以同机飞行。</div>\r\n<div>注:正驾驶员的编号在前,即正驾驶员的编号小于副驾驶员的编号.</div>\r\n<div>【输出格式】</div>\r\n<div>输出文件有一行<br />\r\n第一行，1个整数，表示最大起飞的飞机数。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名： flyer.in</div>\r\n<div>10 5 <br />\r\n1 7 <br />\r\n2 6 <br />\r\n2 10 <br />\r\n3 7 <br />\r\n4 8 <br />\r\n5 9 <br />\r\n&nbsp;</div>\r\n<div>输出文件名：<span>flyer.out</span></div>\r\n<div>4</div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:22:48'),
(15, '社交网络', 'network', '<p>【问题描述】</p>\r\n<p>在社交网络（social network）的研究中，我们常常使用图论概念去解释一些社会现象。不妨看这样的一个问题。在一个社交圈子里有n个人，人与人之间有不同程度的关系。我 们将这个关系网络对应到一个n个结点的无向图上，两个不同的人若互相认识，则在他们对应的结点之间连接一条无向边，并附上一个正数权值c，c越小，表示两 个人之间的关系越密切。</p>\r\n<p>我们可以用对应结点之间的最短路长度来衡量两个人s和t之间的关系密切程度，注意到最短路径上的其他结点为s和t的联系提供了某种便利， 即这些结点对于s 和t之间的联系有一定的重要程度。我们可以通过统计经过一个结点v的最短路径的数目来衡量该结点在社交网络中的重要程度。</p>\r\n<p>考虑到两个结点A和B之间可能会有多条最短路径。我们修改重要程度的定义如下：</p>\r\n<p>令Cs,t表示从s到t的不同的最短路的数目，Cs,t(v)表示经过v从s到t的最短路的数目；则定义</p>\r\n<p><img width="330" height="114" longdesc="/wiki/Image:Network2007_1.jpg" alt="Image:Network2007 1.jpg" src="../../../../mw/images/e/e4/Network2007_1.jpg" /></p>\r\n<p>为结点v在社交网络中的重要程度。</p>\r\n<p>为了使I(v)和Cs,t(v)有意义，我们规定需要处理的社交网络都是连通的无向图，即任意两个结点之间都有一条有限长度的最短路径。</p>\r\n<p>现在给出这样一幅描述社交网络s的加权无向图，请你求出每一个结点的重要程度。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件中第一行有两个整数，n和m，表示社交网络中结点和无向边的数目。在无向图中，我们将所有结点从1到n进行编号。</p>\r\n<p>接下来m行，每行用三个整数a, b, c描述一条连接结点a和b，权值为c的无向边。注意任意两个结点之间最多有一条无向边相连，无向图中也不会出现自环（即不存在一条无向边的两个端点是相同的结点）。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件包括n行，每行一个实数，精确到小数点后3位。第i行的实数表示结点i在社交网络中的重要程度。</p>\r\n<p>【样例输入】</p>\r\n<pre>\r\n4 4\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n4 1 1\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n1.000\r\n1.000\r\n1.000\r\n1.000\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>社交网络如下图所示。</p>\r\n<p><img width="450" height="334" longdesc="/wiki/Image:Network2007_2.jpg" alt="Image:Network2007 2.jpg" src="../../../../mw/images/1/1a/Network2007_2.jpg" /></p>\r\n<p>对于1号结点而言，只有2号到4号结点和4号到2号结点的最短路经过1号结点，而2号结点和4号结点之间的最短路又有2条。因而根据定义，1号结点的重要程度计算为1/2+1/2=1。由于图的对称性，其他三个结点的重要程度也都是1。</p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，仅当你的程序计算得出的各个结点的重要程度与标准输出相差不超过0.001时，才能得到测试点的满分，否则不得分。</p>\r\n<p>【数据规模和约定】</p>\r\n<ul>\r\n    <li>50%的数据中：n &le;10，m &le;45</li>\r\n    <li>100%的数据中：n &le;100，m &le;4 500，任意一条边的权值c是正整数，满足：1 &le;c &le;1 000。</li>\r\n    <li>所有数据中保证给出的无向图连通，且任意两个结点之间的最短路径数目不超过10^10。</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:22:49'),
(16, '货币兑换', 'cash', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;小 Y最近在一家金券交易所工作。该金券交易所只发行交易两种金券：A纪念券（以下简称A券）和B纪念券（以下简称B券）。每个持有金券的顾客都有一个自己的 帐户。金券的数目可以是一个实数。每天随着市场的起伏波动，两种金券都有自己当时的价值，即每一单位金券当天可以兑换的人民币数目。我们记录第K天中A券 和B券的价值分别为AK和BK（元/单位金券）。<br />\r\n为了方便顾客，金券交易所提供了一种非常方便的交易方式：比例交易法。<br />\r\n比例交易法分为两个方面：<br />\r\na)卖出金券：顾客提供一个[0，100]内的实数OP作为卖出比例，其意义为：将OP%的A券和OP%的B券以当时的价值兑换为人民币；<br />\r\nb)买入金券：顾客支付IP元人民币，交易所将会兑换给用户总价值为IP的金券，并且，满足提供给顾客的A券和B券的比例在第K天恰好为RateK；<br />\r\n例如，假定接下来3天内的Ak、Bk、RateK的变化分别为：</p>\r\n<table width="639" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>\r\n            <div align="center">时间</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">Ak</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">Bk</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">Ratek</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第一天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">1</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第二天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">2</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第三天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">3</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>假定在第一天时，用户手中有100元人民币但是没有任何金券。<br />\r\n用户可以执行以下的操作：</p>\r\n<table width="607" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>\r\n            <div align="center">时间</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">用户操作</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">人民币(元)</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">A券的数量</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">B券的数量</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">开户</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">无</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">100</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第一天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">买入100元</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">50</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">50</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第二天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">卖出50%</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">75</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">25</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">25</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第二天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">买入60元</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">15</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">55</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">40</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第三天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">卖出100%</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">205</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>注意到，同一天内可以进行多次操作。<br />\r\n小Y是一个很有经济头脑的员工，通过较长时间的运作和行情测算，他已经知道了未来N天内的A券和B券的价值以及Rate。他还希望能够计算出来，如果开始时拥有S元钱，那么N天后最多能够获得多少元钱。</p>\r\n<p><span class="MsoNormal">【输入格式】</span></p>\r\n<p>第一行两个正整数N、S，分别表示小Y能预知的天数以及初始时拥有的钱数。接下来N行，第K行三个实数AK、BK、RateK，意义如题目中所述。</p>\r\n<p><span class="MsoNormal">【输出格式】</span></p>\r\n<p>只有一个实数MaxProfit，表示第N天的操作结束时能够获得的最大的金钱数目。答案保留3位小数。</p>\r\n<p><span class="MsoNormal">【输入样例】</span></p>\r\n<p>3 100<br />\r\n1 1 1<br />\r\n1 2 2<br />\r\n2 2 3</p>\r\n<p><span class="MsoNormal">【输出样例】</span></p>\r\n<p>225.000</p>\r\n<p>【样例说明】</p>\r\n<table width="607" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>\r\n            <div align="center">时间</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">用户操作</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">人民币(元)</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">A券的数量</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">B券的数量</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">开户</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">无</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">100</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第一天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">买入100元</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">50</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">50</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第二天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">卖出100%</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">150</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第二天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">买入150元</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">75</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">37.5</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">第三天</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">卖出100%</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">225</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p><span class="MsoNormal">【数据规模和约定】</span></p>\r\n<p>测试数据设计使得精度误差不会超过10^-7。<br />\r\n对于40%的测试数据，满足N &le;10；<br />\r\n对于60%的测试数据，满足N &le;1 000；<br />\r\n对于100%的测试数据，满足N &le;100 000；</p>\r\n<p>对于100%的测试数据，满足：<br />\r\n0 &lt;AK &le;10；<br />\r\n0 &lt;BK &le;10；<br />\r\n0 &lt;RateK &le;100<br />\r\nMaxProfit &le;10<br />\r\n<br />\r\n提示<br />\r\n输入文件可能很大，请采用快速的读入方式。<br />\r\n必然存在一种最优的买卖方案满足：<br />\r\n每次买进操作使用完所有的人民币；<br />\r\n每次卖出操作卖出所有的金券。</p>\r\n<p>【评分方法】<br />\r\n本题没有部分分，你的程序的输出只有和标准答案相差不超过0.001时，才能<br />\r\n获得该测试点的满分，否则不得分。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:49'),
(17, '项链工厂', 'necklace', '<p>【问题描述】</p>\r\n<p>T公司是一家专门生产彩色珠子项链的公司，其生产的项链设计新颖、款式多样、价格适中，广受青年人的喜爱。最近T公司打算推出一款项链自助生产系统，使用该系统顾客可以自行设计心目中的美丽项链。</p>\r\n<p>该项链自助生产系统包括硬件系统与软件系统，软件系统与用户进行交互并控制硬件系统，硬件系统接受软件系统的命令生产指定的项链。该系统的硬件系统已经完成，而软件系统尚未开发，T公司的人找到了正在参加全国信息学竞赛的你，你能帮助T公司编写一个软件模拟系统吗？</p>\r\n<p>一条项链包含N个珠子，每个珠子的颜色是1, 2, &hellip;, c中的一种。项链被固定在一个平板上，平板的某个位置被标记位置1，按顺时针方向其他位置被记为2,3,&hellip;,N。</p>\r\n<p><img width="429" height="447" src="../../../../mw/images/7/77/Necklace2007.jpg" alt="Image:Necklace2007.jpg" longdesc="/wiki/Image:Necklace2007.jpg" /></p>\r\n<p>你将要编写的软件系统应支持如下命令：</p>\r\n<table border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="155">命令</td>\r\n            <td width="144">参数限制</td>\r\n            <td width="326">内容</td>\r\n        </tr>\r\n        <tr>\r\n            <td>R k</td>\r\n            <td>0&lt;k&lt;N</td>\r\n            <td>意为Rotate k。将项链在平板上顺时针旋转k个位置, 即原来处于位置1的珠子将转至位置k+1，处于位置2的珠子将转至位置k+2，依次类推。</td>\r\n        </tr>\r\n        <tr>\r\n            <td>F</td>\r\n            <td>&nbsp;</td>\r\n            <td>意为Flip。将平板沿着给定的对称轴翻转，原来处于位置1的珠子不动，位置2上的珠子与位置N上的珠子互换，位置3上的珠子与位置N-1上的珠子互换，依次类推。</td>\r\n        </tr>\r\n        <tr>\r\n            <td>S i j</td>\r\n            <td>1&le;i , j&le;N</td>\r\n            <td>意为Swap i , j。将位置i上的珠子与位置j上的珠子互换。</td>\r\n        </tr>\r\n        <tr>\r\n            <td>P i j x</td>\r\n            <td>1&le;i , j&le;N, x&le;c</td>\r\n            <td>意为Paint i , j , x。将位置i沿顺时针方向到位置j的一段染为颜色x。</td>\r\n        </tr>\r\n        <tr>\r\n            <td>C</td>\r\n            <td>&nbsp;</td>\r\n            <td>意为Count。查询当前的项链由多少个&ldquo;部分&rdquo;组成，我们称项链中颜色相同的一段为一个&ldquo;部分&rdquo;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>CS i j</td>\r\n            <td>1&le;i , j&le;N</td>\r\n            <td>意为CountSegment i , j。查询从位置i沿顺时针方向到位置j的一段中有多少个部分组成。</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>【输入文件】</p>\r\n<p>输入文件第一行包含两个整数N, c，分别表示项链包含的珠子数目以及颜色数目。第二行包含N个整数，x1, x2&hellip;, xn，表示从位置1到位置N的珠子的颜色，1 &le;xi &le;c。第三行包含一个整数Q，表示命令数目。接下来的Q行每行一条命令，如上文所述。</p>\r\n<p>【输出文件】</p>\r\n<p>对于每一个C和CS命令，应输出一个整数代表相应的答案。</p>\r\n<p>【输入样例】</p>\r\n<pre>\r\n5 3\r\n1 2 3 2 1\r\n4\r\nC\r\nR 2\r\nP 5 5 2\r\nCS 4 1\r\n</pre>\r\n<p>【输出样例】</p>\r\n<pre>\r\n4\r\n1\r\n</pre>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和标准答案完全一致才能获得满分， 否则不得分。</p>\r\n<p>【数据规模和约定】</p>\r\n<ul>\r\n    <li>对于60%的数据，N &le;1 000，Q &le;1 000；</li>\r\n    <li>对于100%的数据，N &le;500 000，Q &le;500 000，c &le;1 000。</li>\r\n</ul>', 4000, 128, 10, 0, '2012-04-05 16:22:49'),
(18, '生成树计数', 'count', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;最近，小栋在无向连通图的生成树个数计算方面有了惊人的进展，他发现：<br />\r\n&middot;n个结点的环的生成树个数为n。<br />\r\n&middot;n个结点的完全图的生成树个数为n n-2。<br />\r\n这两个发现让小栋欣喜若狂，由此更加坚定了他继续计算生成树个数的想法，他要计算出各种各样图的生成树数目。<br />\r\n一天，小栋和同学聚会，大家围坐在一张大圆桌周围。小栋看了看，马上想到了生成树问题。如果把每个同学看成一个结点，邻座（结点间距离为1）的同学间连一 条边，就变成了一个环。可是，小栋对环的计数已经十分娴熟且不再感兴趣。于是，小栋又把图变了一下：不仅把邻座的同学之间连一条边，还把相隔一个座位（结 点间距离为2）的同学之间也连一条边，将结点间有边直接相连的这两种情况统称为有边相连，如图1所示。</p>\r\n<p align="center"><img height="453" width="406" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2a.JPG" alt="" /></p>\r\n<p>小栋以前没有计算过这类图的生成树个数，但是，他想起了老师讲过的计算任意图的生成树个数的一种通用方法：构造一个n&times;n的矩阵A={aij}</p>\r\n<p align="center"><img height="121" width="327" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2b.JPG" alt="" /></p>\r\n<p>其中di表示结点i的度数。</p>\r\n<p>与图1相应的A矩阵如下所示。为了计算图1所对应的生成数的个数，只要去掉矩阵A的最后一行和最后一列，得到一个(n-1)&times;(n-1)的矩阵B，计算出矩阵B的行列式的值便可得到图1的生成树的个数。</p>\r\n<p><img height="245" width="769" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2c.JPG" alt="" /></p>\r\n<p>所以生成树的个数为|B|=3528。小栋发现利用通用方法，因计算过于复杂而很难算出来，而且用其他方法也难以找到更简便的公式进行计算。于是，他将图做了简化，从一个地方将圆桌断开，这样所有的同学形成了一条链，连接距离为1和距离为2的点。例如八个点的情形如下：</p>\r\n<p align="center"><img height="121" width="594" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2d.JPG" alt="" /></p>\r\n<p>这样生成树的总数就减少了很多。小栋不停的思考，一直到聚会结束，终于找到了一种快捷的方法计算出这个图的生成树个数。可是，如果把距离为3的点也连起来，小栋就不知道如何快捷计算了。现在，请你帮助小栋计算这类图的生成树的数目。</p>\r\n<p><span class="MsoNormal">【输入格式】</span></p>\r\n<p>输入文件中包含两个整数k, n，由一个空格分隔。k表示要将所有距离不超过k（含k）的结点连接起来，n表示有n个结点。</p>\r\n<p><span class="MsoNormal">【输出格式】</span></p>\r\n<p>输出文件输出一个整数，表示生成树的个数。由于答案可能比较大，所以你只要输出答案除65521的余数即可。</p>\r\n<p><span class="MsoNormal">【输入样例】</span></p>\r\n<p>3 5</p>\r\n<p><span class="MsoNormal">【输出样例】</span></p>\r\n<p>75</p>\r\n<p>【样例说明】</p>\r\n<p>样例对应的图如下：</p>\r\n<p><img height="327" width="744" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2e.JPG" alt="" /></p>\r\n<p><span class="MsoNormal">【数据规模和约定】</span></p>\r\n<p>对于所有的数据2&le;k&le;n</p>\r\n<table border="1" width="733">\r\n    <tbody>\r\n        <tr>\r\n            <td width="173">数据编号</td>\r\n            <td width="80">k范围</td>\r\n            <td width="93">n范围</td>\r\n            <td width="94">数据编号</td>\r\n            <td width="104">k范围</td>\r\n            <td width="149">n范围</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1</td>\r\n            <td>k=2</td>\r\n            <td>n&le;10</td>\r\n            <td>6</td>\r\n            <td>k&le;5</td>\r\n            <td>n&le;100</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>k=3</td>\r\n            <td>n=5</td>\r\n            <td>7</td>\r\n            <td>k&le;3</td>\r\n            <td>n&le;2000</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>k=4</td>\r\n            <td>n&le;10</td>\r\n            <td>8</td>\r\n            <td>k&le;5</td>\r\n            <td>n&le;10000</td>\r\n        </tr>\r\n        <tr>\r\n            <td>4</td>\r\n            <td>k=5</td>\r\n            <td>n=10</td>\r\n            <td>9</td>\r\n            <td>k&le;3</td>\r\n            <td>n&le;10^15</td>\r\n        </tr>\r\n        <tr>\r\n            <td>5</td>\r\n            <td>k&le;3</td>\r\n            <td>n&le;100</td>\r\n            <td>10</td>\r\n            <td>k&le;5</td>\r\n            <td>n&le;10^15</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p><br />\r\n提示<br />\r\n行列式的一种计算方法，记&alpha;(P)表示P中逆序对的个数，令B的行列式</p>\r\n<p align="center"><img height="339" width="767" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-2f.JPG" alt="" /></p>\r\n<p>所以B的行列式为0-48+0+84+96-105=27。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:49');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(19, '追捕盗贼', 'catch', '<p><font color="#0000ff"><strong><strong>追捕盗贼</strong></strong></font></p>\r\n<p>【任务描述】</p>\r\n<p><br />\r\n魔法国度Magic Land里最近出现了一个大盗Frank，他在Magic Land四处作案，专门窃取政府机关的机密文件（因而有人怀疑Frank是敌国派来的间谍）。<br />\r\n为了捉住Frank，Magic Land的安全局重拳出击！<br />\r\nMagic Land由N个城市组成，并且这N个城市又由恰好N-1条公路彼此连接起来，使得任意两个城市间都可以通过若干条公路互达。从数据结构的角度我们也可以说，这N个城市和N-1条公路形成了一棵树。<br />\r\n例如，下图就是Magic Land的一个可能格局（4个城市用数字编号，3条公路用字母编号）：</p>\r\n<p align="center"><img height="234" width="732" src="http://192.168.1.252/os/times/2007/07noi/day2/07noiday2-3a.JPG" alt="" /></p>\r\n<p>大盗Frank能够在公路上以任意速度移动。<br />\r\n比方说，对于上图给出的格局，在0.00001秒钟内（或者任意短的一段时间内），Frank就可以从城市1经过城市2到达城市4，中间经过了两条公路。<br />\r\n想要生擒Frank困难重重，所以安全局派出了经验丰富的警探，这些警探具有非凡的追捕才能：<br />\r\n1. 只要有警探和Frank同处一个城市，那么就能够立刻察觉到Frank，并且将其逮捕。<br />\r\n2. 虽然Frank可以在公路上以任意快的速度移动，但是如果有警探和Frank在同一条公路上相遇，那么警探也可以立刻察觉到Frank并将其逮捕。<br />\r\n安全局完全不知道Frank躲在哪个城市，或者正在哪条公路上移动，所以需要制定一个周密的抓捕计划，计划由若干步骤组成。在每一步中，可以做如下几件事中的一个：<br />\r\n1. 在某个城市空降一位警探。警探可以直接从指挥部空降到Magic               Land的任意一个城市里。此操作记为&ldquo;L x&rdquo;，表示在编号为x的城市里空降一位警探。耗时1秒。<br />\r\n2. 把留在某个城市里的一位警探直接召回指挥部。以备在以后的步骤中再度空降到某个城市里。此操作记为&ldquo;B x&rdquo;。表示把编号为x的城市里的一位警探召回指挥部。耗时1秒。<br />\r\n3. 让待在城市x的一位警探沿着公路移动到城市y，此操作记为&ldquo;M               x y&rdquo;。耗时1秒。当然，前提是城市x和城市y之间有公路。如果在警探移动的过程中，大盗Frank也在同一条公路上，那么警探就抓捕到了Frank。<br />\r\n现在，由你来制定一套追捕计划，也就是给出若干个步骤，需要保证：无论大盗Frank一开始躲在哪儿，也无论Frank在整个过程中如何狡猾地移动 （Frank大盗可能会窃取到追捕行动的计划书，所以他一定会想尽办法逃避），他一定会被缉拿归案。<br />\r\n希望参与的警探越少越好，因为经验丰富的警探毕竟不多。<br />\r\n例如对于前面所给的那个图示格局，一个可行的计划如下：<br />\r\n1. L 2 在城市2空降一位警探。注意这一步完成之后，城市2里不会有Frank，否则他将被捉住。<br />\r\n2. L 2 再在城市2空降一位警探。<br />\r\n3. M 2 1 让城市2的一位警探移动到城市1。注意城市2里还留有另一位警探。这一步完成之后，城市1里不会有Frank，公路A上也<br />\r\n不会有Frank。也就是说，假如Frank还没有被逮捕，那么他只能是在城市3或城市4里，或者公路B或公路C上。<br />\r\n4. B 1 召回城市1的一位警探。注意虽然召回了这位警探，但是由于我们始终留了一位警探在城市2把守，所以Frank仍然不可能跑到<br />\r\n城市1或者是公路A上。<br />\r\n5. L 3 在城市3空降一位警探。注意这一步可以空降在此之前被召回的那位警探。这一步完成之后，城市3里不会有Frank，否则他会被捉住。<br />\r\n6. M 3 2 让城市3里的一位警探移动到城市2。这一步完成之后，如果Frank还没有被捉住，那他只能是在公路C上或者城市4里。注意<br />\r\n这一步之后，城市2里有两位警探。<br />\r\n7. M 2 4 让城市2里的一位警探移动到城市4。这一步完成之后，Frank一定会被捉住，除非他根本就没来Magic Land。<br />\r\n这个计划总共需要2位警探的参与。可以证明：如果自始至终只有1名或者更少的警探参与，则Frank就会逍遥法外。<br />\r\n你的任务很简单：对于一个输入的Magic Land的格局，计算S，也就是为了追捕Frank至少需要投入多少位警探，并且给出相应的追捕计划步骤。</p>\r\n<p>【输入格式】 <br />\r\n输入文件给出了Magic Land的格局。<br />\r\n第一行一个整数N，代表有N个城市，城市的编号是1~N。<br />\r\n接下来N-1行，每行有两个用空格分开的整数xi，yi，代表城市xi，yi之间有公路相连。保证1&le;xi,yi&le;N</p>\r\n<p>【输出格式】</p>\r\n<p>向输出文件输出你所给出的追捕计划。<br />\r\n第一行请输出一个整数S，代表追捕计划需要多少位警探。<br />\r\n第二行请输出一个整数T，代表追捕计划总共有多少步。<br />\r\n接下来请输出T行，依次描述了追捕计划的每一步。每行必须是以下三种形式之一：<br />\r\nz&ldquo;L x&rdquo;，其中L是大写字母，接着是一个空格，再接着是整数x，代表在城市x空降一位警探。你必须保证1&le;x&le;N。<br />\r\nz&ldquo;B x&rdquo;，其中B是大写字母，接着是一个空格，再接着是整数x，代表召回城市x的一位警探。你必须保证1&le;x&le;N，且你的计<br />\r\n划执行到这一步之前，城市x里面确实至少有一位警探。<br />\r\nz&ldquo;M x y&rdquo;，其中M是大写字母，接着是一个空格，再接着是整数x，再跟一个空格，最后一个是整数y。代表让城市x的一位警<br />\r\n探沿着公路移动到城市y。你必须保证1&le;x, y&le;N，且你的计划执行到这一步之前，城市x里面确实至少有一位警探，且城市x, y之前<br />\r\n确实有公路。<br />\r\n必须保证输出的S确实等于追捕计划中所需要的警探数目。</p>\r\n<p>【输入样例】</p>\r\n<p>4 <br />\r\n1 2<br />\r\n3 2<br />\r\n2 4</p>\r\n<p>【输出样例】</p>\r\n<p>2 <br />\r\n7<br />\r\nL 2<br />\r\nL 2<br />\r\nM 2 1<br />\r\nB 1<br />\r\nL 3<br />\r\nM 3 2<br />\r\nM 2 4</p>\r\n<p>【评分方法】</p>\r\n<p>对于任何一个测试点：<br />\r\n如果输出的追捕计划不合法，或者整个追捕计划的步骤数T超过了20000，或者追捕计划结束之后，不能保证捉住Frank，则不能得分。</p>\r\n<p>否则，用你输出的S和我们已知的标准答案S *相比较：<br />\r\n1. 若S&lt;S *，则得到120%的分。<br />\r\n2. 若S=S *，则得到100%的分。<br />\r\n3. 若S * &lt;S&le;S * +2，则得到60%的分。<br />\r\n4. 若S * +2&lt;S&le;S * +4，则得到40%的分。<br />\r\n5. 若S * +4&lt;S&le;S * +8，则得到20%的分。<br />\r\n6. 若S&gt;S * +8，则得到10%的分。</p>\r\n<p>【数据规模】</p>\r\n<p>输入保证描述了一棵连通的N结点树，1&le;N&le;1 000。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:49'),
(20, '破译密文', 'encrypt', '<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;信息的明文是由0利1组成的非空序列。但在网络通信中，为了信息的安全性，常对明文进行加密，用密文进行传输。密文是由0、1和若干个密码字母组成，每个密码字母代表不同的01串，例如，密文二011a0bf00a01。密码破译的关键是确定每个密码的含义。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;经过长期统计分析，现在知道了每个密码的固定长度，如今，我方又截获了敌方的两段密文S1和S2，并且知道S1二S2，即两段密文代表相同的明文。你的任务是帮助情报人员对给定的两段密文进行分析，看一看有多少种可能的明文。</div>\r\n<div>【输入文件】</div>\r\n<div>第1行： S1 (第1段密文)<br />\r\n第2行： S2 (第2段密文)<br />\r\n第3行： N (密码总数， N&lt;=26)<br />\r\n第4&mdash;N+3行： 字母i 长度i (密码用小写英文字母表示， 密码长度&lt;=100)<br />\r\n&nbsp;</div>\r\n<div>【输出文件】</div>\r\n<div>M（表示有M种可能的明文）<br />\r\n&nbsp;</div>\r\n<div>【输入输出样例】</div>\r\n<div>encrypt.in</div>\r\n<div>100ad1<br />\r\ncc1<br />\r\n4<br />\r\na 2 <br />\r\nd 3 <br />\r\nc 4 <br />\r\nb 50</div>\r\n<div>encrypt.out</div>\r\n<div>2</div>\r\n<div>【约束条件】</div>\r\n<div align="left">明文的长度&lt;=10000 　</div>', 1000, 128, 7, 0, '2012-04-05 16:22:49'),
(21, '希望小学', 'hopeschool', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;地处偏僻山区的X乡有N个自然村，目前还没有一所小学，孩子们要么不上学，要么需要翻过一座大山到别处上学。如今好啦，有一位热心人士准备捐款在某个自然村建立一所希望小学。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;通过调查发现，X乡各个村庄之间的道路较为复杂，有平路、上坡和下坡。考虑到每个村孩子们的人数不同，走上坡、下坡和平路的速度也不同，?男孩和女孩走路速度也不同，请你为X乡选择一个最合适建立希望小学的村庄，使得所有的孩子花在路上的总时间最少。</p>\r\n<p>【输入文件】</p>\r\n<p>hopeschool.in</p>\r\n<p>第1行： N B1 B2 B3 G1 G2 G3 (村庄数、男孩分别走平路、上坡、下坡每千米花费的时间以及女孩分别走平路、上坡、下坡每千米花费的时间)<br />\r\n第2行： Xl X2&hellip;&hellip;Xn (Xi表示第i个村要上学的男孩人数)<br />\r\n第3行： Y1 Y2&hellip;&hellip;Yn (Yi表示第i个村要上学的女孩人数)<br />\r\n第4行： K (道路数)<br />\r\n第5&mdash;K+4行： Ai Bi Si1 Si2 Si3 (村庄Ai到村庄Bi，平路Sil千米，上坡Si2千米，下坡Si3千米,i=1,2,&hellip;，K)<br />\r\n&nbsp;</p>\r\n<p>【输出文件】</p>\r\n<p>hopeschool.out</p>\r\n<p>T（将要建立希望小学村庄的编号）</p>\r\n<p>【约束条件】</p>\r\n<p>(1) N&lt;=30， Xi&lt;=20， Yi&lt;=20<br />\r\n(2) K&lt;=100， 每条路的长度&lt;=30千米<br />\r\n(3) B1，B2，B3，G1，G2，G3为整数，都小于10个单位时间／每千米<br />\r\n(4) 每条道路只给出一组数据。例如：5 8 7 10 3表示从村庄5往村庄8走，平路<br />\r\n有7千米，上坡10千米。 下坡3千米；当然也表示从村庄8往村庄5走，平路有7千米，<br />\r\n上坡3千米。下坡10千米。<br />\r\n&nbsp;</p>\r\n<p>【输入输出样例】</p>\r\n<p align="center"><img height="40" alt="" width="277" src="http://192.168.1.252/os/times/2005/05ha/t501.jpg" /></p>\r\n<p>hopeschool.in</p>\r\n<p>2 2 2 1 2 3 2 <br />\r\n10 12 <br />\r\n5 4 <br />\r\n1 <br />\r\n1 2 10 2 1 <br />\r\n&nbsp;</p>\r\n<p>hopeschool.out</p>\r\n<p>2</p>', 1000, 128, 5, 0, '2012-04-05 16:22:49'),
(22, '路由选择问题', 'route', '<p class="MsoNormal"><span style="font-family: 宋体;">【问题描述】</span></p>\r\n<p class="MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;X城有一个含有N个节点的通信网络，在通信中，我们往往关心信息从一个节点I传输到节点J的最短路径。遗憾的是，由于种种原因，线路中总有一些节点会出故障，因此在传输中要避开故障节点。<br />\r\n任务一：在己知故障节点的情况下，求避开这些故障节点，从节点I到节点J的最短路径S0。<br />\r\n任务二：在不考虑故障节点的情况下，求从节点I到节点J的最短路径S1、第二最短路径S2。</p>\r\n<p class="MsoNormal">【输入文件】</p>\r\n<p class="MsoNormal">第1行： N I J (节点个数 起始节点 目标节点)<br />\r\n第2&mdash;N+1行： Sk1 Sk2&hellip;SkN  (节点K到节点J的距离为SkJ K=1，2，&hellip;&hellip;，N)<br />\r\n最后一行： P T1 T2&hellip;&hellip;Tp (故障节点的个数及编号)</p>\r\n<p class="MsoNormal">【输出文件】</p>\r\n<p>S0 S1 S2 (S1&lt;=S2 从节点I到节点J至少有两条不同路径)</p>\r\n<p class="MsoNormal">【输入输出样例】</p>\r\n<p align="center" class="MsoNormal"><span lang="EN-US"><img height="186" width="315" src="/images/t1-01.jpg" alt="" /><br />\r\n</span></p>\r\n<p class="MsoNormal">route.in</p>\r\n<p>5 1 5<br />\r\n0 10 5 0 0<br />\r\n10 0 0 6 20<br />\r\n5 0 0 30 35<br />\r\n0 6 30 0 6<br />\r\n0 20 35 6  0<br />\r\n1 2</p>\r\n<p>route.out</p>\r\n<p>40 22 30</p>\r\n<p class="MsoNormal"><span lang="EN-US">【约束条件】</span></p>\r\n<p align="left">(1)N&lt;=50 N个节点的编号为1，2，&hellip;，N<br />\r\n(2)Skj为整数，Skj&lt;=100，(K，J=1，2&hellip;，N  若Skj=0表示节点K到节点J没线路)<br />\r\n(3)P&lt;=5<span lang="EN-US"> 　</span></p>', 1000, 128, 3, 0, '2012-04-05 16:22:49'),
(23, '寻找编码串', 'codestring', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;给定N个由0和1组成的编码S1，S2，&hellip;，Sn，寻找一个长度最短的编码串T，使得T至少可以分解出两种不同的Si的排列，在排列中有的编码可以不出现。<br />\r\n例如：S1=0110，S2=00，S3=111，S4=001100，S5=110，编码串T=001100110<br />\r\nT有两种不同的分解T=S2+S5+S1，T=S4+S5</p>\r\n<p>【输入文件】</p>\r\n<p>codestring.in</p>\r\n<p>第1行：N（编码的个数N&lt;=20）</p>\r\n<p>第2--N+1行：Si(第i个编码，Si的长度&lt;=50)</p>\r\n<p>注意，该例子只是对库函数的使用说明，并没有算法上的意义。</p>\r\n<p>【输出文件】</p>\r\n<p>codestring.out</p>\r\n<p>第1行：M（编码串的长度）</p>\r\n<p>第2行：T(长度最短的编码串)</p>\r\n<p>【约束条件】</p>\r\n<p>若有多个长度相同且最短的编码串。则输出字典序最小的编码串。例如：若有两种最短的编码串：10110010100利10001110010，则输出10001110010。</p>\r\n<p>【输入输出样例】</p>\r\n<p>codestring.in</p>\r\n<p>5<br />\r\n0110 <br />\r\n00 <br />\r\n111 <br />\r\n001100 <br />\r\n1100</p>\r\n<p>codestring.out</p>\r\n<p>001100</p>', 1000, 128, 6, 0, '2012-04-05 16:22:49'),
(24, '修筑绿化带', 'parterre', '<p><b>【问题描述】</b></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 为了增添公园的景致，现在需要在公园中修筑一个花坛，同时在画坛四周修建一片绿化带，让花坛被绿化带围起来。 <br />\r\n如果把公园看成一个M*N的矩形，那么花坛可以看成一个C*D的矩形，绿化带和花坛一起可以看成一个A*B的矩形。 <br />\r\n如果将花园中的每一块土地的&ldquo;肥沃度&rdquo;定义为该块土地上每一个小块肥沃度之和，那么， <br />\r\n绿化带的肥沃度=A*B块的肥沃度-C*D块的肥沃度 <br />\r\n为了使得绿化带的生长得旺盛，我们希望绿化带的肥沃度最大。</p>\r\n<p><b>【输入】</b>:</p>\r\n<p>第一行有6个正整数M,N,A,B,C,D <br />\r\n接下来一个M*N的数字矩阵，其中矩阵的第i行j列元素为一个整数Xij,表示该花园的第i行第j列的土地&ldquo;肥沃度&rdquo;。</p>\r\n<p><b>【输出】</b>:</p>\r\n<p>一个正整数，表示绿化带的最大肥沃程度。</p>\r\n<p><b>【输入输出样例】</b><br />\r\n<strong>parterre.in </strong><br />\r\n4 5 4 4 2 2 <br />\r\n20 19 18 17 16 <br />\r\n15 14 13 12 11 <br />\r\n10 9 8 7 6 <br />\r\n5 4 3 2 1 <br />\r\n<br />\r\n<strong>parterre.out </strong><br />\r\n132</p>\r\n<p><b>【数据范围】</b></p>\r\n<p>30%的数据，1&lt;=M,N&lt;=50 <br />\r\n100%的数据，1&lt;=M,N&lt;=1000,1&lt;=A&lt;=M,1&lt;=B&lt;=N,1&lt;=C&lt;=A-2,1&lt;=D&lt;=B-2，1&lt;=&ldquo;肥沃度&rdquo;&lt;=100</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(25, '守望者的逃离', 'escape', '<p>守望者的逃离</p>\r\n<p>【问题描述】</p>\r\n<p>恶魔猎手尤迫安野心勃勃.他背叛了暗夜精灵，率深藏在海底的那加企图叛变：守望者在与尤迪安的交锋中遭遇了围杀.被困在一个荒芜的大岛上。为了杀死守望者，尤迪安开始对这个荒岛施咒，这座岛很快就会沉下去，到那时，刀上的所有人都会遇难：守望者的跑步速度，为17m/s， 以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在1s内移动60m，不过每次使用闪烁法术都会消耗魔法值10点。守望者的魔法值恢复的速度为4点/s，只有处在原地休息状态时才能恢复。</p>\r\n<p>现在已知守望者的魔法初值M，他所在的初始位置与岛的出口之间的距离S，岛沉没的时间T。你的任务是写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望者在剩下的时间内能走的最远距离。注意:守望者跑步、闪烁或休息活动均以秒(s)为单位。且每次活动的持续时间为整数秒。距离的单位为米(m)。</p>\r\n<p>【输入】</p>\r\n<p>输入文件escape.in仅一行，包括空格隔开的三个非负整数M，S，T。</p>\r\n<p>【输出】</p>\r\n<p>输出文件escape.out包含两行:</p>\r\n<p>第1行为字符串&quot;Yes&quot;或&quot;No&quot; (区分大小写)，即守望者是否能逃离荒岛。</p>\r\n<p>第2行包含一个整数，第一行为&quot;Yes&quot; (区分大小写）时表示守望着逃离荒岛的最短时间</p>\r\n<p>第一行为&quot;No&quot; (区分大小写) 时表示守望者能走的最远距离。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>escape.in</p>\r\n<p>39 200 4</p>\r\n<p>&nbsp;</p>\r\n<p>escape.out</p>\r\n<p>No</p>\r\n<p>197</p>\r\n<p>【输入输出样例2】</p>\r\n<p>escape.in</p>\r\n<p>36 255 10</p>\r\n<p>&nbsp;</p>\r\n<p>escape.out</p>\r\n<p>Yes</p>\r\n<p>6</p>\r\n<p>【限制】</p>\r\n<p>30%的数据满足: 1 &lt;= T&lt;= 10， 1 &lt;=S&lt;= 100</p>\r\n<p>50%的数据满足: 1 &lt;= T &lt;= 1000， 1 &lt;= S &lt;= 10000</p>\r\n<p>100%的数据满足: 1 &lt;= T &lt;= 300000， 0 &lt;= M&lt;=1000 1 &lt;=S &lt;= 10^8</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(26, '分组', 'dataa', '<strong>【问题描述】 </strong>\r\n<p>现有 n 个学生, 要分成X<sub>1</sub> ,X<sub>2</sub> ,...,X<sub>m</sub> ,共 m 组(m&lt;=n,X<sub>1</sub> ,X<sub>2</sub> ,...,X<sub>m</sub> 分别表示每组的学生人数),要求对于所有的i&lt;j,X<sub>i</sub> &lt;=X<sub>j</sub> ,共有多少种分组方案,求出分组方案。</p>\r\n<p align="left">【输入格式】</p>\r\n<p>输入文件：dataa.in</p>\r\n<p>只有一行：两个整数n,m(1&lt;=n&lt;=20 1&lt;m&lt;=10)</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件：dataa.out</p>\r\n<p>输出若干行，第一行是一个整数,表示分组方案数量.下面每行为一种分组方案，按字典序分组输出，每行的数与数之间用一个空格隔开。</p>\r\n<p>【输入样例】</p>\r\n<p>输入文件名： dataa.in</p>\r\n<p>6 3</p>\r\n<p>输出文件名： dataa.out</p>\r\n<p>3 <br />\r\n1 1 4 <br />\r\n1 2 3 <br />\r\n2 2 2 <br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(27, '水管局长', 'tube', '<p>【问题描述 】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;SC 省 MY 市有着庞大的地下水管网络，嘟嘟是 MY 市的水管局长（就是管水管的啦），嘟嘟作为水管局长的工作就是：每天供水公司可能要将一定量的水从 x 处运往 y 处，嘟嘟需要为供水公司找到一条从 A 至 B 的水管的路径，接着通过信息化的控制中心通知路径上的水管进入准备送水状态，等到路径上每一条水管都准备好了，供水公司就可以开始送水了。嘟嘟一次只能处理一项送水任务，等到当前的送水任务完成了，才能处理下一项。</p>\r\n<p>在处理每项送水任务之前，路径上的水管都要进行一系列的准备操作，如清洗、消毒等等。嘟嘟在控制中心一声令下，这些水管的准备操作同时开始，但由于各条管道的长度、内径不同，进行准备操作需要的时间可能不同。供水公司总是希望嘟嘟能找到这样一条送水路径，路径上的所有管道全都准备就绪所需要的时间尽量短。嘟嘟希望你能帮助他完成这样的一个选择路径的系统，以满足供水公司的要求。另外，由于 MY 市的水管年代久远，一些水管会不时出现故障导致不能使用，你的程序必须考虑到这一点。</p>\r\n<p>不妨将 MY 市的水管网络看作一幅简单无向图（即没有自环或重边）：水管是图中的边，水管的连接处为图中的结点。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;【输入格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输入文件第一行为 3 个整数： N ， M ， Q 分别表示管道连接处（结点）的数目、目前水管（无向边）的数目，以及你的程序需要处理的任务数目（包括寻找一条满足要求的路径和接受某条水管坏掉的事实）。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;以下 M 行，每行 3 个整数 x ， y 和 t ，描述一条对应的水管。 x 和 y 表示水管两端结点的编号， t 表示准备送水所需要的时间。我们不妨为结点从 1 至 N 编号，这样所有的 x 和 y 都在范围 [1,N] 内。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;以下 Q 行，每行描述一项任务。其中第一个整数为 k ：若 k=1 则后跟两个整数 A 和 B ，表示你需要为供水公司寻找一条满足要求的从 A 到 B 的水管路径；若 k=2 ，则后跟两个整数 x 和 y ，表示直接连接 x 和 y 的水管宣布报废（保证合法，即在此之前直接连接 x 和 y 尚未报废的水管一定存在）。</p>\r\n<p>【输出格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;按顺序对应输入文件中每一项 k=1 的任务，你需要输出一个数字和一个回车 / 换行符。该数字表示：你寻找到的水管路径中所有管道全都完成准备工作所需要的时间（当然要求最短）。</p>\r\n<p>【输入样例】</p>\r\n<p>tube.in</p>\r\n<p>4 4 3<br />\r\n1 2 2<br />\r\n2 3 3<br />\r\n3 4 2<br />\r\n1 4 2<br />\r\n1 1 4<br />\r\n2 1 4<br />\r\n1 1 4</p>\r\n<p>【输入样例】</p>\r\n<p>tube.out</p>\r\n<p>2<br />\r\n3</p>\r\n<p>【约束条件】</p>\r\n<p>N &le; 1000 <br />\r\nM &le; 100000<br />\r\nQ &le; 100000</p>\r\n<p>测试数据中宣布报废的水管不超过 5000 条；且任何时候我们考虑的水管网络都是连通的，即从任一结点 A 必有至少一条水管路径通往任一结点 B 。</p>', 3000, 128, 10, 0, '2012-04-05 16:22:50'),
(28, '最大获利', 'profit', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;新的技术正冲击着手机通讯市场，对于各大运营商来说，这既是机遇，更是挑战。THU 集团旗下的CS&amp;T 通讯公司在新一代通讯技术血战的前夜，需要做太多的准备工作，仅就站址选择一项，就需要完成前期市场研究、站址勘测、最优化等项目。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;在前期市场调查和站址勘测之后，公司得到了一共N 个可以作为通讯信号中转站的地址，而由于这些地址的地理位置差异，在不同的地方建造通讯中转站需要投入的成本也是不一样的，所幸在前期调查之后这些都是已知数据：建立第i个通讯中转站需要的成本为Pi（1&le;i&le;N）。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;另外公司调查得出了所有期望中的用户群，一共M 个。关于第i 个用户群的信息概括为Ai, Bi 和Ci：这些用户会使用中转站Ai 和中转站Bi 进行通讯，公司可以获益Ci。（1&le;i&le;M, 1&le;Ai, Bi&le;N） <br />\r\nTHU 集团的CS&amp;T 公司可以有选择的建立一些中转站（投入成本），为一些用户提供服务并获得收益（获益之和）。那么如何选择最终建立的中转站才能让公司的净获利最大呢？（净获利 = 获益之和 &ndash; 投入成本之和） <br />\r\n&nbsp;</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件中第一行有两个正整数N 和M 。 <br />\r\n第二行中有N 个整数描述每一个通讯中转站的建立成本，依次为P1, P2, &hellip;, PN 。 <br />\r\n以下M 行，第(i + 2)行的三个数Ai, Bi 和Ci 描述第i 个用户群的信息。 <br />\r\n所有变量的含义可以参见题目描述。</p>\r\n<p>【输出文件】</p>\r\n<p>你的程序只要向输出文件输出一个整数，表示公司可以得到的最大净获利。</p>\r\n<p>【样例输入】</p>\r\n<p>profit.in</p>\r\n<p>5 5 <br />\r\n1 2 3 4 5 <br />\r\n1 2 3 <br />\r\n2 3 4 <br />\r\n1 3 3 <br />\r\n1 4 2 <br />\r\n4 5 3</p>\r\n<p>【样例输出】</p>\r\n<p>profit.out</p>\r\n<p>4</p>\r\n<p>【样例说明】</p>\r\n<p>选择建立1、2、3 号中转站，则需要投入成本6，获利为10，因此得到最大收益4。</p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和我们的答案完全一致才能获得满分，否则不得分。</p>\r\n<p>【数据规模和约定】</p>\r\n<p>80%的数据中：N&le;200，M&le;1 000。 <br />\r\n100%的数据中：N&le;5 000，M&le;50 000，0&le;Ci&le;100，0&le;Pi&le;100。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(29, '公路建设', 'road', '<p><strong>【问题描述】 </strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;A 国是一个新兴的国家，有 N 个城市，分别编号为 1,2.3&hellip;N 。政府想大搞公路建设，提供了优惠政策：对于每一个投资方案的预计总费用，政府负担 50% ，并且允许投资的公司对过往的汽车收取连续 5 年的养路费。世界各地的大公司纷纷投资，并提出了自己的建设方案，他们的投资方案包括这些内容：公路连接的两座城市的编号，预计的总费用（假设他们的预计总是准确的）。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;你作为 A 国公路规划局的总工程师，有权利决定每一个方案是否接受。但是政府给你的要求是：</p>\r\n<p>（ 1 ）要保证各个城市之间都有公路直接或间接相连。</p>\r\n<p>（ 2 ）因为是新兴国家，政府的经济实力还不强。政府希望负担最少的费用。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;因为大公司并不是同时提出方案，政府希望每接到一个方案，就可以知道当前需要负担的最小费用和接受的投资方案，以便随时开工。关于你给投资公司的回复可以等到开工以后再给。 注意： A 国一开始是没有公路的。我们设定 A 国的城市数目 N&lt;=500 ，投资的方案总数 M&lt;=2000 。</p>\r\n<p>&nbsp;</p>\r\n<p align="left">【输入格式】</p>\r\n<p>输入文件名： road.in</p>\r\n<p>第 1 行有两个数字： N 、 M</p>\r\n<p>第 2 行到第 M+1 行给出了各个投资方案，第 i 行的方案编号为 i-1</p>\r\n<p>编号小的方案先接到，一个方案占一行，每行有 3 个数字，分别是连接的两个城市编号 a 、 b ，和投资的预计总费用 cost 。</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件名： road.out</p>\r\n<p>输出文件共有 M 行。</p>\r\n<p>每一行的第一个数字是当前政府需要负担的最少费用（保留 1 位小数），后面是 X 个数字，表示当前政府接受的方案的编号， 不 要求从小到大排列。但如果此时接受的所有投资方案不能保证政府的第一条要求，那么这一行只有一个数字 0</p>\r\n<p>【输入样例】</p>\r\n<p>输入文件名： road.in</p>\r\n<p>3 5<br />\r\n1 2 4<br />\r\n1 3 4<br />\r\n2 3 4<br />\r\n1 3 2<br />\r\n1 2 2</p>\r\n<p>输出文件名： road.out</p>\r\n<p>0<br />\r\n4.0 1 2 <br />\r\n4.0 1 2 <br />\r\n3.0 1 4 <br />\r\n2.0 4 5<br />\r\n&nbsp;</p>\r\n<p>注意：由于没有评测插件，不要求输出方案。</p>\r\n<p>即样例输出：</p>\r\n<p>0<br />\r\n4.0<br />\r\n4.0<br />\r\n3.0<br />\r\n2.0</p>', 1000, 128, 5, 0, '2012-04-05 16:22:50'),
(30, '坦克游戏', 'gametk', '<p>【问题描述 】</p>\r\n<p>NOI2008公司最近推出了一款新的坦克游戏。在游戏中，你将操纵一辆坦克，在一个 N &times; M 的区域中完成一项任务。在此的区域中，将会有许多可攻击的目标，而你每摧毁这样的一个目标，就将获得与目标价值相等的分数。只有获得了最高的分数，任务才算完成。同时，为了增加游戏的真实性和难度，该游戏还做了以下的限制：</p>\r\n<p>&bull;&nbsp;坦克有射程 r 的限制。为方便计算，射程 r 规定为：若坦克位于 (x,y) 格，则它可攻击的目标 (x1,y1) 必须满足 |x-x1|,|y-y1| &isin; [0,r] 。</p>\r\n<p>&bull;&nbsp;对坦克完成任务的时间有严格限制，规定为 t 秒。其中，坦克每进行一次移动都需 1 秒的时间，每攻击一个目标也需 1 秒的时间。时间一到 t 秒，便对此次任务进行记分。</p>\r\n<p>&bull;&nbsp;坦克最初位于左上角，且移动方向只准是向右或向下，每次只允许移动一格。</p>\r\n<p>在以上的限制条件下，要完成该任务便成为了一件很难事情。因此，你必须为此编写一个程序，让它助你完成这个艰巨的任务。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件： gametk.in</p>\r\n<p>第一行右四格整数 N 、 M 、 r 、 t ，分别表示区域的长、宽，以及射程和完成任务时间。</p>\r\n<p>接下来 N 行是一格 N&times;M 的矩阵，对应每个位置上目标的价值。 1 &le; N 、 M &le; 500 ， 1 &le; r &le; 100 ， 1 &le; t &le; 2500 。</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件： gametk.out</p>\r\n<p>输出文件仅一个数 max ，即该任务中可得到的最高分数。</p>\r\n<p>【输入样例】</p>\r\n<p>5 5 2 7<br />\r\n0 5 0 0 4<br />\r\n0 0 0 0 2<br />\r\n0 0 0 0 0<br />\r\n0 0 0 0 0<br />\r\n5 0 3 0 11</p>\r\n<p>【输出样例】</p>\r\n<p>21<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(31, '潜水员的问题', 'ple', '<p><strong>【问题描述】 </strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;一个潜水员在潜水时使用一种特殊的装置：一个有两个容器的气筒。一个容器中装的是氧气，另一个容器中装氮气。潜水员需要携带的氧气和氮气量依赖于潜水的时间和深度。潜水员有一系列的气筒，用来在不同的情况下携带。每个气筒可以用这样几个量来描述：气筒的质量，气筒中所能容纳的氧气量，以及可以容纳的氮气量。为了能完成最近的一个任务，潜水员需要一定量的氧气和氮气。潜水员有一系列准备好的气筒。他希望能携带总质量尽可能小的气筒下水。现在请你帮他计算一下至少要携带多少质量的气筒下水才能完成这个任务。</p>\r\n<p><strong>【</strong><strong>示例说明</strong><strong>】</strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;潜水员有以下 5 个气筒。每个气筒用三个整数来描述：气筒所能容纳的氧气的量，氮气的量和气筒的质量：</p>\r\n<p>3 36 120 <br />\r\n10 25 129 <br />\r\n5 50 250 <br />\r\n1 45 130 <br />\r\n4 20 119 <br />\r\n&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;如果这次任务中潜水员需要携带 5 升 氧气， 60 升 氮气。那么他至少要携带总质量为 249 的气筒下水（样例中的第一个和第二个气筒或者第四个和第五个气筒）。</p>\r\n<p><strong>【</strong><strong>任务</strong><strong>】</strong></p>\r\n<p>写一个程序：</p>\r\n<p>&bull;&nbsp; 从输入文件中读入完成任务所需要的氧气和氮气量以及气筒的个数和对每个气筒的描述。</p>\r\n<p>&bull;&nbsp; 计算潜水员完成任务至少需要携带的多少质量的气筒。</p>\r\n<p>&bull;&nbsp; 将结果写入输出文件中。</p>\r\n<p>注意：题目中给出的气筒总是能够容纳足够多的气体使得潜水员能完成任务。</p>\r\n<p><strong>【</strong><strong>输入格式</strong><strong>】</strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在文件的第一行中有两个整数 t 和 a ，分别描述完成任务所需的氧气和氮气量。（ 1 &le; t &le; 21 ， 1 &le; a &le; 79 ）。第二行中有一个整数 n ，表示气筒的个数。（ 1 &le; n &le; 1000 ）。以后 n 行中，每行有三个整数 t i ， a i ， w i ， t i 表示第 i 个气筒所能容纳的氧气量， a i 表示第 i 个气筒所能容纳的氮气量， w i 表示气筒 i 的质量。（ 1 &le; a i &le; 21 ， 1 &le; t i &le; 79 ， 1 &le; w i &le; 800 ）。</p>\r\n<p><strong>【</strong><strong>输出格式</strong><strong>】</strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件只有一行，这行中包含一个整数，表示最少需要携带的多少质量的气筒来完成改任务）。</p>\r\n<p><strong>【</strong><strong>样例输入</strong><strong>】</strong></p>\r\n<p><strong>ple.in</strong></p>\r\n<p>5 60 <br />\r\n5 <br />\r\n3 36 120 <br />\r\n10 25 129 <br />\r\n5 50 250 <br />\r\n1 45 130 <br />\r\n4 20 119 <br />\r\n&nbsp;</p>\r\n<p><strong>【</strong><strong>样例输出</strong><strong>】</strong></p>\r\n<p><strong>ple.out</strong></p>\r\n<p>249</p>', 1000, 128, 10, 0, '2012-04-05 16:22:50'),
(32, '位图 ', 'bit', '<p>【问题描述 】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;给定一个 n*m 的矩形位图，位图中的每个像素不是白色就是黑色，但至少有一个是白色的。第 i 行、第 j 列的像素被称作像素 (i, j) 。两个像素 p1 = (i1, j1) ， p2 = (i2, j2) 之间的距离定义为： d(p1, p2) = |i1 - i2| + |j1 - j2|.</p>\r\n<p>【 <strong>任务 】</strong></p>\r\n<p>编一个程序完成以下操作：</p>\r\n<p>1 ．从输入文件中读入此位图的有关信息。</p>\r\n<p>2 ．对于每个像素，计算此像素与离其最近的&ldquo;白像素&rdquo;的距离。</p>\r\n<p>3 ．将结果写到输出文件里面。</p>\r\n<p>【<strong>输入格式 】</strong></p>\r\n<p>输入文件的第一行包含两个整数 n, m （ 1 &le; n &le; 182, 1 &le; m &le; 182 ），用一个空格隔开。接下来 n 行，每一行都包含一个长度为 m 的 01 串；第 i+1 行，第 j 列的字符若为 1 ，则像素 (i, j) 是白色的；否则是黑色的。</p>\r\n<p>【<strong>输出格式 】</strong></p>\r\n<p>输出文件包含 n 行 , 每行有 m 个用空格隔开的整数。第 i 行、第 j 列的整数表示 (i, j) 与离它最近的白像素之间的距离</p>\r\n<p>【<strong>样例输入】</strong></p>\r\n<p><strong>bit.in</strong></p>\r\n<p>3 4 <br />\r\n0001 <br />\r\n0011 <br />\r\n0110</p>\r\n<p>【<strong>样例输出】</strong></p>\r\n<p><strong>bit.out</strong></p>\r\n<p>3 2 1 0 <br />\r\n2 1 0 0 <br />\r\n1 0 0 1</p>', 1000, 128, 16, 0, '2012-04-05 16:22:51'),
(33, '阶梯教室设备利用', 'rez', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;我们现有许多演讲要在阶梯教室中举行。每一个演讲都可以用唯一的起始和终止时间来确定，如果两个演讲时间有部分或全部重复，那么它们是无法同时在阶级教室中举行的。现在我们想要尽最大可能的利用这个教室，也就是说，我们需要在这些演讲中选择一些不重复的演讲来举行使得他们用的总时间尽可能的长。我们假设在某一演讲结束的瞬间我们就可以立即开始另一个演讲。</p>\r\n<p>任务：</p>\r\n<p>请写一个程序：</p>\r\n<p>&bull;&nbsp; 在输入文件中读入所有演讲的起始和终止时间；</p>\r\n<p>&bull;&nbsp; 计算最大的可能演讲总时间；</p>\r\n<p>&bull;&nbsp; 把结果写到输出文件中。</p>\r\n<p>【输入文件】</p>\r\n<p>在输入文件的第一行包括一个正整数 n ， n &lt;= 10000 ，为所有的演讲的数目。</p>\r\n<p>以下的 n 行每行含有两个由空格隔开整数 p 和 k ， 0 &lt;= p &lt; k &lt;= 30000 。这样的一对整数表示一个演讲由时间 p 开始到时间 k 结束。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件只有唯一的一个整数，为最长的演讲总时间。</p>\r\n<p>【样例输入】</p>\r\n<p>rez.in</p>\r\n<p>12<br />\r\n1 2<br />\r\n3 5<br />\r\n0 4<br />\r\n6 8<br />\r\n7 13<br />\r\n4 6<br />\r\n9 10<br />\r\n9 12<br />\r\n11 14<br />\r\n15 19<br />\r\n14 16<br />\r\n18 20<br />\r\n&nbsp;</p>\r\n<p>【样例输出】</p>\r\n<p>rez.out</p>\r\n<p>16</p>', 1000, 128, 10, 0, '2012-04-05 16:22:51'),
(34, '汇编电路', 'ukl', '<strong>【问题描述】 </strong>\r\n<p>&nbsp;&nbsp;&nbsp;Bytetel 公司决定改进他们生产的计算机。他们想用一种称为汇编电路的特殊系统来代替汇编程序。汇编程序由独立的作业。每个作业由四个元素组成：</p>\r\n<ul>\r\n    <li>用于取数据的两个寄存器</li>\r\n    <li>须进行的基本操作</li>\r\n    <li>用于写数据的寄存器</li>\r\n</ul>\r\n<p>我们假定最多只有 26 个寄存器。它们用小写英文字母表示。这有 4 个基本操作它们用大写字母 A, B, C, D 表示。 <br />\r\n一个汇编电路有：</p>\r\n<ul>\r\n    <li>输入端定向到寄存器，指定的寄存器的初始值被送到输入端。</li>\r\n    <li>输出端也定向到寄存器，它们的结果被送到寄存器</li>\r\n</ul>\r\n<p>一个电路中有几个门。每一个门有两个输入和一个输出。一个门以它的输入完成一个基本操作并将结果送到它的输出端。一个门的输入端和电路的输出端都连接着其他门的输出端或者电路的输入端。一个门的输出端和电路的输入端可以连接着许多其他门的输入端或者电路的输出端。连接不可以连成圈。</p>\r\n<p>一个汇编电路等价于一个汇编程序。汇编程序由寄存器的初始值产生的结果与汇编电路产生的结果相同。</p>\r\n<h2>任务</h2>\r\n<p>写一个程序：</p>\r\n<ul>\r\n    <li>从输入文件读入一个汇编程序的描述。</li>\r\n    <li>计算汇编电路最少要使用的寄存器数目。</li>\r\n</ul>\r\n<p>将结果写到输出文件 。</p>\r\n<p>&nbsp;</p>\r\n<p align="left">【输入格式】</p>\r\n<p>在输入文件的第一行有一个整数 n(1 &lt;= n &lt; 1000) ，表示汇编程序的命令个数。</p>\r\n<p>在接下来的 n 行中每行表示一条汇编命令。每一行都用四个字母来描述，第一个字母表示基本操作： A,B,C 或 D 。第二个和第三个字母（小写英文字母）表示寄存器的编号，表示输入数据的位置。第四个字母是寄存器的编号，表示结果存储的位置。</p>\r\n<p>【输出格式】</p>\r\n<p>在输出文件的第一行有一个整数，表示汇编电路所需门的个数。</p>\r\n<p>【输入样例】</p>\r\n<p>ukl.in</p>\r\n<p>8<br />\r\nAfbc<br />\r\nBfbd<br />\r\nCddd<br />\r\nBcbc<br />\r\nAfcc<br />\r\nAfbf<br />\r\nCfbb<br />\r\nDfdb<br />\r\n&nbsp;</p>\r\n<p>ukl.out<br />\r\n6<br />\r\n&nbsp;</p>\r\n<h2>图形</h2>\r\n<p>一个与题目中汇编程序等价的汇编电路的图形</p>\r\n<p><img width="254" height="264" alt="" src="/images/2008mnx-2_clip_image001.gif" /></p>\r\n<p align="center">&nbsp;</p>', 1000, 128, 15, 0, '2012-04-05 16:22:51'),
(35, '遗传密码', 'pie', '<p>问题描述</p>\r\n<p>一个 primitivus 的 遗传密码 是一串自然数 K= ( a_1,...,a_n ) 。所有在 primitivus 的遗传密码中连续出现的数对 ( l , r ) 被称为一个 primitivus 的 特征 。例如存在一个 i ， l=a_i, r=a_i+1 。在 primitivus 的遗传密码中没有形如 ( p , p ) 的特征。 任务</p>\r\n<p>写一个程序</p>\r\n<ul>\r\n    <li>从输入文件中读入特征的列表</li>\r\n    <li>计算 primitivus 的遗传密码的最短长度</li>\r\n    <li>将结果写到输出文件</li>\r\n</ul>\r\n<p>输入格式</p>\r\n<p>在输入文件的第一行有一个正整数 n ，表示 primitivus 的遗传密码的不同的特征。在接下来的 n 行中，每行有一对自然数 l 和 r ，用空格隔开， 1 &lt;= l &lt;= 1000, 1 &lt;= r &lt;= 1000 。数对 ( l , r ) 是 primitivus 的特征。特征不会在输入文件中重复出现。</p>\r\n<p>输出格式</p>\r\n<p>你的程序应当向输出文件输出一个数，表示包含输入文件中所有特征的最短的 primitivus 遗传密码的长度。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n12\r\n2 3\r\n3 9\r\n9 6\r\n8 5\r\n5 7\r\n7 6\r\n4 5\r\n5 1\r\n1 4\r\n4 2\r\n2 8\r\n8 6 \r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n15\r\n</pre>\r\n<p>注释</p>\r\n<p>下面的遗传密码包含了所有特征：</p>\r\n<pre>\r\n(8, 5, 1, 4, 2, 3, 9, 6, 4, 5, 7, 6, 2, 8, 6)\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:22:51'),
(36, '求和问题', 'sum', '<div><b>【问题描述</b>】</div>\r\n<div>&nbsp;&nbsp;&nbsp; 在一个长度为n的整数数列中取出连续的若干个数，并求它们的和。</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 输入由若干行组成，第一行有一个整数n<br />\r\n&nbsp;&nbsp;&nbsp; 第二行有n个整数</span><br />\r\n&nbsp;&nbsp;&nbsp; 第三行有一个整数<span>m<br />\r\n&nbsp;&nbsp;&nbsp; 下面m行，每行两个整数i与j<span><span>(i&lt;=j)</span>，表示求和的起始和终止位置<span>。</span></span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp; 输出有m行, 每行一个整数，表示这个数段数列的和。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件</div>\r\n<div>8<br />\r\n2 3 4 7 8 9 10 234 <br />\r\n5<br />\r\n2 3<br />\r\n4 7<br />\r\n1 3<br />\r\n7 7 <br />\r\n7 8 <br />\r\n&nbsp;</div>\r\n<div>输出文件</div>\r\n<div>7 <br />\r\n34<br />\r\n9<span><br />\r\n10 <br />\r\n244 </span></div>\r\n<div><span>【数据规模】</span></div>\r\n<div><span>对于40%的数据，n&lt;=1000,m&lt;=1000,数列中的数不超过32767，数列的和不超过10^9<br />\r\n<span><span>对于70%的数据，n&lt;=10000,m&lt;=10^8</span>,<span><span>数列中的数不超过32767，数列的和不超过10^9</span><br />\r\n对于100%的数据，n&lt;=10000,m&lt;=10^8,<span><span><span><span><span>数列中的数不超过10^9，数列的和不超过10^200</span></span></span></span></span></span></span></span></div>', 1200, 128, 10, 0, '2012-04-05 16:22:51'),
(37, '增强的加法问题', 'add', '<p><strong>问题描述 </strong></p>\r\n<p>输入两个整数，输出它们的和。</p>\r\n<p><strong>输入要求：</strong><br />\r\n&nbsp;输入文件只有两行，第一行一个整数x，第二行一个整数y。其中0&lt;=x&lt;=10<sup>100</sup>，0&lt;=y&lt;=10<sup>100</sup></p>\r\n<p><strong>输出要求：</strong></p>\r\n<p>输出文件有1行，为两个数的和。</p>\r\n<p><strong>输入输出样例：</strong></p>\r\n<p>输入文件<br />\r\n123456789&nbsp;<br />\r\n123456789123456789</p>\r\n<p><strong>输出文件</strong></p>\r\n<p>123456789246913578<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:51'),
(38, '增强的减法问题', 'sub', '<p><strong>问题描述 </strong><br />\r\n输入两个正整数，输出第一个数减去第二个数的差，可能是整数，负数或0。</p>\r\n<p><strong>输入要求：</strong><br />\r\n输入文件只有两行，第一行一个整数x，第二行一个整数y。其中0&lt;=x&lt;=10<sup>100</sup>，0&lt;＝y&lt;=10<sup>100</sup></p>\r\n<p><strong>输出要求：</strong><br />\r\n输出文件有1行，第一个数减去第二个数的差。</p>\r\n<p><strong>输入输出样例：</strong></p>\r\n<p>输入文件<br />\r\n123456789123456789&nbsp;<br />\r\n123456789</p>\r\n<p><strong>输出文件</strong><br />\r\n123456789000000000<br />\r\n&nbsp;</p>', 1000, 128, 6, 0, '2012-04-05 16:22:51'),
(39, '增强的乘法问题', 'mul', '<p><strong>问题描述 </strong><br />\r\n输入两个整数，输出它们的乘积。</p>\r\n<p><strong>输入要求：</strong><br />\r\n输入文件只有两行，第一行一个整数x，第二行一个整数y。其中对于50％的数据0&lt;x&lt;=10<sup>100</sup>，0&lt;y&lt;=10<sup>9</sup>，对于全部的数据0&lt;x&lt;=10<sup>100</sup>，0&lt;y&lt;=10<sup>100</sup>。</p>\r\n<p><strong>输出要求：</strong><br />\r\n输出文件有1行，为两个数的乘积。</p>\r\n<p><strong>输入输出样例：</strong><br />\r\n输入文件<br />\r\n123456789123456789&nbsp;<br />\r\n123456789</p>\r\n<p><strong>输出文件</strong><br />\r\n15241578765432099750190521</p>', 1000, 128, 12, 0, '2012-04-05 16:22:51'),
(40, '回文数', 'huiwen', '<p>【问题描述】<br />\r\n若一个数（首位不为0）从左到右读与从右到左读都是一样，这个数就叫做回文数，例如12512就是一个回文数。<br />\r\n&nbsp;&nbsp;&nbsp; 给定一个N进制正整数，把它的各位数字上数字倒过来排列组成一个新数，然后与原数相加，如果是回文数则停止，如果不是，则重复这个操作，直到和为回文数为止。例如：10进制87则有：<br />\r\nSTEP1: 87+78=165<br />\r\nSTEP2: 165+561=726<br />\r\nSTEP3: 726+627=1353<br />\r\nSTEP4: 1353+3531=4884<br />\r\n&nbsp;&nbsp; 任务：写一个程序，给定一个N（2&le;N&le;10，N=16）进制数m（10~15用小写字母a~f表示），m的位数上限为20。求最少经过几步可以得到回文数。如果在30步以内（包括30步）不可能得到回文数，则输出&ldquo;impossible&rdquo;，否则输出该回文数及生成该回文数的最少步数。</p>\r\n<p><br />\r\n【输入格式】<br />\r\n文件有两行，每行一个数，即N和N进制整数m</p>\r\n<p><br />\r\n【输出格式】<br />\r\n如果输入文件给定的数据在30步以内（包括30步）不可能得到回文数，则输出文件只有一行，即输出&ldquo;impossible&rdquo;。<br />\r\n否则输出文件为两行。第一行是由输入文件给定数据生成的回文数，第二行是生成该回文数的最少步数。</p>\r\n<p><br />\r\n【输入输出样例】</p>\r\n<p><br />\r\n输入<br />\r\n10<br />\r\n87</p>\r\n<p><br />\r\n输出<br />\r\n4884<br />\r\n4<br />\r\n&nbsp;</p>', 1000, 128, 4, 0, '2012-04-05 16:22:51'),
(41, '麦森数', 'mason', '<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp; &nbsp;形如 2^P -1 的素数称为麦森数，这时 P 一定也是个素数。但反过来不一定，即如果 P 是个素数， 2^P -1 不一定也是素数。到 1998 年底，人们已找到了 37 个麦森数。最大的一个是 P=3021377 ，它有 909526 位。麦森数有许多重要应用，它与完全数密切相关。</div>\r\n<div>任务：从文件中输入 P （ 1000&lt;P&lt;3100000 ），计算 2^P -1 的位数和最后 500 位数字（用十进制高精度数表示）</div>\r\n<div>【输入格式】&nbsp;</div>\r\n<div>&nbsp;&nbsp; &nbsp;文件中只包含一个整数 P （ 1000&lt;P&lt;3100000 ）</div>\r\n<div>【输出格式】&nbsp;</div>\r\n<div>&nbsp;&nbsp; 第一行：十进制高精度数 2^P -1 的位数。</div>\r\n<div>第 2-11 行：十进制高精度数 2^P -1 的最后 500 位数字。（每行输出 50 位，共输出 10 行，不足 500 位时高位补 0 ）</div>\r\n<div>不必验证 2^P -1 与 P 是否为素数。</div>\r\n<div>【输入输出样例】</div>\r\n<div>&nbsp;</div>\r\n<div>输入:</div>\r\n<div>1279</div>\r\n<div>&nbsp;</div>\r\n<div>输出:</div>\r\n<div>386</div>\r\n<div>00000000000000000000000000000000000000000000000000&nbsp;</div>\r\n<div>00000000000000000000000000000000000000000000000000&nbsp;</div>\r\n<div>00000000000000104079321946643990819252403273640855&nbsp;</div>\r\n<div>38615262247266704805319112350403608059673360298012&nbsp;</div>\r\n<div>23944173232418484242161395428100779138356624832346&nbsp;</div>\r\n<div>49081399066056773207629241295093892203457731833496&nbsp;</div>\r\n<div>61583550472959420547689811211693677147548478866962&nbsp;</div>\r\n<div>50138443826029173234888531116082853841658502825560&nbsp;</div>\r\n<div>46662248318909188018470682222031405210266984354887&nbsp;</div>\r\n<div>32958028878050869736186900714720710555703168729087</div>', 1000, 128, 10, 0, '2012-04-05 16:22:52');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(42, '循环', 'circle', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;乐乐是一个聪明而又勤奋好学的孩子。他总喜欢探求事物的规律。一天，他突然对数的正整数次幂产生了兴趣。</p>\r\n<p>众所周知， 2 的正整数次幂最后一位数总是不断的在重复 2 ， 4 ， 8 ， 6 ， 2 ， 4 ， 8 ， 6 &hellip;&hellip;我们说 2 的正整数次幂最后一位的循环长度是 4 （实际上 4 的倍数都可以说是循环长度，但我们只考虑最小的循环长度）。类似的，其余的数字的正整数次幂最后一位数也有类似的循环现象：</p>\r\n<table border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>&nbsp;数</td>\r\n            <td>循环</td>\r\n            <td>循环长度</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>2 、 4 、 8 、 6</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>3 、 9 、 7 、 1</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr>\r\n            <td>4</td>\r\n            <td>4 、 6</td>\r\n            <td>2</td>\r\n        </tr>\r\n        <tr>\r\n            <td>5</td>\r\n            <td>5</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>6</td>\r\n            <td>6</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>7</td>\r\n            <td>7 、 9 、 3 、 1</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr>\r\n            <td>8</td>\r\n            <td>8 、 4 、 2 、 6</td>\r\n            <td>4</td>\r\n        </tr>\r\n        <tr>\r\n            <td>9</td>\r\n            <td>9 、 1</td>\r\n            <td>2</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>这时乐乐的问题就出来了：是不是只有最后一位才有这样的循环呢？对于一个整数 n 的正整数次幂来说，它的后 k 位是否会发生循环？如果循环的话，循环长度是多少呢？</p>\r\n<p>注意：</p>\r\n<p>1． 如果 n 的某个正整数次幂的位数不足 k ，那么不足的高位看做是 0 。</p>\r\n<p>2． 如果循环长度是 L ，那么说明对于任意的正整数 a ， n 的 a 次幂和 a + L 次幂的最后 k 位都相同。</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输入文件只有一行，包含两个整数 n （ 1 &lt;= n &lt; 10 100 ）和 k （ 1 &lt;= k &lt;= 100 ）， n 和 k 之间用一个空格隔开，表示要求 n 的正整数次幂的最后 k 位的循环长度。</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件包括一行，这一行只包含一个整数，表示循环长度。如果循环不存在，输出 -1 。</p>\r\n<p>【样例输入】</p>\r\n<p>32 2</p>\r\n<p>【样例输出】</p>\r\n<p>4</p>\r\n<p>【数据规模】</p>\r\n<p>对于 30% 的数据， k &lt;= 4 ；</p>\r\n<p>对于全部的数据， k &lt;= 100 。</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:52'),
(43, '三值排序', '3sort', '<p><b>问题描述</b><br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 排序是计算机科学中一种常见任务。有一种特殊的排序，最多只有３个关键字。本题中用１，２，３分别表示这３个关键字，需将它们按升序排列，排序是通过一系列对换操作完成的。一次对换操作可以交换两个数的位置。<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 子任务Ａ<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 编程，对于一个给定的只含有关键字的序列，计算最少需要几次对换操作就可将其按升序排列。<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 子任务Ｂ<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 输出对换方案，任意可行解。</p>\r\n<p><br />\r\n<b>输入文件</b><br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 输入文件的第一行是待排序的元素个数Ｎ（１〈＝Ｎ〈＝１０００），随后是Ｎ行，每一行代表一个元素。<br />\r\n<br />\r\n&nbsp;<br />\r\n<b>输出文件</b><br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 输出文件第一行是要对换的次数，随后每行依次输出每次交换的数的位置。<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n<b>输入输出示例</b><br />\r\n<br />\r\n<br />\r\n3sort.in<br />\r\n<br />\r\n<br />\r\n9<br />\r\n2<br />\r\n2<br />\r\n1<br />\r\n3<br />\r\n3<br />\r\n3<br />\r\n2<br />\r\n3<br />\r\n1<br />\r\n<br />\r\n&nbsp;<br />\r\n<br />\r\n3sort.out<br />\r\n<br />\r\n4<br />\r\n1 3<br />\r\n2 9<br />\r\n4 7<br />\r\n5 9</p>', 1000, 128, 11, 0, '2012-04-05 16:22:52'),
(44, '拯救大兵瑞恩', 'rescue', '<p><b>问题描述</b></p>\r\n<p>1944年，特种兵麦克接到国防部的命令，要求立即赶赴太平洋上的一个孤岛，营救被敌军俘虏的大兵瑞恩。瑞恩被关押在一个迷宫里，迷宫地形复杂，但是幸好麦克得到了迷宫的地形图。</p>\r\n<p><br />\r\n迷宫的外形是一个长方形，其在南北方向被划分为N行，在东西方向被划分为M列，于是整个迷宫被划分为N*M个单元。我们用一个有序数对（单元的行号，单元的列号）来表示单元位置。南北或东西方向相邻的两个单元之间可以互通，或者存在一扇锁着的门，又或者存在一堵不可逾越的墙。迷宫中有一些单元存放着钥匙，并且所有的门被分为P类，打开同一类的门的钥匙相同，打开不同类的门的钥匙不同。</p>\r\n<p><br />\r\n大兵瑞恩被关押在迷宫的东南角，即（N,M）单元里，并已经昏迷。迷宫只有一个入口，在西北角，也就是说，麦克可以直接进入(1,1)单元。另外，麦克从一个单元移动到另一个相邻单元的时间为1，拿取所在单元的钥匙的时间以及用钥匙开门的时间忽略不计。<br />\r\n你的任务是帮助麦克以最快的方式抵达瑞恩所在单元，营救大兵瑞恩。<br />\r\n<br />\r\n<b>输入</b><br />\r\n第一行是三个整数，依次表示N,M,P的值；<br />\r\n第二行是一个整数K，表示迷宫中门和墙的总个数；<br />\r\n第I+2行（1&lt;=I&lt;=K），有5个整数，依次为Xi1,Yi1,Xi2,Yi2,Gi：<br />\r\n当Gi&gt;=1时，表示(Xi1,Yi1)单元与(Xi2,Yi2)单元之间有一扇第Gi类的门，当Gi=0时，表示(Xi1,Yi1)单元与(Xi2,Yi2)单元之间有一堵不可逾越的墙；<br />\r\n（其中，|Xi1-Xi2|+|Yi1-Yi2|=1，0&lt;=Gi&lt;=P）<br />\r\n第K+3行是一个整数S，表示迷宫中存放的钥匙总数；<br />\r\n第K+3+J行(1&lt;=J&lt;=S)，有3个整数，依次为Xi1,Yi1,Qi：表示第J把钥匙存放在(Xi1,Yi1)单元里，并且第J把钥匙是用来开启第Qi类门的。（其中1&lt;=Qi&lt;=P）<br />\r\n注意：输入数据中同一行各相邻整数之间用一个空格分隔。</p>\r\n<p><br />\r\n<b>输出</b><br />\r\n输出文件只包含一个整数T，表示麦克营救到大兵瑞恩的最短时间的值，若不存在可行的营救方案则输出-1。<br />\r\n输入输出示例：</p>\r\n<p><br />\r\n输入文件</p>\r\n<p><br />\r\n4 4 9<br />\r\n9<br />\r\n1 2 1 3 2<br />\r\n1 2 2 2 0<br />\r\n2 1 2 2 0<br />\r\n2 1 3 1 0<br />\r\n2 3 3 3 0<br />\r\n2 4 3 4 1<br />\r\n3 2 3 3 0<br />\r\n3 3 4 3 0<br />\r\n4 3 4 4 0<br />\r\n2<br />\r\n2 1 2<br />\r\n4 2 1</p>\r\n<p><br />\r\n输出文件</p>\r\n<p><br />\r\n14</p>\r\n<p><br />\r\n<b>参数设定</b></p>\r\n<p><br />\r\n3&lt;=N,M&lt;=15;<br />\r\n1&lt;=P&lt;=10;</p>', 1000, 128, 5, 0, '2012-04-05 16:22:52'),
(45, 'BUG修复', 'bug', '<p><b>问题描述</b><br />\r\n<br />\r\n错误就是人们所说的Bug。用户在使用软件时总是希望其错误越少越好，最好是没有错误的。但是推出一个没有错误的软件几乎不可能，所以很多软件公司都在疯狂地发放补丁（有时这种补丁甚至是收费的）。T公司就是其中之一。<br />\r\n<br />\r\n上个月，T公司推出了一个新的字处理软件，随后发放了一批补丁。最近T公司发现其发放的补丁有致命的问题，那就是一个补丁在排除某些错误的同时，往往会加入另一些错误. <br />\r\n<br />\r\n此字处理软件中只可能出现n个特定的错误，这n个错误是由软件本身决定的。T公司目前共发放了m个补丁，对于每一个补丁,&nbsp; 都有特定的适用环境，某个补丁只有在当前软件中包含某些错误而同时又不包含另一些错误时才可以使用，如果它被使用，它将修复某些错误而同时加入某些错误。另外，使用每个补丁都要耗一定的时间（即补丁程序的运行时间）。<br />\r\n<br />\r\n<b>准确描述</b><br />\r\n<br />\r\n设此字处理软件中可能出现的n个错误为集合B={b1,b2,&hellip;,bn}中的元素，T公司目前共发放了m个补丁：p1，p2,&hellip;,pm。对于每一个补丁pi,&nbsp; 都有特定的适用环境，某个补丁只有在软件中包含某些错误而同时又不包含另一些错误时才可以用，为了说明清楚，设错误集合：Bi+、 Bi-， 当软件包含了Bi+中的所有错误, 而没有包含Bi-中的任何错误时，补丁Pi才可以被使用，否则不能使用，显然 Bi+、Bi-交集为空。补丁pi将修复某些错误而同时加入某些错误，设错误集合Fi-、Fi+，使用过补丁pi之后，Fi-中的任何错误都不会在软件中出现，而软件将包含Fi+中的所有错误， 同样Fi-、Fi+交集为空。另外，使用每个补丁都要耗一定的时间（即补丁程序的运行时间）。<br />\r\n现在T公司的问题很简单，其字处理软件的初始版本不幸地包含了集合B中的全部n个错误,&nbsp; 有没有可能通过使用这些补丁（任意顺序地使用，一个补丁可使用多次）， 使此字处理软件成为一个没有错误的软件。如果可能，希望找到总耗时最少的方案。<br />\r\n<br />\r\n<b>输入</b><br />\r\n输入文件第一行有两个正整数n和m,&nbsp; n表示错误总数，m表示补丁总数，1&lt;=n&lt;=20, 1&lt;=m&lt;=100。接下来m行给出了m个补丁的信息。每行包括一个正整数（表示此补丁程序pi的运行耗时）和两个长度为n的字符串，中间用一个空格符隔开。<br />\r\n第一个字符串，如果第k个字符为&rsquo;+&rsquo;，则表示bk属于Bi+,&nbsp; 若为&lsquo;-&rsquo;，则表示bk属于Bi-, 若为&lsquo;0&rsquo;，则bk 既不属于Bi+也不属于Bi-，即软件中是否包含bk不影响补丁pi是否可用。<br />\r\n第二个字符串，如果第k个字符为&rsquo;+&rsquo;，则表示bk属于Fi+,&nbsp; 若为&lsquo;-&rsquo;，则表示bk属于Fi-, 若为&lsquo;0&rsquo;，则bk 既不属于Fi+也不属于Fi-，即软件中是否包含bk不会因使用补丁pi而改变。<br />\r\n<br />\r\n<b>输出</b><br />\r\n&nbsp;&nbsp;&nbsp; 输出一个整数，如果问题有解，输出总耗时，否则输出0。<br />\r\n<br />\r\n<b>输入输出示例</b><br />\r\n<br />\r\n<b>输入文件</b><br />\r\n3 3<br />\r\n1 000 00-<br />\r\n1 00- 0-+<br />\r\n2 0-- -++<br />\r\n<b><br />\r\n输出文件</b><br />\r\n8<br />\r\n<br />\r\n<b>样例注释</b><br />\r\nABC use 1 to AB_ takes 1<br />\r\nAB_ use 2 to A_C takes 1<br />\r\nA_C use 1 to A__ takes 1<br />\r\nA__ use 3 to _BC takes 2<br />\r\n_BC use 1 to _B_ takes 1<br />\r\n_B_ use 2 to __C takes 1<br />\r\n__C use 1 to ___ takes 1<br />\r\n<br />\r\ntotal 8</p>', 1000, 128, 10, 0, '2012-04-05 16:22:52'),
(46, '字符串编辑', 'edit', '<p>【问题描述】 <br />\r\n有一个长度&lt;=40个字符字符串，例如：&rsquo;This is a book.&rsquo; <br />\r\n现对该字符串进行编辑，编辑功能有： <br />\r\nD：删除一个字符，命令的方式为： <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D a 其中a为被删除的字符 <br />\r\n例如：D s&nbsp; 表示删除字符 &rsquo;s&rsquo; ，若字符串中有多个 &lsquo;s&rsquo;，则删除第一次出现的。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如上例中删除的结果为： &lsquo;Thi is a book.&rsquo; <br />\r\nI：插入一个字符，命令的格式为： <br />\r\n&nbsp;&nbsp;&nbsp; I a1 a2 其中a1表示插入到指定字符前面，a2表示将要插入的字符。 <br />\r\n例如：I s d 表示在指定字符 &rsquo;s&rsquo; 的前面插入字符 &lsquo;d&rsquo; ，若原串中有多个 &lsquo;s&rsquo; ，则插入在最后一个字符的前面，如上例中： <br />\r\n&nbsp;&nbsp;&nbsp; 原 串：&rsquo;This is a book.&rsquo; <br />\r\n&nbsp;&nbsp;&nbsp; 插入后：&rsquo;This ids a book.&rsquo; <br />\r\nR：替换一个字符，命令格式为： <br />\r\n&nbsp;&nbsp;&nbsp; R a1 a2 其中a1为被替换的字符，a2为替换的字符，若在原串中有多个a1则应全部替换。 <br />\r\n例如： 原 串： &lsquo;This is a book.&rsquo; <br />\r\n输入命令：R o e <br />\r\n&nbsp;&nbsp;&nbsp; 替换后的字符串为： &lsquo;This is a beek.&rsquo; <br />\r\n在编辑过程中，若出现被改的字符不存在时，则给出出错信息&ldquo;error&rdquo;。</p>\r\n<p>【输入】 <br />\r\n输入文件包括两行： <br />\r\n第1行为一个字符串。 <br />\r\n第2行为一条命令，可能为以下三条命令中的一条： <br />\r\nD a（其中D和a之间又且只有一个空格）； <br />\r\nI a1 a2 （其中I和a1之间、a1和a2之间又且只有一个空格）； <br />\r\nR a1 a2 （其中R和a1之间、a1和a2之间又且只有一个空格）。</p>\r\n<p>【输出】 <br />\r\n输出文件只有一行，为编辑后的字符串或出错信息&ldquo;error&rdquo;</p>\r\n<p>【输入样例】 <br />\r\nThis is a book. <br />\r\nI s d <br />\r\n【输出样例】 <br />\r\nThis ids a book.</p>', 1000, 128, 10, 0, '2012-04-05 16:22:52'),
(47, '计算器的改良', 'computer', '<p>&nbsp;</p>\r\n<div align="left"><b><span style="font-size: 12pt">问题描述</span></b></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">NCL 是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手 ZL 先生。为了很好的完成这个任务 ,ZL 先生首先研究了一些一元一次方程的实例： </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">4+3x=8 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">6a-5+1=2-2a </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">-5+12Y=0 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">ZL 先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及十、一、＝这三个数学符号（当然，符号&ldquo;一&rdquo;既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">问题求解： </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">编写程序，解输入文件中的一元一次方程，将解方程的结果（精确至小数点后三位）输出至输出文件。你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入格式】</span></div>\r\n<div align="left"><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; 输入文件只有一行。即一个合法的一元一次方程。</span></div>\r\n<div align="left"><span style="font-size: 12pt">【输出格式】</span></div>\r\n<div align="left"><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; 输出文件也只有一行。即该方程的解。</span></div>\r\n<div align="left"><span style="font-size: 12pt">【输入输出样例】</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">输入文件名： computer.in </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">6a-5+1=2-2a </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">输出文件名：computer.out</span></div>\r\n<p><span style="font-size: 10pt">a=0.750 </span></p>', 1000, 128, 5, 0, '2012-04-05 16:22:52'),
(48, '字符串的展开', 'expand', '<p>【问题描述】</p>\r\n<p>在初赛普及组的&ldquo;阅读程序写结果&rdquo;的问题中，我们曾给出一个字符串展开的例子：如果在输入的字符串中，含有类似于&ldquo;d-h&rdquo;或&ldquo;4-8&rdquo;的子串，我们就把它当作一种简写，输出时，用连续递增的字母或数字串替代其中的减号，即，将将上面两个子串分别输出为&ldquo;defgh&rdquo;和&ldquo;45678&rdquo;。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下：<br />\r\n(1)遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号&ldquo;-&rdquo;，减号两侧同为小写字母或同为数字，且按照ASCII码的顺序，减号右边的字符严格大于左边的字符。<br />\r\n(2)参数p1：展开方式。p1=1时，对于字母子串，填充小写字母；p1=2时，对于字母子串,填充大写字母。这两种情况下数字子串的填充方式相同。p1=3时，不论是字母子串还是数字子串，都用与要填充的字母个数相同的星号&ldquo;*&rdquo;来填充。<br />\r\n(3)参数p2：填充字符的重复个数。p2=k表示同一个字符要连续填充k个。例如，当p2=3时，子串&ldquo;d-h&rdquo;应扩展为&ldquo;deeefffgggh&rdquo;。减号两侧的字符不变。<br />\r\n(4)参数p3：是否改为逆序：p3=l表示维持原有顺序，p3=2表示采用逆序输出，注意这时仍然不包括减号两端的字符。例如当p1=l、p2=2、p3=2时，子串&ldquo;d-h&rdquo;应扩展为&ldquo;dggffeeh&rdquo;。<br />\r\n(5)如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：&ldquo;d-e&rdquo;应输出为&ldquo;de&rdquo;，&ldquo;3-4&rdquo;应输出为&ldquo;34&rdquo;。如果减号右边的字符按照ASCII码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：&ldquo;d-d&rdquo;应输出为&ldquo;d-d&rdquo;，&ldquo;3-1&rdquo;应输出为&ldquo;3-1&rdquo;。<br />\r\n【输入】<br />\r\n输入文件expand．in包括两行：<br />\r\n第1行为用空格隔开的3个正整数，依次表示参数p1，p2，p3。<br />\r\n第2行为一行字符串，仅由数字、小写字母和减号&ldquo;-&rdquo;组成。行首和行末均无空格。<br />\r\n【输出】<br />\r\n输出文件expand.out只有一行，为展开后的字符串。<br />\r\n【输入输出样例l】</p>\r\n<p>expand．in</p>\r\n<p>1 2 1<br />\r\nabcs-w1234-9s-4zz</p>\r\n<p>expand.out</p>\r\n<p>abcsttuuvvw1234556677889s-4zz</p>\r\n<p>【输入输出样例2】</p>\r\n<p>expand．in</p>\r\n<p>2 3 2<br />\r\na-d-d</p>\r\n<p>expand.out</p>\r\n<p>aCCCBBBd-d<br />\r\n【输入输出样例3】</p>\r\n<p>expand．in</p>\r\n<p>3 4 2<br />\r\ndi-jkstra2-6</p>\r\n<p>expand.out</p>\r\n<p>dijkstra2************6</p>\r\n<p>【限制】<br />\r\n40%的数据满足：字符串长度不超过5<br />\r\n100%的数据满足：l&lt;=pl&lt;=3，l&lt;=p2&lt;=8，1&lt;=p3&lt;=2。字符串长度不超过100</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:52'),
(49, '跳马问题', 'horse', '<p><b><span style="font-size: 12pt;">问题描述</span></b><span style="font-size: 12pt;"><br />\r\n</span></p>\r\n<div align="left"><span style="font-size: 12pt;">　　有一只中国象棋中的 &ldquo; 马 &rdquo; ，在半张棋盘的左上角出发，向右下角跳去。规定只许向右跳（可上，可下， 但不允许向左跳）。请编程求从起点 A(1,1) 到终点 B(m,n) 共有多少种不同跳法。</span></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><span style="font-size: 12pt;">【输入格式】</span></div>\r\n<div align="left"><span style="font-size: 12pt;">&nbsp;&nbsp;&nbsp; </span></div>\r\n<div align="left"><b><span style="font-size: 12pt;">　　输入文件只有一行，两个整数m和n，两个数之间有一个空格。</span></b></div>\r\n<div align="left"><span style="font-size: 12pt;">【输出格式】</span></div>\r\n<div align="left" style="text-indent: 23.5pt;">&nbsp;</div>\r\n<div align="left" style="text-indent: 23.6pt;"><b><span style="font-size: 12pt;">输出文件只有一个数据，即从 A 到 B 全部的走法</span></b></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><span style="font-size: 12pt;">【输入输出样例】</span></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><b><span style="font-size: 12pt;">输入文件(horse.in) </span></b></div>\r\n<div align="left" style="text-align: left;"><span style="font-size: 12pt;">5　9</span></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><b><span style="font-size: 12pt;">输出文件(horse.out)</span></b></div>\r\n<div align="left" style="text-align: left;"><span style="font-size: 12pt;">37</span></div>', 1000, 128, 10, 0, '2012-04-05 16:22:52'),
(50, '选数', 'choose', '<p>[问题描述]:<br />\r\n<br />\r\n<br />\r\n已知 n 个整数 x1,x2,&hellip;,xn，以及一个整数 k（k＜n）。从 n 个整数中任选 k 个整数相加，可分别得到一系列的和。例如当 n=4，k＝3，4 个整数分别为 3，7，12，19 时，可得全部的组合与它们的和为：<br />\r\n3＋7＋12=22　　3＋7＋19＝29　　7＋12＋19＝38　　3＋12＋19＝34。<br />\r\n现在，要求你计算出和为素数共有多少种。<br />\r\n例如上例，只有一种的和为素数：3＋7＋19＝29）。<br />\r\n[输入]：<br />\r\n键盘输入，格式为：<br />\r\nn , k （1&lt;=n&lt;=20，k＜n）<br />\r\nx1,x2，&hellip;,xn （1&lt;=xi&lt;=5000000）<br />\r\n<br />\r\n[输出]：<br />\r\n格式为：一个整数（满足条件的种数）。<br />\r\n&nbsp;<br />\r\n[输入输出样例]:<br />\r\n输入：choose.in<br />\r\n4 3<br />\r\n3 7 12 19<br />\r\n输出：choose.out<br />\r\n1<br />\r\n<br />\r\n<br />\r\n&nbsp;</p>', 1000, 128, 5, 0, '2012-04-05 16:22:53'),
(51, '单词接龙', 'dcjl', '<div><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;<b>&nbsp;</b></span><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">问题描述</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;</span></b><b>&nbsp;</b></div>\r\n<div>&nbsp;</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的&ldquo;龙&rdquo;（每个单词都最多在&ldquo;龙&rdquo;中出现两次），在两个单词相连时，其重合部分合为一部分，例如 beast和astonish，如果接成一条龙则变为beastonish，另外相邻的两部分不能存在包含关系，例如at 和 atide 间不能相连。</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;<b>&nbsp;</b></span><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">输</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;&nbsp; </span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">入</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;</span></b>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div><span>&nbsp;&nbsp; </span>输入的第一行为一个单独的整数n (n&lt;=20)表示单词数，以下n 行每行有一个单词，输入的最后一行为一个单个字符，表示&ldquo;龙&rdquo;开头的字母。你可以假定以此字母开头的&ldquo;龙&rdquo;一定存在.</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;<b>&nbsp;</b></span><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">输</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;&nbsp; </span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">出</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;</span></b>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div><span>&nbsp;&nbsp; </span>只需输出以此字母开头的最长的&ldquo;龙&rdquo;的长度</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;<b>&nbsp;</b></span><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">样</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;&nbsp; </span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">例</span></b><b><span style="border: 0.5pt solid windowtext; padding: 0cm;">&nbsp;</span></b>&nbsp;：</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;输入</div>\r\n<div>dcjl.in</div>\r\n<div>5</div>\r\n<div>at</div>\r\n<div>touch</div>\r\n<div>cheat</div>\r\n<div>choose</div>\r\n<div>tact</div>\r\n<div>a</div>\r\n<div>&nbsp;</div>\r\n<div>输出</div>\r\n<div>dcjl.out</div>\r\n<div>23<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>（连成的&ldquo;龙&rdquo;为atoucheatactactouchoose）<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>', 1000, 128, 9, 0, '2012-04-05 16:22:53'),
(52, '数字子串', 'numstr', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="Content-Type">\r\n<meta content="Word.Document" name="ProgId">\r\n<meta content="Microsoft Word 11" name="Generator">\r\n<meta content="Microsoft Word 11" name="Originator">\r\n<link href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" rel="File-List" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n-->\r\n</style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]-->     </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<div>数字子串</div>\r\n<div style="text-indent: 21pt;">给一个数字串S：1234567891011121314151617181920212223&hellip;&hellip;它是由所有自然数从小到大依次排列起来的。任意给一个数字串S1，容易知道它一定在S中出现无穷多次。编程求出它第一次出现的位置。例如对于串&ldquo;81&rdquo;，它最先出现的位置是27。</div>\r\n<div style="text-indent: 21.75pt;">输入文件仅一行，数字串S1。(S1长度&le;<span>100</span>)</div>\r\n<div style="text-indent: 21.75pt;">输出文件仅一个数字，表示最先出现的位置。</div>\r\n<div style="text-indent: 21.75pt;">&nbsp;</div>\r\n<div>输入输出样例：</div>\r\n<div>numstr.in</div>\r\n<div>81</div>\r\n<div>numstr.out</div>\r\n<div>27</div>\r\n<p>&nbsp;</p>', 1000, 128, 40, 0, '2012-04-05 16:22:53'),
(53, '多人背包', 'bags', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n<meta name="ProgId" content="Word.Document">\r\n<meta name="Generator" content="Microsoft Word 11">\r\n<meta name="Originator" content="Microsoft Word 11">\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\nh2\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:18.0pt;\r\n	font-weight:bold;}\r\np\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:12.0pt;\r\n	mso-bidi-"Times New Roman";}\r\npre\r\n	{margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	font-size:10.0pt;\r\n	mso-hansi-"Courier New";\r\n	mso-bidi-"Courier New";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n /* List Definitions */\r\n @list l0\r\n	{}\r\n@list l0:level1\r\n	{\r\n	text-indent:-18.0pt;}\r\nol\r\n	{margin-bottom:0cm;}\r\nul\r\n	{margin-bottom:0cm;}\r\n-->\r\n</style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";}\r\n</style>\r\n<![endif]-->         </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<div><b><font size="5">问题描述</font></b></div>\r\n<div>&nbsp;</div>\r\n<div>DD 和好朋友们要去爬山啦！他们一共有<span> K 个人，每个人都会背一个包。这些包的容量是相同的，都是 V。可以装进背包里的一共有 N 种物品，每种物品都有给定的体积和价值。</span></div>\r\n<div>在<span> DD 看来，合理的背包安排方案是这样的：</span></div>\r\n<ol type="1" start="1">\r\n    <li>每个人背包里装的物品的总体积恰等于包的容量。</li>\r\n    <li>每个包里的每种物品最多只有一件，但两个不同的包中可以存在相同的物品。</li>\r\n    <li>任意两个人，他们包里的物品清单不能完全相同。</li>\r\n</ol>\r\n<div>在满足以上要求的前提下，所有包里的所有物品的总价值最大是多少呢？</div>\r\n<div><b><font size="5">输入格式</font></b></div>\r\n<div>第一行有三个整数：<span>K、V、N。</span></div>\r\n<div>第二行开始的<span> N 行，每行有两个整数，分别代表这件物品的体积和价值。</span></div>\r\n<div><b><font size="5">输出格式</font></b></div>\r\n<div>只需输出一个整数，即在满足以上要求的前提下所有物品的总价值的最大值。</div>\r\n<div><b><font size="5">样例输入</font></b></div>\r\n<pre style="margin: 0cm 24pt 0.0001pt 24.05pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n2 10 5</pre>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n3 12</pre>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n7 20</pre>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n2 4</pre>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n5 6</pre>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n1 1</pre>\r\n<div><b><font size="5">样例输出</font></b></div>\r\n<pre style="margin: 0cm 24pt 0.0001pt; background: rgb(238, 238, 238) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">\r\n57</pre>\r\n<div><b><font size="5">样例说明</font></b></div>\r\n<div>一种可以得到最优解的方案是：第一个人背体积为<span> 7、2、1 的三种物品，价值为 25。第二个人背体积为 3、7 的两种物品，价值为 32。总价值 57。</span></div>\r\n<div><b><font size="5">数据范围</font></b></div>\r\n<div>总人数<span> K&lt;=50。</span></div>\r\n<div>每个背包的容量<span> V&lt;=5000。</span></div>\r\n<div>物品种类数<span> N&lt;=200。</span></div>\r\n<div>其它正整数都不超过<span> 5000。</span></div>\r\n<div>输入数据保证存在满足要求的方案。</div>\r\n<p>&nbsp;</p>', 2000, 128, 10, 0, '2012-04-05 16:22:53'),
(54, '机器人比赛', 'robotmatch', '<p><b><span style="color: black">题目描述</span></b></p>\r\n<div style="text-indent: 21pt; text-align: left" align="left"><span style="color: black">Andriy</span><span style="color: black">很不厚道地把Wind的机器人都诱拐到了一个小岛上，机器人都很怕进水的。就在机器人绝望的时候，他们突然发现：竟然有一座小桥通往了对岸&hellip;&hellip;</span></div>\r\n<div style="text-indent: 21pt; text-align: left" align="left"><span style="color: black">这座桥可以认为是一个3*n的矩形，如下图&hellip;&hellip;</span></div>\r\n<p style="text-indent: 21pt; text-align: left" align="left"><span style="color: black"><!--[if gte vml 1]>\r\n \r\n \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n \r\n \r\n \r\n\r\n \r\n<![endif]--><img alt="" src="/images/robotmatch_1.png" /><img alt="" src="../images/robotmatch_1.png" /><br />\r\n</span></p>\r\n<div style="text-indent: 21.75pt"><span style="color: black">每个小方格都有可能覆盖有一块上面画直线或者折线的板&hellip;&hellip;机器人们只有在沿着那些黑线走的时候心理才不会有恐惧感他们想知道，是否能通过旋转这些版使得存在一条最左边到最右边的通路&hellip;&hellip;</span></div>\r\n<p style="text-indent: 21.75pt"><span style="color: black"><!--[if gte vml 1]>\r\n \r\n<![endif]--><img alt="" src="../images/robotmatch_2.png" /><br />\r\n</span></p>\r\n<div><b><span style="color: black">输入格式</span></b></div>\r\n<div style="text-indent: 21.75pt; margin-right: -34.65pt"><span style="color: black">第1行为一个整数k（k&lt;=10），表示有k组数据。</span></div>\r\n<div style="text-indent: 21.75pt; margin-right: -34.65pt"><span style="color: black">每组数据第一行为整数n (n&lt;=20000)</span></div>\r\n<div style="text-indent: 21.75pt; margin-right: -34.65pt"><span style="color: black">接下来n行，每行3个整数，描述这个桥，</span></div>\r\n<div style="text-indent: 21.75pt; margin-right: -34.65pt"><span style="color: black">其中0表示没有板，1表示直线的板，2表示折线的板。</span></div>\r\n<div style="margin-right: -34.65pt"><b><span style="color: black">输出格式</span></b></div>\r\n<div style="text-indent: 21.75pt; margin-right: -34.65pt"><span style="color: black">k</span><span style="color: black">行，每行对应一组数据，能形成通路，输出&ldquo;yes&rdquo;，否则输出&ldquo;no&rdquo;</span></div>\r\n<div style="margin-right: -34.65pt"><b><span style="color: black">样例输入</span></b></div>\r\n<div style="margin-right: -34.65pt"><span style="color: black">&nbsp;&nbsp;&nbsp; 4</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">5</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 2 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">2 1 2</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 2 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">2 1 2</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 2 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">3</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 1 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 1 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">2 0 2</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">3</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">0 0 0</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">0 0 0</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">0 0 0</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">4</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 2 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">2 1 2</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">1 2 1</span></div>\r\n<div style="text-indent: 21pt; margin-right: -34.65pt"><span style="color: black">0 1 2</span></div>\r\n<div style="margin-right: -34.65pt"><b><span style="color: black">样例输出</span></b></div>\r\n<div style="text-indent: 21pt"><span style="color: black">yes</span></div>\r\n<div style="text-indent: 21pt"><span style="color: black">no</span></div>\r\n<div style="text-indent: 21pt"><span style="color: black">no</span></div>\r\n<div style="text-indent: 21pt"><span style="color: black">no</span></div>\r\n<div><b><span style="color: black">数据规模</span></b></div>\r\n<div><span style="color: black">对于30%的数据，n&lt;=500</span></div>\r\n<div><span style="color: black">对于100%的数据，n&lt;=20000</span></div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:53'),
(55, '溶液混合', 'mix', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\r\n<meta content="Word.Document" name="ProgId" />\r\n<meta content="Microsoft Word 11" name="Generator" />\r\n<meta content="Microsoft Word 11" name="Originator" />\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n--></style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]--></p>\r\n<div><b>问题描述</b></div>\r\n<div>小Y由于高考的失败，被迫服从安排到了化学系。对此小Y感到很无辜，于是他的大学四年都沉迷在了虚拟时空中，甚至连配置溶液都不会。紧接着毕业论文横空出世，新的难题困扰着小Y。</div>\r\n<div>小Y经过几天废寝忘食的自学，跨时代的提出某一种溶液当浓度等于某一个值得时候，这种溶液会对人产生一种神奇的效果。于是小Y决定配置这种溶液若干瓶。实验室里的溶液浓度各不相同，如何配成这种溶液是个难题。</div>\r\n<div>注：两种溶液混合后体积不发生变化。</div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输入格式</b></div>\r\n<div>第一行，一个整数N，表示溶液的瓶数，N&lt;=50。</div>\r\n<div>第二行，N个整数Ai，表示第i瓶溶液的浓度，Ai&lt;=100。</div>\r\n<div>第三行，N个整数Bi，表示第i瓶溶液的体积，Bi&lt;=1000。</div>\r\n<div>第四行，一个整数，表示小Y想要的浓度。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输出格式</b></div>\r\n<div>一个实数，最多可以配成该浓度溶液多少体积，保留5位小数。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入样例1</b></div>\r\n<div>2</div>\r\n<div>0 100</div>\r\n<div>20 30</div>\r\n<div>50</div>\r\n<div>&nbsp;</div>\r\n<div><b>输出样例1</b></div>\r\n<div>40.00000</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入样例2</b></div>\r\n<div>3</div>\r\n<div>50 50 50</div>\r\n<div>395 971 964</div>\r\n<div>50</div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输出样例2</b></div>\r\n<div>2330.00000</div>\r\n<p>&nbsp;</p>', 1000, 128, 20, 0, '2012-04-05 16:22:53'),
(56, '质数取石子', 'stonegame', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\r\n<meta content="Word.Document" name="ProgId" />\r\n<meta content="Microsoft Word 11" name="Generator" />\r\n<meta content="Microsoft Word 11" name="Originator" />\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\nh2\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:18.0pt;\r\n	font-weight:bold;}\r\np\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:12.0pt;\r\n	mso-bidi-"Times New Roman";}\r\npre\r\n	{margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	font-size:10.0pt;\r\n	mso-hansi-"Courier New";\r\n	mso-bidi-"Courier New";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n--></style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]--></p>\r\n<div><b><font size="5">问题描述</font></b></div>\r\n<div>DD 和<span> MM 正在玩取石子游戏。他们的游戏规则是这样的：桌上有若干石子，DD 先取，轮流取，每次必须取质数个。如果某一时刻某一方无法从桌上的石子中取质数个，比如说剩下 0 个或 1 个石子，那么他/她就输了。</span></div>\r\n<div>DD 和<span> MM 都很聪明，不管哪方存在一个可以必胜的最优策略，他/她都会按照最优策略保证胜利。于是，DD 想知道，对于给定的桌面上的石子数，他究竟能不能取得胜利呢？</span></div>\r\n<p>当<span> DD 确定会取得胜利时，他会说：&ldquo;不管 MM 选择怎样的取石子策略，我都能保证至多 X 步以后就能取得胜利。&rdquo;那么，最小的满足要求的 X 是多少呢？注意，不管是<span> DD </span>取一次石子还是 MM 取一次石子都应该被计算为&ldquo;一步&rdquo;。</span></p>\r\n<div><b><font size="5">输入格式</font></b></div>\r\n<div>第一行有一个整数<span> N，表示这个输入文件中包含 N 个测试数据。</span></div>\r\n<div>第二行开始，每行有一个测试数据，其中仅包含一个整数，表示桌面上的石子数。</div>\r\n<div><b><font size="5">输出格式</font></b></div>\r\n<div>你需要对于每个输入文件中的<span> N 个测试数据输出相应的 N 行。</span></div>\r\n<div>如果对于该种情形是<span> DD 一定取得胜利，那么输出最小的 X。否则该行输出 -1。</span></div>\r\n<div><b><font size="5">样例输入</font></b></div>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n3</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n8</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n9</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n16</pre>\r\n<div><b><font size="5">样例输出</font></b></div>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n1</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n-1</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n3</pre>\r\n<div><b><font size="5">样例说明</font></b></div>\r\n<div>当桌上有<span> 8 个石子时，先取的 DD 只需要取走 7 个石子剩下 1 个就可以在一步之后保证胜利，输出 1。</span></div>\r\n<div>当桌上有<span> 9 个石子时。若 DD 取走 2 个，MM 会取走 7 个，剩下 0 个，DD 输。若 DD 取走 3 个，MM 会取走 5 个，剩下 1 个，DD 输。DD 取走 5 个或者 7 个的情况同理可知。所以当桌上有 9 个石子时，不管 DD 怎么取，MM 都可以让 DD 输，输出 -1。</span></div>\r\n<p>当桌上有<span> 16 个石子时，DD 可以保证在 3 步以内取得胜利。可以证明，为了在<span> 3 </span>步内取得胜利，DD 第一步必须取 7 个石子。剩下 9 个石子之后，不管第二步 MM 怎么取，DD 取了第三步以后可以保证胜利，所以输出 3。</span></p>\r\n<div><b><font size="5">数据范围</font></b></div>\r\n<div>输入文件中的数据数<span> N&lt;=10。</span></div>\r\n<div>每次桌上初始的石子数都不超过<span> 20000。</span></div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:53');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(57, '高速公路', 'highway', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />\r\n<meta content="Word.Document" name="ProgId" />\r\n<meta content="Microsoft Word 11" name="Generator" />\r\n<meta content="Microsoft Word 11" name="Originator" />\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n--></style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]--></p>\r\n<div><b>问题描述</b></div>\r\n<div>有句名言说的好，条条大路通罗马。现在高速公路网越来越完善了，从起点上了高速公路，然后转到另一个高速公路，最后直接到达终点。</div>\r\n<div>&nbsp;</div>\r\n<div>小Y想知道，如何选择路线才能使得花最少的时间从起点到达目的地。假设车速不变，高速公路全部是线段。高速公路的交点处可以从一条高速公路开到另一条高速公路。高速公路是双向的。没有两条高速公路在某段重合。</div>\r\n<div>&nbsp;</div>\r\n<div>小Y总是从第一条高速公路的起点走到最后一条高速公路的终点，数据保证可以到达。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入格式</b></div>\r\n<div>第1行，为一个整数n(n&lt;=100)，表示高速公路条数。</div>\r\n<div>第2~n+1行，每行包含四个整数x1,y1,x2,y2(在-30000~30000)。分别表示这条高速公路的起点和终点。</div>\r\n<div>第n+2行为一个整数v(v&lt;=120)，表示车的时速。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输出格式</b></div>\r\n<div>一个实数，从起点到终点要花的最少时间。保留2位小数。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入样例</b></div>\r\n<div>6</div>\r\n<div>100 400 450 700</div>\r\n<div>100 750 700 500</div>\r\n<div>700 0 100 400</div>\r\n<div>300 150 450 400</div>\r\n<div>700 500 700 0</div>\r\n<div>450 400 700 500</div>\r\n<div>1</div>\r\n<div>&nbsp;</div>\r\n<div><b>输出样例</b></div>\r\n<div>731.75</div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:53'),
(58, '延绵的山峰', 'climb', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="Content-Type">\r\n<meta content="Word.Document" name="ProgId">\r\n<meta content="Microsoft Word 11" name="Generator">\r\n<meta content="Microsoft Word 11" name="Originator">   <!--[if !mso]>\r\n<style>\r\nv\\:* {behavior:url(#default#VML);}\r\no\\:* {behavior:url(#default#VML);}\r\nw\\:* {behavior:url(#default#VML);}\r\n.shape {behavior:url(#default#VML);}\r\n</style>\r\n<![endif]--><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><!--[if !mso]>\r\n<style>\r\nst1\\:*{behavior:url(#ieooui) }\r\n</style>\r\n<![endif]--><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]-->                     </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<div><b>问题描述</b></div>\r\n<div>&nbsp;</div>\r\n<div>有一座延绵不断、跌宕起伏的山，最低处海拔为0，最高处海拔不超过8848米，从这座山的一端走到另一端的过程中，每走1米海拔就升高或降低1米。有Q个登山队计划在这座山的不同区段登山，当他们攀到各自区段的最高峰时，就会插上队旗。请你写一个程序找出他们插旗的高度。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入文件</b></div>\r\n<div>&nbsp;</div>\r\n<div>第1行，一个整数N(N&lt;=10^6)，表示山两端的跨度。</div>\r\n<div>接下来N+1行，每行一个非负整数Hi，表示该位置的海拔高度，其中H0=Hn=0。</div>\r\n<div>然后是一个正整数Q(Q&lt;=7000)，表示登山队的数量。</div>\r\n<div>接下来Q行，每行两个数Ai, Bi，表示第i个登山队攀爬的区段[Ai,Bi]，其中0&lt;=Ai&lt;=Bi&lt;=N。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输出文件</b></div>\r\n<div>&nbsp;</div>\r\n<div>Q行，每行为一个整数，表示第i个登山队插旗的高度。</div>\r\n<div>&nbsp;<span><!--[if gte vml 1]>\r\n \r\n \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n \r\n \r\n \r\n\r\n \r\n<![endif]--><br />\r\n<!--[if gte mso 9]><![endif]--></span></div>\r\n<div><b>样例输入</b></div>\r\n<div>10</div>\r\n<div>0</div>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>3</div>\r\n<div>2</div>\r\n<div>1</div>\r\n<div>0</div>\r\n<div>5</div>\r\n<div>0 10</div>\r\n<div>2 4</div>\r\n<div>3 7</div>\r\n<div>7 9</div>\r\n<div>8 8</div>\r\n<div>&nbsp;</div>\r\n<div><b>样例输出</b></div>\r\n<div>4</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>3</div>\r\n<div>2</div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:53'),
(59, '空格游戏', 'gap', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n<meta name="ProgId" content="Word.Document">\r\n<meta name="Generator" content="Microsoft Word 11">\r\n<meta name="Originator" content="Microsoft Word 11">\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n-->\r\n</style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]--> </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<div>问题描述</div>\r\n<div>我们来玩一个叫空格的牌类游戏。你有28张用两位数标记的牌，第一位(从1到4)表示不同的花色，第二位(从1到7)表示牌的值。</div>\r\n<div>首先，你先洗牌，然后将它们排成四行，每行七张，在每行的最左边留一张牌的位置。下面给出一个可能的最初排布。</div>\r\n<div>&nbsp;</div>\r\n<table cellspacing="0" cellpadding="0" border="1" style="border: medium none ; border-collapse: collapse;">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" style="border: 1pt solid windowtext; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>42</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>21</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>13</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>22</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>32</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>26</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>23</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>16</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>43</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>47</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>14</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>24</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>34</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>36</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>46</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>17</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>27</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>31</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>11</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>37</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>12</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>35</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>41</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>44</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>25</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>15</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>33</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>45</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>&nbsp;</div>\r\n<div>下一步，你移动所有值为1的牌，将它们放在左边的空格里：11放在最上面,12放在下一格，如此放下去。</div>\r\n<div>现在你有28张牌和4个空格，排成4行8列。如上述举例，你从下面情况开始移动。</div>\r\n<div>&nbsp;</div>\r\n<table cellspacing="0" cellpadding="0" border="1" style="border: medium none ; border-collapse: collapse;">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" style="border: 1pt solid windowtext; padding: 0cm 5.4pt;">\r\n            <div>11</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>42</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>13</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>22</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>32</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>26</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>23</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>21</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>16</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>43</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>47</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>14</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>24</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>34</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>36</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>31</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>46</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>17</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>27</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>37</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>12</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>41</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>35</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>44</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>25</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>15</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>33</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>45</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>&nbsp;</div>\r\n<div>每一步移动，你选择四个空格之一，将该空格左边的牌的<b>后继牌</b>放进去。后继牌是指同一花色的下一张牌。例如42的后继牌时42，27没有后继牌。</div>\r\n<div>&nbsp;</div>\r\n<div>在上面的情况中，你可以将43移动到43的右边的空格中，或者将36移动到35的右边。例如你移动43，16的右边后产生一个新的空格。你不能将派移动到价值为7的牌的右边，也不能移动到空格的右边。</div>\r\n<div>&nbsp;</div>\r\n<div>游戏的目标是，选择最佳移动，使得每种花色各自成上升序列，如下表。</div>\r\n<div>&nbsp;</div>\r\n<table cellspacing="0" cellpadding="0" border="1" style="border: medium none ; border-collapse: collapse;">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" style="border: 1pt solid windowtext; padding: 0cm 5.4pt;">\r\n            <div>11</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>12</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>13</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>14</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>15</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>16</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>17</div>\r\n            </td>\r\n            <td valign="top" style="border-style: solid solid solid none; border-color: windowtext windowtext windowtext -moz-use-text-color; border-width: 1pt 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>21</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>22</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>23</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>24</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>25</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>26</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>27</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>31</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>32</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>33</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>34</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>35</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>36</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>37</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" style="border-style: none solid solid; border-color: -moz-use-text-color windowtext windowtext; border-width: medium 1pt 1pt; padding: 0cm 5.4pt;">\r\n            <div>41</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>42</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>43</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>44</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>45</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>46</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>47</div>\r\n            </td>\r\n            <td valign="top" style="border-style: none solid solid none; border-color: -moz-use-text-color windowtext windowtext -moz-use-text-color; border-width: medium 1pt 1pt medium; padding: 0cm 5.4pt;">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>&nbsp;</div>\r\n<div>你的任务是计算到达目标状态所需的最少移动。</div>\r\n<div>&nbsp;</div>\r\n<div>输入格式</div>\r\n<div>&nbsp;</div>\r\n<div>4行7列，表示初始状态。</div>\r\n<div>&nbsp;</div>\r\n<div>输出格式</div>\r\n<div>&nbsp;</div>\r\n<div>一个整数，到达目标状态所需的最少移动。最初移动4张值为1的牌的移动不算在内。如果没法到达，输出-1。</div>\r\n<div>&nbsp;</div>\r\n<div>输入样例</div>\r\n<div>26 31 13 44 21 24 42</div>\r\n<div>17 45 23 25 41 36 11</div>\r\n<div>46 34 14 12 37 32 47</div>\r\n<div>16 43 27 35 22 33 15</div>\r\n<div>&nbsp;</div>\r\n<div>输出样例</div>\r\n<div>33</div>\r\n<p>&nbsp;</p>', 3000, 512, 25, 0, '2012-04-05 16:22:54'),
(60, '不听话的机器人', 'nrobot', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\r\n<meta content="Word.Document" name="ProgId" />\r\n<meta content="Microsoft Word 11" name="Generator" />\r\n<meta content="Microsoft Word 11" name="Originator" />\r\n<link rel="File-List" href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n \r\n  Normal\r\n  0\r\n  \r\n  7.8 磅\r\n  0\r\n  2\r\n  \r\n  false\r\n  false\r\n  false\r\n  \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n  \r\n  MicrosoftInternetExplorer4\r\n \r\n</xml><![endif]--><!--[if gte mso 9]><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n@font-face\r\n	{"\\@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	font-size:10.5pt;"Times New Roman";}\r\nh2\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:18.0pt;\r\n	font-weight:bold;}\r\np.MsoFooter, li.MsoFooter, div.MsoFooter\r\n	{margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	layout-grid-mode:char;\r\n	font-size:9.0pt;"Times New Roman";}\r\np\r\n	{\r\n	margin-right:0cm;\r\n	margin-left:0cm;\r\n	font-size:12.0pt;\r\n	mso-bidi-"Times New Roman";}\r\npre\r\n	{margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	font-size:10.0pt;\r\n	mso-hansi-"Courier New";\r\n	mso-bidi-"Courier New";}\r\n /* Page Definitions */\r\n @page\r\n	{}\r\n@page Section1\r\n	{size:595.3pt 841.9pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;\r\n	layout-grid:15.6pt;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n--></style><!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n	{\r\n	mso-style-parent:"";\r\n	font-size:10.0pt;"Times New Roman";\r\n	mso-fareast-"Times New Roman";}\r\n</style>\r\n<![endif]--></p>\r\n<div><b><font size="5">问题描述</font></b></div>\r\n<div>DD 有一个不太听话的机器人，这个机器人总是会有自己的想法，而不会完全遵守<span> DD 给它的指令。</span></div>\r\n<div>现在<span> DD 在试图命令机器人走迷宫。迷宫是一个 N*N 个格子组成的区域，格子自左上角到右下角从 (1,1) 到 (N,N) 编号。第 i 行、第 j 列的格子编号为 (i,j)。迷宫中的某些区域是障碍物，机器人不能移动到那里。</span></div>\r\n<div>DD 给了机器人<span> M 条指令，指令的类型包括&ldquo;前进一步&rdquo;&ldquo;后退一步&rdquo;&ldquo;左转九十度&rdquo;&ldquo;右转九十度&rdquo;。但问题是机器人并不能完全遵守这些指令，因为如果机器人完全遵守这些指令，它可能会走到障碍物的格子里或者走到迷宫外面去，那样就会有危险。机器人希望从这个指令序列里面去掉一些，然后执行剩下的指令时，可以保证整个过程中都不会有危险。</span></div>\r\n<div>机器人虽然不太听话，但它并不想惹恼了<span> DD，否则 DD 可能会把它拆掉的。所以机器人希望去掉的指令尽量少。</span></div>\r\n<div>那么，机器人最少需要去掉多少条指令才能保证不会有危险呢？</div>\r\n<div><b><font size="5">输入格式</font></b></div>\r\n<p>第一行有四个整数<span> N、M、X0、Y0。表示迷宫的大小是 N*N，指令共有 M 条，机器人初始时的位置是<span> (X0,Y0)</span>。机器人初始时面朝的方向是上方。也就是说，若机器人按照初始时的方向走，效果是所在的 X 坐标越来越小。</span></p>\r\n<div>下面有<span> N 行，每行有 N 个字符，可能是点号 ''.'' 或星号 ''*''。''.'' 表示空地，''*'' 表示障碍。初始位置肯定是一个空地。</span></div>\r\n<div>下面的<span> M 行，每行有一个字符串，表示指令。字符串可能是：FORWARD（前进一步）、BACK（后退一步）、LEFT（左转）、RIGHT（右转）。</span></div>\r\n<div><b><font size="5">输出格式</font></b></div>\r\n<div>只需要输出一个整数，表示机器人最少需要去掉多少条指令才能保证不出危险。</div>\r\n<div><b><font size="5">样例输入</font></b></div>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n4 7 3 3</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n.***</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n..**</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n*..*</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n****</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nLEFT</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nFORWARD</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nLEFT</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nBACK</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nFORWARD</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nRIGHT</pre>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\nFORWARD</pre>\r\n<div><b><font size="5">样例输出</font></b></div>\r\n<pre style="margin: 0cm 24pt 0pt; background: rgb(238,238,238); -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial">\r\n1</pre>\r\n<div><b><font size="5">样例说明</font></b></div>\r\n<div>去掉第<span> 3 条、第 5 条或者第 7 条指令都可以保证机器人无危险。</span></div>\r\n<div><b><font size="5">数据范围</font></b></div>\r\n<div>迷宫的边长<span> N&lt;=100。</span></div>\r\n<div>指令数<span> M&lt;=1000。</span></div>\r\n<div>30%的数据M，N&le;50</div>\r\n<p>&nbsp;</p>', 1500, 128, 10, 0, '2012-04-05 16:22:54');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(61, '打鼹鼠', 'mouse', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n<meta name="ProgId" content="Word.Document">\r\n<meta name="Generator" content="Microsoft Word 11">\r\n<meta name="Originator" content="Microsoft Word 11">\r\n<link rel="File-List" href="file:///C:DOCUME~1CMYKRG~1LOCALS~1Tempmsohtml1\01clip_filelist.xml" /><!--[if gte mso 9]><xml>\r\n<w:WordDocument>\r\n<w:View>Normal</w:View>\r\n<w:Zoom>0</w:Zoom>\r\n<w:PunctuationKerning />\r\n<w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>\r\n<w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>\r\n<w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>\r\n<w:ValidateAgainstSchemas />\r\n<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\r\n<w:IgnoreMixedContent>false</w:IgnoreMixedContent>\r\n<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\r\n<w:Compatibility>\r\n<w:SpaceForUL />\r\n<w:BalanceSingleByteDoubleByteWidth />\r\n<w:DoNotLeaveBackslashAlone />\r\n<w:ULTrailSpace />\r\n<w:DoNotExpandShiftReturn />\r\n<w:AdjustLineHeightInTable />\r\n<w:BreakWrappedTables />\r\n<w:SnapToGridInCell />\r\n<w:WrapTextWithPunct />\r\n<w:UseAsianBreakRules />\r\n<w:DontGrowAutofit />\r\n<w:UseFELayout />\r\n</w:Compatibility>\r\n<w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\r\n</w:WordDocument>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n<w:LatentStyles DefLockedState="false" LatentStyleCount="156">\r\n</w:LatentStyles>\r\n</xml><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{font-family:宋体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimSun;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:黑体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimHei;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n@font-face\r\n	{font-family:"@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:"@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:none;\r\n	font-size:10.5pt;\r\n	mso-bidi-font-size:12.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-fareast-font-family:宋体;\r\n	mso-font-kerning:1.0pt;}\r\nh2\r\n	{mso-style-next:正文;\r\n	margin-top:13.0pt;\r\n	margin-right:0cm;\r\n	margin-bottom:13.0pt;\r\n	margin-left:0cm;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	line-height:173%;\r\n	mso-pagination:lines-together;\r\n	page-break-after:avoid;\r\n	mso-outline-level:2;\r\n	font-size:16.0pt;\r\n	font-family:Arial;\r\n	mso-fareast-font-family:黑体;\r\n	mso-bidi-font-family:"Times New Roman";\r\n	mso-font-kerning:1.0pt;}\r\nh3\r\n	{mso-style-next:正文;\r\n	margin-top:7.0pt;\r\n	margin-right:0cm;\r\n	margin-bottom:7.0pt;\r\n	margin-left:31.5pt;\r\n	mso-para-margin-top:7.0pt;\r\n	mso-para-margin-right:1.0gd;\r\n	mso-para-margin-bottom:7.0pt;\r\n	mso-para-margin-left:1.0gd;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:lines-together;\r\n	page-break-after:avoid;\r\n	mso-outline-level:3;\r\n	font-size:12.0pt;\r\n	mso-bidi-font-size:16.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-font-kerning:1.0pt;\r\n	font-weight:normal;\r\n	mso-bidi-font-weight:bold;}\r\np.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent\r\n	{mso-style-name:"正文缩进, Char, Char Char";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	text-indent:21.0pt;\r\n	mso-char-indent-count:2.0;\r\n	mso-pagination:none;\r\n	font-size:12.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-fareast-font-family:宋体;\r\n	mso-font-kerning:1.0pt;}\r\n /* Page Definitions */\r\n @page\r\n	{mso-page-border-surround-header:no;\r\n	mso-page-border-surround-footer:no;}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;\r\n	mso-header-margin:36.0pt;\r\n	mso-footer-margin:36.0pt;\r\n	mso-paper-source:0;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n-->\r\n</style><!--[if gte mso 10]>\r\n<style>\r\n/* Style Definitions */\r\ntable.MsoNormalTable\r\n{mso-style-name:普通表格;\r\nmso-tstyle-rowband-size:0;\r\nmso-tstyle-colband-size:0;\r\nmso-style-noshow:yes;\r\nmso-style-parent:"";\r\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\r\nmso-para-margin:0cm;\r\nmso-para-margin-bottom:.0001pt;\r\nmso-pagination:widow-orphan;\r\nfont-size:10.0pt;\r\nfont-family:"Times New Roman";\r\nmso-fareast-font-family:"Times New Roman";\r\nmso-ansi-language:#0400;\r\nmso-fareast-language:#0400;\r\nmso-bidi-language:#0400;}\r\n</style>\r\n<![endif]-->     </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<p class="MsoNormal" style="text-indent: 21pt;"><span style="font-size: 12pt; font-family: 宋体;">鼹鼠是一种很喜欢挖洞的动物，但每过一定的时间，它还是喜欢把头探出到地面上来透透气的。</span><span lang="EN-US" style="font-size: 12pt;"><o:p></o:p></span></p>\r\n<p class="MsoNormalIndent" style="text-indent: 24pt;"><span style="font-family: 宋体;">根据这个特点阿</span><span lang="EN-US">Q</span><span style="font-family: 宋体;">编写了一个打鼹鼠的游戏：在一个</span><span lang="EN-US">n*n</span><span style="font-family: 宋体;">的网格中，在某些时刻鼹鼠会在某一个网格探出头来透透气。你可以控制一个机器人来打鼹鼠，如果</span><span lang="EN-US">i</span><span style="font-family: 宋体;">时刻鼹鼠在某个网格中出现，而机器人也处于同一网格的话，那么这个鼹鼠就会被机器人打死。而机器人每一时刻只能够移动一格或停留在原地不动。机器人的移动是指从当前所处的网格移向相邻的网格，即从坐标为（</span><span lang="EN-US">i,j</span><span style="font-family: 宋体;">）的网格移向</span><span lang="EN-US">(i-1, j),(i+1, j),(i,j-1),(i,j+1)</span><span style="font-family: 宋体;">四个网格，机器人不能走出整个</span><span lang="EN-US">n*n</span><span style="font-family: 宋体;">的网格。游戏开始时，你可以自由选定机器人的初始位置。</span></p>\r\n<h2><span style="font-family: 黑体;">【任务描述】</span></h2>\r\n<p class="MsoNormalIndent" style=""><span style="font-family: 宋体;">现在你知道在一段时间内，鼹鼠出现的时间和地点，希望你编写一个程序使机器人在这一段时间内打死尽可能多的鼹鼠。</span></p>\r\n<h2><span style="font-family: 黑体;">【输入格式】</span></h2>\r\n<p class="MsoNormalIndent" style=""><span style="font-family: 宋体;">你将从文件</span><span lang="EN-US">input.txt</span><span style="font-family: 宋体;">中读入数据，文件第一行为</span><span lang="EN-US">n</span><span style="font-family: 宋体;">（</span><span lang="EN-US">n&lt;=1000</span><span style="font-family: 宋体;">）</span><span lang="EN-US">, m</span><span style="font-family: 宋体;">（</span><span lang="EN-US">m&lt;=10000</span><span style="font-family: 宋体;">），其中</span><span lang="EN-US">m</span><span style="font-family: 宋体;">表示在这一段时间内出现的鼹鼠的个数，接下来的</span><span lang="EN-US">m</span><span style="font-family: 宋体;">行每行有三个数据</span><span lang="EN-US">time,x,y</span><span style="font-family: 宋体;">表示有一只鼹鼠在游戏开始后</span><span lang="EN-US">time</span><span style="font-family: 宋体;">个时刻，在第</span><span lang="EN-US">x</span><span style="font-family: 宋体;">行第</span><span lang="EN-US">y</span><span style="font-family: 宋体;">个网格里出现了一只鼹鼠。</span><span lang="EN-US">Time</span><span style="font-family: 宋体;">按递增的顺序给出。注意同一时刻可能出现多只鼹鼠，但同一时刻同一地点只可能出现一只鼹鼠。</span></p>\r\n<h3 style="margin: 7pt 10.5pt;"><span style="font-family: 宋体;">【输入样例】</span></h3>\r\n<table width="204" cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border: medium none ; width: 153pt; margin-left: 23.4pt; border-collapse: collapse;">\r\n    <tbody>\r\n        <tr style="">\r\n            <td width="204" valign="top" style="border: 1pt solid windowtext; padding: 0cm 5.4pt; width: 153pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">2 2</span></p>\r\n            <p class="MsoNormal"><span lang="EN-US">1 1 1</span></p>\r\n            <p class="MsoNormal"><span lang="EN-US">2 2 2</span></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<h2><span style="font-family: 黑体;">【输出格式】</span></h2>\r\n<p class="MsoNormal" style="text-indent: 21pt;"><span style="font-size: 12pt; font-family: 宋体;">输出文件</span><span lang="EN-US" style="font-size: 12pt;">output.txt</span><span style="font-size: 12pt; font-family: 宋体;">中仅包含一个正整数，表示被打死鼹鼠的最大数目。</span><span lang="EN-US" style="font-size: 12pt;"><o:p></o:p></span></p>\r\n<h3 style="margin: 7pt 10.5pt;"><span style="font-family: 宋体;">【输出样例】</span></h3>\r\n<table width="204" cellspacing="0" cellpadding="0" border="1" class="MsoNormalTable" style="border: medium none ; width: 153pt; margin-left: 23.4pt; border-collapse: collapse;">\r\n    <tbody>\r\n        <tr style="">\r\n            <td width="204" valign="top" style="border: 1pt solid windowtext; padding: 0cm 5.4pt; width: 153pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">1</span></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p class="MsoNormal"><span lang="EN-US" style="font-size: 12pt;"><o:p>&nbsp;</o:p></span></p>\r\n<h2><span style="font-family: 黑体;">【运行限制】</span></h2>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-family: 宋体;">运行时限：</span><span lang="EN-US">1</span><span style="font-family: 宋体;">秒钟</span></p>\r\n<h2><span style="font-family: 黑体;">【评分方法】</span></h2>\r\n<p class="MsoNormalIndent" style="text-indent: 24pt;"><span style="font-family: 宋体;">本题目一共有十个测试点，每个测试点的分数为总分数的</span><span lang="EN-US">10%</span><span style="font-family: 宋体;">。对于每个测试点来说，如果你给出的答案正确，那么你将得到该测试点全部的分数，否则得</span><span lang="EN-US">0</span><span style="font-family: 宋体;">分。</span></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:54'),
(62, '宠物收养所', 'pet', '<p><span style="font-family: Verdana"><span style="font-size: 12pt">最近，阿Q</span><span style="font-size: 12pt">开了一间宠物收养所。收养所提供两种服务：收养被主人遗弃的宠物和让新的主人领养这些宠物。</span><span style="font-size: 12pt">每个领养者都希望领养到自己满意的宠物，阿</span><span style="font-size: 12pt">Q</span><span style="font-size: 12pt">根据领养者的要求通过他自己发明的一个特殊的公式，得出该领养者希望领养的宠物的特点值</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">（</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">是一个正整数，</span><span style="font-size: 12pt">a&lt;2^31），而他也给每个处在收养所的宠物一个特点值。这样他就能够很方便的处理整个领养宠物的过程了，宠物收养所总是会有两种情况发生：被遗弃的宠物过多或者是想要收养宠物的人太多，而宠物太少。</span></span></p>\r\n<div style="margin-left: 18pt; text-indent: -18pt"><span style="font-family: Verdana"><span style="font-size: 12pt">1．被遗弃的宠物过多时，假若到来一个领养者，这个领养者希望领养的宠物的特点值为</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">，那么它将会领养一只目前未被领养的宠物中特点值最接近</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">的一只宠物。（任何两只宠物的特点值都不可能是相同的，任何两个领养者的希望领养宠物的特点值也不可能是一样的）如果有两只满足要求的宠物，即存在两只宠物他们的特点值分别为</span><span style="font-size: 12pt">a-b</span><span style="font-size: 12pt">和</span><span style="font-size: 12pt">a+b</span><span style="font-size: 12pt">，那么领养者将会领养特点值为</span><span style="font-size: 12pt">a-b的那只宠物。</span></span></div>\r\n<div style="margin-left: 18pt; text-indent: -18pt"><span style="font-family: Verdana"><span style="font-size: 12pt">2．收养宠物的人过多，假若到来一只被收养的宠物，那么哪个领养者能够领养它呢？能够领养它的领养者，是那个希望被领养宠物的特点值最接近该宠物特点值的领养者，如果该宠物的特点值为</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">，存在两个领养者他们希望领养宠物的特点值分别为</span><span style="font-size: 12pt">a-b</span><span style="font-size: 12pt">和</span><span style="font-size: 12pt">a+b</span><span style="font-size: 12pt">，那么特点值为</span><span style="font-size: 12pt">a-b的那个领养者将成功领养该宠物。</span></span></div>\r\n<div><span style="font-family: Verdana">&nbsp;</span></div>\r\n<div style="text-indent: 18pt"><span style="font-family: Verdana"><span style="font-size: 12pt">一个领养者领养了一个特点值为a</span><span style="font-size: 12pt">的宠物，而它本身希望领养的宠物的特点值为</span><span style="font-size: 12pt">b</span><span style="font-size: 12pt">，那么这个领养者的不满意程度为</span><span style="font-size: 12pt">abs(a-b)。</span></span></div>\r\n<div><span style="font-family: Verdana"><b><font size="5">【任务描述】</font></b></span></div>\r\n<div style="text-indent: 18pt"><span style="font-family: Verdana"><span style="font-size: 12pt">你得到了一年当中，领养者和被收养宠物到来收养所的情况，希望你计算所有收养了宠物的领养者的不满意程度的总和。这一年初始时，收养所里面既没有宠物，也没有领养者。</span></span></div>\r\n<div><span style="font-family: Verdana"><b><font size="5">【输入格式】</font></b></span></div>\r\n<div style="text-indent: 10.5pt"><span style="font-family: Verdana"><span style="font-size: 12pt">你将从文件当中读入数据。文件的第一行为一个正整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">n&lt;=80000</span><span style="font-size: 12pt">，表示一年当中来到收养所的宠物和领养者的总数。接下来的</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">行，按到来时间的先后顺序描述了一年当中来到收养所的宠物和领养者的情况。每行有两个正整数</span><span style="font-size: 12pt">a, b</span><span style="font-size: 12pt">，其中</span><span style="font-size: 12pt">a=0</span><span style="font-size: 12pt">表示宠物，</span><span style="font-size: 12pt">a=1</span><span style="font-size: 12pt">表示领养者，</span><span style="font-size: 12pt">b</span><span style="font-size: 12pt">表示宠物的特点值或是领养者希望领养宠物的特点值。（同一时间呆在收养所中的，要么全是宠物，要么全是领养者，这些宠物和领养者的个数不会超过</span><span style="font-size: 12pt">10000个）</span></span></div>\r\n<div style="text-indent: 10.5pt"><span style="font-family: Verdana">【输入样例】</span></div>\r\n<p>\r\n<table style="border-right: medium none; border-top: medium none; margin-left: 23.4pt; border-left: medium none; width: 153pt; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" width="204" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 153pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="204">\r\n            <div><span style="font-family: Verdana">5</span></div>\r\n            <div><span style="font-family: Verdana">0 2</span></div>\r\n            <div><span style="font-family: Verdana">0 4</span></div>\r\n            <div><span style="font-family: Verdana">1 3</span></div>\r\n            <div><span style="font-family: Verdana">1 2</span></div>\r\n            <div><span style="font-family: Verdana">1 5</span></div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<div><span style="font-family: Verdana"><b><font size="5">【输出格式】</font></b></span></div>\r\n<div style="text-indent: 24pt"><span style="font-family: Verdana">输出文件中仅有一个正整数，表示一年当中所有收养了宠物的领养者的不满意程度的总和mod 1000000以后的结果。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-family: Verdana">【输出样例】</span></div>\r\n<p>\r\n<table style="border-right: medium none; border-top: medium none; margin-left: 23.4pt; border-left: medium none; width: 153pt; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" width="204" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 153pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="204">\r\n            <div style="text-indent: 24pt"><span style="font-family: Verdana">3</span></div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<div style="text-indent: 7.85pt"><span style="font-family: Verdana">(abs(3-2) + abs(2-4)=3，最后一个领养者没有宠物可以领养)</span></div>\r\n<div><span style="font-family: Verdana"><b><font size="5">【运行限制】</font></b></span></div>\r\n<div><span style="font-family: Verdana">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="font-size: 12pt">运行时限：</span><span style="font-size: 12pt">1秒钟</span></span></div>\r\n<div><span style="font-family: Verdana"><b><font size="5">【评分方法】</font></b></span></div>\r\n<div><span style="font-family: Verdana">本题目一共有十个测试点，每个测试点的分数为总分数的10%。对于每个测试点来说，如果你给出的答案正确，那么你将得到该测试点全部的分数，否则得0分。</span></div>\r\n<div><span style="font-family: Verdana">&nbsp;</span></div>', 1000, 128, 10, 0, '2012-04-05 16:22:54'),
(63, '金属包裹', 'enwrap', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n<meta name="ProgId" content="Word.Document">\r\n<meta name="Generator" content="Microsoft Word 11">\r\n<meta name="Originator" content="Microsoft Word 11">\r\n<link href="file:///C:DOCUME~1CMYKRG~1LOCALS~1Tempmsohtml1�1clip_filelist.xml" rel="File-List" /><!--[if gte mso 9]><xml>\r\n<w:WordDocument>\r\n<w:View>Normal</w:View>\r\n<w:Zoom>0</w:Zoom>\r\n<w:PunctuationKerning />\r\n<w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>\r\n<w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>\r\n<w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>\r\n<w:ValidateAgainstSchemas />\r\n<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\r\n<w:IgnoreMixedContent>false</w:IgnoreMixedContent>\r\n<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\r\n<w:Compatibility>\r\n<w:SpaceForUL />\r\n<w:BalanceSingleByteDoubleByteWidth />\r\n<w:DoNotLeaveBackslashAlone />\r\n<w:ULTrailSpace />\r\n<w:DoNotExpandShiftReturn />\r\n<w:AdjustLineHeightInTable />\r\n<w:BreakWrappedTables />\r\n<w:SnapToGridInCell />\r\n<w:WrapTextWithPunct />\r\n<w:UseAsianBreakRules />\r\n<w:DontGrowAutofit />\r\n<w:UseFELayout />\r\n</w:Compatibility>\r\n<w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\r\n</w:WordDocument>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n<w:LatentStyles DefLockedState="false" LatentStyleCount="156">\r\n</w:LatentStyles>\r\n</xml><![endif]--><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{font-family:Wingdings;\r\n	panose-1:5 0 0 0 0 0 0 0 0 0;\r\n	mso-font-charset:2;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:0 268435456 0 0 -2147483648 0;}\r\n@font-face\r\n	{font-family:宋体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimSun;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:黑体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimHei;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n@font-face\r\n	{font-family:"@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:"@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:none;\r\n	font-size:10.5pt;\r\n	mso-bidi-font-size:12.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-fareast-font-family:宋体;\r\n	mso-font-kerning:1.0pt;}\r\nh2\r\n	{mso-style-next:正文;\r\n	margin-top:13.0pt;\r\n	margin-right:0cm;\r\n	margin-bottom:13.0pt;\r\n	margin-left:0cm;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	line-height:173%;\r\n	mso-pagination:lines-together;\r\n	page-break-after:avoid;\r\n	mso-outline-level:2;\r\n	font-size:16.0pt;\r\n	font-family:Arial;\r\n	mso-fareast-font-family:黑体;\r\n	mso-bidi-font-family:"Times New Roman";\r\n	mso-font-kerning:1.0pt;}\r\nh3\r\n	{mso-style-next:正文;\r\n	margin-top:7.0pt;\r\n	margin-right:0cm;\r\n	margin-bottom:7.0pt;\r\n	margin-left:31.5pt;\r\n	mso-para-margin-top:7.0pt;\r\n	mso-para-margin-right:1.0gd;\r\n	mso-para-margin-bottom:7.0pt;\r\n	mso-para-margin-left:1.0gd;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:lines-together;\r\n	page-break-after:avoid;\r\n	mso-outline-level:3;\r\n	font-size:12.0pt;\r\n	mso-bidi-font-size:16.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-font-kerning:1.0pt;\r\n	font-weight:normal;\r\n	mso-bidi-font-weight:bold;}\r\np.MsoNormalIndent, li.MsoNormalIndent, div.MsoNormalIndent\r\n	{mso-style-name:"正文缩进, Char, Char Char";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	text-indent:21.0pt;\r\n	mso-char-indent-count:2.0;\r\n	mso-pagination:none;\r\n	font-size:12.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-fareast-font-family:宋体;\r\n	mso-font-kerning:1.0pt;}\r\np.Data, li.Data, div.Data\r\n	{mso-style-name:Data;\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:none;\r\n	font-size:10.5pt;\r\n	font-family:"Courier New";\r\n	mso-fareast-font-family:"Courier New";\r\n	mso-font-kerning:1.0pt;}\r\nspan.a\r\n	{mso-style-name:"样式 加粗";\r\n	font-family:黑体;\r\n	mso-fareast-font-family:黑体;\r\n	font-weight:bold;}\r\n /* Page Definitions */\r\n @page\r\n	{mso-page-border-surround-header:no;\r\n	mso-page-border-surround-footer:no;}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;\r\n	mso-header-margin:36.0pt;\r\n	mso-footer-margin:36.0pt;\r\n	mso-paper-source:0;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n /* List Definitions */\r\n @list l0\r\n	{mso-list-id:949511381;\r\n	mso-list-type:hybrid;\r\n	mso-list-template-ids:938893918 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}\r\n@list l0:level1\r\n	{mso-level-number-format:bullet;\r\n	mso-level-text:&#61548;;\r\n	mso-level-tab-stop:45.0pt;\r\n	mso-level-number-position:left;\r\n	margin-left:45.0pt;\r\n	text-indent:-21.0pt;\r\n	font-family:Wingdings;}\r\n@list l1\r\n	{mso-list-id:1691294999;\r\n	mso-list-type:hybrid;\r\n	mso-list-template-ids:-1245701088 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}\r\n@list l1:level1\r\n	{mso-level-number-format:bullet;\r\n	mso-level-text:&#61548;;\r\n	mso-level-tab-stop:42.0pt;\r\n	mso-level-number-position:left;\r\n	margin-left:42.0pt;\r\n	text-indent:-21.0pt;\r\n	font-family:Wingdings;}\r\n@list l1:level2\r\n	{mso-level-number-format:bullet;\r\n	mso-level-text:&#61550;;\r\n	mso-level-tab-stop:63.0pt;\r\n	mso-level-number-position:left;\r\n	margin-left:63.0pt;\r\n	text-indent:-21.0pt;\r\n	font-family:Wingdings;}\r\nol\r\n	{margin-bottom:0cm;}\r\nul\r\n	{margin-bottom:0cm;}\r\n--></style><!--[if gte mso 10]>\r\n<style>\r\n/* Style Definitions */\r\ntable.MsoNormalTable\r\n{mso-style-name:普通表格;\r\nmso-tstyle-rowband-size:0;\r\nmso-tstyle-colband-size:0;\r\nmso-style-noshow:yes;\r\nmso-style-parent:"";\r\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\r\nmso-para-margin:0cm;\r\nmso-para-margin-bottom:.0001pt;\r\nmso-pagination:widow-orphan;\r\nfont-size:10.0pt;\r\nfont-family:"Times New Roman";\r\nmso-ansi-language:#0400;\r\nmso-fareast-language:#0400;\r\nmso-bidi-language:#0400;}\r\n</style>\r\n<![endif]-->    </meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">H公司生产了一种金属制品，是由一些笔直的金属条支撑起来的，金属条和别的金属条在交点上被焊接在了一起。现在由于美观需要，在这个产品用一层特殊的材料包裹起来。公司为了节约成本，希望消耗的材料最少（不计裁剪时的边角料的损失）。</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">【任务描述】<br />\r\n你的程序需要根据给定的输入，给出符合题意的输出：<br />\r\n输入包括该产品的顶点的个数，以及所有顶点的坐标；<br />\r\n你需要根据输入的计算出包裹这个产品所需要的材料的最小面积。<br />\r\n结果要求精确到小数点后第六位。（四舍五入）</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">【输入格式】：(enwrap.in)<br />\r\n输入文件enwrap.in由若干行组成：<br />\r\n第1行是一个整数n(4 &lt;= n &lt;= 100)，表示顶点的个数；<br />\r\n第2行到第n+1行，每行是3个实数xi,yi,zi，表示第i个顶点的坐标。每个顶点的位置各不相同。</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">【输入样例】<br />\r\n4<br />\r\n0 0 0<br />\r\n1 0 0<br />\r\n0 1 0<br />\r\n0 0 1<br />\r\n说明：该输入示例中共有4个点，可参见后面的图示。<br />\r\n&nbsp;<br />\r\n【输出格式】：(enwrap.out)<br />\r\n输出文件只有一个实数，表示包裹一个该产品所需的材料面积的最小值。</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">【输出样例】<br />\r\n2.366025<br />\r\n&nbsp;</span></p>\r\n<p class="MsoNormal" style="text-indent: 21.75pt"><span lang="EN-US" style="font-size: 12pt">&nbsp;</span></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:54'),
(64, '跳棋的挑战', 'checker', '<p style="margin: 0cm 0cm 0pt"><font size="3"><font face="宋体"><b>【问题描述】</b><span lang="EN-US" style="font-size: 11pt"><o:p></o:p></span></font></font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">检查一个如下的</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">6 x 6</span><span><font face="宋体">的跳棋棋盘，有六个棋子被放置在棋盘上，使得每行，每列，每条对角线</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">(</span><span><font face="宋体">包括两条主对角线的所有对角线</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">)</span><span><font face="宋体">上都至多有一个棋子，如下例，就是一种正确的布局。</font></span><span style="font-family: &quot;Times New Roman&quot;"> <span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">1<span>&nbsp;&nbsp; </span>2<span>&nbsp;&nbsp; </span>3<span>&nbsp;&nbsp; </span>4<span>&nbsp;&nbsp; </span>5<span>&nbsp;&nbsp; </span>6</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">1 |<span>&nbsp;&nbsp; </span>| O |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">2 |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>| O |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">3 |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>| O |</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">4 | O |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">5 |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>| O |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">6 |<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>|<span>&nbsp;&nbsp; </span>| O |<span>&nbsp;&nbsp; </span>|</font></span></pre>\r\n<pre style="text-align: center"><span lang="EN-US"><font face="宋体" size="3">-------------------------</font></span></pre>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">上面的布局可以用序列</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">2 4 6 1 3 5</span><span><font face="宋体">来描述，第</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">i</span><span><font face="宋体">个数字表示在第</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">i</span><span><font face="宋体">行的相应位置有一个棋子，如下：</font></span><span style="font-family: &quot;Times New Roman&quot;"> <span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">行号</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"> 1 2 3 4 5 6 <o:p></o:p></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">列号</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"> 2 4 6 1 3 5 <o:p></o:p></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">这只是跳棋放置的一个解。请写一个程序找出所有跳棋放置的解，并把它们以上面的序列方法输出。解按字典顺序排列，请输出前</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">3</span><span><font face="宋体">个解，最后一行是解的总个数。</font></span><span style="font-family: &quot;Times New Roman&quot;"> </span></font></p>\r\n<p style="margin: 0cm 0cm 0pt"><font size="3"><font face="宋体"><span>【输入格式】</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"><o:p></o:p></span></font></font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 23.65pt"><font size="3"><span><font face="宋体">一个数字</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">N (6 &lt;= N &lt;= 14) </span><span><font face="宋体">表示棋盘是</font></span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;">N x N</span><span><font face="宋体">大小的。</font></span><span style="font-family: &quot;Times New Roman&quot;"> </span></font></p>\r\n<p style="margin: 0cm 0cm 0pt"><font face="宋体" size="3">【输出格式】</font></p>\r\n<p style="margin: 0cm 0cm 0pt; text-indent: 24pt"><font size="3"><span><font face="宋体">前三行为前三个解，每个解的两个数字之间用一个空格隔开。第四行只有一个数字，表示解的总数。</font></span><span style="font-family: &quot;Times New Roman&quot;"> <span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt"><font face="宋体" size="3">【输入输出样例】</font></p>\r\n<p style="margin: 0cm 0cm 0pt"><b><span lang="EN-US" style="font-size: 13.5pt; font-family: &quot;Times New Roman&quot;">(checker.in) <o:p></o:p></span></b></p>\r\n<p style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"><font size="3">6</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt"><b><span lang="EN-US" style="font-size: 13.5pt; font-family: &quot;Times New Roman&quot;">(checker.out)<o:p></o:p></span></b></p>\r\n<p style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"><font size="3">2 4 6 1 3 5 <o:p></o:p></font></span></p>\r\n<p style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"><font size="3">3 6 2 5 1 4 <o:p></o:p></font></span></p>\r\n<p style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;"><font size="3">4 1 5 2 6 3 <o:p></o:p></font></span></p>\r\n<p style="margin: 0cm 0cm 0pt"><span lang="EN-US"><font face="宋体" size="3">4</font></span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:54'),
(65, '字串变换', 'string', '<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><b><span lang="EN-US"><font face="Times New Roman">[</font></span></b><b><span style="font-family: 宋体">问题描述</span><span lang="EN-US"><font face="Times New Roman">]</font></span></b><span lang="EN-US"><font face="Times New Roman">:</font></span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">已知有两个字串</span><span lang="EN-US"><font face="Times New Roman"> A$, B$ </font></span><span style="font-family: 宋体">及一组字串变换的规则（至多</span><span lang="EN-US"><font face="Times New Roman">6</font></span><span style="font-family: 宋体">个规则）</span><span lang="EN-US"><font face="Times New Roman">:</font></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">　　</span><span lang="EN-US"><font face="Times New Roman">A1$ -&gt; B1$</font></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">　</span><span lang="EN-US"><font face="Times New Roman"><span>&nbsp; </span>A2$ -&gt; B2$</font></span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">规则的含义为：在</span><span lang="EN-US"><font face="Times New Roman"> A</font></span><span style="font-family: 宋体">＄中的子串</span><span lang="EN-US"><font face="Times New Roman"> A1$ </font></span><span style="font-family: 宋体">可以变换为</span><span lang="EN-US"><font face="Times New Roman"> B1$</font></span><span style="font-family: 宋体">、</span><span lang="EN-US"><font face="Times New Roman">A2$ </font></span><span style="font-family: 宋体">可以变换为</span><span lang="EN-US"><font face="Times New Roman"> B2$ </font></span><span style="font-family: 宋体">&hellip;。</span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">例如：</span><span lang="EN-US"><font face="Times New Roman">A$</font></span><span style="font-family: 宋体">＝</span><span lang="EN-US"><font face="Times New Roman">''abcd''</font></span><span style="font-family: 宋体">　</span><span lang="EN-US"><font face="Times New Roman">B$</font></span><span style="font-family: 宋体">＝</span><span lang="EN-US"><font face="Times New Roman">''xyz''</font></span><span style="font-family: 宋体">　　</span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">变换规则为：&lsquo;</span><span lang="EN-US"><font face="Times New Roman">abc</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">xu</font></span><span style="font-family: 宋体">&rsquo;　&lsquo;</span><span lang="EN-US"><font face="Times New Roman">ud</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">y</font></span><span style="font-family: 宋体">&rsquo;　&lsquo;</span><span lang="EN-US"><font face="Times New Roman">y</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">yz</font></span><span style="font-family: 宋体">&rsquo;</span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">则此时，</span><span lang="EN-US"><font face="Times New Roman">A$ </font></span><span style="font-family: 宋体">可以经过一系列的变换变为</span><span lang="EN-US"><font face="Times New Roman"> B$</font></span><span style="font-family: 宋体">，其变换的过程为：</span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">abcd</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">xud</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">xy</font></span><span style="font-family: 宋体">&rsquo;</span><span lang="EN-US"><font face="Times New Roman">-&gt;</font></span><span style="font-family: 宋体">&lsquo;</span><span lang="EN-US"><font face="Times New Roman">xyz</font></span><span style="font-family: 宋体">&rsquo;</span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">共进行了三次变换，使得</span><span lang="EN-US"><font face="Times New Roman"> A$ </font></span><span style="font-family: 宋体">变换为</span><span lang="EN-US"><font face="Times New Roman">B$</font></span><span style="font-family: 宋体">。</span></font></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><b><span lang="EN-US"><font face="Times New Roman">[</font></span></b><b><span style="font-family: 宋体">输入</span><span lang="EN-US"><font face="Times New Roman">]</font></span></b><span lang="EN-US"><font face="Times New Roman">:</font></span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体"><font size="3">文件格式如下：</font></span></p>\r\n<p style="text-indent: 31.5pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span lang="EN-US"><font face="Times New Roman">&nbsp; A$ B$<br />\r\n</font></span><span style="font-family: 宋体">　　　</span></font><font size="3"><span lang="EN-US"><font face="Times New Roman">A1$ B1$ \\<br />\r\n</font></span><span style="font-family: 宋体">　　　</span><span lang="EN-US"><font face="Times New Roman">A2$ B2$&nbsp; |-&gt; </font></span><span style="font-family: 宋体">变换规则</span></font><span lang="EN-US"><br />\r\n</span><span style="font-family: 宋体"><font size="3">　　　</font></span><font size="3"><span lang="EN-US"><font face="Times New Roman">... ... /&nbsp;<br />\r\n</font></span><span style="font-family: 宋体">　　所有字符串长度的上限为</span><span lang="EN-US"><font face="Times New Roman"> 20</font></span><span style="font-family: 宋体">。</span></font></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><b><span lang="EN-US"><font face="Times New Roman">[</font></span></b><b><span style="font-family: 宋体">输出</span><span lang="EN-US"><font face="Times New Roman">]</font></span></b><span lang="EN-US"><font face="Times New Roman">:</font></span></font></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体"><font size="3">格式如下：</font></span></p>\r\n<p style="text-indent: 21pt; margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><span style="font-family: 宋体">若在</span><span lang="EN-US"><font face="Times New Roman"> 10 </font></span><span style="font-family: 宋体">步（包含</span><span lang="EN-US"><font face="Times New Roman"> 10</font></span><span style="font-family: 宋体">步）以内能将</span><span lang="EN-US"><font face="Times New Roman"> A$ </font></span><span style="font-family: 宋体">变换为</span><span lang="EN-US"><font face="Times New Roman"> B$ </font></span><span style="font-family: 宋体">，则输出最少的变换步数；否则输出</span><span lang="EN-US"><font face="Times New Roman">&quot;NO ANSWER!&quot;</font></span></font></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><b><span lang="EN-US"><font face="Times New Roman">[</font></span></b><b><span style="font-family: 宋体">输入样例</span><span lang="EN-US"><font face="Times New Roman">]<o:p></o:p></font></span></b></font><span lang="EN-US"><font size="3" face="Times New Roman"><br />\r\n</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3" face="Times New Roman">abcd xyz</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3" face="Times New Roman">abc xu</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3" face="Times New Roman">ud y</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3" face="Times New Roman">y yz</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><o:p></o:p></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><font size="3"><b><span lang="EN-US"><font face="Times New Roman">[</font></span></b><b><span style="font-family: 宋体">输出样例</span><span lang="EN-US"><font face="Times New Roman">]<o:p></o:p></font></span></b></font><span lang="EN-US"><font size="3" face="Times New Roman"><br />\r\n</font></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span lang="EN-US"><font size="3" face="Times New Roman">3</font></span></p>', 1000, 128, 8, 0, '2012-04-05 16:22:54'),
(66, '数列问题', 'dfs3', '<p><span style="font-family: 宋体"><b>问题描述</b><br />\r\n</span>试编程将 1 至 N （ N &le;&nbsp;15 ）的自然数序列 1 ， 2 ， &hellip; ， N 重新排列，使任意相邻两数之和为素数。例如 N=3 时有两种排列方案 123 、 321 满足要求。</p>\r\n<p class="MsoNormal" align="left">【输入格式】</p>\r\n<p class="MsoNormal" style="text-indent: 21pt"><span style="font-family: 宋体">输入文件：dfs3.in</span></p>\r\n<p class="MsoNormal" style="text-indent: 21pt">第一行：一个整数n(1&lt;=n&lt;=15)</p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal" style="text-indent: 21pt"><span style="font-family: 宋体">输出文件：dfs3.out</span></p>\r\n<p class="MsoNormal" style="text-indent: 21pt; font-family: ''宋体''">输出若干行，每行为一种排列方案（排列方案按字典序排列， 相邻数字之间用空格分隔） ），最后一行输出排列方案总数。</p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">dfs3.in</span></span></p>\r\n<p class="MsoNormal">3</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">dfs3.out</span></span></p>\r\n<p class="MsoNormal">1 2 3<br />\r\n3 2 1<br />\r\n2</p>', 1000, 128, 6, 0, '2012-04-05 16:22:54');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(67, '生日蛋糕', 'cake', '<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><b><span style="font-family: 宋体; font-size: 12pt">问题描述</span></b><span style="font-family: 宋体; font-size: 12pt"> <span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><st1:chsdate isrocdate="False" islunardate="False" day="17" month="7" year="2008" w:st="on"><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">7</span><span style="font-family: 宋体; font-size: 12pt">月</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">17</span><span style="font-family: 宋体; font-size: 12pt">日</span></st1:chsdate><span style="font-family: 宋体; font-size: 12pt">是</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">Mr.W</span><span style="font-family: 宋体; font-size: 12pt">的生日，</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">ACM-THU</span><span style="font-family: 宋体; font-size: 12pt">为此要制作一个体积为</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">N&pi;</span><span style="font-family: 宋体; font-size: 12pt">的</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">M</span><span style="font-family: 宋体; font-size: 12pt">层生日蛋糕，每层都是一个圆柱体。</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype><v:shape style="z-index: 1; position: absolute; margin-top: 5.85pt; width: 108.75pt; height: 84.75pt; margin-left: -0.75pt" id="_x0000_s1026" type="#_x0000_t75" alt="" o:allowoverlap="f"><v:imagedata src="file:///C:\\DOCUME~1\\wgz\\LOCALS~1\\Temp\\msohtml1\\01\\clip_image001.gif" o:title="6B33"></v:imagedata><w:wrap type="square"></w:wrap></v:shape><span style="font-family: 宋体; font-size: 12pt">设从下往上数第<span lang="EN-US">i(1&lt;=i&lt;=M)</span>层蛋糕是半径为<span lang="EN-US">R<sub>i</sub>,<sub> </sub></span>高度为<span lang="EN-US">H<sub>i</sub></span>的圆柱。当<span lang="EN-US">i&lt;M</span>时，要求<span lang="EN-US">R<sub>i</sub>&gt;R<sub>i+1</sub></span>且<span lang="EN-US">H<sub>i</sub>&gt;H<sub>i+1</sub></span>。</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">由于要在蛋糕上抹奶油，为尽可能节约经费，我们希望蛋糕外表面（最下一层的下底面除外）的面积<span lang="EN-US">Q</span>最小。</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">令<span lang="EN-US">Q= S</span></span><font face="Times New Roman"><span style="font-size: 12pt" lang="EN-US">&pi;</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></font></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">请编程对给出的<span lang="EN-US">N</span>和<span lang="EN-US">M</span>，找出蛋糕的制作方案（适当的<span lang="EN-US">R<sub>i</sub></span>和<span lang="EN-US">H<sub>i</sub></span>的值），使<span lang="EN-US">S</span>最小。</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><b><span style="font-family: 宋体; font-size: 12pt">（除<span lang="EN-US">Q</span>外，以上所有数据皆为正整数）</span></b><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"> <o:p></o:p></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">【输入格式】<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><span>&nbsp; </span></span><font size="3"><span style="font-family: 宋体">有两行，第一行为</span><span lang="EN-US"><font face="Times New Roman">N</font></span><span style="font-family: 宋体">（</span><span lang="EN-US"><font face="Times New Roman">N&lt;=10000</font></span><span style="font-family: 宋体">），表示待制作的蛋糕的体积为</span><span lang="EN-US"><font face="Times New Roman">N&pi;</font></span><span style="font-family: 宋体">；第二行为</span><span lang="EN-US"><font face="Times New Roman">M(M&lt;=20)</font></span><span style="font-family: 宋体">，表示蛋糕的层数为</span><span lang="EN-US"><font face="Times New Roman">M</font></span><span style="font-family: 宋体">。</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></font></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">【输出格式】<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">　</span><font size="3"><span style="font-family: 宋体">仅一行，是一个正整数</span><span lang="EN-US"><font face="Times New Roman">S</font></span><span style="font-family: 宋体">（若无解则</span><span lang="EN-US"><font face="Times New Roman">S=0</font></span><span style="font-family: 宋体">）。</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></font></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">【输入输出样例】<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">输入文件<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><font size="3"><font face="Times New Roman"><span lang="EN-US">100</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></font></font></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><font size="3"><font face="Times New Roman"><span lang="EN-US">2</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></font></font></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">输出文件<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-align: left; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><font size="3"><font face="Times New Roman"><span lang="EN-US">68</span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US"><o:p></o:p></span></font></font></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">附：圆柱公式</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">体积<span lang="EN-US">V=</span></span><span style="font-size: 12pt" lang="EN-US"><font face="Times New Roman">&pi;</font></span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">R<sup>2</sup>H</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="text-align: left; line-height: 15pt; margin: 0cm 0cm 0pt" class="MsoNormal" align="left"><span style="font-family: 宋体; font-size: 12pt">侧面积<span lang="EN-US">A</span></span><span style="font-size: 12pt" lang="EN-US"><font face="Times New Roman">&rsquo;</font></span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">=2</span><span style="font-size: 12pt" lang="EN-US"><font face="Times New Roman">&pi;</font></span><span style="font-family: 宋体; font-size: 12pt" lang="EN-US">RH</span><span style="font-family: 宋体; font-size: 10pt" lang="EN-US"><o:p></o:p></span></p>\r\n<p style="margin: 0cm 0cm 0pt" class="MsoNormal"><span style="font-family: 宋体; font-size: 12pt">底面积</span><span lang="EN-US"><font size="3"><font face="Times New Roman">A=&pi;R<sup>2</sup></font></font></span></p>', 2000, 128, 5, 0, '2012-04-05 16:22:54'),
(68, '采药', 'medic', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：&ldquo;孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。&rdquo;</p>\r\n<p>如果你是辰辰，你能完成这个任务吗？</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;输入文件的第一行有两个整数 T （ 1 &lt;= T &lt;= 1000 ）和 M （ 1 &lt;= M &lt;= 100 ），用一个空格隔开， T 代表总共能够用来采药的时间， M 代表山洞里的草药的数目。接下来的 M 行每行包括两个在 1 到 100 之间（包括 1 和 100 ）的整数，分别表示采摘某株草药的时间和这株草药的价值。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件包括一行，这一行只包含一个整数，表示在规定的时间内，可以采到的草药的最大总价值。</p>\r\n<p>【样例输入】</p>\r\n<p>70 3<br />\r\n71 100<br />\r\n69 1<br />\r\n1 2</p>\r\n<p>【样例输出】</p>\r\n<p>3</p>\r\n<p>【数据规模】</p>\r\n<p>对于 30% 的数据， M &lt;= 10 ；</p>\r\n<p>对于全部的数据， M &lt;= 100 。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:54'),
(69, '虫食算', 'alpha', '<p>【问题描述】 <br />\r\n<br />\r\n所谓虫食算，就是原先的算式中有一部分被虫子啃掉了，需要我们根据剩下的数字来判定被啃掉的字母。来看一个简单的例子： <br />\r\n<br />\r\n&nbsp;&nbsp; 43#9865#045&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;+ 8468#6633 <br />\r\n&nbsp;&nbsp; 44445506978 <br />\r\n<br />\r\n其中#号代表被虫子啃掉的数字。根据算式，我们很容易判断：第一行的两个数字分别是5和3，第二行的数字是5。 <br />\r\n<br />\r\n现在，我们对问题做两个限制： <br />\r\n<br />\r\n首先，我们只考虑加法的虫食算。这里的加法是N进制加法，算式中三个数都有N位，允许有前导的0。 <br />\r\n<br />\r\n其次，虫子把所有的数都啃光了，我们只知道哪些数字是相同的，我们将相同的数字用相同的字母表示，不同的数字用不同的字母表示。如果这个算式是N进制的，我们就取英文字母表中的前N个大写字母来表示这个算式中的0到N-1这N个不同的数字：但是这N个字母并不一定顺序地代表0到N-1)。输入数据保证N个字母分别至少出现一次。 <br />\r\n<br />\r\n<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; BADC <br />\r\n+ CRDA <br />\r\n&nbsp;&nbsp;&nbsp; DCCC <br />\r\n<br />\r\n上面的算式是一个4进制的算式。很显然，我们只要让ABCD分别代表0123，便可以让这个式子成立了。你的任务是，对于给定的N进制加法算式，求出N个不同的字母分别代表的数字，使得该加法算式成立。输入数据保证有且仅有一组解， <br />\r\n<br />\r\n【输入文件】 <br />\r\n<br />\r\n输入文件包含4行。第一行有一个正整数N(N&lt;=26)，后面的3行每行有一个由大写字母组成的字符串，分别代表两个加数以及和。这3个字符串左右两端都没有空格，从高位到低位，并且恰好有N位。 <br />\r\n<br />\r\n【输出文件】 <br />\r\n<br />\r\n输出文件包含一行。在这一行中，应当包含唯一的那组解。解是这样表示的：输出N个数字，分别表示A，B，C&hellip;&hellip;所代表的数字，相邻的两个数字用一个空格隔开，不能有多余的空格。 <br />\r\n<br />\r\n【样例输入】 <br />\r\n<br />\r\n5 <br />\r\nABCED <br />\r\nBDACE <br />\r\nEBBAA <br />\r\n<br />\r\n【样例输出】 <br />\r\n<br />\r\n1 0 3 4 2 <br />\r\n<br />\r\n【数据规模】 <br />\r\n<br />\r\n对于30％的数据，保证有N&lt;＝10； <br />\r\n对于50％的数据，保证有N&lt;＝15； <br />\r\n对于全部的数据，保证有N&lt;＝26。 <br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(70, '求图形面积', 'area', '<p class="MsoNormal"><font color="#0000ff"><span style="font-family: 宋体">题一</span><span lang="EN-US">&nbsp; </span>求图形面积</font></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体"><b>【问题描述</b>】</span></p>\r\n<p class="MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;具有不同颜色的 N 个小的矩形的纸被叠放在一张白纸上， 纸的尺寸是宽(左右)为A， 长(上下)为B，摆放矩形时使矩形的边与纸的边平行，并且每个矩形必须整个放在纸的边界之内。因此，不同颜色的各种不同图形可在纸上出现，同一颜色的两个区域中如果至少有一个公共点，则认为它们是同一图形的一部分，否则认为是不同的图形。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;题目要求计算每一图形的面积。 A ， B 是正的偶数，且均不大于30 。坐标系统的定义为：坐标原点在纸的中心，两个轴分别平行于纸的两边。</p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal">输入数据在文件中，其组成如下： <br />\r\n首行是 A,B,N , 中间用空格隔开,分别为宽和长及矩形的个数;<br />\r\n接下来有 N 行，每行有 空格隔开的 5 个数据，分别表示矩形左下角的横坐标、纵坐标、矩形右上角的横坐标、纵坐标、矩形的颜色（用 1-64 分别来表示一共的 64 种颜色，其中 1 表示白色）。</p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;要求每行输出一个彩色图形的颜色和对应图形的面积，按颜色代码的升序安排记录的输出顺序。(若有<span lang="EN-US">颜色</span>相同的不同图形,先输出靠上靠左的图形) </span></p>\r\n<p class="MsoNormal">【输入输出样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"> area.in</span></p>\r\n<p class="MsoNormal">20 12 5 <br />\r\n-7 -5 -3 -1 4 <br />\r\n-5 -3 5 3 2 <br />\r\n-4 -2 -2 2 4 <br />\r\n2 -2 3 -1 12 <br />\r\n3 1 7 5 1</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">area.out</span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US">1 172 <br />\r\n2 47 <br />\r\n4 12 <br />\r\n4 8 <br />\r\n12 1 </span></p>', 1000, 128, 8, 0, '2012-04-05 16:22:55'),
(71, '开心的金明', 'happy', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：&ldquo;你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过 N 元钱就行&rdquo;。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的 N 元。于是，他把每件物品规定了一个重要度，分为 5 等：用整数 1 ~ 5 表示，第 5 等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过 N 元（可以等于 N 元）的前提下，使每件物品的价格与重要度的乘积的总和最大。</p>\r\n<p>设第 j 件物品的价格为 v[j] ，重要度为 w[j] ，共选中了 k 件物品，编号依次为 j1 ， j2 ，&hellip;&hellip;， jk ，则所求的总和为：</p>\r\n<p>v[j1]*w[j1]+v[j2]*w[j2]+ &hellip; +v[jk]*w[jk] 。（其中 * 为乘号）</p>\r\n<p>请你帮助金明设计一个满足要求的购物单。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件 happy.in 的第 1 行，为两个正整数，用一个空格隔开：</p>\r\n<p>N m</p>\r\n<p>（其中 N （ &lt; 30000 ）表示总钱数， m （ &lt;25 ）为希望购买物品的个数。）</p>\r\n<p>从第 2 行到第 m+1 行，第 j 行给出了编号为 j-1 的物品的基本数据，每行有 2 个非负整数</p>\r\n<p>v p</p>\r\n<p>（其中 v 表示该物品的价格 (v&lt;=10000) ， p 表示该物品的重要度 (1~5) ）</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出文件 happy.out 只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值（ &lt;100000000 ）。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n1000 5<br />\r\n800 2 <br />\r\n400 5 <br />\r\n300 5 <br />\r\n400 3 <br />\r\n200 2 <br />\r\n&nbsp;</p>\r\n<p>输出：<br />\r\n3900</p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(72, '队列基本操作', 'queue', '<p><span style="font-family: 宋体;"><b>问题描述</b></span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体;"><br />\r\n</span>请设计一个程序模拟队列，具备入队、出队、置队列为空、输出队列数据的功能。 (队列容量为10,即最多有10个元素在一个队中。)</p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US">输入由若干行组成：</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">第一行有一个整数，n（1&le;n&le;2000）；n表示对队列进行操作的次数。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">第2--n+1</span><span lang="EN-US">行表示n种操作信息。第行第一个整数代表操作的类型：</span><span lang="EN-US">1表示置队列为空操作，2表示入队操作，3表示出队操作、4表示输出队列信息。</span></p>\r\n<p class="MsoNormal">对于<span lang="EN-US">置队列为空</span>操作：无论队列中有无元素，有多少元素，都将队列置为空。</p>\r\n<p class="MsoNormal">对于入队操作：该行第二个整数表示入队数据，如果队列已满，显示queue out。</p>\r\n<p class="MsoNormal">对于出队操作：正常删除队首元素，如果队列中已无任何元素，显示queue empty。</p>\r\n<p class="MsoNormal">对于输出操作：第一行输出队列中元素个数，第二行按从队首到队尾的顺序输出队内所有元素。</p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US">根据不同的操作，输出不同的操作信息。</span></p>\r\n<p class="MsoNormal">入队、出队和置队列为空操作如无操作错误（队列溢出等），无输出信息。输出操作：第一行输出队列中元素个数，第二行按从队首到队尾的顺序输出队内所有元素。</p>\r\n<p class="MsoNormal">【输入输出样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"> queue.in</span></p>\r\n<p class="MsoNormal">6<br />\r\n1 <br />\r\n2 78<br />\r\n2 88<br />\r\n2 99<br />\r\n3<br />\r\n4</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">queue.out</span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><span lang="EN-US">2 <br />\r\n88 99 </span></span></p>', 1000, 128, 6, 0, '2012-04-05 16:22:55'),
(73, '找最佳通路', 'city', '<p><span style="font-family: 宋体;"><b>问题描述</b><br />\r\n</span>有 n 个 城市，它们之间的交通情况已知。现在要求根据一个出发点Cs和一个到达点Cd，请编程序，由计算机找到从城市Cs 到 Cd 的一条路径，要求经过城市最少。</p>\r\n<p align="center" class="MsoNormal"><span lang="EN-US"><img width="448" height="353" src="http://192.168.1.252/os/tigao/images/zhaotl.gif" v:shapes="_x0000_s1061 _x0000_s1062 _x0000_s1063 _x0000_s1064 _x0000_s1065 _x0000_s1066 _x0000_s1067 _x0000_s1068 _x0000_s1069 _x0000_s1070 _x0000_s1071 _x0000_s1072 _x0000_s1073 _x0000_s1074" alt="" /></span></p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal">输入文件： city.in</p>\r\n<p>输入由若干行组成，第一行有四个整数，n（1&le;n&le;50）、m（1&le;m&le;n*n）和s（1&le;s&le;n）、e（1&le;e&le;n）；n表示城市数，m表示道路数，s和e表示出发点和到达点。</p>\r\n<p>第 2至m+1行是m 条边的 信息，每行两个整数，为边的起点和终点。</p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal">输出文件： city.out</p>\r\n<p>一个整数,经过城市的个数（包括起点和终点）</p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">city.in</span></span></p>\r\n<p>6 6 1 5 <br />\r\n1 3 <br />\r\n2 6 <br />\r\n3 6 <br />\r\n3 2 <br />\r\n6 4 <br />\r\n4 5</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">city.out</span></span></p>\r\n<p class="MsoNormal">5<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(74, '明明的随机数', 'random', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp; 明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了 N 个 1 到 1000 之间的随机整数（ N &le; 100 ），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按 照 排好的顺序去找同学做调查。请你协助明明完成&ldquo;去重&rdquo;与&ldquo;排序&rdquo;的工作。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件 random.in 有 2 行，第 1 行为 1 个正整数，表示所生成的随机数的个数：N</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 第 2 行有 N 个用空格隔开的正整数，为所产生的随机数。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出文件 random.out 也是 2 行，第 1 行为 1 个正整数 M ，表示不相同的随机数的个数。第 2 行为 M 个用空格隔开的正整数，为从小到大排好序的不相同的随机数。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n10<br />\r\n20 40 32 67 40 20 89 300 400 15<br />\r\n&nbsp;</p>\r\n<p>输出：<br />\r\n8<br />\r\n15 20 32 40 67 89 300 400</p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(75, '合并果子', 'fruit', '<p>【问题描述】 <br />\r\n在一个果园里，多多已经将所有的果子打了下来，而且按果子的不同种类分成了不同的堆。多多决定把所有的果子合成一堆。 <br />\r\n每一次合并，多多可以把两堆果子合并到一起，消耗的体力等于两堆果子的重量之和。可以看出，所有的果子经过n-1次合并之后，就只剩下一堆了。多多在合并果子时总共消耗的体力等于每次合并所耗体力之和。 <br />\r\n因为还要花大力气把这些果子搬回家，所以多多在合并果子时要尽可能地节省体力。假定每个果子重量都为1，并且已知果子的种类数和每种果子的数目，你的任务是设计出合并的次序方案，使多多耗费的体力最少，并输出这个最小的体力耗费值。 <br />\r\n例如有3种果子，数目依次为1，2，9。可以先将1、2堆合并，新堆数目为3，耗费体力为3。接着，将新堆与原先的第三堆合并，又得到新的堆，数目为12，耗费体力为12。所以多多总共耗费体力=3+12=15。可以证明15为最小的体力耗费值。 <br />\r\n【输入文件】 <br />\r\n输入文件fruit.in包括两行，第一行是一个整数n(1&lt;＝n&lt;=10000)，表示果子的种类数。第二行包含n个整数，用空格分隔，第i个整数ai(1&lt;＝ai&lt;=20000)是第i种果子的数目。 <br />\r\n【输出文件】 <br />\r\n输出文件fruit.out包括一行，这一行只包含一个整数，也就是最小的体力耗费值。输入数据保证这个值小于231。 <br />\r\n【样例输入】 <br />\r\n3 <br />\r\n1 2 9 <br />\r\n【样例输出】 <br />\r\n15 <br />\r\n【数据规模】</p>\r\n<p>对于30％的数据，保证有n&lt;=1000： <br />\r\n对于50％的数据，保证有n&lt;=5000； <br />\r\n对于全部的数据，保证有n&lt;=10000。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(76, '统计数字', 'pcount', '<p><span style="font-size: medium">【问题描述】<br />\r\n&nbsp;&nbsp;&nbsp; 某次科研调查时得到了n个自然数，每个数均不超过1500000000(1.5*10^9)。已知不相同的数不超过10000个，现在需要统计这些自然数各自出现的次数，并按照自然数从小到大的顺序输出统计结果。</span></p>\r\n<p><span style="font-size: medium">【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件pcount.in包含n+1行<br />\r\n第1行是整数n，表示自然数的个数。<br />\r\n第2--n+1行每行一个自然数。</span></p>\r\n<p><span style="font-size: medium">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出文件pcount.out包含m行(m为n个自然数中不相同数的个数)，按照自然数从小到大的顺序输出。每行输出两个整数，分别是自然数和该数出现的次数，其问用一个空格隔开。</span></p>\r\n<p><span style="font-size: medium">【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n8<br />\r\n2<br />\r\n4<br />\r\n2<br />\r\n4<br />\r\n5<br />\r\n100<br />\r\n2<br />\r\n100<br />\r\n</span></p>\r\n<p><span style="font-size: medium">输出：<br />\r\n2 3<br />\r\n4 2<br />\r\n5 1<br />\r\n100 2</span></p>\r\n<p><span style="font-size: medium">【限制】</span></p>\r\n<p><span style="font-size: medium">40%的数据满足：1&lt;=n&lt;=1000<br />\r\n80%的数据满足：1&lt;=n&lt;=50000<br />\r\n100%的数据满足：1&lt;=n&lt;=200000，每个数均不超过1500 000 000(1.5*10^9) </span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(77, '数塔', 'shuta', '<p><font color="#0000ff">数塔</font></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体"><b>问题描述</b> </span></p>\r\n<p class="MsoNormal"><span style="font-size: 10.5pt">设有一个三角形的数塔，顶点结点称为根结点，每个结点有一个整数数值（小于3000）。从顶点出发，可以向左走，也可以向右走。如图所示<span lang="EN-US">：从根结点13出发，向左走到达11，再向右走到达7，再向左走到达14，再向左走到达7.由于7是最底层，无路可走。此时，我们找到一条从根结点开始到达底层的路径：</span></span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt"><span lang="EN-US">13--11--7--14--7</span></span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt"><span lang="EN-US">路径上结点中数字的和称为路径的值，如上面路径的值为13+11+7+14+7=52。同时，从图中可以看到除了上述路径外，还存在其他的路径，如：</span></span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt"><span lang="EN-US">13--11--12--14--13</span></span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt"><span lang="EN-US">其路径的值为63。</span></span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt"><span lang="EN-US">问题：当三角形数塔给出后，找出一条路径，使路径上的值为最大。若这样的路径存在多条，选根部偏左的路径。</span></span></p>\r\n<p class="MsoNormal" align="left"><span lang="EN-US"><img height="266" alt="" width="640" v:shapes="_x0000_s1061 _x0000_s1062 _x0000_s1063 _x0000_s1064 _x0000_s1065 _x0000_s1066 _x0000_s1067 _x0000_s1068 _x0000_s1069 _x0000_s1070 _x0000_s1071 _x0000_s1072 _x0000_s1073 _x0000_s1074" src="http://192.168.1.252/os/zhuanti/09dp/shuta.jpg" /></span></p>\r\n<p class="MsoNormal" style="text-align: left" align="left"><span lang="EN-US"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>输入由若干行组成，第一行有一个整数，n（1&le;n&le;80）；n<span class="GramE">表示</span>数塔的层数。第2至n+1行是数塔的信息。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span><span lang="EN-US">输出由两行组成，第</span>一行有一个整数，为所选路径的值。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>第二行有n个整数，为所选路径，<span lang="EN-US">中间用一个空格隔开。</span><o:p></o:p></span></p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">shuta.in</span></span></p>\r\n<p class="MsoNormal">5<br />\r\n13<br />\r\n11 8<br />\r\n12 7 26<br />\r\n6 14 15 8<br />\r\n12 7 13 24 11</p>\r\n<p class="MsoNormal">【输出样例】</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">shuta.out</span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US">86<br />\r\n13 8 26 15 24<o:p></o:p></span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:55'),
(78, '过河卒', 'pj024', '<p><span style="font-family: 宋体"><b>问题描述</b><br />\r\n</span><span style="font-family: 黑体; font-size: 10.5pt">如图</span><span style="font-size: 10.5pt" lang="EN-US">,A</span><span style="font-family: 黑体; font-size: 10.5pt">点有一过河卒，需要走到目标</span><span style="font-size: 10.5pt" lang="EN-US">B</span><span style="font-family: 黑体; font-size: 10.5pt">点。卒行走的规则：可以向下，或者向右。</span></p>\r\n<p class="MsoNormal" align="center"><span lang="EN-US"><img alt="" width="578" height="252" v:shapes="_x0000_s1025 _x0000_s1026 _x0000_s1027 _x0000_s1028 _x0000_s1029 _x0000_s1030 _x0000_s1031 _x0000_s1032 _x0000_s1033 _x0000_s1034 _x0000_s1035 _x0000_s1036 _x0000_s1037 _x0000_s1038 _x0000_s1039 _x0000_s1040 _x0000_s1041 _x0000_s1042 _x0000_s1043 _x0000_s1044 _x0000_s1045 _x0000_s1046 _x0000_s1047 _x0000_s1048 _x0000_s1049 _x0000_s1050 _x0000_s1051 _x0000_s1052 _x0000_s1053 _x0000_s1054 _x0000_s1055 _x0000_s1056 _x0000_s1057 _x0000_s1058 _x0000_s1059 _x0000_s1060 _x0000_s1061 _x0000_s1062 _x0000_s1063 _x0000_s1064 _x0000_s1065 _x0000_s1066 _x0000_s1067 _x0000_s1068 _x0000_s1069 _x0000_s1070 _x0000_s1071 _x0000_s1072 _x0000_s1073 _x0000_s1074 _x0000_s1075" src="http://192.168.1.252/os/zhuanti/05dfs/pj024.gif" /></span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体">同时在棋盘上的任一点有一个对方的马（如图中</span><span lang="EN-US">C</span><span style="font-family: 宋体">点），该马所在的点和所有跳跃一步可达的点称为对方马的控制点。</span></p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体">例如上图</span><span lang="EN-US">C</span><span style="font-family: 宋体">点的马可控制</span><span lang="EN-US">9</span><span style="font-family: 宋体">个点（</span><span lang="EN-US">P1...P8</span><span style="font-family: 宋体">，</span><span lang="EN-US">C</span><span style="font-family: 宋体">）。卒不能通过对方马的控制点。棋盘用坐标表示，</span><span lang="EN-US">A</span><span style="font-family: 宋体">点（</span><span lang="EN-US">0</span><span style="font-family: 宋体">，</span><span lang="EN-US">0</span><span style="font-family: 宋体">），</span><span lang="EN-US">B</span><span style="font-family: 宋体">点（</span><span lang="EN-US">n</span><span style="font-family: 宋体">，</span><span lang="EN-US">m</span><span style="font-family: 宋体">）（</span><span lang="EN-US">n</span><span style="font-family: 宋体">，</span><span lang="EN-US">m</span><span style="font-family: 宋体">为不超过</span><span lang="EN-US">20</span><span style="font-family: 宋体">的整数，并有键盘输入），同样，马的位置坐标是需要给出的（约定：</span><span lang="EN-US">C</span><span style="font-family: 宋体">&ne;</span><span lang="EN-US">A</span><span style="font-family: 宋体">同时</span><span lang="EN-US">C</span><span style="font-family: 宋体">&ne;</span><span lang="EN-US">B</span><span style="font-family: 宋体">）。</span></p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体">现在要你计算出</span> <span style="font-family: 宋体">卒从</span><span lang="EN-US">A</span><span style="font-family: 宋体">点出发能够到达</span><span lang="EN-US">B</span><span style="font-family: 宋体">点的路径的条数。</span></p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体">输入</span></p>\r\n<p style="text-indent: 21pt" class="MsoNormal">一行四个整数n<span style="font-family: 宋体" lang="EN-US">,</span>m<span style="font-family: 宋体" lang="EN-US">,</span>x<span style="font-family: 宋体" lang="EN-US">,</span>y</p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体" lang="EN-US">B点坐标（n,m）以及对马的坐标（x,y）{不用判错}</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体">输出</span></p>\r\n<p style="text-indent: 21pt" class="MsoNormal"><span style="font-family: 宋体">一个整数<span lang="EN-US">(路径的条数)</span></span></p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件</p>\r\n<p class="MsoNormal">6 6 3 2</p>\r\n<p>输出文件</p>\r\n<p class="MsoNormal">17<br />\r\n&nbsp;</p>', 1000, 128, 6, 0, '2012-04-05 16:22:56'),
(79, '渡轮问题', 'maxxl', '<p><font color="#0000ff">渡轮问题</font></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体"><b>问题描述</b> </span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt">Palmia 河在某国从东向西流过，并把该国分为南北两个部分。河的两岸各有 n 个城市，且北岸的每一个城市都与南岸的某个城市是友好城市，而且对应的关系是一一对应的。现在要求在两个友好城市之间建立一条航线，但由于天气的关系，所有航线都不能相交，因此，就不可能给所有的友好城市建立航线。 </span></p>\r\n<p style="text-justify: inter-ideograph; text-indent: 24pt; line-height: 16.5pt; text-align: justify"><span style="font-size: 10.5pt">问题：当城市个数和友好关系建立之后，选择一种修建航线的方案，能建最多的航线而不相交。(若有多种方案,修建航线最多且城市数量相同,选择从前到后城市标号字典序小的那种方案.) </span></p>\r\n<p class="MsoNormal"><span style="font-size: 10.5pt"><o:p></o:p></span><span lang="EN-US"><o:p></o:p></span>【输入格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>输入由若干行组成，第一行有一个整数，n（1&le;n&le;</span>10<span lang="EN-US">000）；表示城市数。第2至n+1行依次是南岸城市的北岸友好城市编号。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>输出共两行，第一行是建立航线的数量。第二行是建立航线的北岸城市编号。</span></p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">maxxl.in</span></span></p>\r\n<p class="MsoNormal">14<br />\r\n13<br />\r\n7<br />\r\n9<br />\r\n16<br />\r\n38<br />\r\n24<br />\r\n37<br />\r\n18<br />\r\n44<br />\r\n19<br />\r\n21<br />\r\n22<br />\r\n63<br />\r\n15</p>\r\n<p class="MsoNormal">【输出样例】</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">maxxl.out</span></span></p>\r\n<p class="MsoNormal">8<br />\r\n7 9 16 18 19 21 22 63</p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(80, '石子归并', 'shizi', '<p><span style="font-family: 宋体;"><b>问题描述</b> </span></p>\r\n<p class="MsoNormal">设有<span>N堆沙子排成一排，其编号为1,2,3,&hellip;,N(N&lt;=100)。每堆沙子有一定的数量。现要将N堆沙子并成为一堆。归并的过程只能每次将相邻的两堆沙子堆成一堆（每次合并花费的代价为当前两堆沙子的总数量），这样经过N-1次归并后成为一堆，归并的总代价为每次合并花费的代价和。找出一种合理的归并方法，使总的代价最小。</span></p>\r\n<div align="left">例如：有<span>3堆沙子，数量分别为13,7,8，有两种合并方案，</span></div>\r\n<div align="left">第一种<span style="font-size: 12pt; color: rgb(102, 102, 51);">方案：</span>先合并<span>1,2号堆，合并后的新堆沙子数量为20，本次合并代价为20，再拿新堆与第3堆沙子合并，合并后的沙子数量为28，本次合并代价为28，将3堆沙子合并到一起的总代价为第一次合并代价20加上第二次合并代价28，即48；</span></div>\r\n<div align="left"><span style="font-size: 12pt; color: rgb(102, 102, 51);">第二种方案：先合并2,3号堆，</span>合并后的新堆沙子数量为<span>15，本次合并代价为15，再拿新堆与第1堆沙子合并，合并后的沙子数量为28，本次合并代价为28，将3堆沙子合并到一起的总代价为第一次合并代价15加上第二次合并代价28，即43；</span></div>\r\n<p class="MsoNormal"><span style="font-size: 10.5pt;">采用第二种方案可取得最小总代价，值为43。</span></p>\r\n<p class="MsoNormal"><span style="font-size: 10.5pt;"><span style="font-size: 12pt; color: rgb(102, 102, 51);"><font size="2" color="#000000">【输入格式】</font></span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;&nbsp;&nbsp; </span>输入由若干行组成，第一行有一个整数，n（1&le;n&le;</span>10<span lang="EN-US">0）；表示沙子堆数。第2至m+1行是每堆沙子的数量。</span><span lang="EN-US"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal">【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;&nbsp;&nbsp; </span>一个整数，归并的最小代价。</span></p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">shizi.in</span></span></p>\r\n<p class="MsoNormal">7<br />\r\n13<br />\r\n7<br />\r\n8<br />\r\n16<br />\r\n21<br />\r\n4<br />\r\n18</p>\r\n<p class="MsoNormal">【输出样例】</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">shizi.out</span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US">239</span></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(81, '乘法问题', 'chf', '<p><span style="font-family: 宋体;"><b>问题描述</b><br />\r\n</span>设有一个长度为 N 的数字字符串，分成 K+1 个部分，使得 K+1 个部 分的乘积最大。 例如 N=6 ，且数字字符串为 &lsquo; 310143 '' ， K=3. 此时可能有的情况有以 下各种：</p>\r\n<p>3 ＊ 1 ＊ 0 ＊ 143=0<br />\r\n3 ＊ 1 ＊ 01 ＊ 43=129<br />\r\n3 ＊ 1 ＊ 014 ＊ 3=126<br />\r\n3 ＊ 10 ＊ 1 ＊ 43=1290<br />\r\n3 ＊ 10 ＊ 14 ＊ 3=1260<br />\r\n3 ＊ 101 ＊ 4 ＊ 3=3636<br />\r\n31 ＊ 0 ＊ 1 ＊ 43=0<br />\r\n31 ＊ 01 ＊ 4 ＊ 3=372<br />\r\n310 ＊ 1 ＊ 4 ＊ 3=3720</p>\r\n<p>问题：当 N ，数字串， K 给出之后，找出一种分法使其乘积最大。</p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;&nbsp;&nbsp; </span>输入由两行组成，第一行有两个整数，n（1&le;n&le;30）、k<span lang="EN-US">（1&le;n&le;30）</span>；n表示数字串长度、k表示乘号个数。</span><span lang="EN-US">第二行是数字串。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>【输出格式】</p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;&nbsp;&nbsp; </span><span lang="EN-US">输出</span>为一个整数，为乘积最大值。</span></p>\r\n<p class="MsoNormal">【输入样例】</p>\r\n<p class="MsoNormal">输入文件名：<span class="SpellE"><span lang="EN-US">chf.in</span></span></p>\r\n<p class="MsoNormal">9 4<br />\r\n321044105</p>\r\n<p class="MsoNormal">输出文件名：<span class="SpellE"><span lang="EN-US">chf.out</span></span></p>\r\n<p class="MsoNormal"><span lang="EN-US">5166000<o:p></o:p></span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(82, '求子序列', 'subq', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 给一串整数 <em>a </em>[1&hellip; <em>n </em>] ，求出它和最大的子序列，即找出 1&lt;= <em>i </em>&lt;= <em>j </em>&lt;= <em>n </em>，使 <em>a </em>[ <em>i </em>]+ <em>a </em>[ <em>i </em>+1]+&hellip;+ <em>a </em>[ <em>j-1 </em>]+ <em>a </em>[ <em>j </em>] 最大。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件的第一行为一个正整数n</p>\r\n<p>第二行有n个整数，-32768 &le; a[i] &le; <em>32767</em></p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件第一行有一个整数j，表示子序列的起始位置编号。</p>\r\n<p>第二行有一个整数j，表示子序列的终止位置编号。</p>\r\n<p>第三行有一个数，是子序列的和。</p>\r\n<p>注：若有多个解，只输出i值最小的解，若多个解i值相同，则输出j值最小的解。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nsubq.in<br />\r\n5<br />\r\n-2 2 5 -1 6</p>\r\n<p>输出：<br />\r\nsubq.out<br />\r\n2<br />\r\n5<br />\r\n12</p>\r\n<p><strong>数据范围： </strong></p>\r\n<p>对于30%的数据,n&lt;=100</p>\r\n<p>对于60%的数据,n&lt;=400</p>\r\n<p>对于100%的数据,n&lt;=1,000,000</p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(83, '圆弦', 'circlex', '<p><b>【问题描述】</b></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 圆周上有N个点。连接任意多条（可能是0条）不相交的弦（共用端点也算相交）共有多少种方案？</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 例如：n ＝4时，f(n)=9。方案如图</p>\r\n<p><span style="font-family: &quot;Times New Roman&quot;; font-size: 10.5pt" lang="EN-US"><v:shapetype id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">&nbsp;<img alt=" " align="middle" src="/mw/images/0/07/Circlex-1.jpg" /><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype></span><br />\r\n【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件只有一行为一个正整数n</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件只有一个整数，方案数(由于结果可能很大，你只需要输出这个答案mod 12345的值。)。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\ncirclex.in<br />\r\n4</p>\r\n<p>输出：<br />\r\ncirclex.out<br />\r\n9</p>\r\n<p>数据规模:1&lt;=N&lt;=1000</p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(84, '画海岛地图', 'island', '<p><b>【问题描述】</b></p>\r\n<div align="left">用 N*N(1&lt;=N&lt;=8) 的格点阵代表海，其中 * 代表岛。给你一组编码信息，让你重构一张地图。这组信息是按垂直方向、水平方向岛的分布情况摘取的。下例中，每行右边的数字按顺序表示该行中&ldquo;岛组&rdquo;的大小，如第一行数字为&ldquo; 1&nbsp;2 &rdquo;，表示该行第一&ldquo;岛组&rdquo;由一个岛组成，第二&ldquo;岛组&rdquo;由两个岛组成，而第四列下面的&ldquo; 2&nbsp;3 &rdquo;则表示本列由两个&ldquo;岛组&rdquo;组成，第一个&ldquo;岛组&rdquo;由两个岛组成，第二个&ldquo;岛组&rdquo;由三个岛组成。</div>\r\n<p align="left">&nbsp;</p>\r\n<p align="left"><img alt="" width="352" height="238" src="/mw/images/5/54/Island.gif" /></p>\r\n<p align="left">现要求你编程解决下列问题：</p>\r\n<p align="left"><strong>任务 </strong></p>\r\n<p align="left">读取一个信息块，根据信息块重构地图（若有多个解，逐个构成地图）。</p>\r\n<p align="left"><strong>【输入<b>格式】</b></strong></p>\r\n<p align="left">第一行：N N表示格点阵大小（N&lt;=8）</p>\r\n<p align="left">第2&mdash;N+1 行岛组信息</p>\r\n<p align="left">第N+2&mdash;2N+1 列岛组信息</p>\r\n<p align="left"><strong>【输出<b>格式】</b></strong></p>\r\n<p align="left">第一行：岛组编号</p>\r\n<p align="left">第2&mdash;N+1行：*号表示的地图</p>\r\n<p align="left">若有多个解时，按上面格式依次输出（输出顺序按地图中最上，最左边的*号位置（i,j）由小到大排序，i是第一关键字，j是第二关键字）</p>\r\n<p align="left">若无解时,输出''no''.</p>\r\n<p align="left"><strong>【输入输出样例<b>】</b></strong></p>\r\n<p align="left">输入：</p>\r\n<p>island.in</p>\r\n<p align="left">8 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0 <br />\r\n1 1 1 1 0</p>\r\n<p align="left">输出：</p>\r\n<p align="left">island.out</p>\r\n<p align="left">1 <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n2 <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * * <br />\r\n&nbsp;* * * * <br />\r\n* * * *</p>', 1000, 128, 5, 0, '2012-04-05 16:22:56');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(85, '画展', 'exhibit', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;博览馆正在展出由世上最佳的 M 位画家所画的图画。</p>\r\n<p>wangjy 想到博览馆去看这几位大师的作品。</p>\r\n<p>可是，那里的博览馆有一个很奇怪的规定，就是在购买门票时必须说明两个数字， a 和 b ，代表他要看展览中的第 a 幅至第 b 幅画 ( 包含 a 和 b) 之间的所有图画，而门票的价钱就是一张图画一元。</p>\r\n<p>为了看到更多名师的画， wangjy 希望入场后可以看到所有名师的图画 ( 至少各一张 ) 。</p>\r\n<p>可是他又想节省金钱。。。</p>\r\n<p>作为 wangjy 的朋友，他请你写一个程序决定他购买门票时的 a 值和 b 值。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行是 N 和 M ，分别代表博览馆内的图画总数及这些图画是由多少位名师的画所绘画的。</p>\r\n<p>其后的一行包含 N 个数字，它们都介于 1 和 M 之间，代表该位名师的编号。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;a 和 b(a&lt;=b) 由一个空格符所隔开。</p>\r\n<p>保证有解，如果多解，输出 a 最小的。</p>\r\n<p>【输入输出样例1】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nexhibit.in<br />\r\n12 5 <br />\r\n2 5 3 1 3 2 4 1 1 5 4 3</p>\r\n<p>输出：<br />\r\nexhibit.out<br />\r\n2 7</p>\r\n<p>【约束条件】<br />\r\n<br />\r\n30%的数据N&lt;=200 , M&lt;=20<br />\r\n60%的数据N&lt;=10000 , M&lt;=1000<br />\r\n100%的数据N&lt;=1000000 , M&lt;=2000</p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(86, '进制转换', 'fjz', '<p><span style="font-size: small">描述 Description</span></p>\r\n<!--[if gte mso 10]>\r\n<style>\r\n/* Style Definitions */\r\ntable.MsoNormalTable\r\n{mso-style-name:普通表格;\r\nmso-tstyle-rowband-size:0;\r\nmso-tstyle-colband-size:0;\r\nmso-style-noshow:yes;\r\nmso-style-parent:"";\r\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\r\nmso-para-margin:0cm;\r\nmso-para-margin-bottom:.0001pt;\r\nmso-pagination:widow-orphan;\r\nfont-size:10.0pt;\r\nfont-family:"Times New Roman";\r\nmso-fareast-font-family:"Times New Roman";\r\nmso-ansi-language:#0400;\r\nmso-fareast-language:#0400;\r\nmso-bidi-language:#0400;}\r\n</style>\r\n<![endif]-->\r\n<p><span style="font-size: small">我们可以用这样的方式来表示一个十进制数：将每个阿拉伯数字乘以一个以该数字所处位置的（值减1）为指数，以10为底数的幂之和的形式。例如，123可表示为1*10^2+2*10^1+3*10^0这样的形式。 <br />\r\n与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值-1）为指数，以2为底数的幂之和的形式。一般说来，任何一个正整 数R或一个负整数-R都可以被选来作为一个数制系统的基数。如果是以R或-R为基数，则需要用到的数码为0，1,....R-1。例如，当R=7时，所需 用到的数码是0，1，2, 3，4，5和6，这与其是R或-R无关。如果作为基数的数绝对值超过10，则为了表示这些数码，通常使用英文字母来表示那些大于9的数码。例如对16进制 数来说，用A表示10，用B表示11，用C表示12，用D表示13，用E表示14，用F表示15。在负进制数中是用-R作为基数，例如-15（＋进制）相 当于110001（-2进制）， <br />\r\n并且它可以被表示为2的幂级数的和数： <br />\r\n110001=1*(-2)^5+1*(-2)^4+0*(-2)^3+0*(-2)^2+0*(-2)^1+1*(-2)^0 <br />\r\n问题求解: <br />\r\n设计一个程序，读入一个十进制数的基数和一个负进制数的基数，并将此十进制数转换为此负进制下的数：-R&isin;{-2，-3，-4,....-20}</span></p>\r\n<p><span style="font-size: small">输入格式 Input Format</span></p>\r\n<p><span style="font-size: small">输入文件有若干行，每行有两个输入数据。 <br />\r\n第一个是十进制数N（-32768&lt;=N&lt;=32767）; 第二个是负进制数的基数-R。</span></p>\r\n<p><span style="font-size: small">输出格式 Output Format</span></p>\r\n<p><span style="font-size: small">输出此负进制数及其基数，若此基数超过10，则参照16进制的方式处理。【具体请参考样例】</span></p>\r\n<p><span style="font-size: small">样例输入 Sample Input</span></p>\r\n<p><span style="font-size: small">30000 -2<br />\r\n-20000 -7<br />\r\n28800 -16<br />\r\n-25000 -16</span></p>\r\n<p><span style="font-size: small">样例输出 Sample Output</span></p>\r\n<p><span style="font-size: small">30000=11011010101110000(base -2)<br />\r\n-20000=263526(base -7)<br />\r\n28800=19180(base -16)<br />\r\n-25000=7FB8(base -16)</span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(87, '乘积最大', 'cjzd', '<p>\r\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8">\r\n<meta name="ProgId" content="Word.Document">\r\n<meta name="Generator" content="Microsoft Word 11">\r\n<meta name="Originator" content="Microsoft Word 11">\r\n<link rel="File-List" href="file:///C:\\DOCUME~1\\CMYKRG~1\\LOCALS~1\\Temp\\msohtml1\\01\\clip_filelist.xml" /><o:smarttagtype namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="PersonName"></o:smarttagtype></meta>\r\n</meta>\r\n</meta>\r\n</meta>\r\n</p>\r\n<!--[if gte mso 9]><xml>\r\n<w:WordDocument>\r\n<w:View>Normal</w:View>\r\n<w:Zoom>0</w:Zoom>\r\n<w:PunctuationKerning />\r\n<w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>\r\n<w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>\r\n<w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>\r\n<w:ValidateAgainstSchemas />\r\n<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\r\n<w:IgnoreMixedContent>false</w:IgnoreMixedContent>\r\n<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\r\n<w:Compatibility>\r\n<w:SpaceForUL />\r\n<w:BalanceSingleByteDoubleByteWidth />\r\n<w:DoNotLeaveBackslashAlone />\r\n<w:ULTrailSpace />\r\n<w:DoNotExpandShiftReturn />\r\n<w:AdjustLineHeightInTable />\r\n<w:BreakWrappedTables />\r\n<w:SnapToGridInCell />\r\n<w:WrapTextWithPunct />\r\n<w:UseAsianBreakRules />\r\n<w:DontGrowAutofit />\r\n<w:UseFELayout />\r\n</w:Compatibility>\r\n<w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\r\n</w:WordDocument>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n<w:LatentStyles DefLockedState="false" LatentStyleCount="156">\r\n</w:LatentStyles>\r\n</xml><![endif]--><!--[if !mso]><object\r\nclassid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>\r\n<style>\r\nst1\\:*{behavior:url(#ieooui) }\r\n</style>\r\n<![endif]-->\r\n<p><style type="text/css">\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n	{font-family:宋体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimSun;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:黑体;\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-alt:SimHei;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n@font-face\r\n	{font-family:"\\@宋体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:3 135135232 16 0 262145 0;}\r\n@font-face\r\n	{font-family:"\\@黑体";\r\n	panose-1:2 1 6 0 3 1 1 1 1 1;\r\n	mso-font-charset:134;\r\n	mso-generic-font-family:auto;\r\n	mso-font-pitch:variable;\r\n	mso-font-signature:1 135135232 16 0 262144 0;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n	{mso-style-parent:"";\r\n	margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:none;\r\n	font-size:10.5pt;\r\n	mso-bidi-font-size:10.0pt;\r\n	font-family:"Times New Roman";\r\n	mso-fareast-font-family:宋体;\r\n	mso-font-kerning:1.0pt;}\r\np.MsoPlainText, li.MsoPlainText, div.MsoPlainText\r\n	{margin:0cm;\r\n	margin-bottom:.0001pt;\r\n	text-align:justify;\r\n	text-justify:inter-ideograph;\r\n	mso-pagination:none;\r\n	font-size:10.5pt;\r\n	mso-bidi-font-size:10.0pt;\r\n	font-family:宋体;\r\n	mso-hansi-font-family:"Courier New";\r\n	mso-bidi-font-family:"Times New Roman";\r\n	mso-font-kerning:1.0pt;}\r\n /* Page Definitions */\r\n @page\r\n	{mso-page-border-surround-header:no;\r\n	mso-page-border-surround-footer:no;}\r\n@page Section1\r\n	{size:612.0pt 792.0pt;\r\n	margin:72.0pt 90.0pt 72.0pt 90.0pt;\r\n	mso-header-margin:36.0pt;\r\n	mso-footer-margin:36.0pt;\r\n	mso-paper-source:0;}\r\ndiv.Section1\r\n	{page:Section1;}\r\n /* List Definitions */\r\n @list l0\r\n	{mso-list-id:321588218;\r\n	mso-list-type:simple;\r\n	mso-list-template-ids:1150175644;}\r\n@list l0:level1\r\n	{mso-level-text:%1）;\r\n	mso-level-tab-stop:84.0pt;\r\n	mso-level-number-position:left;\r\n	margin-left:84.0pt;\r\n	text-indent:-21.0pt;}\r\nol\r\n	{margin-bottom:0cm;}\r\nul\r\n	{margin-bottom:0cm;}\r\n-->\r\n</style></p>\r\n<!--[if gte mso 10]>\r\n<style>\r\n/* Style Definitions */\r\ntable.MsoNormalTable\r\n{mso-style-name:普通表格;\r\nmso-tstyle-rowband-size:0;\r\nmso-tstyle-colband-size:0;\r\nmso-style-noshow:yes;\r\nmso-style-parent:"";\r\nmso-padding-alt:0cm 5.4pt 0cm 5.4pt;\r\nmso-para-margin:0cm;\r\nmso-para-margin-bottom:.0001pt;\r\nmso-pagination:widow-orphan;\r\nfont-size:10.0pt;\r\nfont-family:"Times New Roman";\r\nmso-ansi-language:#0400;\r\nmso-fareast-language:#0400;\r\nmso-bidi-language:#0400;}\r\n</style>\r\n<![endif]-->\r\n<p class="MsoPlainText"><span style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;</span><b style=""><span style="">&nbsp;</span></b></span><b style=""><span style="">问题描述</span></b><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span><o:p></o:p></span></b></p>\r\n<p class="MsoPlainText"><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></b></p>\r\n<p class="MsoPlainText" style="text-indent: 21.75pt;"><span style="">今年是国际数学联盟确定的&ldquo;</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">2000</span><span style="">&mdash;&mdash;世界数学年&rdquo;，又恰逢我国著名数学家<st1:personname productid="华罗庚" w:st="on">华罗庚</st1:personname>先生诞辰</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">90</span><span style="">周年。在<st1:personname productid="华罗庚" w:st="on">华罗庚</st1:personname>先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">XZ</span><span style="">也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText" style="text-indent: 21.75pt;"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoPlainText" style="text-indent: 21.75pt;"><span style="">设有一个长度为</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">N</span><span style="">的数字串，要求选手使用</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K</span><span style="">个乘号将它分成</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K+1</span><span style="">个部分，找出一种分法，使得这</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K+1</span><span style="">个部分的乘积能够为最大。</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoPlainText" style="text-indent: 21pt;"><span style="">同时，为了帮助选手能够正确理解题意，主持人还举了如下的一个例子：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText" style="text-indent: 21pt;"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoPlainText" style="text-indent: 21pt;"><span style="">有一个数字串：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">312</span><span style="">，</span><span style="font-family: &quot;Times New Roman&quot;;"> </span><span style="">当</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">N=3</span><span style="">，</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K=1</span><span style="">时会有以下两种分法：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoPlainText" style="margin-left: 84pt; text-indent: -21pt;"><!--[if !supportLists]--><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">1）<span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp; </span></span></span><!--[endif]--><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">3*12=36<o:p></o:p></span></p>\r\n<p class="MsoPlainText" style="margin-left: 84pt; text-indent: -21pt;"><!--[if !supportLists]--><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">2）<span style="font-family: &quot;Times New Roman&quot;; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp; </span></span></span></b><!--[endif]--><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">31*2=62<b style=""><o:p></o:p></b></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span><span style="">这时，符合题目要求的结果是：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">31*2=62<o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span><span style="">现在，请你帮助你的好朋友</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">XZ</span><span style="">设计一个程序，求得正确的答案。</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></b></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;</span><b style=""><span style="">&nbsp;</span></b></span><b style=""><span style="">输</span></b><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span></b><b style=""><span style="">入</span></b><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span><o:p></o:p></span></b></p>\r\n<p class="MsoPlainText"><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></b></p>\r\n<p class="MsoPlainText"><b style=""><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span></b><span style="">程序的输入共有两行：</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span><span style="">第一行共有</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">2</span><span style="">个自然数</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">N</span><span style="">，</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K(6</span><span style="">&le;</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">N</span><span style="">&le;</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">40</span><span style="">，</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">1</span><span style="">&le;</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">K</span><span style="">&le;</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">6)<o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span><span style="">第二行是一个长度为</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">N</span><span style="">的数字串。</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;</span><b style=""><span style="">&nbsp;</span></b></span><b style=""><span style="font-family: 宋体;">输</span><span lang="EN-US"><span style="">&nbsp;&nbsp; </span></span></b><b style=""><span style="font-family: 宋体;">出</span><span lang="EN-US"><span style="">&nbsp;&nbsp; </span><o:p></o:p></span></b></p>\r\n<p class="MsoNormal"><b style=""><span lang="EN-US"><o:p>&nbsp;</o:p></span></b></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><span style="">&nbsp;&nbsp; </span></span><span style="">结果显示在屏幕上，相对于输入，应输出所求得的最大乘积</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">(</span><span style="">一个自然数</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">)</span><span style="">。</span><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p></o:p></span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><span style="">&nbsp;</span><b style=""><span style="">&nbsp;</span></b></span><b style=""><span style="font-family: 宋体;">样</span><span lang="EN-US"><span style="">&nbsp;&nbsp; </span></span></b><b style=""><span style="font-family: 宋体;">例</span><span lang="EN-US"><span style="">&nbsp;&nbsp; </span><o:p></o:p></span></b></p>\r\n<p class="MsoNormal"><b style=""><span lang="EN-US" style=""><o:p>&nbsp;</o:p></span></b></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体;">输入</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal"><span lang="EN-US">4 2</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">1231</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体;">输出</span></p>\r\n<p class="MsoPlainText"><span lang="EN-US" style="font-family: &quot;Times New Roman&quot;;">62<o:p></o:p></span></p>', 1000, 128, 10, 0, '2012-04-05 16:22:56'),
(88, '到天宫做客', 'heaven', '<p><font color="#0000ff">到天宫做客</font></p>\r\n<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;  有一天，我做了个梦，梦见我很荣幸的接到了猪八戒的邀请，到天宫陪他吃酒。我犹豫了。天上一日，人间一年啊！当然，我是个闲人，一年之中也没有多少时日是必须在人间的，因此，我希望选一个最长的空闲时间段，使我在天上待的时间尽量长。记住，今年是4000年。天上一天也是24小时，每小时60分，每分60秒。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件的第一行是一个非负整数  N，表示4000年中必须呆在人间的天数，以下共N行，每行两个用空格隔开的正整数，即日期（月,日），输入文件保证无错误，日期无重复。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件仅有一行包含一个非负整数，即在天上的时间(四舍五入精确到秒)。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nheaven.in<br />\r\n2<br />\r\n3 8<br />\r\n12 2</p>\r\n<p>输出：<br />\r\nheaven.out<br />\r\n63266</p>', 1000, 128, 10, 0, '2012-04-05 16:22:57'),
(89, '驾车旅行', 'tour', '<p><font color="#0000ff"><br />\r\n</font><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;如今许多普通百姓家有了私家车，一些人喜爱自己驾车从一个城市到另一个城市旅游。自己驾车旅游时总会碰到加油和吃饭的问题，在出发之前，驾车人总要想方设法得到从一个城市到另一个城市路线上的加油站的列表，列表中包括了所有加油站的位置及其每升的油价(如  3.25元／L)。驾车者一般都有以下的习惯：<br />\r\n(1)除非汽车无法用油箱里的汽油达到下一个加油站或目的地，在油箱里还有不少于最大容量一半的汽油时，驾驶员从不在加油站停下来；<br />\r\n(2)在每一个停下的加油站总是将油箱加满，<br />\r\n(3)在加油站加油的同时，买快餐等吃的东西花去20元。<br />\r\n(4)从起始城市出发时油箱总是满的。<br />\r\n(5)最终结果精确到0.1元(四舍五入)。<br />\r\n(6)驾车者都知道自己的汽车每升汽油能够行驶的里程数。<br />\r\n现在要你帮忙做的就是编写一个程序，计算出驾车从一个城市到另一个城市的旅游在加油和吃饭方面最少的费用。</p>\r\n<p>【输入格式】  <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行是一个实数，是从出发地到目的地的距离(单位：km)。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第二行是三个实数和一个整数，其中第一个实数是汽车油箱的最大容量(单位：L)；第二个实数是汽车每升油能行驶的公里数，第三个实数是汽车在出发地加满油箱时的费用(单位元)；一个整数是1到50间的数，表示从出发地到目的地线路上加油站的数目。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;接下来n行都是两个实数，第一个数表示从出发地到某一个加油站的距离(单位：km)，第二个实数表示该加油站汽油的价格(单位：元)。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;数据项中的每个数据都是正确的，不需判错。一条线路上的加油站根据其到出发地的距离递增排列并且都不会大于从出发地到目的地的距离</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;就一个数据，是精确到0．1元的最小的加油和吃饭费用。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n600<br />\r\n40 8.5 128 3<br />\r\n200  3.52<br />\r\n350 3.45<br />\r\n500 3.65</p>\r\n<p>输出：<br />\r\n379.6</p>', 1000, 128, 10, 0, '2012-04-05 16:22:57'),
(90, '翻译玛雅著作', 'writing', '<p><strong>[问题描述] </strong><br />\r\n&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;初期研究证实解读玛雅文是一项比预期复杂的任务，即使在过了两百年以后，也只有很少的内容能被人们真正理解，其实也仅是在最近的三十年人们才真正地对它展开研究。 <br />\r\n玛雅文是基于石刻的一些被认为是象形符号的表征声音的小图画，通常把一些象形符号放在不同的位置就组合成了一个玛雅文中的词。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;解读玛雅文时遇到的问题之一是在读的顺序上，在摆放几个符号以拼写成一个词的时候，玛雅文创作者有时按他们的主观感觉来决定符号的摆放位置，而不是按照任何特殊规则。这导致的问题是，尽管知道了许多符号的发音，但是考古学家们有时仍旧不能确定一个词的读法。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;考古学家正在寻找一个特殊的词w，他们知道组成它的各个符号，但是他们不知道所有这些符号的可能排列方法。后来他们听说你来了，就想求得你的帮助。他们将给你提供g个组成词w的符号，同时还有一个符号串s，里面包含了他们在研究石刻时发现的所有符号。请帮助他们计算一下词w有多少种可能的拼写方案。</p>\r\n<p>任务： <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;写一个程序，给定组成w的符号和石刻中的符号串s，计算s中w的可能拼写方案出现的次数；确切点说，s中每一个连续的长度为g的符号串都可能是w中那些符号的一个排列。</p>\r\n<p>约束条件： <br />\r\n1 &le; g &le; 3 000 w中的符号个数； <br />\r\ng &le; |s| &le; 3 000 000 |s|是s中符号的个数。</p>\r\n<p><strong>[输 入] </strong>： <br />\r\n<br />\r\n第一行包含两个整数：g和|s|，空格隔开； <br />\r\n第二行包含g个连续的字符，分别表示组成w的g个符号，字符有效范围为''a''-''z''和''A''-''Z''，大小写字母有区别； <br />\r\n第三行包含|s|个连续的字符，表示石刻中的符号，字符有效范围为''a''-''z''和''A''-''Z''，大小写字母有区别。</p>\r\n<p><strong>[输 出] </strong>： <br />\r\n只有一行，即s中w的可能拼写方案出现的次数。</p>\r\n<p><strong>[输入输出样例] </strong><br />\r\nwriting.in</p>\r\n<p>4 11 <br />\r\ncAda <br />\r\nAbrAcadAbRa <br />\r\n<br />\r\nwriting.out： <br />\r\n<br />\r\n2</p>\r\n<p>等级： <br />\r\n其中有50分的测试数据g&le; 1000。 <br />\r\n对使用Pascal语言的选手的重要提醒： <br />\r\nFreePascal中默认字符串类型变量长度不能超过255个字符.</p>', 3000, 128, 16, 0, '2012-04-05 16:22:57');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(91, '方格取数', 'fgqs', '<p>&nbsp;</p>\r\n<p>\r\n<link href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_filelist.xml" rel="File-List" />\r\n<link href="file:///C:%5CDOCUME%7E1%5CCMYKRG%7E1%5CLOCALS%7E1%5CTemp%5Cmsohtml1%5C01%5Cclip_editdata.mso" rel="Edit-Time-Data" /></p>\r\n<div>&nbsp;<b>&nbsp;</b><b>问题描述</b><b>&nbsp;&nbsp; </b></div>\r\n<div style="text-indent: 21pt">设有N*N的方格图(N&lt;=10,我们将其中的某些方格中填入正整数,而其他的方格中则放入数字0。如下图所示(见样例)：</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;\r\n<link href="file:///C:\\DOCUME~1\\CMYKRG~1\\LOCALS~1\\Temp\\msohtml1\\01\\clip_filelist.xml" rel="File-List" />\r\n<table style="border-right: medium none; border-top: medium none; margin-left: 41.45pt; border-left: medium none; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>&nbsp;0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>&nbsp;0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>13</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>6</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>7</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>14</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>21</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>4</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>15</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div><b>14</b></div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n        <tr style="height: 18pt">\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: 1pt solid; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n            <td style="border-right: 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0cm; border-left: medium none; width: 25.75pt; padding-top: 0cm; border-bottom: 1pt solid; height: 18pt" valign="top" width="34">\r\n            <div>0</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n<div style="text-indent: 21pt">某人从图的左上角的A 点出发，可以向下行走，也可以向右走，直到到达右下角的B点。在走过的路上，他可以取走方格中的数(取走后的方格中将变为数字0)。</div>\r\n<div style="text-indent: 21pt">此人从A点到B 点共走两次，试找出2条这样的路径，使得取得的数之和为最大。</div>\r\n<div>&nbsp;<b>&nbsp;</b><b>输</b><b>&nbsp;&nbsp; </b><b>入</b><b>&nbsp;</b>&nbsp;</div>\r\n<div style="text-indent: 21pt">输入的第一行为一个整数N(表示N*N的方格图)，接下来的每行有三个整数，前两个表示位置，第三个数为该位置上所放的数。一行单独的0表示输入结束。</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<b>&nbsp;</b><b>输</b><b>&nbsp;&nbsp; </b><b>出</b><b>&nbsp;</b>&nbsp;</div>\r\n<div>&nbsp;&nbsp;&nbsp; 只需输出一个整数，表示2条路径上取得的最大的和。</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<b>&nbsp;</b><b>样</b><b>&nbsp;&nbsp; </b><b>例</b><b>&nbsp;</b>&nbsp;：</div>\r\n<div>&nbsp;&nbsp; <b>输</b><b>入</b></div>\r\n<div style="margin-left: 31.5pt">8</div>\r\n<div style="margin-left: 31.5pt">2 3 13</div>\r\n<div style="margin-left: 31.5pt">2 6 6</div>\r\n<div style="margin-left: 31.5pt">3 5 7</div>\r\n<div style="margin-left: 31.5pt">4 4 14</div>\r\n<div style="margin-left: 31.5pt">5 2 21</div>\r\n<div style="margin-left: 31.5pt">5 6 4</div>\r\n<div style="margin-left: 31.5pt">6 3 15</div>\r\n<div style="margin-left: 31.5pt">7 2 14</div>\r\n<div style="margin-left: 31.5pt">0 0 0</div>\r\n<div><b>&nbsp;&nbsp; </b><b>输</b><b>&nbsp;</b><b>出</b></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 67</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>', 1000, 128, 6, 0, '2012-04-05 16:22:57'),
(92, '一元三次方程求解', '3cfc', '<p class="MsoNormal"><span style="font-family: 宋体;"><b>问题描述</b><br />\r\n有形如：</span><span lang="EN-US">ax<sup>3</sup>+bx<sup>2</sup>+cx+d=0&nbsp; </span><span style="font-family: 宋体;">这样的一个一元三次方程。给出该方程中各项的系数</span><span lang="EN-US">(a</span><span style="font-family: 宋体;">，</span><span lang="EN-US">b</span><span style="font-family: 宋体;">，</span><span lang="EN-US">c</span><span style="font-family: 宋体;">，</span><span lang="EN-US">d&nbsp; </span><span style="font-family: 宋体;">均为实数</span><span lang="EN-US">)</span><span style="font-family: 宋体;">，并约定该方程存在三个不同实根</span><span lang="EN-US">(</span><span style="font-family: 宋体;">根的范围在</span><span lang="EN-US">-100</span><span style="font-family: 宋体;">至</span><span lang="EN-US">100</span><span style="font-family: 宋体;">之间</span><span lang="EN-US">)</span><span style="font-family: 宋体;">，且根与根之差的绝对值</span><span lang="EN-US">&gt;=1</span><span style="font-family: 宋体;">。要求由小到大依次在同一行输出这三个实根</span><span lang="EN-US">(</span><span style="font-family: 宋体;">根与根之间留有空格</span><span lang="EN-US">)</span><span style="font-family: 宋体;">，并精确到小数点后</span><span lang="EN-US">2</span><span style="font-family: 宋体;">位。<br />\r\n提示：记方程</span><span lang="EN-US">f(x)=0</span><span style="font-family: 宋体;">，若存在</span><span lang="EN-US">2</span><span style="font-family: 宋体;">个数</span><span lang="EN-US">x1</span><span style="font-family: 宋体;">和</span><span lang="EN-US">x2</span><span style="font-family: 宋体;">，且</span><span lang="EN-US">x1&lt;x2</span><span style="font-family: 宋体;">，</span><span lang="EN-US">f(x1)*f(x2)&lt;0</span><span style="font-family: 宋体;">，则在</span><span lang="EN-US">(x1</span><span style="font-family: 宋体;">，</span><span lang="EN-US">x2)</span><span style="font-family: 宋体;">之间一定有一个 根。</span></p>\r\n<p><span style="font-family: 宋体;"><b>样例</b><br />\r\n输入：</span><span lang="EN-US">1&nbsp;&nbsp; -5&nbsp;&nbsp; -4&nbsp;&nbsp; 20</span><span style="font-family: 宋体;"><br />\r\n输出：</span><span lang="EN-US">-2.00&nbsp;&nbsp;        2.00&nbsp;&nbsp; 5.00</span></p>', 1000, 128, 5, 0, '2012-04-05 16:22:57'),
(93, '数的划分', 'sdhf', '<p><b>问题描述</b><br />\r\n将整数n分成k份，且每份不能为空，任意两种方案不能相同(不考虑顺序)。<br />\r\n例如：n=7，k=3，下面三种分法被认为是相同的。<br />\r\n1，1，5;        1，5，1; 5，1，1;<br />\r\n问有多少种不同的分法。<br />\r\n输入：n，k        (6&lt;n&lt;=200，2&lt;=k&lt;=6)<br />\r\n输出：一个整数，即不同的分法。</p>\r\n<p><b>样例</b></p>\r\n<p>输入： 7 3</p>\r\n<p>&nbsp;</p>\r\n<p>输出：4      {四种分法为：1，1，5;1，2，4;1，3，3;2，2，3;}</p>', 1000, 128, 5, 0, '2012-04-05 16:22:57'),
(94, '统计单词个数', 'tjdcgs', '<p><b>问题描述</b><br />\r\n给出一个长度不超过200的由小写英文字母组成的字母串(约定;该字串以每行20个字母的方式输入，且保证每行一定 为20个)。要求将此字母串分成k份(1&lt;k&lt;=40)，且每份中包含的单词个数加起来总数最大(每份中包含的单词可以部分重叠。当选用一个 单词之后，其第一个字母不能再用。例如字符串this中可包含this和is，选用this之后就不能包含th)。<br />\r\n单词在给出的一个不超过6个单词的字典中。<br />\r\n要求输出最大的个数。<br />\r\n<b>输入格式</b><br />\r\n去部输入数据放在文本文件input3.dat中，其格式如下：<br />\r\n第一行为一个正整数(0&lt;n&lt;=5)表示有n组测试数据<br />\r\n每组的第一行有二个正整数(p，k)<br />\r\np表示字串的行数;<br />\r\nk表示分为k个部分。<br />\r\n接下来的p行，每行均有20个字符。<br />\r\n再接下来有一个正整数s，表示字典中单词个数。(1&lt;=s&lt;=6)<br />\r\n接下来的s行，每行均有一个单词。<br />\r\n<b>输出格式</b><br />\r\n结果输出至屏幕，每行一个整数，分别对应每组测试数据的相应结果。</p>\r\n<p><b>样例<br />\r\n</b></p>\r\n<p>输入：</p>\r\n<p>1</p>\r\n<p>1        3</p>\r\n<p>thisisabookyouareaoh</p>\r\n<p>4</p>\r\n<p>is</p>\r\n<p>a</p>\r\n<p>ok</p>\r\n<p>sab</p>\r\n<p>输出：        //说明</p>\r\n<p>7 // this/isabookyoua/reaoh</p>', 1000, 128, 8, 0, '2012-04-05 16:22:57'),
(95, 'Car的旅行路线', 'cardlxlx', '<p><b>问题描述</b><br />\r\n又到暑假了，住在城市A的Car想和朋友一起去城市B旅游。她知道每个城市都有四个飞机场，分别位于一个矩形的四个顶点上，同一个城市中两个机场之间有一 条笔直的高速铁路，第I个城市中高速铁路了的单位里程价格为Ti，任意两个不同城市的机场之间均有航线，所有航线单位里程的价格均为t。<br />\r\n图例\r\n<table cellspacing="0" cellpadding="0" bordercolor="#111111" border="0" width="100%" style="border-collapse: collapse;" id="AutoNumber1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="50%"><img height="205" border="0" width="398" alt="" src="http://192.168.1.252/os/sj/noip/tg2001.files/01fstt1.gif" /></td>\r\n            <td width="50%" valign="top"><br />\r\n            <br />\r\n            机场 <br />\r\n            高速铁路<br />\r\n            飞机航线<br />\r\n            <p>注意：图中并没有<br />\r\n            标出所有的铁路与航线。</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<p>那么Car应如何安排到城市B的路线才能尽可能的节省花费呢?她发现这并不是一个简单的问题，于是她来向你请教。<br />\r\n<b>任务</b><br />\r\n找出一条从城市A到B的旅游路线，出发和到达城市中的机场可以任意选取，要求总的花费最少。<br />\r\n输入文件：键盘输入文件名<br />\r\n输 出：到屏幕(输出最小费用，小数点后保留1位。)<br />\r\n<b>输入格式</b><br />\r\n第一行为一个正整数n(0&lt;=n&lt;=10)，表示有n组测试数据。<br />\r\n每组的第一行有四个正整数s，t，A，B。<br />\r\nS(0&lt;S&lt;=100)表示城市的个数，t表示飞机单位里程的价格，A，B分别为城市A，B的序号，(1&lt;=A，B&lt;=S)。<br />\r\n接下来有S行，其中第I行均有7个正整数xi1，yi1，xi2，yi2，xi3，yi3，Ti，这当中的(xi1，yi1)，(xi2，yi2)，(xi3，yi3)分别是第I个城市中任意三个机场的坐标，T            I为第I个城市高速铁路单位里程的价格。<br />\r\n<b>输出格式</b><br />\r\n共有n行，每行一个数据对应测试数据。</p>\r\n<p><b>样例</b></p>\r\n<p>输入</p>\r\n<p>1</p>\r\n<p>3 10 1 3</p>\r\n<p>1 1 1 3 3 1 30</p>\r\n<p>2 5 4 7 5 2 1</p>\r\n<p>8 6 8 8 11 6 3</p>\r\n<p>输出：</p>\r\n<p>47.5</p>', 1000, 128, 5, 0, '2012-04-05 16:22:58'),
(96, '矩阵取数游戏', 'game', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;帅帅经常跟同学玩一个矩阵取数游戏：对于一个给定的n*m的矩阵，矩阵中的每个元素a<sub>ij</sub>，均<br />\r\n为非负整数。游戏规则如下：<br />\r\n1．每次取数时须从每行各取走一个元素，共n个。m次后取完矩阵所有元素；<br />\r\n2．每次取走的各个元素只能是该元素所在行的行首或行尾；<br />\r\n3． 每次取数都有一个得分值，为每行取数的得分之和，每行取数的得分=被取走的元素值*2^i，其中i表示第i次取数(从1开始编号)；<br />\r\n4． 游戏结束总得分为m次取数得分之和。<br />\r\n帅帅想请你帮忙写一个程序，对于任意矩阵，可以求出取数后的最大得分。</p>\r\n<p>【输入格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp; 输入文件game.in包括n+1行：<br />\r\n第1行为两个用空格隔开的整数n和m。<br />\r\n第2-n+l行为n*m矩阵，其中每行有m个用单个空格隔开的非负整数。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件game.out仅包含1行，为一个整数，即输入矩阵取数后的最大得分。</p>\r\n<p>【输入输出样例1】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n2 3 <br />\r\n1 2 3<br />\r\n3 4 2 <br />\r\n<br />\r\n输出：<br />\r\n82</p>\r\n<p>【输入输出样例l解释】<br />\r\n第1次：第1行取行首元素，第2行取行尾元素，本次得分为1+2<sup>1</sup>+2*2<sup>1</sup>=6<br />\r\n第2次：两行均取行首元素，本次得分为2*2<sup>2</sup>+3*2<sup>2</sup>=20<br />\r\n第3次：得分为3*2^3+4*2^3=56。总得分为6+20+56=82</p>\r\n<p>【输入输出样例2】</p>\r\n<p>输入： <br />\r\n1 4 <br />\r\n4 5 0 5<br />\r\n<br />\r\n输出：<br />\r\n122</p>\r\n<p>【输入输出样例3】</p>\r\n<p>输入： <br />\r\n2 10 <br />\r\n96 56 54 46 86 12 23 88 80 43<br />\r\n16 95 18 29 30 53 88 83 64 67 <br />\r\n<br />\r\n输出：<br />\r\n316994</p>\r\n<p>【限制】<br />\r\n60％的数据满足：1&lt;=n，m&lt;=30，答案不超过10^16<br />\r\n100％的数据满足：l&lt;=n，m&lt;=80，0&lt;=a<sub>ij</sub>&lt;=1000</p>', 1000, 128, 10, 0, '2012-04-05 16:22:58'),
(97, '树网的核', 'core', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;设T=(V,E,W)是一个无圈且连通的无向图(也称为无根树)，每条边带有正整数的权，我们称T为树网(treenetwork)，其中v，E分别表示结点与边的集合，W表示各边长度的集合，并设T有n个结点。<br />\r\n路径：树网中任何两结点a，b都存在唯一的一条简单路径，用d(a，b)表示以a，b为端点的路径的长度，它是该路径上各边长度之和。我们称d(a，b)为a，b两结点问的距离。<br />\r\n一点v到一条路径p的距离为该点与p上的最近的结点的距离：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;d(v,P)=min{d(v，u)，u为路径P上的结点)。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;树网的直径：树网中最长的路径称为树网的直径。对于给定的树网T，直径不一定是唯一的，但可以证明：各直径的中点(不一定恰好是某个结点，可能在某条边的内部)是唯一的，我们称该点为树网的中心。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;偏心距ECC(F)：树网T中距路径F最远的结点到路径F的距离，即 ECC(F)=max{d(v，F)，V&isin;V}。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;任务：对于给定的树网T=（V，E，W）和非负整数s，求一个路径F，它是某直径上的一段路径(该路径两端均为树网中的结点)，其长度不超过s(可以等于s)，使偏心距ECC(F)最小。我们称这个路径为树网T=(V,E,W)的核(Core)。必要时，F可以退化为某个结点。一般来说，在上述定义下，核不一定只有一个，但最小偏心距是唯一的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;下面的图给出了树网的一个实例。图中，A-B与A-C是两条直径，长度均为20。点W是树网的中心，EF边的长度为5。如果指定s=11，则树网的核为路径DEFG(也可以取为路径DEF)，偏心距为8。如果指定s=O(或s=1、s=2)，则树网的核为结点F，偏心距为12。<br />\r\n&nbsp;</p>\r\n<p align="center"><img height="295" width="318" src="http://192.168.1.252/os/times/2007/07noip/07noip.jpg" alt="" /></p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输入文件core.in包含n行：<br />\r\n第1行，两个正整数n和S，中间用一个空格隔开。其中n为树网结点的个数，s为树网的核的长度的上界。设结点编号依次为1，2，&hellip;，n。<br />\r\n从第2行到第n行，每行给出3个用空格隔开的正整数，依次表示每一条边的两个端点编号和长度。例如，&ldquo;2 4 7&rdquo;表示连接结点2与4的边的长度为7。</p>\r\n<p>所给的数据都是正确的，不必检验。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出文件 core.out只有一个非负整数，为指定意义下的最小偏心距。</p>\r\n<p><br />\r\n【输入输出样例1】&nbsp;<b><br />\r\n</b>输入:<br />\r\n5 2<br />\r\n1 2 5<br />\r\n2 3 2<br />\r\n2 4 4<br />\r\n2 5 3</p>\r\n<p>输出:<br />\r\n5</p>\r\n<p>【输入输出样例2】&nbsp;<b><br />\r\n</b>输入:<br />\r\n8 6 <br />\r\n1 3 2<br />\r\n2 3 2<br />\r\n3 4 6<br />\r\n4 5 3<br />\r\n4 6 4<br />\r\n4 7 2<br />\r\n7 8 3</p>\r\n<p>输出:<br />\r\n5</p>\r\n<p>【限制】<br />\r\n40％的数据满足：5&lt;=n&lt;=15<br />\r\n70％的数据满足：5&lt;=n&lt;=80<br />\r\n100％的数据满足：5&lt;=n&lt;=300，0&lt;=s&lt;=1000。边长度为不超过1000的正整数。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:58'),
(98, '均分纸牌', 'jfzp', '<p><span lang="EN-US"><font color="#000000"><b>[问题描述]</b></font><br />\r\n有 N 堆纸牌，编号分别为        1，2，&hellip;, N。每堆上有若干张，但纸牌总数必为 N 的倍数。可以在任一堆上取若于张纸牌，然后移动。<br />\r\n移牌规则为：在编号为 1        堆上取的纸牌，只能移到编号为 2 的堆上；在编号为 N 的堆上取的纸牌，只能移到编号为 N-1        的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。<br />\r\n现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。<br />\r\n<br />\r\n例如        N=4，4 堆纸牌数分别为：<br />\r\n①　9　②　8　③　17　④　6<br />\r\n移动3次可达到目的：<br />\r\n从 ③ 取 4 张牌放到 ④        （9 8 13 10） -&gt; 从 ③ 取 3 张牌放到 ②（9 11 10 10）-&gt; 从 ② 取 1 张牌放到①（10 10 10        10）。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><b>[输        入]</b>：<br />\r\nN（N 堆纸牌，1 &lt;= N &lt;= 100）<br />\r\nA1 A2 &hellip;        An （N 堆纸牌，每堆纸牌初始数，l&lt;= Ai &lt;=10000）</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><b>[输        出]</b>：<br />\r\n输出至屏幕。格式为：<br />\r\n所有堆均达到相等时的最少移动次数。&lsquo;</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><b>[输入输出样例]</b><br />\r\n4<br />\r\n9 8        17 6</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><b>[输入输出样例]</b></span><span lang="EN-US"><br />\r\n3</span></p>', 100, 128, 5, 0, '2012-04-05 16:22:58'),
(99, '查数', 'chashu', '<div><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;在所有的N位数中，有多少个数中有偶数个数字3？</div>\r\n<div>&nbsp;</div>\r\n<div>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 文件只有一行为一个正整数n</div>\r\n<div>&nbsp;</div>\r\n<div>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出文件只有一个整数，方案数(由于结果可能很大，你只需要输出这个答案mod 12345的值。)。</div>\r\n<div>&nbsp;</div>\r\n<div>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nchashu.in<br />\r\n2</div>\r\n<div>输出：<br />\r\nchashu.out<br />\r\n73<br />\r\n&nbsp;</div>\r\n<div>数据规模:1&lt;=N&lt;=1000</div>', 1000, 128, 10, 0, '2012-04-05 16:22:58'),
(100, '棋盘分割 ', 'division', '<p><b>【问题描述】</b><br />\r\n&nbsp; 将一个８&times;８的棋盘进行如下分割：将原棋盘割下一块矩形棋盘并使剩下部分也是矩形，再将分割过的部分任选一块继续如此分割，这样割了n-1次后，连同最后剩下的矩形棋盘共有n块矩形棋盘。(每次切割都只能沿着棋盘格子的边进行)</p>\r\n<div align="left">&nbsp;&nbsp;&nbsp; 原棋盘上每一格有一个分值，一块矩形棋盘的总分为其所含各格分值之和。现在需要把棋盘按上述规则分割成 n 块矩形棋盘，并使各矩形棋盘总分的均方差最小。</div>\r\n<div>均方差<img alt="" width="124" height="53" src="/mw/images/9/96/Division-1.gif" /> ，其中平均值<img alt="" width="74" height="48" src="/mw/images/4/4e/Division-2.gif" /> x i 为第 i 块矩形棋盘的分。</div>\r\n<div>请编程对给出的棋盘及 n ，求出 <img alt="" width="13" height="15" src="/mw/images/c/cb/Division-3.gif" />的最小值。</div>\r\n<div align="center">&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div>第 1 行为一个整数 n(1&lt;n&lt;9) 。</div>\r\n<p>第 2 行至第 9 行每行为 8 个小于 100 的非负整数，表示棋盘上相应格子的分值。每行相邻两数之间用一个空格分隔。</p>\r\n<div>【输出格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span></div>\r\n<div>仅一个数，为 <img alt="" width="13" height="15" src="/mw/images/c/cb/Division-3.gif" />（四舍五入精确到小数点后三位）。</div>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>division.in</span></div>\r\n<div>3 <br />\r\n1 1 1 1 1 1 1 3 <br />\r\n1 1 1 1 1 1 1 1 <br />\r\n1 1 1 1 1 1 1 1 <br />\r\n1 1 1 1 1 1 1 1 <br />\r\n1 1 1 1 1 1 1 1 <br />\r\n1 1 1 1 1 1 1 1 <br />\r\n1 1 1 1 1 1 1 0 <br />\r\n1 1 1 1 1 1 0 3</div>\r\n<div><img alt="" width="149" height="149" src="/mw/images/7/74/Division-4.gif" /></div>\r\n<div>输出文件名：<span>division.out</span></div>\r\n<div>1.633</div>', 20000, 128, 10, 0, '2012-04-05 16:22:58'),
(101, '填数', 'tianshu', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;在一个 N*N 的棋盘上（ 1 &le; N &le; 10 ），填入 1 ， 2 ，&hellip;， N*N 共 N*N 个数，使得任意两个相邻的数之和为素数。</p>\r\n<p>例如：当 N=2 时，有：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="31">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="36">\r\n            <p align="center">2</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="31">\r\n            <p align="center">4</p>\r\n            </td>\r\n            <td valign="top" width="36">\r\n            <p align="center">3</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>当 N=4 时，一种可以填写的方案如下：在这里我们约定：左上角的格子里必须填数字 1 。</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="34">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">2</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">11</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">12</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="34">\r\n            <p align="center">4</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">9</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">8</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">5</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="34">\r\n            <p align="center">7</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">10</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">3</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">14</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="34">\r\n            <p align="center">6</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">13</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">16</p>\r\n            </td>\r\n            <td valign="top" width="34">\r\n            <p align="center">15</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件只有一行为一个正整数n</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出文件有n行,每行有n个数,中间用一个空格隔开</p>\r\n<p>如有多种解，设a[i,j]为解的第i行第j个数,则输出以i为第一关键字，j为第二关键字，小数在前的那一种方案；若无解，则输出&ldquo;NO&rdquo;。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n2</p>\r\n<p>输出：<br />\r\n1 2 <br />\r\n4 3</p>', 2000, 128, 10, 0, '2012-04-05 16:22:58'),
(102, '自由落体', 'freefaller', '<p><b>[问题描述]</b></p>\r\n<p>　　在高为 H 的天花板上有 n        个小球，体积不计，位置分别为 0，1，2，&hellip;．n-1。在地面上有一个小车（长为 L，高为 K，距原点距离为 S1）。已知小球下落距离计算公式为        d＝1/2*g*(t^2)，其中 g=10，t 为下落时间。地面上的小车以速度 V 前进。</p>\r\n<p>　　如下图：</p>\r\n<p><br />\r\n<img height="209" border="0" width="601" src="http://192.168.1.252/os/sj/noip/tg2002.files/02fstt1.gif" alt="" /></p>\r\n<p>　　小车与所有小球同时开始运动，当小球距小车的距离 &lt;= 0.00001        时，即认为小球被小车接受（小球落到地面后不能被接受）。</p>\r\n<p>　　请你计算出小车能接受到多少个小球。</p>\r\n<p><b>[输入]</b>：<br />\r\n键盘输人：<br />\r\nH，S1，V，L，K，n （l&lt;=H，S1，V，L，K，n        &lt;=100000）</p>\r\n<p><b>[输出]</b>：<br />\r\n屏幕输出：<br />\r\n小车能接受到的小球个数。</p>\r\n<p><b>[输入输出样例]</b></p>\r\n<p>　[输入]</p>\r\n<p>　　　5.0 9.0 5.0 2.5 1.8        5</p>\r\n<p>　[输出]</p>\r\n<p>　　　1</p>', 1000, 128, 5, 0, '2012-04-05 16:22:58'),
(103, '矩形覆盖', 'jxfg', '<p><b>[问题描述]</b>:<br />\r\n在平面上有 n 个点（n &lt;=        50），每个点用一对整数坐标表示。例如：当 n＝4        时，4个点的坐标分另为：p1（1，1），p2（2，2），p3（3，6），P4（0，7），见图一。<br />\r\n<img height="180" border="0" width="670" alt="" src="http://192.168.1.252/os/sj/noip/tg2002.files/02fstt2.gif" /><br />\r\n<br />\r\n这些点可以用 k        个矩形（1&lt;=k&lt;=4）全部覆盖，矩形的边平行于坐标轴。当 k=2 时，可用如图二的两个矩形 sl，s2 覆盖，s1，s2 面积和为        4。问题是当 n 个点坐标和 k 给出后，怎样才能使得覆盖所有点的 k 个矩形的面积之和为最小呢。约定：覆盖一个点的矩形面积为        0；覆盖平行于坐标轴直线上点的矩形面积也为0。各个矩形必须完全分开（边线与顶点也都不能重合）。</p>\r\n<p><b>[输入]</b>:<br />\r\n文件格式为<br />\r\nn k<br />\r\nxl y1<br />\r\nx2        y2<br />\r\n... ...<br />\r\nxn yn （0&lt;=xi,yi&lt;=500)</p>\r\n<p><b>[输出]</b>:<br />\r\n格式为：<br />\r\n一个整数，即满足条件的最小的矩形面积之和。</p>\r\n<p><b>[输入样例]</b><br />\r\n4 2<br />\r\n1 1<br />\r\n2 2<br />\r\n3 6<br />\r\n0        7</p>\r\n<p><br />\r\n<b>[输出样例]</b><br />\r\n4</p>', 1000, 128, 7, 0, '2012-04-05 16:22:58');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(104, '神经网络', 'sjwl', '<p>【问题背景】</p>\r\n<p>人工神经网络（ Artificial Neural Network ）是一种新兴的具有自我学习能力的计算系统，在模式识别、函数逼近及贷款风险评估等诸多领域有广泛的应用。对神经网络的研究一直是当今的热门方向，兰兰同 学在自学了一本神经网络的入门书籍后，提出了一个简化模型，他希望你能帮助他用程序检验这个神经网络模型的实用性。</p>\r\n<p>【问题描述】</p>\r\n<p>在兰兰的模型中，神经网络就是一张有向图，图中的节点称为神经元，而且两个神经</p>\r\n<p><img height="206" width="356" src="http://192.168.1.252/os/sj/noip/images/tg2003_clip_image002_0000.gif" alt="" /><br />\r\n<br />\r\n元之间至多有一条边相连，下图是一个神经元的例子：</p>\r\n<p align="center">&nbsp;</p>\r\n<p>神经元〔编号为 1 ）</p>\r\n<p>图 中， X1&mdash;X3 是信息输入渠道， Y1 － Y2 是信息输出渠道， C i 表示神经元目前的状态， U i 是阈值，可视为神经元的一个内在参数。神经元按一定的顺序排列，构成整个神经网络。在兰兰的模型之中，神经网络中的神经元分为几层；称为输入层、输出层， 和若干个中间层。每层神经元只向下一层的神经元输出信息，只从上一层神经元接受信息。下图是一个简单的三层神经网络的例子。</p>\r\n<p align="center"><img height="218" width="289" src="http://192.168.1.252/os/sj/noip/images/tg2003_clip_image004.gif" alt="" /></p>\r\n<p>兰兰规定， C i 服从公式：（其中 n 是网络中所有神经元的数目）</p>\r\n<p align="center"><img height="37" width="136" src="http://192.168.1.252/os/sj/noip/images/tg2003_clip_image006.gif" alt="" /></p>\r\n<p align="center">&nbsp;</p>\r\n<p>公 式中的 W ji （可能为负值）表示连接 j 号神经元和 i 号神经元的边的权值。当 C i 大于 0 时，该神经元处于兴奋状态，否则就处于平静状态。当神经元处于兴奋状态时，下一秒它会向其他神经元传送信号，信号的强度为 C i 。如此．在输入层神经元被激发之后，整个网络系统就在信息传输的推动下进行运作。现在，给定一个神经网络，及当前输入层神经元的状态（ C i ），要求你的程序运算出最后网络输出层的状态。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件第一行是两个整 数 n （ 1&le;n&le;200 ）和 p 。接下来 n 行，每行两个整数，第 i ＋ 1 行是神经元 i 最初状态和其阈值（ U i ），非输入层的神经元开始时状态必然为 0 。再下面 P 行，每行由两个整数 i ， j 及一个整数 W ij ，表示连接神经元 i 、 j 的边权值为 W ij 。</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件包含若干行，每行有两个整数，分别对应一个神经元的编号，及其最后的状态，两个整数间以空格分隔。 仅输出最后状态非零的输出层神经元状态，并且按照编号由小到大顺序输出！若输出层的神经元最后状态均为 0 ，则输出 NULL 。</p>\r\n<p>【输入样例】</p>\r\n<p>5 6 <br />\r\n1 0 <br />\r\n1 0 <br />\r\n0 1 <br />\r\n0 1 <br />\r\n0 1 <br />\r\n1 3 1 <br />\r\n1 4 1 <br />\r\n1 5 1 <br />\r\n2 3 1 <br />\r\n2 4 1 <br />\r\n2 5 1</p>\r\n<p>【输出样例】</p>\r\n<p>3 1 <br />\r\n4 1 <br />\r\n5 1</p>', 500, 128, 7, 0, '2012-04-05 16:22:59'),
(105, '侦探推理', 'logic', '<p>【问题描述】</p>\r\n<p>明明同学最近迷上了侦探漫画《柯南》并沉醉于推理游戏之中，于是他召集了一群同学玩推理游戏。游戏的内容是这样的，明明的同学们先商量好由其中的一个人充当罪犯（在明明不知情的情况下），明明的任务就是找出这个罪犯。接着，明明逐个询问每一个同学，被询问者可能会说：</p>\r\n<p align="left"><img height="109" width="446" alt="" src="http://192.168.1.252/os/sj/noip/images/tg2003_clip_image002.jpg" /><br />\r\n证词中出现的其他话，都不列入逻辑推理的内容。明明所知道的是，他的同学中有 N 个人始终说假话，其余的人始终说真。现在，明明需要你帮助他从他同学的话中推断出谁是真正的凶手，请记住， 凶手只有一个！</p>\r\n<p>【输入格式】</p>\r\n<p>输 入由若干行组成，第一行有三个整数， M （ 1&le;M&le;20 ）、 N （ 1&le;N&le;M ）和 P （ 1&le;P&le;100 ）；M 是参加游戏的明明的同学数， N 是其中始终说谎的人数， P 是证言的总数。接下来 M 行，每行是明明的一个同学的名字（英文字母组成，没有空格，全部大写）。</p>\r\n<p>往后有 P 行，每行开始是某个同学的名宇，紧跟着一个冒号和一个空格，后面是一句证词，符合前表中所列格式。证词每行不会超过 250 个字符。</p>\r\n<p>输入中不会出现连续的两个空格，而且每行开头和结尾也没有空格。</p>\r\n<p>【输出格式】</p>\r\n<p>如果你的程序能确定谁是罪犯，则输出他的名字；如果程序判断出不止一个人可能是罪犯，则输出 Cannot Determine ；如果程序判断出没有人可能成为罪犯，则输出 Impossible 。</p>\r\n<p>【输入样例】</p>\r\n<p>3 1 5 <br />\r\nMIKE <br />\r\nCHARLES <br />\r\nKATE <br />\r\nMIKE: I am guilty. <br />\r\nMIKE: Today is Sunday. <br />\r\nCHARLES: MIKE is guilty ． <br />\r\nKATE: I am guilty. <br />\r\nKATE: How are you??</p>\r\n<p>【输出样例】</p>\r\n<p>MIKE</p>', 1000, 128, 13, 0, '2012-04-05 16:22:59'),
(106, '加分二叉树', 'jfecs', '<p>【问题描述】</p>\r\n<p>设 一个 n 个节点的二叉树 tree 的中序遍历为（ l,2,3,&hellip;,n ），其中数字 1,2,3,&hellip;,n 为节点编号。每个节点都有一个分数（均为正整数），记第 j 个节点的分数为 di ， tree 及它的每个子树都有一个加分，任一棵子树 subtree （也包含 tree 本身）的加分计算方法如下：</p>\r\n<p>subtree 的左子树的加分 &times; subtree 的右子树的加分＋ subtree 的根的分数若某个子树为空，规定其加分为 1 ，叶子的加分就是叶节点本身的分数。不考虑它的空子树。</p>\r\n<p>试求一棵符合中序遍历为（ 1,2,3,&hellip;,n ）且加分最高的二叉树 tree 。要求输出；</p>\r\n<p>（ 1 ） tree 的最高加分</p>\r\n<p>（ 2 ） tree 的前序遍历</p>\r\n<p>【输入格式】</p>\r\n<p>第 1 行：一个整数 n （ n ＜ 30 ），为节点个数。</p>\r\n<p>第 2 行： n 个用空格隔开的整数，为每个节点的分数（分数＜ 100 ）。</p>\r\n<p>【输出格式】</p>\r\n<p>第 1 行：一个整数，为最高加分（结果不会超过 4,000,000,000 ）。</p>\r\n<p>第 2 行： n 个用空格隔开的整数，为该树的前序遍历。</p>\r\n<p>【输入样例】</p>\r\n<p>5 <br />\r\n5 7 1 2 10</p>\r\n<p>&nbsp;</p>\r\n<p>【输出样例】</p>\r\n<p>145 <br />\r\n3 1 2 4 5</p>', 1000, 128, 7, 0, '2012-04-05 16:22:59'),
(107, '传染病控制', 'epidemic', '<p>【问题背景】</p>\r\n<p>近来，一种新的传染病肆虐全球。蓬莱国也发现了零星感染者，为防止该病在蓬莱国大范围流行，该国政府 决定不惜一切代价控制传染病的蔓延。不幸的是，由于人们尚未完全认识这种传染病，难以准确判别病毒携带者，更没有研制出疫苗以保护易感人群。于是，蓬莱国 的疾病控制中心决定采取切断传播途径的方法控制疾病传播。经过 WHO （世界卫生组织）以及全球各国科研部门的努力，这种新兴传染病的传播途径和控制方法已经研究消除，剩下的任务就是由你协助蓬莱国疾控中心制定一个有效的控 制办法。</p>\r\n<p>【问题描述】</p>\r\n<p>研究表明，这种传染病的传播具有两种很特殊的性质；第一是它的 传播途径是树型的，一个人 X 只可能被某个特定的人 Y 感染，只要 Y 不得病，或者是 XY 之间的传播途径被切断，则 X 就不会得病。第二是，这种疾病的传播有周期性，在一个疾病传播周期之内，传染病将只会感染一代患者，而不会再传播给下一代。</p>\r\n<p>这 些性质大大减轻了蓬莱国疾病防控的压力，并且他们已经得到了国内部分易感人群的潜在传播途径图（一棵树）。但是，麻烦还没有结束。由于蓬莱国疾控中心人手 不够，同时也缺乏强大的技术，以致他们在一个疾病传播周期内，只能设法切断一条传播途径，而没有被控制的传播途径就会引起更多的易感人群被感染（也就是与 当前已经被感染的人有传播途径相连，且连接途径没有被切断的人群）。当不可能有健康人被感染时，疾病就中止传播。所以，蓬莱国疾控中心要制定出一个切断传 播途径的顺序，以使尽量少的人被感染。</p>\r\n<p>你的程序要针对给定的树，找出合适的切断顺序。</p>\r\n<p>【输入格式】</p>\r\n<p>输入格式的第一行是两个整数 n （ 1&le;n&le;300 ）和 p 。接下来 p 行，每一行有两个整数 i 和 j ，表示节点 i 和 j 间有边相连（意即，第 i 人和第 j 人之间有传播途径相连）。其中节点1 是已经被感染的患者。</p>\r\n<p>【输出格式】</p>\r\n<p>只有一行，输出总共被感染的人数。</p>\r\n<p>【输入样例】</p>\r\n<p>7 6<br />\r\n1 2<br />\r\n1 3<br />\r\n2 4<br />\r\n2 5<br />\r\n3 6<br />\r\n3 7</p>\r\n<p>【输出样例】</p>\r\n<p>3</p>', 1000, 128, 10, 0, '2012-04-05 16:22:59'),
(108, '津津的储蓄计划', 'save', '<p>【问题描述】 <br />\r\n津津的零花钱一直都是自己管理。每个月的月初妈妈给津津300元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。 <br />\r\n为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上20％还给津津。因此津津制定了一个储蓄计划：每个月的月初，在 得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于100元或恰好100元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。 <br />\r\n例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。 <br />\r\n津津发现这个储蓄计划的主要风险是，存在妈妈那里的钱在年末之前不能取出。有可能在某个月的月初，津津手中的钱加上这个月妈妈给的钱，不够这个月的原定预算。如果出现这种情况，津津将不得不在这个月省吃俭用，压缩预算。 <br />\r\n现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。 <br />\r\n【输入文件】 <br />\r\n输入文件包括12行数据，每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。 <br />\r\n【输出文件】 <br />\r\n输出文件包括一行，这一行只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；否则输出到2004年年末津津手中会有多少钱。</p>\r\n<p>【样例输入1】 <br />\r\n<br />\r\n290 <br />\r\n230 <br />\r\n280 <br />\r\n200 <br />\r\n300 <br />\r\n170 <br />\r\n340 <br />\r\n50 <br />\r\n90 <br />\r\n80 <br />\r\n200 <br />\r\n60</p>\r\n<p>【样例输出1】</p>\r\n<p>-7</p>\r\n<p>【样例输入2】 <br />\r\n290 <br />\r\n230 <br />\r\n280 <br />\r\n200 <br />\r\n300 <br />\r\n170 <br />\r\n330 <br />\r\n50 <br />\r\n90 <br />\r\n80 <br />\r\n200 <br />\r\n60 <br />\r\n【样例输出2】<br />\r\n1580</p>', 1000, 128, 10, 0, '2012-04-05 16:22:59'),
(109, '合唱队形', 'chorus', '<p>【问题描述】</p>\r\n<p>N位同学站成一排，音乐老师要请其中的(N-K)位同学出列，使得剩下的K位同学排成合唱队形。</p>\r\n<p>合唱队形是指这样的一种队形：设K位同学从左到右依次编号为1，2&hellip;，K，他们的身高分别为T1，T2，&hellip;，TK， 则他们的身高满足T1&lt;...&lt;Ti&gt;Ti+1&gt;&hellip;&gt;TK(1&lt;=i&lt;=K)。</p>\r\n<p>你的任务是，已知所有N位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件的第一行是一个整数N(2&lt;=N&lt;=100)，表示同学的总数。第一行有n个整数，用空格分隔，第i个整数Ti(130&lt;=Ti&lt;=230)是第i位同学的身高(厘米)。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件包括一行，这一行只包含一个整数，就是最少需要几位同学出列。</p>\r\n<p>【样例输入】</p>\r\n<p>8<br />\r\n186 186 150 200 160 130 197 220</p>\r\n<p>【样例输出】</p>\r\n<p>4</p>\r\n<p>【数据规模】</p>\r\n<p>&nbsp;</p>\r\n<p>对于50％的数据，保证有n&lt;=20；<br />\r\n对于全部的数据，保证有n&lt;=100。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:59'),
(110, '谁拿了最多奖学金', 'scholar', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;某校的惯例是在每学期的期末考试之后发放奖学金。发放的奖学金共有五种，获取的条件各自不同： <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;1) 院士奖学金，每人 8000 元，期末平均成绩高于 80 分（ &gt;80 ），并且在本学期内发表 1 篇或 1 篇以上论文的学生均可获得； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;2) 五四奖学金，每人 4000 元，期末平均成绩高于 85 分（ &gt;85 ），并且班级评议成绩高于 80 分（ &gt;80 ）的学生均可获得； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;3) 成绩优秀奖，每人 2000 元，期末平均成绩高于 90 分（ &gt;90 ）的学生均可获得； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;4) 西部奖学金，每人 1000 元，期末平均成绩高于 85 分（ &gt;85 ）的西部省份学生均可获得； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;5) 班级贡献奖，每人 850 元，班级评议成绩高于 80 分（ &gt;80 ）的学生干部均可获得； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;只要符合条件就可以得奖，每项奖学金的获奖人数没有限制，每名学生也可以同时获得多项奖学金。例如姚林的期末平均成绩是 87 分，班级评议成绩 82 分，同时他还是一位学生干部，那么他可以同时获得五四奖学金和班级贡献奖，奖金总数是 4850 元。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;现在给出若干学生的相关数据，请计算哪些同学获得的奖金总数最高（假设总有同学能满足获得奖学金的条件）。</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输入文件 的第一行是一个整数 N （ 1 &lt;= N &lt;= 100 ） ，表示学生的总数。接下来的 N 行每行是一位学生的数据，从左向右依次是姓名，期末平均成绩，班级评议成绩，是否是学生干部，是否是西部省份学生，以及发表的论文数。姓名是由大小写英文 字母组成的长度不超过 20 的字符串（不含空格）；期末平均成绩和班级评议成绩都是 0 到 100 之间的整数（包括 0 和 100 ）；是否是学生干部和是否是西部省份学生分别用一个字符表示， Y 表示是， N 表示不是；发表的论文数是 0 到 10 的整数（包括 0 和 10 ）。每两个相邻数据项之间用一个空格分隔。</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件 包括三行，第一行是获得最多奖金的学生的姓名，第二行是这名学生获得的奖金总数。如果有两位或两位以上的学生获得的奖金最多，输出他们之中在输入文件中出现最早的学生的姓名。第三行是这 N 个学生获得的奖学金的总数。</p>\r\n<p>【输入样例】 <strong><br />\r\n</strong></p>\r\n<p>4<br />\r\nYaoLin 87 82 Y N 0<br />\r\nChenRuiyi 88 78 N Y 1<br />\r\nLiXin 92 88 N N 0<br />\r\nZhangQin 83 87 Y N 1</p>\r\n<p>【输出样例】 <strong><br />\r\n</strong></p>\r\n<p>ChenRuiyi<br />\r\n9000<br />\r\n28700</p>', 1000, 128, 10, 0, '2012-04-05 16:22:59'),
(111, '过河', 'river', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在河上有一座独木桥，一只青蛙想沿着独木桥从河的一侧跳到另一侧。在桥上有一些石子，青蛙很讨厌踩在这些石子上。由于桥的长度和青蛙一次跳过的距离都是正整 数，我们可以把独木桥上青蛙可能到达的点看成数轴上的一串整点： 0 ， 1 ，&hellip;&hellip;， L （其中 L 是桥的长度）。坐标为 0 的点表示桥的起点，坐标为 L 的点表示桥的终点。青蛙从桥的起点开始，不停的向终点方向跳跃。一次跳跃的距离是 S 到 T 之间的任意正整数（包括 S,T ）。当青蛙跳到或跳过坐标为 L 的点时，就算青蛙已经跳出了独木桥。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;题目给出独木桥的长度 L ，青蛙跳跃的距离范围 S,T ，桥上石子的位置。你的任务是确定青蛙要想过河，最少需要踩到的石子数。</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输 入文件的第一行有一个正整数 L （ 1 &lt;= L &lt;= 10^9 ），表示独木桥的长度。第二行有三个正整数 S ， T ， M ，分别表示青蛙一次跳跃的最小距离，最大距离，及桥上石子的个数，其中 1 &lt;= S &lt;= T &lt;= 10 ， 1 &lt;= M &lt;= 100 。第三行有 M 个不同的正整数分别表示这 M 个石子在数轴上的位置（数据保证桥的起点和终点处没有石子）。所有相邻的整数之间用一个空格隔开。</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件只包括一个整数，表示青蛙过河最少需要踩到的石子数。</p>\r\n<p>【输入样例】 <strong><br />\r\n</strong></p>\r\n<p>10<br />\r\n2 3 5<br />\r\n2 3 5 6 7 <br />\r\n<br />\r\n【输出样例】 <strong><br />\r\n</strong></p>\r\n<p>2<br />\r\n【数据规模】</p>\r\n<p>对于30%的数据，L &lt;= 10000；<br />\r\n对于全部的数据，L &lt;= 10^9。</p>', 1000, 128, 10, 0, '2012-04-05 16:22:59'),
(112, '篝火晚会', 'fire', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;佳佳刚进高中，在军训的时候，由于佳佳吃苦耐劳，很快得到了教官的赏识，成为了&ldquo;小 教官&rdquo;。在军训结束的那天晚上，佳佳被命令组织同学们进行篝火晚会。一共有 n 个同学，编号从 1 到 n 。一开始，同学们按照 1 ， 2 ，&hellip;&hellip;， n 的顺序坐成一圈，而实际上每个人都有两个最希望相邻的同学。如何下命令调整同学的次序，形成新的一个圈，使之符合同学们的意愿，成为摆在佳佳面前的一大难 题。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;佳佳可向同学们下达命令，每一个命令的形式如下：</p>\r\n<p>(b 1 , b 2 ,... b m -1 , b m )</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这 里 m 的值是由佳佳决定的，每次命令 m 的值都可以不同。这个命令的作用是移动编号是 b 1 ， b 2 ，&hellip;&hellip; b m &ndash;1 ， b m 的这 m 个同学的位置。要求 b 1 换到 b 2 的位置上， b 2 换到 b 3 的位置上，&hellip;&hellip;，要求 b m 换到 b 1 的位置上。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;执行每个命令都需要一些代价。我们假定如果一个命令要移动 m 个人的位置，那么这个命令的代价就是 m 。我们需要佳佳用最少的总代价实现同学们的意愿，你能帮助佳佳吗？</p>\r\n<p><br />\r\n【输入文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;  输入文件 的第一行是一个整数 n （ 3 &lt;= n &lt;= 50000 ），表示一共有 n 个同学。其后 n 行每行包括两个不同的正整数，以一个空格隔开，分别表示编号是 1 的同学最希望相邻的两个同学的编号，编号是 2 的同学最希望相邻的两个同学的编号，&hellip;&hellip;，编号是 n 的同学最希望相邻的两个同学的编号。 <br />\r\n<br />\r\n【输出文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;             输出文件 包括一行，这一行只包含一个整数，为最小的总代价。如果无论怎么调整都不能符合每个同学的愿望，则输出 -1 。 <br />\r\n<br />\r\n【输出样例】 <br />\r\n<strong><br />\r\n</strong></p>\r\n<p>4<br />\r\n3 4<br />\r\n4 3<br />\r\n1 2<br />\r\n1 2</p>\r\n<p>【输出样例】</p>\r\n<p>2</p>\r\n<p>【数据规模】</p>\r\n<p>对于30%的数据，n &lt;= 1000；</p>\r\n<p>对于全部的数据，n &lt;= 50000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(113, '等价表达式', 'equal', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 明明进了中学之后，学到了代数表达式。有一天，他碰到一个很麻烦的选择题。这个题目的题干中首先给出了一个代数表达式，然后列出了若干选项，每个选项也是一个代数表达式，题目的要求是判断选项中哪些代数表达式是和题干中的表达式等价的。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这个题目手算很麻烦，因为明明对计算机编程很感兴趣，所以他想是不是可以用计算机来解决这个问题。假设你是明明，能完成这个任务吗？</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这个选择题中的每个表达式都满足下面的性质：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;1． 表达式只可能包含一个变量&lsquo;a&rsquo;。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;2． 表达式中出现的数都是正整数，而且都小于10000。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;3． 表达式中可以包括四种运算&lsquo;+&rsquo;（加），&lsquo;-&rsquo;（减），&lsquo;*&rsquo;（乘），&lsquo;^&rsquo;（乘幂），以及小括号&lsquo;(&rsquo;，&lsquo;)&rsquo;。小括号的优先级最高，其次是&lsquo;^&rsquo;，然 后是&lsquo;*&rsquo;，最后是&lsquo;+&rsquo;和&lsquo;-&rsquo;。&lsquo;+&rsquo;和&lsquo;-&rsquo;的优先级是相同的。相同优先级的运算从左到右进行。（注意：运算符&lsquo;+&rsquo;，&lsquo;-&rsquo;，&lsquo;*&rsquo;，&lsquo;^&rsquo;以及 小括号&lsquo;(&rsquo;，&lsquo;)&rsquo;都是英文字符）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;4． 幂指数只可能是1到10之间的正整数（包括1和10）。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;5． 表达式内部，头部或者尾部都可能有一些多余的空格。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;下面是一些合理的表达式的例子：<br />\r\n((a^1) ^ 2)^3，a*a+a-a，((a+a))，9999+(a-a)*a，1 + (a -1)^3，1^10^9&hellip;&hellip;</p>\r\n<p>【输入文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件 的第一行给出的是题干中的表达式。第二行是一个整数 n （ 2 &lt;= n &lt;= 26 ），表示选项的个数。后面 n 行，每行包括一个选项中的表达式。这 n 个选项的标号分别是 A ， B ， C ， D &hellip;&hellip;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输入中的表达式的长度都不超过 50 个字符，而且保证选项中总有表达式和题干中的表达式是等价的。</p>\r\n<p>【输出文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;             输出文件 包括一行，这一行包括一系列选项的标号，表示哪些选项是和题干中的表达式等价的。选项的标号按照字母顺序排列，而且之间没有空格。 <br />\r\n<br />\r\n【输入样例】 <strong><br />\r\n</strong></p>\r\n<p>( a + 1) ^2<br />\r\n3<br />\r\n(a-1)^2+4*a<br />\r\na + 1+ a<br />\r\na^2 + 2 * a * 1 + 1^2 + 10 -10 +a -a</p>\r\n<p>【输出样例】</p>\r\n<p>AC</p>\r\n<p>【数据规模】</p>\r\n<p>对于30%的数据，表达式中只可能出现两种运算符&lsquo;+&rsquo;和&lsquo;-&rsquo;；</p>\r\n<p>对于其它的数据，四种运算符&lsquo;+&rsquo;，&lsquo;-&rsquo;，&lsquo;*&rsquo;，&lsquo;^&rsquo;在表达式中都可能出现。</p>\r\n<p>对于全部的数据，表达式中都可能出现小括号&lsquo;(&rsquo;和&lsquo;)&rsquo;。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(114, '铺砖', 'puzhuan', '<p class="MsoNormal"><b>【问题描述】</b></p>\r\n<p>&nbsp;&nbsp;&nbsp;用1 x 1和2 x 2的磁砖不重叠地铺满N x 3的地板，共有多少种方案？</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 仅一行包含一个正整数 N 。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 单独一行包含一个整数表示方案数,由于结果可能很大，你只需要输出这个答案mod 12345的值。。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\npuzhuan.in<br />\r\n2</p>\r\n<p>输出：<br />\r\npuzhuan.out<br />\r\n3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(115, '算24点', 'point24', '<p><strong>【问题描述】 </strong><br />\r\n几十年前全世界就流行一种数字游戏，至今仍有人乐此不疲．在中国我们把这种游戏称为&ldquo;算 24 点&rdquo;。您作为游戏者将得到 4 个 1~9 之间的自然数作为操作数，而您的任务是对这 4 个操作数进行适当的算术运算，要求运算结果等于 24 。</p>\r\n<p>您可以使用的运算只有： + ， - ， * ， / ，您还可以使用（）来改变运算顺序。注意：所有的中间结果须是<b>正整数</b>，所以一些除法运算是不允许的（例如， ( 2*2 ) /4 是合法的， 2* ( 2/4 ) 是不合法的）。下面我们给出一个游戏的具体例子：</p>\r\n<p>若给出的 4 个操作数是： 1 、 2 、 3 、 7 ，则一种可能的解答是 1+2+3*7=24 。</p>\r\n<p>【输入格式】 <br />\r\n只有一行，四个 1 到 9 之间的自然数。</p>\r\n<p>【输出格式】 <br />\r\n如果有解的话，只要输出一个解，输出的是三行数据，分别表示运算的步骤。其中第一行是输入的两个数和一个运算符和运算后的结果，第二行是第一行的结果和一 个输入的数据、运算符、运算后的结果；第三行是第二行的结果和输入的一个数、运算符和&ldquo; =24 &rdquo;。如果两个操作数有大小的话则先输出大的。</p>\r\n<p>如果没有解则输出&ldquo; No answer! &rdquo;</p>\r\n<p>【输入输出样例】 <br />\r\n<strong><br />\r\n</strong>输入： <br />\r\npoint24.in <br />\r\n1 2 3 7</p>\r\n<p>输出： <br />\r\npoint24.out <br />\r\n2+1=3 <br />\r\n7*3=21 <br />\r\n21+3=24</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(116, '能量项链', 'energy', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在 Mars 星球上，每个 Mars 人都随身佩带着一串能量项链。在项链上有 N 颗能量珠。能量珠是一颗有头标记与尾标记的珠子，这些标记对应着某个正整数。并且，对于相邻的两颗珠子，前一颗珠子的尾标记一定等于后一颗珠子的头标记。 因为只有这样，通过吸盘（吸盘是 Mars 人吸收能量的一种器官）的作用，这两颗珠子才能聚合成一颗珠子，同时释放出可以被吸盘吸收的能量。如果前一颗能量珠的头标记为 m ，尾标记为 r ，后一颗能量珠的头标记为 r ，尾标记为 n ，则聚合后释放的能量为 <img height="15" width="59" alt="" src="http://192.168.1.252/os/sj/noip/tg2006_clip_image002.gif" />（ Mars 单位），新产生的珠子的头标记为 m ，尾标记为 n 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;需要时， Mars 人就用吸盘夹住相邻的两颗珠子，通过聚合得到能量，直到项链上只剩下一颗珠子为止。显然，不同的聚合顺序得到的总能量是不同的，请你设计一个聚合顺序，使一串项链释放出的总能量最大。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;例 如：设 N=4 ， 4 颗珠子的头标记与尾标记依次为 (2 ， 3) (3 ， 5) (5 ， 10) (10 ， 2) 。我们用记号&oplus;表示两颗珠子的聚合操作， (j &oplus; k) 表示第 j ， k 两颗珠子聚合后所释放的能量。则第 4 、 1 两颗珠子聚合后释放的能量为：</p>\r\n<p>(4 &oplus; 1)=10*2*3=60 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;这一串项链可以得到最优值的一个 聚合顺序所释放的总能量 为</p>\r\n<p>((4 &oplus; 1) &oplus; 2) &oplus; 3 ） =10*2*3+10*3*5+10*5*10=710 。</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输入文件 energy.in 的第一行是一个正整数 N （ 4 &le; N &le; 100 ），表示项链上珠子的个数。第二行是 N 个用空格隔开的正整数，所有的数均不超过 1000 。第 i 个数为第 i 颗珠子的头标记（ 1 &le; i &le; N ），当 i&lt;N 时，第 i 颗珠子的尾标记应该等于第 i+1 颗珠子的头标记。第 N 颗珠子的尾标记应该等于第 1 颗珠子的头标记。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;至于珠子的顺序，你可以这样确定：将项链放到桌面上，不要出现交叉，随意指定第一颗珠子，然后按顺时针方向确定其他珠子的顺序。</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件 energy.out 只有一行，是一个正整数 E （ E &le; 2.1*10 9 ），为一个最优聚合顺序所释放的总能量。</p>\r\n<p>【输入输出样例】 <br />\r\n<br />\r\n<strong>energy.in </strong></p>\r\n<p>4 <br />\r\n2 3 5 10</p>\r\n<p><strong>energy.out</strong></p>\r\n<p>710</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(117, '金明的预算方案', 'budget', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很 宽敞的房间。更让他高兴的是，妈妈昨天对他说：&ldquo;你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过 N 元钱就行&rdquo;。今天一早 ， 金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="81" valign="top">\r\n            <p>主件</p>\r\n            </td>\r\n            <td width="132" valign="top">\r\n            <p>附件</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="81" valign="top">\r\n            <p>电脑</p>\r\n            </td>\r\n            <td width="132" valign="top">\r\n            <p>打印机，扫描仪</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="81" valign="top">\r\n            <p>书柜</p>\r\n            </td>\r\n            <td width="132" valign="top">\r\n            <p>图书</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="81" valign="top">\r\n            <p>书桌</p>\r\n            </td>\r\n            <td width="132" valign="top">\r\n            <p>台灯，文具</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="81" valign="top">\r\n            <p>工作椅</p>\r\n            </td>\r\n            <td width="132" valign="top">\r\n            <p>无</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;如果要买归类为附件的物品，必须先买该附件所属的主件。每个主件可以有 0 个、 1 个或 2 个附件。附件不再有从属于自己的附件。金明想买的东西很多，肯定会超过妈妈限定的 N 元。于是，他把每件物品规定了一个重要度，分为 5 等：用整数 1 <strong>~ </strong>5 表示，第 5 等最重要。他还从因特网上查到了每件物品的价格（都是 10 元的整数倍）。他希望在不超过 N 元（可以等于 N 元）的前提下，使每件物品的价格与重要度的乘积的总和最大。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;设第 j 件物品的价格为 v[j] ，重要度为 w[j] ，共选中了 k 件物品，编号依次为 j 1 ， j 2 ，&hellip;&hellip;， j k ，则所求的总和为：</p>\r\n<p>v[j 1 ]*w[j 1 ]+v[j 2 ]*w[j 2 ]+ &hellip; +v[j k ]*w[j k ] 。（其中 * 为乘号）</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;请你帮助金明设计一个满足要求的购物单。</p>\r\n<p>【输入文件】</p>\r\n<p>&nbsp;&nbsp; 输入文件的第 1 行，为两个正整数，用一个空格隔开：N m</p>\r\n<p>（其中 N （ &lt;32000 ）表示总钱数， m （ &lt;60 ）为希望购买物品的个数。）</p>\r\n<p>从第 2 行到第 m+1 行，第 j 行给出了编号为 j-1 的物品的基本数据，每行有 3 个非负整数 v p q</p>\r\n<p>（其中 v 表示该物品的价格（ v&lt;10000 ）， p 表示该物品的重要度（ 1 <strong>~ </strong>5 ）， q 表示该物品是主件还是附件。如果 q=0 ，表示该物品为主件，如果 q&gt;0 ，表示该物品为附件， q 是所属主件的编号）</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;输出文件只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值（ &lt;200000 ）。</p>\r\n<p>【输入样例】 <strong><br />\r\n</strong></p>\r\n<p>1000 5<br />\r\n800 2 0<br />\r\n400 5 1<br />\r\n300 5 1<br />\r\n400 3 0<br />\r\n500 2 0</p>\r\n<p>【输出样例】</p>\r\n<p>2200</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(118, '作业调度方案', 'jsp', '<p>【问题描述】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;我们现在要利用 m 台机器加工 n 个工件，每个工件都有 m 道工序，每道工序都在不同的指定的机器上完成。每个工件的每道工序都有指定的加工时间。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;每 个工件的每个工序称为一个操作，我们用记号 j-k 表示一个操作，其中 j 为 1 到 n 中的某个数字，为工件号； k 为 1 到 m 中的某个数字，为工序号，例如 2-4 表示第 2 个工件第 4 道工序的这个操作。在本题中，我们还给定对于各操作的一个安排顺序。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;例 如，当 n=3 ， m=2 时，&ldquo; 1-1 ， 1-2 ， 2-1 ， 3-1 ， 3-2 ， 2 -2 &rdquo; 就是一个给定的安排顺序，即先安排第 1 个工件的第 1 个工序，再安排第 1 个工件的第 2 个工序，然后再安排第 2 个工件的第 1 个工序，等等。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;一方面，每个操作的安排都要满足以下的两个约束条件。</p>\r\n<p>(1) 对同一个工件，每道工序必须在它前面的工序完成后才能开始；</p>\r\n<p>(2) 同一时刻每一台机器至多只能加工一个工件。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;另一方面，在安排后面的操作时，不能改动前面已安排的操作的工作状态。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;由于同一工件都是按工序的顺序安排的，因此，只按原顺序给出工件号，仍可得到同样的安排顺序，于是，在输入数据中，我们将这个安排顺序简写为&ldquo; 1 1 2 3 3 2 &rdquo; 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;还要注意，&ldquo;安排顺序&rdquo;只要求按照给定的顺序安排每个操作。不一定是各机器上的实际操作顺序。在具体实施时，有可能排在后面的某个操作比前面的某个操作先完成。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;例如，取 n=3,m=2 ，已知数据如下：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="91" rowspan="2">\r\n            <p align="center">工件号</p>\r\n            </td>\r\n            <td width="182" colspan="2">\r\n            <p align="center">机器号 / 加工时间</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="91">\r\n            <p align="center">工序 1</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">工序 2</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="91">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">1/3</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">2/2</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="91">\r\n            <p align="center">2</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">1/2</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">2/5</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="91">\r\n            <p align="center">3</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">2/2</p>\r\n            </td>\r\n            <td width="91">\r\n            <p align="center">1/4</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;则对于安排顺序&ldquo; 1 1 2 3 3 2 &rdquo; ，下图中的 两个实施方案都是正确的。但所需要的总时间分别是 10 与 12 。</p>\r\n<p><img height="133" width="564" src="http://192.168.1.252/os/sj/noip/tg2006_clip_image002.jpg" alt="" /></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;当 一个操作插入到某台机器的某个空档时（机器上最后的尚未安排操作的部分也可以看作一个空档），可以靠前插入，也可以靠后或居中插入。为了使问题简单一些， 我们约定：在保证约束条件（ 1 ）（ 2 ）的条件下，尽量靠前插入。并且，我们还约定，如果有多个空档可以插入，就在保证约束条件（ 1 ）（ 2 ）的条件下，插入到最前面的一个空档。于是，在这些约定下，上例中的方案一是正确的，而方案二是不正确的。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;显然，在这些约定下，对于给定的安排顺序，符合该安排顺序的实施方案是唯一的，请你计算出该方案完成全部任务所需的总时间。</p>\r\n<p><br />\r\n【输入文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;             输入文件 jsp.in 的第 1 行为两个正整数，用一个空格隔开：m n</p>\r\n<p>（其中 m （ &lt;20 ）表示机器数， n （ &lt;20 ）表示工件数）</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;第 2 行： <img height="15" width="39" src="http://192.168.1.252/os/sj/noip/tg2006_clip_image002_0000.gif" alt="" />个用空格隔开的数，为给定的安排顺序。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;接下来的 2n 行，每行都是用空格隔开的 m 个正整数，每个数不超过 20 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;其中前 n 行依次表示每个工件的每个工序所使用的机器号，第 1 个数为第 1 个工序的机器号，第 2 个数为第 2 个工序机器号，等等。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;后 n 行依次表示每个工件的每个工序的加工时间。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;可以保证，以上各数据都是正确的，不必检验。</p>\r\n<p>【输出文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输出文件 jsp.out 只有 一个正整数，为最少的加工时间。 <br />\r\n<br />\r\n【输入输出样例】 <br />\r\n<br />\r\n<strong>jsp.in</strong></p>\r\n<p>2 3<br />\r\n1 1 2 3 3 2<br />\r\n1 2 <br />\r\n1 2 <br />\r\n2 1<br />\r\n3 2 <br />\r\n2 5 <br />\r\n2 4<br />\r\n<br />\r\n<strong>jsp.out</strong></p>\r\n<p>10</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(119, '2^k进制数', 'digital', '<p>【问题描述】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 设 r 是个 2<sup>k</sup> 进制数，并满足以下条件：</p>\r\n<p>（ 1 ） r 至少是个 2 位的 2<sup>k</sup>进制数。 <br />\r\n（ 2 ）作为 2<sup>k</sup>进制数，除最后一位外， r 的每一位严格小于它右边相邻的那一位。<br />\r\n（ 3 ）将 r 转换为 2 进制数 q 后，则 q 的总位数不超过 w 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 在这里，正整数 k （ 1 &le; k &le; 9 ）和 w （ k&lt;w &le; 30000 ）是事先给定的。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 问：满足上述条件的不同的 r 共有多少个？</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 我们再从另一角度作些解释：设 S 是长度为 w 的 01 字符串（即字符串 S 由 w 个 &ldquo; 0 &rdquo; 或 &ldquo; 1 &rdquo; 组成）， S 对应于上述条件（ 3 ）中的 q 。将 S 从右起划分为若干个长度为 k 的段，每段对应一位 2 k 进制的数，如果 S 至少可分成 2 段，则 S 所对应的二进制数又可以转换为上述的 2 k 进制数 r 。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 例：设 k=3 ， w=7 。则 r 是个八进制数（ 2 3 =8 ）。由于 w=7 ， 长度为 7 的 01 字符串按 3 位一段分，可分为 3 段（即 1 ， 3 ， 3 ，左边第一段只有一个二进制位），则满足条件的八 进制数有：</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 2 位数：高位为 1 ： 6 个（即 12 ， 13 ， 14 ， 15 ， 16 ， 17 ），高位为 2 ： 5 个， &hellip; ，高位为 6 ： 1 个（即 67 ）。共 6+5+ &hellip; +1=21 个。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 3 位数：高位只能是 1 ，第 2 位为 2 ： 5 个（即 123 ， 124 ， 125 ， 126 ， 127 ），第 2 位为 3 ： 4 个， &hellip; ，第 2 位为 6 ： 1 个（即 167 ）。共 5+4+ &hellip; +1=15 个。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 所以，满足要求的 r 共有 36 个。</p>\r\n<p>【输入文件】 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;             输入文件 digital.in 只有 1 行，为两个正整数，用一个空格隔开： k W</p>\r\n<p>【输出文件】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;输出文件 digital.out 为 1 行，是一个正整数，为所求的计算结果，即满足条件的不同的 r 的个数（用十进制数表示），要求最高位不得为 0 ，各数字之间不得插入数字以外的其他字符（例如空格、换行符、逗号等）。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;（提示：作为结果的正整数可能很大，但不会超过 200 位）</p>\r\n<p>【输入输出样例】 <br />\r\n<br />\r\n<strong>digital.in </strong></p>\r\n<p>3 7 <br />\r\n<br />\r\n<strong>digital.out</strong></p>\r\n<p>36</p>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(120, 'Hanoi双塔问题', 'hanoi', '<p>【问题描述】 <br />\r\n给定A、B、C三根足够长的细柱，在A柱上放有2n个中间有孔的圆盘，共有n个不同的尺 <br />\r\n寸，每个尺寸都有两个相同的圆盘，注意这两个圆盘足不加区分的(下图为n=3的情形)。现要将 <br />\r\n这些圆盘移到C柱上，在移动过程中可放在B柱上暂存。要求： <br />\r\n(1)每次只能移动一个圆盘； <br />\r\n(2)A、B、C三根细柱上的圆盘都要保持上小下大的顺序； <br />\r\n任务：设An为2n个圆盘完成上述任务所需的最少移动次数，对于输入的n，输出An。</p>\r\n<div style="text-indent: 21pt;"><span lang="EN-US" style="font-size: 10.5pt; font-family: &quot;Courier New&quot;;"><v:shapetype coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f" id="_x0000_t75">&nbsp;<span lang="EN-US" style="font-size: 10.5pt; font-family: &quot;Courier New&quot;;"><v:shapetype coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f" id="_x0000_t75"> <v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype><v:shape type="#_x0000_t75" style="width: 190.5pt; height: 105pt;" id="_x0000_i1025"><v:imagedata src="file:///C:\\DOCUME~1\\wgz\\LOCALS~1\\Temp\\msohtml1\\01\\clip_image001.jpg" o:title="hanoi"></v:imagedata></v:shape></span><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype></span></div>\r\n<div>【输入】 <br />\r\n输入文件hanoi.in为一个正整数n，表示在A柱上放有2n个圆盘。 <br />\r\n<br />\r\n【输出】 <br />\r\n输出文件hanoi.out仅一行，包含一个正整数，为完成上述任务所需的最少移动次数An。 <br />\r\n<br />\r\n【输入输出样例1】 <br />\r\nhanoi.in</div>\r\n<div>1</div>\r\n<div>hanoi.out <br />\r\n2 <br />\r\n<br />\r\n【输入输出样例2】 <br />\r\nhanoi.in</div>\r\n<div>2 <br />\r\nhanoi.out <br />\r\n6 <br />\r\n【限制】 <br />\r\n对于50％的数据，1&lt;=n&lt;=25 <br />\r\n对于100％的数据，l&lt;=n&lt;=200</div>\r\n<div>&nbsp;</div>\r\n<div>【提示】</div>\r\n<div>&nbsp;</div>\r\n<div>设法建立An与An-1的递推关系式。</div>', 1000, 128, 10, 0, '2012-04-05 16:23:00'),
(121, '纪念品分组', 'group', '<p>【题目描述】<br />\r\n<br />\r\n<br />\r\n元旦快到了，校学生会让乐乐负责新年晚会的纪念品发放工作。为使得参加晚会的同学所获得的纪念品价值相对均衡，他要把购来的纪念品根据价格进行分组，但每组最多只能包括两件纪念品，并且每组纪念品的价格之和不能超过一个给定的整数。为了保证在尽量短的时间内发完所有纪念品，乐乐希望分组的数目最少。<br />\r\n你的任务是写一个程序，找出所有分组方案中分组数最少的一种，输出最少的分组数目。<br />\r\n<br />\r\n【输入】<br />\r\n输入文件group.in包含n+2行：<br />\r\n第1行包括一个整数w，为每组纪念品价格之和的上限。<br />\r\n第2行为一个整数n，表示购来的纪念品的总件数。<br />\r\n第3～n+2行每行包含一个正整数pi(5&lt;=pi&lt;=w)，表示所对应纪念品的价格。<br />\r\n<br />\r\n【输出】<br />\r\n输出文件group.out仅一行，包含一个整数，即最少的分组数目。<br />\r\n<br />\r\n【输入样例】<br />\r\n<br />\r\n100<br />\r\n9<br />\r\n90<br />\r\n20<br />\r\n20<br />\r\n30<br />\r\n50<br />\r\n60<br />\r\n70<br />\r\n80<br />\r\n90<br />\r\n<br />\r\n【输出样例】<br />\r\n6<br />\r\n<br />\r\n【限制】<br />\r\n50％的数据满足：l&lt;=n&lt;=15<br />\r\n100％的数据满足：1&lt;=n&lt;=30000，80&lt;=w&lt;=200</p>', 1000, 128, 10, 0, '2012-04-05 16:23:01');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(122, '奖学金', 'pj07-1', '<div>【问题描述】 <br />\r\n某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。期末，每个学生都有3门课的成绩：语文、数学、英语。先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。 <br />\r\n任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前5名学生的学号和总分。注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数：学号、总分)是： <br />\r\n7 279 <br />\r\n5 279 <br />\r\n这两行数据的含义是：总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是279(总分等于输入的语文、数学、英语三科成绩之和)，但学号为7的学生语文成绩更高一些。如果你的前两名的输出数据是： <br />\r\n5 279 <br />\r\n7 279 <br />\r\n则按输出错误处理，不能得分。 <br />\r\n<br />\r\n【输入】 <br />\r\n输入文件pj07-1.in 包含行n+1行： <br />\r\n第l行为一个正整数n，表示该校参加评选的学生人数。 <br />\r\n第2到年n+l行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。每个学生的学号按照输入顺序编号为1～n(恰好是输入数据的行号减1)。 <br />\r\n所给的数据都是正确的，不必检验。 <br />\r\n<br />\r\n【输出】 <br />\r\n输出文件pj07-1.out&nbsp; 共有5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。 <br />\r\n<br />\r\n<br />\r\n【输入输出样例l】 <br />\r\npj07-1.in <br />\r\n6 <br />\r\n90 67 80 <br />\r\n87 66 91 <br />\r\n78 89 91 <br />\r\n88 99 77 <br />\r\n67 89 64 <br />\r\n78 89 98</div>\r\n<div>&nbsp;</div>\r\n<div>pj07-1.out</div>\r\n<div>6 265 <br />\r\n4 264 <br />\r\n3 258 <br />\r\n2 244 <br />\r\n1 237 <br />\r\n<br />\r\n【输入输出样例2】 <br />\r\npj07-1.in <br />\r\n8 <br />\r\n80 89 89 <br />\r\n88 98 78 <br />\r\n90 67 80 <br />\r\n87 66 91 <br />\r\n78 89 91 <br />\r\n88 99 77 <br />\r\n67 89 64 <br />\r\n78 89 98</div>\r\n<div>&nbsp;</div>\r\n<div>pj07-1.out</div>\r\n<div>8 265 <br />\r\n2 264 <br />\r\n6 264 <br />\r\n1 258 <br />\r\n5 258 <br />\r\n<br />\r\n【限制】 <br />\r\n50％的数据满足：各学生的总成绩各不相同 <br />\r\n100％的数据满足：6&lt;=n&lt;=300</div>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(123, '行进方案', 'zbfa', '<p class="MsoNormal"><b>【问题描述】</b></p>\r\n<p>从原点出发，一步只能向右走、向上走或向左走。恰好走N步且不经过已走的点共有多少种走法？</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入仅一行，为正整数 N （ 0&lt;N&lt;1000 ）。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 一个整数,表示方案数。由于结果可能很大，你只需要输出这个答案mod 12345的值。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nzbfa.in<br />\r\n2</p>\r\n<p>输出：<br />\r\nzbfa.out<br />\r\n7</p>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(124, '添加号', 'exam4', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 有一个由数字 1 ， 2 ， ... ， 9 组成的数字串（长度不超过 200 ），问如何将 M(M&lt;=20) 个加号 (&quot;+&quot;) 插入到这个数字串中，使所形成的算术表达式的值最小。请编一个程序解决这个问题。 注意： 加号不能加在数字串的最前面或最末尾，也不应有两个或两个以上的加号相邻。 M 保证小于数字串的长度。 例如：数字串 79846 ，若需要加入两个加号，则最佳方案为 79+8+46 ，算术表达式的值 133 。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 数字串在输入文件的第一行行首（数字串中间无空格且不折行），Ｍ的值在输入文件的第二行行首。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出所求得的最小和的精确值。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nexam4.in<br />\r\n82363983742<br />\r\n3</p>\r\n<p>输出：<br />\r\nexam4.out<br />\r\n2170</p>', 2000, 128, 5, 0, '2012-04-05 16:23:01'),
(125, 'Perform巡回演出', 'candy', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; Flute 市的 Phlharmoniker 乐团 2000 年准备到 Harp 市做一次大型演出 , 本着普及古典音乐的目的 , 乐团指挥 L.Y.M 准备在到达 Harp 市之前先在周围一些小城市作一段时间的巡回演出 , 此后的几天里 , 音乐家们将每天搭乘一个航班从一个城市飞到另一个城市 , 最后才到达目的地 Harp 市 ( 乐团可多次在同一城市演出 ). <br />\r\n&nbsp;&nbsp; 由于航线的费用和班次每天都在变 , 城市和城市之间都有一份循环的航班表 , 每一时间 , 每一方向 , 航班表循环的周期都可能不同 . 现要求寻找一张花费费用最小的演出表 .</p>\r\n<p><strong> </strong>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输入文件包括若干个场景 . 每个场景的描述由一对整数 n(2&lt;=n&lt;=10) 和 k(1&lt;=k&lt;=1000) 开始 , 音乐家们要在这 n 个城市作巡回演出 , 城市用 1..n 标号 , 其中 1 是起点 Flute 市 ,n 是终点 Harp 市 , 接下来有 n*(n-1) 份航班表 , 一份航班表一行 , 描述每对城市之间的航线和价格 , 第一组 n-1 份航班表对应从城市 1 到其他城市 (2,3,...n) 的航班 , 接下的 n-1 行是从城市 2 到其他城市 (1,3,4...n) 的航班 , 如此下去 . <br />\r\n&nbsp;&nbsp; 每份航班又一个整数 d(1&lt;=d&lt;=30) 开始 , 表示航班表循环的周期 , 接下来的 d 个非负整数表示 1,2...d 天对应的两个城市的航班的价格 , 价格为零表示那天两个城市之间没有航班 . 例如 &quot;3 75 0 80&quot; 表示第一天机票价格是 75KOI, 第二天没有航班 , 第三天的机票是 80KOI, 然后循环 : 第四天又是 75KOI, 第五天没有航班 , 如此循环 . 输入文件由 n=k=0 的场景结束 .</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 对每个场景如果乐团可能从城市 1 出发 , 每天都要飞往另一个城市 , 最后 ( 经过 k 天 ) 抵达城市 n, 则输出这 k 个航班价格之和的最小值 . 如果不可能存在这样的巡回演出路线 , 输出 0.</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\ncandy.in<br />\r\n3 6<br />\r\n2 130 150<br />\r\n3 75 0 80<br />\r\n7 120 110 0 100 110 120 0<br />\r\n4 60 70 60 50<br />\r\n3 0 135 140<br />\r\n2 70 80<br />\r\n2 3<br />\r\n2 0 70<br />\r\n1 80<br />\r\n0 0</p>\r\n<p>输出：</p>\r\n<p>&nbsp;</p>\r\n<p>candy.out</p>\r\n<p>&nbsp;</p>\r\n<p>460</p>\r\n<p>&nbsp;</p>\r\n<p>0</p>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(126, '自动统计机', 'stats', '<p>奶牛们最近在学习统计学理论，但那些机械烦琐的对数据的统计分析几乎把她们搞疯了。于是奶牛们找到了你，希望你能帮帮她们。</p>\r\n<p>你拿到了一张写着N (1 &lt;= N &lt;= 500)个数的表，表中第i个数字为X_i (-5,000 &lt;= X_i &lt;= 5000)，你的任务是计算如下两个值：</p>\r\n<ul>\r\n    <li>所有数的平均数（所有数的和除以N）</li>\r\n    <li>所有数的中位数（如果N是奇数，中位数为排序后的数列里位于正中的那个；如果N是偶数，中位数是排序后的数列位于正中的两个数的平均数）</li>\r\n</ul>\r\n<p>所有与标准输出的误差小于0.002的答案都被认为是正确的。你可以多输出几位小数以保证精度。</p>\r\n<p>程序名: stats</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 1个正整数N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1为1个整数：X_i</li>\r\n</ul>\r\n<p>输入样例 (stats.in):</p>\r\n<p>5 12 4 6 8 2</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出所有数的平均数</li>\r\n</ul>\r\n<ul>\r\n    <li>第2行: 输出所有数的中位数</li>\r\n</ul>\r\n<p>输出样例 (stats.out):</p>\r\n<pre>\r\n6.400000\r\n6.000000\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>平均数：(12+4+6+8+2)/5=6.4</p>\r\n<p>数表{2, 4, 6, 8, 12}的中位数为6</p>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(127, '挖湖', 'makelake', '<p>Farmer John想让奶牛们帮他在农场上挖个湖。FJ将他想改造成湖的草地划成了R (3 &lt;= R &lt;= 100)行C (3 &lt;= C &lt;= 100)列，每个格子都是6英尺*6英尺的正方形，并且有个单位为英寸的全格平均高度elev_rc (10 &lt;= elev_rc &lt;= 5000)。</p>\r\n<p>此外，为了他的计划，FJ教会了所有奶牛一项特殊技：战争践踏:)。技能作用范围为3*3的、左上角为R_s,C_s (1 &lt;= R_s &lt;= R-2; 1 &lt;= C_s &lt;= C-2)的正方形区域，效果为把这块区域的地面高度压低D_s (1 &lt;= D_s &lt;= 40)英寸。 不过，技能实际的效果不是很尽人意：事实上，奶牛只能把该区域中高度大于最大高度 - D_s的草地高度压低到最大高度 - D_s，也就是说，区域中可能出现没有被压过的，或者被压低高度小于D_s的格子。</p>\r\n<p>FJ清楚草地上各格子目前的高度，奶牛们发动技能的N (1 &lt;= N &lt;= 20000)个地点，以及挖完湖注完水后的水面高度E (0 &lt;= E &lt;= 5000)。他希望你帮忙计算一下湖中水的总体积（以立方英寸为单位）。这个值保证不超过2,000,000,000。湖周围是一圈很高的堤坝，你不用担 心水会从湖的边缘溢出。</p>\r\n<p>考虑一块将变成湖的4*6的草地。其中每块地的初始高度如下图所示：</p>\r\n<pre>\r\n                     列编号\r\n                 1  2  3  4  5  6\r\n        第1行:  28 25 20 32 34 36\r\n        第2行:  27 25 20 20 30 34\r\n        第3行:  24 20 20 20 20 30\r\n        第4行:  20 20 14 14 20 20\r\n</pre>\r\n<p>地图的右上角有一块高地，最高点高度为36，左上角也有个最高点高度为28的土包。第4行中间的地势比较低。在奶牛发动一次参数为&ldquo;1 4 4&rdquo;的战争践踏后，草地变成了如下的样子：</p>\r\n<pre>\r\n                 1  2  3  4  5  6\r\n        第1行:  28 25 20 32 32 32\r\n        第2行:  27 25 20 20 30 32\r\n        第3行:  24 20 20 20 20 30\r\n        第4行:  20 20 14 14 20 20\r\n</pre>\r\n<p>注意，只有3块草地被压得低了些；其余格子由于本来高度就比较低，根本没有被压过。如果随后FJ指挥奶牛们在左上角发动一次技能，参数为&ldquo;1 1 10&rdquo;，技能施放后草地的状态如下：</p>\r\n<pre>\r\n                 1  2  3  4  5  6\r\n        第1行:  18 18 18 32 32 32\r\n        第2行:  18 18 18 20 30 32\r\n        第3行:  18 18 18 20 20 30\r\n        第4行:  20 20 14 14 20 20\r\n  \r\n</pre>\r\n<p>如果按设计，湖的水面高度为22英寸，那么草地各部分的水深为：</p>\r\n<pre>\r\n                 1  2  3  4  5  6\r\n        第1行:   4  4  4 -- -- --\r\n        第2行:   4  4  4  2 -- --\r\n        第3行:   4  4  4  2  2 --\r\n        第4行:   2  2  8  8  2  2\r\n</pre>\r\n<p>草地上各块水深的和为66。因为每块草地面积为6英尺*6英尺，于是池中水的总体积为66 * 72英寸 * 72英寸 = 342,144立方英寸（1英尺 = 12英寸）。</p>\r\n<p>请你写个程序，帮FJ计算湖中水的体积。</p>\r\n<p>程序名: makelake</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 4个用空格隔开的整数：R，C，E，N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..R+1行: 第i+1行为C个用空格隔开的整数，描述了第i行各列的草地高度</li>\r\n</ul>\r\n<ul>\r\n    <li>第R+2..R+N+1行: 第i+R+1行为3个用空格隔开的整数R_s、C_s、D_s，为奶牛们依次发动的技能的参数</li>\r\n</ul>\r\n<p>输入样例 (makelake.in):</p>\r\n<pre>\r\n4 6 22 2\r\n28 25 20 32 34 36\r\n27 25 20 20 30 34\r\n24 20 20 20 20 30\r\n20 20 14 14 20 20\r\n1 4 4\r\n1 1 10\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>输入即为题中给的例子。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为挖好后的湖中水的体积，单位为立方英寸</li>\r\n</ul>\r\n<p>输出样例 (makelake.out):</p>\r\n<pre>\r\n342144\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(128, '混乱的齿轮', 'rollers', '<p>Farmer John最近买了台新机器，来帮他做往牛棚里塞干草的体力活。但是，由于设计的不合理，机器中有很多冗余的齿轮。整个机器由一个连在电动机上的大齿轮驱动，这个齿轮被安装在位置(0,0)。FJ希望知道，在这个机器启动后，最后转动起来的齿轮是哪一个。</p>\r\n<p><a href="../../../../wiki/Image:Roller.jpg" class="image" title="Image:Roller.jpg"><img width="162" height="152" src="../../../../mw/images/a/a1/Roller.jpg" alt="Image:Roller.jpg" longdesc="/wiki/Image:Roller.jpg" /></a></p>\r\n<p>FJ详尽地记录了所有N (2 &lt;= N &lt;= 1080)个齿轮的位置x_i,y_i (-5,000 &lt;= x_i &lt;= 5,000; -5,000 &lt;= y_i &lt;= 5,000)和半径r_i (3 &lt;= r_i &lt;= 1024)。你的任务是，找出整个传动系统末端的齿轮（一个被其他齿轮带动，但没有带动其他任何装置的齿轮）的位置。除了驱动整个机器的大齿轮，其他齿轮 都只会被另一个齿轮带动。</p>\r\n<p>程序名: rollers</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 1个整数N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行给出了齿轮i的参数：x_i，y_i，以及r_i</li>\r\n</ul>\r\n<p>输入样例 (rollers.in):</p>\r\n<pre>\r\n3\r\n0 0 30\r\n30 40 20\r\n-15 100 55\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>机器中一共有3个齿轮。第一个齿轮被放在原点，半径为30。它带动了位于(30,40)的半径为20的齿轮，于是位置为(-15,100)的半径为55的齿轮最终被第二个齿轮带动。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出2个用空格隔开的整数x，y，表示传动系统末端齿轮的位置</li>\r\n</ul>\r\n<p>输出样例 (rollers.out):</p>\r\n<pre>\r\n-15 100\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(129, '麻烦的干草打包机', 'baler', '<p>Farmer John新买的干草打包机的内部结构大概算世界上最混乱的了，它不象普通的机器一样有明确的内部传动装置，而是，N (2 &lt;= N &lt;= 1050)个齿轮互相作用，每个齿轮都可能驱动着多个齿轮。</p>\r\n<p>FJ记录了对于每个齿轮i，记录了它的3个参数：X_i，Y_i表示齿轮中心的位置坐标(-5000 &lt;= X_i &lt;= 5000; -5000 &lt;= Y_i &lt;= 5000)；R_i表示该齿轮的半径(3 &lt;= R_i &lt;= 800)。驱动齿轮的位置为0,0，并且FJ也知道最终的工作齿轮位于X_t,Y_t。</p>\r\n<p>驱动齿轮顺时针转动，转速为10,000转/小时。你的任务是，确定传动序列中所有齿轮的转速。传动序列的定义为，能量由驱动齿轮传送到 工作齿轮的过程中用到的所有齿轮的集合。对能量传送无意义的齿轮都应当被忽略。在一个半径为Rd，转速为S转/每小时的齿轮的带动下，与它相接的半径为 Rx的齿轮的转速将为-S*Rd/Rx转/小时。S前的负号的意思是，一个齿轮带动的另一个齿轮的转向会与它的转向相反。</p>\r\n<p><a class="image" title="Image:Baler.jpg" href="../../../../wiki/Image:Baler.jpg"><img border="0" alt="Image:Baler.jpg" width="298" longdesc="http://192.168.1.253/wiki/Image:Baler.jpg" height="232" src="../../../../mw/images/b/b4/Baler.jpg" /></a></p>\r\n<p>FJ只对整个传动序列中所有齿轮速度的绝对值之和感兴趣，你的任务也就相应转化成求这个值。机器中除了驱动齿轮以外的所有齿轮都被另外某个齿轮带动，并且不会出现2个不同的齿轮带动同一个齿轮的情况。</p>\r\n<p>相信你能轻易地写个程序来完成这些计算</p>\r\n<p>程序名: baler</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 3个用空格隔开的整数：N，X_t，Y_t</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1描述了齿轮i的位置及半径：X_i，Y_i，以及R_i</li>\r\n</ul>\r\n<p>输入样例 (baler.in):</p>\r\n<pre>\r\n4 32 54\r\n0 0 10\r\n0 30 20\r\n32 54 20\r\n-40 30 20\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>机器里一共有4个齿轮，位于0,0的是半径为10的驱动齿轮，它带动了位于0,30的，半径为20的某个齿轮。这个齿轮又间接带动了位于32,54，半径为20的工作齿轮，以及一个位于-40,30，半径同样为20的冗余的齿轮。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出所有在传动中起到作用的齿轮转速的绝对值，包括驱动齿轮和工作齿轮。只需要输出的整数部分，与<b>答案相差不超过1</b>即可。</li>\r\n</ul>\r\n<p>输出样例 (baler.out):</p>\r\n<pre>\r\n20000\r\n</pre>\r\n<p>输出说明:</p>\r\n<pre>\r\n齿轮 位置  半径     转速\r\n1 (0,0)     10     10,000\r\n2 (0,30)    20     -5,000\r\n3 (32,54)   20      5,000\r\n                  ------\r\n齿轮转速绝对值之和:20,000\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:01'),
(130, '游荡的奶牛', 'ctravel', '<p>奶牛们在被划分成N行M列(2 &lt;= N &lt;= 100; 2 &lt;= M &lt;= 100)的草地上游走，试图找到整块草地中最美味的牧草。Farmer John在某个时刻看见贝茜在位置(R1, C1)，恰好T (0 &lt; T &lt;= 15)秒后，FJ又在位置(R2, C2)与贝茜撞了正着。FJ并不知道在这T秒内贝茜是否曾经到过(R2, C2)，他能确定的只是，现在贝茜在那里。</p>\r\n<p>设S为奶牛在T秒内从(R1, C1)走到(R2, C2)所能选择的路径总数，FJ希望有一个程序来帮他计算这个值。每一秒内，奶牛会水平或垂直地移动1单位距离（奶牛总是在移动，不会在某秒内停在它上一 秒所在的点）。草地上的某些地方有树，自然，奶牛不能走到树所在的位置，也不会走出草地。</p>\r\n<p>现在你拿到了一张整块草地的地形图，其中''.''表示平坦的草地，''*''表示挡路的树。你的任务是计算出，一头在T秒内从(R1, C1)移动到(R2, C2)的奶牛可能经过的路径有哪些。</p>\r\n<p>程序名: ctravel</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 3个用空格隔开的整数：N，M，T</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行为M个连续的字符，描述了草地第i行各点的情况，保证字符是''.''和''*''中的一个</li>\r\n</ul>\r\n<ul>\r\n    <li>第N+2行: 4个用空格隔开的整数：R1，C1，R2，以及C2</li>\r\n</ul>\r\n<p>输入样例 (ctravel.in):</p>\r\n<pre>\r\n4 5 6\r\n...*.\r\n...*.\r\n.....\r\n.....\r\n1 3 1 5\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>草地被划分成4行5列，奶牛在6秒内从第1行第3列走到了第1行第5列。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出S，含义如题中所述</li>\r\n</ul>\r\n<p>输出样例 (ctravel.out):</p>\r\n<pre>\r\n1\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>奶牛在6秒内从(1,3)走到(1,5)的方法只有一种（绕过她面前的树）。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(131, '奶牛渡河', 'cowriver', '<p>Farmer John以及他的N(1 &lt;= N &lt;= 2,500)头奶牛打算过一条河，但他们所有的渡河工具，仅仅是一个木筏。</p>\r\n<p>由于奶牛不会划船，在整个渡河过程中，FJ必须始终在木筏上。在这个基础上，木筏上的奶牛数目每增加1，FJ把木筏划到对岸就得花更多的时间。</p>\r\n<p>当FJ一个人坐在木筏上，他把木筏划到对岸需要M(1 &lt;= M &lt;= 1000)分钟。当木筏搭载的奶牛数目从i-1增加到i时，FJ得多花M_i(1 &lt;= M_i &lt;= 1000)分钟才能把木筏划过河（也就是说，船上有1头奶牛时，FJ得花M+M_1分钟渡河；船上有2头奶牛时，时间就变成M+M_1+M_2分钟。后面 的依此类推）。那么，FJ最少要花多少时间，才能把所有奶牛带到对岸呢？当然，这个时间得包括FJ一个人把木筏从对岸划回来接下一批的奶牛的时间。</p>\r\n<p>程序名: cowriver</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 M</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1为1个整数：M_i</li>\r\n</ul>\r\n<p>输入样例 (cowriver.in):</p>\r\n<pre>\r\n5 10\r\n3\r\n4\r\n6\r\n100\r\n1\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>FJ带了5头奶牛出门。如果是单独把木筏划过河，FJ需要花10分钟，带上1头奶牛的话，是13分钟，2头奶牛是17分钟，3头是23分钟，4头是123分钟，将5头一次性载过去，花费的时间是124分钟。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为FJ把所有奶牛都载过河所需的最少时间</li>\r\n</ul>\r\n<p>输出样例 (cowriver.out):</p>\r\n<pre>\r\n50\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>Farmer John第一次带3头奶牛过河（23分钟），然后一个人划回来（10分钟），最后带剩下的2头奶牛一起过河（17分钟），总共花费的时间是23+10+17 = 50分钟。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(132, '珍珠分对', 'ppairing', '<p>作为生日礼物,BESSIE得到了N (2 &lt;= N &lt;= 100,000;N%2 == 0)颗珍珠, 每颗珍珠的颜色为C种颜色之一 (1 &lt;= C &lt;= N).</p>\r\n<p>BESSIE发现N是一个偶数,她想把所有珍珠分成N/2对,使得每对的两颗珍珠的颜色都不同.</p>\r\n<p>BESSIE知道这样一个分配在给定数据里都是可能的,请帮助她找到这样一个分配. 如果有多个解,任意一个,输出<b>任意一个</b>.</p>\r\n<p>题名: ppairing</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 两个数, N 和 C</li>\r\n</ul>\r\n<ul>\r\n    <li>第 2..C + 1 行: 第i+1行含有一个数,C_i, 颜色为i的珍珠的数目.</li>\r\n</ul>\r\n<p>样例输入 (ppairing.in):</p>\r\n<pre>\r\n8 3\r\n2\r\n2\r\n4\r\n</pre>\r\n<p>输入解释:</p>\r\n<p>共8颗珍珠,2颗为颜色I,2颗为颜色II,4颗为颜色III.</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第 1..N/2行: 第i行包含两个数a_i和b_i. 对应于一对颜色分别为a_i和b_i的珍珠.</li>\r\n</ul>\r\n<p>样例输出 (ppairing.out):</p>\r\n<pre>\r\n1 3\r\n1 3\r\n2 3\r\n3 2\r\n</pre>\r\n<p>输出解释:</p>\r\n<p>BESSIE把每颗颜色为III的珍珠和一颗颜色为I/II的组成一对.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(133, '牛跑步', 'cowjog', '<p>BESSIE准备用从牛棚跑到池塘的方法来锻炼. 但是因为她懒,她只准备沿着下坡的路跑到池塘,然后走回牛棚.</p>\r\n<p>BESSIE也不想跑得太远,所以她想走最短的路经. 农场上一共有M (1 &lt;= M &lt;= 10,000)条路,每条路连接两个用1..N(1 &lt;= N &lt;= 1000)标号的地点. 更方便的是,如果X&gt;Y,则地点X的高度大于地点Y的高度. 地点N是BESSIE的牛棚;地点1是池塘.</p>\r\n<p>很快, BESSIE厌倦了一直走同一条路.所以她想走不同的路,更明确地讲,她想找出K (1 &lt;= K &lt;= 100)条不同的路经.为了避免过度劳累,她想使这K条路经为最短的K条路经.</p>\r\n<p>请帮助BESSIE找出这K条最短路经的长度.你的程序需要读入农场的地图, 一些从X_i到Y_i 的路经和它们的长度(X_i, Y_i, D_i). 所有(X_i, Y_i, D_i)满足(1 &lt;= Y_i &lt; X_i; Y_i &lt; X_i &lt;= N, 1 &lt;= D_i &lt;= 1,000,000).</p>\r\n<p>题名: cowjog</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 3个数: N, M, 和K</li>\r\n</ul>\r\n<ul>\r\n    <li>第 2..M+1行: 第 i+1 行包含3个数 X_i, Y_i, 和 D_i, 表示一条下坡的路.</li>\r\n</ul>\r\n<p>样例输入 (cowjog.in):</p>\r\n<pre>\r\n5 8 7\r\n5 4 1\r\n5 3 1\r\n5 2 1\r\n5 1 1\r\n4 3 4\r\n3 1 1\r\n3 2 1\r\n2 1 1\r\n</pre>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1..K行: 第i行包含第i最短路经的长度,或-1如果这样的路经不存在.如果多条路经有同样的长度,请注意将这些长度逐一列出.</li>\r\n</ul>\r\n<p>样例输出 (cowjog.out):</p>\r\n<pre>\r\n1\r\n2\r\n2\r\n3\r\n6\r\n7\r\n-1\r\n</pre>\r\n<p>输出解释:</p>\r\n<p>路经分别为(5-1), (5-3-1), (5-2-1), (5-3-2-1), (5-4-3-1),(5-4-3-2-1).</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(134, '晚餐队列安排', 'diningb', '<p>为了避免餐厅过分拥挤，FJ要求奶牛们分2批就餐。每天晚饭前，奶牛们都会在餐厅前排队入内，按FJ的设想，所有第2批就餐的奶牛排在队尾，队伍的前半部分则由设定为第1批就餐的奶牛占据。由于奶牛们不理解FJ的安排，晚饭前的排队成了一个大麻烦。</p>\r\n<p>第i头奶牛有一张标明她用餐批次D_i(1 &lt;= D_i &lt;= 2)的卡片。虽然所有N(1 &lt;= N &lt;= 30,000)头奶牛排成了很整齐的队伍，但谁都看得出来，卡片上的号码是完全杂乱无章的。</p>\r\n<p>在若干次混乱的重新排队后，FJ找到了一种简单些的方法：奶牛们不动，他沿着队伍从头到尾走一遍，把那些他认为排错队的奶牛卡片上的编号改 掉，最终得到一个他想要的每个组中的奶牛都站在一起的队列，例如112222或111122。有的时候，FJ会把整个队列弄得只有1组奶牛（比方 说，1111或222）。</p>\r\n<p>你也晓得，FJ是个很懒的人。他想知道，如果他想达到目的，那么他最少得改多少头奶牛卡片上的编号。所有奶牛在FJ改卡片编号的时候，都不会挪位置。</p>\r\n<p>程序名: diningb</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 1个整数：N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行是1个整数，为第i头奶牛的用餐批次D_i</li>\r\n</ul>\r\n<p>输入样例 (diningb.in):</p>\r\n<pre>\r\n7\r\n2\r\n1\r\n1\r\n1\r\n2\r\n2\r\n1\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>一共有7头奶牛，其中有3头奶牛原来被设定为第二批用餐。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为FJ最少要改几头奶牛卡片上的编号，才能让编号变成他设想中的样子</li>\r\n</ul>\r\n<p>输出样例 (diningb.out):</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>FJ选择改第1头和最后1头奶牛卡片上的编号。</p>', 1000, 128, 11, 0, '2012-04-05 16:23:02'),
(135, '越野跑', 'racing', '<p>为了能在下一次跑步比赛中有好的发挥，贝茜在一条山路上开始了她的训练。贝茜希望能在每次训练中跑得尽可能远，不过她也知道农场中的一条规定：奶牛独自进山的时间不得超过M秒(1 &lt;= M &lt;= 10,000,000)。</p>\r\n<p>整条山路被贝茜划分成T个长度相同的小段(1 &lt;= T &lt;= 100,000)，并且，贝茜用S_i表示第i个小段的路况。S_i为u，f，d这3个字母之一，它们分别表示第i个小段是上坡、平地，或是下坡。</p>\r\n<p>贝茜要花U秒(1 &lt;= U &lt;= 100)才能跑完一段上坡路，跑完一段平地的耗时是F秒(1 &lt;= F &lt;= 100)，跑完一段下坡路要花D秒(1 &lt;= D &lt;= 100)。注意，沿山路原路返回的时候，原本是上坡路的路段变成了下坡路，原本是下坡路的路段变成了上坡路。</p>\r\n<p>贝茜想知道，在能按时返回农场的前提下，她最多能在这条山路上跑多远。</p>\r\n<p>程序名: racing</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 5个用空格隔开的整数：M，T，U，F，以及D</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..T+1行: 第i+1行为1个字母S_i，描述了第i段山路的路况</li>\r\n</ul>\r\n<p>输入样例 (racing.in):</p>\r\n<pre>\r\n13 5 3 2 1\r\nu\r\nf\r\nu\r\nd\r\nf\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>贝茜跑步的最大耗时为13秒（这么短...），她跑步的山路一共被划成5段。贝茜跑完一段上坡路的耗时为3秒，平地为2秒，下坡路为1秒。山路各段的走向如下图所示：</p>\r\n<pre>\r\n _/\\_\r\n/\r\n</pre>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为贝茜在按时回到农场的前提下，最多能跑到多远</li>\r\n</ul>\r\n<p>输出样例 (racing.out):</p>\r\n<pre>\r\n3\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>贝茜跑完山路的前3段，然后返回，总耗时为3 + 2 + 3 + 1 + 2 + 1 = 12 秒，只比她能在外面呆的时限少1秒。如果她跑得更远，就无法按时回到农场。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(136, '奶牛式乘法', 'cowmult', '<p>做厌了乘法计算题的贝茜，自创了一种新的乘法运算法则。在这套法则里，A*B等于一个取自A、一个取自B的所有数字对的乘积的和。比方 说，123*45等于1*4 + 1*5 + 2*4 + 2*5 + 3*4 + 3*5 = 54。对于2个给定的数A、B (1 &lt;= A, B &lt;= 1,000,000,000)，你的任务是，用新的乘法法则计算A*B的值。</p>\r\n<p>程序名: cowmult</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>\r\n    <p>第1行: 2个用空格隔开的整数：A、B</p>\r\n    </li>\r\n</ul>\r\n<p>输入样例 (cowmult.in):</p>\r\n<p>123 45</p>\r\n<p>输入说明:</p>\r\n<p>相乘的2个数分别为123 和 45。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>\r\n    <p>第1行: 输出1个整数，即新的乘法法则下A*B的值</p>\r\n    </li>\r\n</ul>\r\n<p>输出样例 (cowmult.out):</p>\r\n<p>54</p>', 1000, 128, 10, 0, '2012-04-05 16:23:02'),
(137, '连线游戏', 'lines', '<p>Farmer John最近发明了一个游戏，来考验自命不凡的贝茜。游戏开始的时候，FJ会给贝茜一块画着N (2 &lt;= N &lt;= 200)个不重合的点的木板，其中第i个点的横、纵坐标分别为X_i和Y_i (-1,000 &lt;= X_i &lt;=1,000；-1,000 &lt;= Y_i &lt;= 1,000)。</p>\r\n<p>贝茜可以选两个点画一条过它们的直线，当且仅当平面上不存在与画出直线平行的直线。游戏结束时贝茜的得分，就是她画出的直线的总条数。为了在游戏中胜出，贝茜找到了你，希望你帮她计算一下最大可能得分。</p>\r\n<p>程序名: lines</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 输入1个正整数：N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行用2个用空格隔开的整数X_i、Y_i，描述了点i的坐标</li>\r\n</ul>\r\n<p>输入样例 (lines.in):</p>\r\n<pre>\r\n4\r\n-1 1\r\n-2 0\r\n0 0\r\n1 1\r\n</pre>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，表示贝茜的最大得分，即她能画出的互不平行的直线数</li>\r\n</ul>\r\n<p>输出样例 (lines.out):</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>贝茜能画出以下4种斜率的直线：-1，0，1/3以及1。</p>', 1000, 16, 12, 0, '2012-04-05 16:23:02'),
(138, '流星雨', 'meteor', '<p>贝茜听说了一个骇人听闻的消息：一场流星雨即将袭击整个农场，由于流星体积过大它们无法在撞击到地面前燃烧殆尽，届时将会对它撞到的一切东西造成毁 灭性的打击。很自然地，贝茜开始担心自己的安全问题。以FJ牧场中最聪明的奶牛的名誉起誓，她一定要在被流星砸到前，到达一个安全的地方（也就是说，一块 不会被任何流星砸到的土地）。如果将牧场放入一个直角坐标系中，贝茜现在的位置是原点，并且，贝茜不能踏上一块被流星砸过的土地。</p>\r\n<p>根据预报，一共有M颗流星(1 &lt;= M &lt;= 50,000)会坠落在农场上，其中第i颗流星会在时刻T_i (0 &lt;= T_i &lt;= 1,000)砸在坐标为(X_i, Y_i) (0 &lt;= X_i &lt;= 300；0 &lt;= Y_i &lt;= 300)的格子里。流星的力量会将它所在的格子，以及周围4个相邻的格子都化为焦土，当然贝茜也无法再在这些格子上行走。</p>\r\n<p>贝茜在时刻0开始行动，它只能在第一象限中，平行于坐标轴行动，每1个时刻中，她能移动到相邻的（一般是4个）格子中的任意一个，当然目标格子要没有被烧焦才行。如果一个格子在时刻t被流星撞击或烧焦，那么贝茜只能在t之前的时刻在这个格子里出现。</p>\r\n<p>请你计算一下，贝茜最少需要多少时间才能到达一个安全的格子。</p>\r\n<p>程序名: meteor</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 1个正整数：M</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..M+1行: 第i+1行为3个用空格隔开的整数：X_i，Y_i，以及T_i</li>\r\n</ul>\r\n<p>输入样例 (meteor.in):</p>\r\n<pre>\r\n4\r\n0 0 2\r\n2 1 2\r\n1 1 2\r\n0 3 5\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>一共有4颗流星将坠落在农场，它们落地点的坐标分别是(0, 0)，(2, 1)，(1, 1)以及(0, 3)，时刻分别为2，2，2，5。</p>\r\n<p>&nbsp;</p>\r\n<pre>\r\n    t = 0                t = 2              t = 5\r\n5|. . . . . . .     5|. . . . . . .     5|. . . . . . .    \r\n4|. . . . . . .     4|. . . . . . .     4|# . . . . . .   * = 流星落点\r\n3|. . . . . . .     3|. . . . . . .     3|* # . . . . .  \r\n2|. . . . . . .     2|. # # . . . .     2|# # # . . . .   # = 行走禁区\r\n1|. . . . . . .     1|# * * # . . .     1|# # # # . . .   \r\n0|B . . . . . .     0|* # # . . . .     0|# # # . . . .   \r\n  --------------      --------------      -------------- \r\n  0 1 2 3 4 5 6       0 1 2 3 4 5 6       0 1 2 3 4 5 6 \r\n</pre>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，即贝茜逃生所花的最少时间。如果贝茜无论如何都无法在流星雨中存活下来，输出-1</li>\r\n</ul>\r\n<p>输出样例 (meteor.out):</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>如果我们观察在t=5时的牧场，可以发现离贝茜最近的安全的格子是(3,0)&mdash;&mdash;不过由于早第二颗流星落地时，贝茜直接跑去(3,0)的路 线就被封死了。离贝茜第二近的安全格子为(4,0)，但它的情况也跟(3,0)一样。再接下来的格子就是在(0,5)-(5,0)这条直线上。在这些格子 中，(0,5)，(1,4)以及(2,3)都能在5个单位时间内到达。</p>\r\n<pre>\r\n5|. . . . . . .   \r\n4|. . . . . . .   \r\n3|3 4 5 . . . .    某个合法的逃生方案中\r\n2|2 . . . . . .    贝茜每个时刻所在地点\r\n1|1 . . . . . .   \r\n0|0 . . . . . .   \r\n  -------------- \r\n  0 1 2 3 4 5 6\r\n</pre>', 1000, 128, 14, 0, '2012-04-05 16:23:02'),
(139, '麻烦的聚餐', 'egroup', '<p>为了避免餐厅过分拥挤，FJ要求奶牛们分3批就餐。每天晚饭前，奶牛们都会在餐厅前排队入内，按FJ的设想，所有第3批就餐的奶牛排在队尾，队伍的 前端由设定为第1批就餐的奶牛占据，中间的位置就归第2批就餐的奶牛了。由于奶牛们不理解FJ的安排，晚饭前的排队成了一个大麻烦。</p>\r\n<p>第i头奶牛有一张标明她用餐批次D_i(1 &lt;= D_i &lt;= 3)的卡片。虽然所有N(1 &lt;= N &lt;= 30,000)头奶牛排成了很整齐的队伍，但谁都看得出来，卡片上的号码是完全杂乱无章的。</p>\r\n<p>在若干次混乱的重新排队后，FJ找到了一种简单些的方法：奶牛们不动，他沿着队伍从头到尾走一遍，把那些他认为排错队的奶牛卡片上的编号改 掉，最终得到一个他想要的每个组中的奶牛都站在一起的队列，例如111222333或者333222111。哦，你也发现了，FJ不反对一条前后颠倒的队 列，那样他可以让所有奶牛向后转，然后按正常顺序进入餐厅。</p>\r\n<p>你也晓得，FJ是个很懒的人。他想知道，如果他想达到目的，那么他最少得改多少头奶牛卡片上的编号。所有奶牛在FJ改卡片编号的时候，都不会挪位置。</p>\r\n<p>程序名: egroup</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 1个整数：N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行是1个整数，为第i头奶牛的用餐批次D_i</li>\r\n</ul>\r\n<p>输入样例 (egroup.in):</p>\r\n<pre>\r\n5\r\n1\r\n3\r\n2\r\n1\r\n1\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>队列中共有5头奶牛，第1头以及最后2头奶牛被设定为第一批用餐，第2头奶牛的预设是第三批用餐，第3头则为第二批用餐。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为FJ最少要改几头奶牛卡片上的编号，才能让编号变成他设想中的样子</li>\r\n</ul>\r\n<p>输出样例 (egroup.out):</p>\r\n<pre>\r\n1\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>如果FJ想把当前队列改成一个不下降序列，他至少要改2头奶牛的编号，一种可行的方案是：把队伍中2头编号不是1的奶牛的编号都改成1。不过，如果FJ选择把第1头奶牛的编号改成3就能把奶牛们的队伍改造成一个合法的不上升序列了。</p>', 1000, 128, 11, 0, '2012-04-05 16:23:02'),
(140, '化装晚会', 'costume', '<p>万圣节又到了！Farmer John打算带他的奶牛去参加一个化装晚会，但是，FJ只做了一套能容 下两头总长不超过S(1 &lt;= S &lt;= 1,000,000)的牛的恐怖服装。FJ养了N(2 &lt;= N &lt;= 20,000)头按1..N顺序编号的奶牛，编号为i的奶牛的长度为L_i(1 &lt;= L_i &lt;= 1,000,000)。如果两头奶牛的总长度不超过S，那么她们就能穿下这套服装。</p>\r\n<p>FJ想知道，如果他想选择两头不同的奶牛来穿这套衣服，一共有多少种满足条件的方案。</p>\r\n<p>程序名: costume</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 S</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1为1个整数：L_i</li>\r\n</ul>\r\n<p>输入样例 (costume.in):</p>\r\n<pre>\r\n4 6\r\n3\r\n5\r\n2\r\n1\r\n</pre>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，表示FJ可选择的所有方案数。注意奶牛顺序不同的两种方案是被视为相同的</li>\r\n</ul>\r\n<p>输出样例 (costume.out):</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>4种选择分别为：奶牛1和奶牛3；奶牛1和奶牛4；奶牛2和奶牛4；奶牛3和奶牛4。</p>', 1000, 16, 9, 0, '2012-04-05 16:23:03'),
(141, '奶牛的选举', 'elect', '<p>在推翻了Farmer John这个残暴的统治者后，奶牛们举行了她们的第一次总统大选，贝茜也是N(1 &lt;= N &lt;= 50,000)头候选奶牛之一。不过，作为一头有远见的奶牛，贝茜想在选举开始前就计算出，哪头奶牛最有可能在竞争中胜出。</p>\r\n<p>选举分两轮进行。第一轮中，得票最多的K(1 &lt;= K &lt;= N)头奶牛晋级到下一轮，在第二轮选举中得票最多的奶牛成为最终的总统。</p>\r\n<p>现在，贝茜告诉了你奶牛i在第一轮投票中的期望得票数A_i(1 &lt;= A_i &lt;= 1,000,000,000)以及她在第二轮投票中的期望得票数B_i(1 &lt;= B_i &lt;= 1,000,000,000)（如果奶牛i能成功晋级的话），她希望你帮她计算一下，如果这些数据无误，那么哪头奶牛将成为总统。任何数值都不会在A_i 列表中出现两次，在B_i列表中也是如此。</p>\r\n<p>程序名: elect</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 K</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1为2个用空格隔开的整数：A_i 和 B_i</li>\r\n</ul>\r\n<p>输入样例 (elect.in):</p>\r\n<pre>\r\n5 3\r\n3 10\r\n9 2\r\n5 6\r\n8 4\r\n6 5\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>一共有5头奶牛参加选举，在第一轮中得票最多的3头奶牛可以晋级至第二轮。奶牛们在第一轮中的得票期望分别为3，9，5，8，6，第二轮中，分别为10，2，6，4，5。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为将被选为总统的奶牛的编号</li>\r\n</ul>\r\n<p>输出样例 (elect.out):</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>奶牛2，4，5晋级到第二轮。奶牛5在第二轮投票中得到了最多的5票，赢得了选举的最终胜利。</p>', 1000, 16, 10, 0, '2012-04-05 16:23:03'),
(142, 'iCow播放器', 'icow', '<p>被无止境的农活压榨得筋疲力尽后，Farmer John打算用他在MP3播放器市场 新买的iCow来听些音乐，放松一下。FJ的iCow里存了N(1 &lt;= N &lt;= 1,000)首曲子，按1..N依次编号。至于曲子播放的顺序，则是按一个Farmer John自己设计的算法来决定：</p>\r\n<ul>\r\n    <li>第i首曲子有一个初始权值R_i(1 &lt;= R_i &lt;= 10,000)。</li>\r\n</ul>\r\n<ul>\r\n    <li>当一首曲子播放完毕，接下来播放的将是所有曲子中权值最大的那首（如果有两首或多首曲子的权值相同，那么这些曲子中编号最小的那首会被选中）。</li>\r\n</ul>\r\n<ul>\r\n    <li>一首曲子在播放结束后，它的权值会被平均地分给其他N-1首曲子，它本身的权值清零。</li>\r\n</ul>\r\n<ul>\r\n    <li>如果一首曲子的权值无法被平均分配（也就是说，无法被N-1整除），那么被N-1除的余数部分将会以1为单位，顺次分配给排名靠前的曲子（也就是说，顺序为曲目1、曲目2...依次下去。当然，刚播放过的那首曲子需要被跳过），直到多出的部分被分配完。</li>\r\n</ul>\r\n<p>在选定的下一首曲子播放完毕后，这个算法再次被执行，调整曲子的权值，并选出再接下来播放的曲目。</p>\r\n<p>请你计算一下，按FJ的算法，最先播放的T(1 &lt;= T &lt;= 1000)首曲子分别是哪些。</p>\r\n<p>程序名: icow</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 T</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行为1个整数：R_i</li>\r\n</ul>\r\n<p>输入样例 (icow.in):</p>\r\n<pre>\r\n3 4\r\n10\r\n8\r\n11\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>iCow里存了3首曲子，初始权值依次为10，8，11。你的任务是指出它播放的前4首曲子依次是哪些。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1..T行: 第i行为1个整数，表示iCow播放的第i首曲子</li>\r\n</ul>\r\n<p>输出样例 (icow.out):</p>\r\n<pre>\r\n3\r\n1\r\n2\r\n3\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>每一首曲子播放前，三首曲子的权值分别为：</p>\r\n<pre>\r\nR_1  R_2  R_3\r\n10    8   11  -&gt; 播放 #3  11/2 = 5, 权值余量 = 1\r\n16   13    0  -&gt; 播放 #1  16/2 = 8\r\n 0   21    8  -&gt; 播放 #2  21/2 = 10, 权值余量 = 1\r\n11    0   18  -&gt; 播放 #3  ...\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:03'),
(143, '洗牌作弊', 'cheat', '<p>译 by CmYkRgB123</p>\r\n<p>贝茜正在和她的N-1个奶牛朋友们玩扑克牌，她们用了一叠有K (N &le; K &le; 100,000 K是N的整倍数) 张牌的扑克。这叠扑克有 M = K/N 张&ldquo;好牌&rdquo;和 K-M 张&ldquo;坏牌&rdquo;。贝茜负责给大家发牌，当然，她想把所有的好牌发给自己。她非常喜欢赢。</p>\r\n<p>她们坐成一圈，逆时针方向发牌。她的朋友们怀疑她会搞鬼，于是发明了一个特殊的发牌规则，试图阻止贝茜搞鬼。她们把规则列举如下：</p>\r\n<ol>\r\n    <li>从贝茜的右面的奶牛开始发牌。</li>\r\n    <li>每发一张牌，贝茜必须把接下来的 P (1 &le; P &le; 10) 张牌按原顺序放到这叠扑克的最后。</li>\r\n    <li>逆时针方向发牌，对每个人都这样。</li>\r\n</ol>\r\n<p>然而，贝茜发了疯，不顾一切的想赢。她请你帮她设计洗牌一个方案，使她能得到所有的&ldquo;好牌&rdquo;。每张牌按顺序标号，第一张为#1，第二张为#2，等等。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 三个整数 N , K , P</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1..M 行: 升幂顺序排列，每行为一张好牌的位置，使得贝茜她能得到所有的&ldquo;好牌&rdquo;。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n3 9 2\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n3\r\n7\r\n8\r\n</pre>', 1000, 64, 11, 0, '2012-04-05 16:23:03'),
(144, '魅力手镯', 'charm', '<p>译 by CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>贝茜去了大卖场的珠宝商店，发现一个魅力手镯，她想把最好的宝石镶嵌在这条手镯上。她有 N (1 &le; N &le; 3,402) 种可用宝石，每种宝石 i 都有其重量 Wi (1 &le; Wi &le; 400)，与价值 Di (1 &le; Di &le; 100)，每种宝石最多只能用一次。贝茜只能把总重量不超过 M (1 &le; M &le; 12,880)的宝石镶嵌到手镯上。</p>\r\n<p>给你每个宝石的重量和价值，请你算出贝茜最多能把总价值为多大的宝石镶嵌到手镯上。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数 N , M</li>\r\n    <li>第 2..N+1 行: 第 i+1 行 有两个整数， Wi 和 Di</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数，为镶嵌的宝石的总价值。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4 6\r\n1 4\r\n2 6\r\n3 12\r\n2 7\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n23\r\n</pre>', 1000, 8, 10, 0, '2012-04-05 16:23:03'),
(145, '奶牛的比赛', 'contest', '<p>FJ的N(1 &lt;= N &lt;= 100)头奶牛们最近参加了场程序设计竞赛:)。在赛场上，奶牛们按1..N依次编号。每头奶牛的编程能力不尽相同，并且没有哪两头奶牛的水平不相上下，也就是说，奶牛们的编程能力有明确的排名。</p>\r\n<p>整个比赛被分成了若干轮，每一轮是两头指定编号的奶牛的对决。如果编号为A的奶牛的编程能力强于编号为B的奶牛(1 &lt;= A &lt;= N; 1 &lt;= B &lt;= N; A&nbsp;!= B)，那么她们的对决中，编号为A的奶牛总是能胜出。</p>\r\n<p>FJ想知道奶牛们编程能力的具体排名，于是他找来了奶牛们所有M(1 &lt;= M &lt;= 4,500)轮比赛的结果，希望你能根据这些信息，推断出尽可能多的奶牛的编程能力排名。比赛结果保证不会自相矛盾。</p>\r\n<p>程序名: contest</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 M</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..M+1行: 每行为2个用空格隔开的整数A、B，描述了参加某一轮比赛的奶牛的编号，以及结果（编号为A，即为每行的第一个数的奶牛为胜者）</li>\r\n</ul>\r\n<p>输入样例 (contest.in):</p>\r\n<pre>\r\n5 5\r\n4 3\r\n4 2\r\n3 2\r\n1 2\r\n2 5\r\n</pre>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，表示排名可以确定的奶牛的数目</li>\r\n</ul>\r\n<p>输出样例 (contest.out):</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>编号为2的奶牛输给了编号为1、3、4的奶牛，也就是说她的水平比这3头奶牛都差。而编号为5的奶牛又输在了她的手下，也就是说，她的水平比编号为5的奶牛强一些。于是，编号为2的奶牛的排名必然为第4，编号为5的奶牛的水平必然最差。其他3头奶牛的排名仍无法确定。</p>', 1000, 16, 10, 0, '2012-04-05 16:23:03'),
(146, '贝茜的晨练计划', 'cowrun', '<p>奶牛们打算通过锻炼来培养自己的运动细胞，作为其中的一员，贝茜选择的运动方式是每天进行N(1 &lt;= N &lt;= 10,000)分钟的晨跑。在每分钟的开始，贝茜会选择下一分钟是用来跑步还是休息。</p>\r\n<p>贝茜的体力限制了她跑步的距离。更具体地，如果贝茜选择在第i分钟内跑步，她可以在这一分钟内跑D_i(1 &lt;= D_i &lt;= 1,000)米，并且她的疲劳度会增加1。不过，无论何时贝茜的疲劳度都不能超过M(1 &lt;= M &lt;= 500)。如果贝茜选择休息，那么她的疲劳度就会每分钟减少1，但她必须休息到疲劳度恢复到0为止。在疲劳度为0时休息的话，疲劳度不会再变动。晨跑开始 时，贝茜的疲劳度为0。</p>\r\n<p>还有，在N分钟的锻炼结束时，贝茜的疲劳度也必须恢复到0，否则她将没有足够的精力来对付这一整天中剩下的事情。</p>\r\n<p>请你计算一下，贝茜最多能跑多少米。</p>\r\n<p>程序名: cowrun</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 2个用空格隔开的整数：N 和 M</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1为1个整数：D_i</li>\r\n</ul>\r\n<p>输入样例 (cowrun.in):</p>\r\n<pre>\r\n5 2\r\n5\r\n3\r\n4\r\n2\r\n10\r\n</pre>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，表示在满足所有限制条件的情况下，贝茜能跑的最大距离</li>\r\n</ul>\r\n<p>输出样例 (cowrun.out):</p>\r\n<pre>\r\n9\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>贝茜在第1分钟内选择跑步（跑了5米），在第2分钟内休息，在第3分钟内跑步（跑了4米），剩余的时间都用来休息。因为在晨跑结束时贝茜的疲劳度必须为0，所以她不能在第5分钟内选择跑步。</p>', 1000, 32, 10, 0, '2012-04-05 16:23:03');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(147, '架设电话线', 'phoneline', '<p>Farmer John打算将电话线引到自己的农场，但电信公司并不打算为他提供免费服务。于是，FJ必须为此向电信公司支付一定的费用。</p>\r\n<p>FJ的农场周围分布着N(1 &lt;= N &lt;= 1,000)根按1..N顺次编号的废弃的电话线杆，任意两根电话线杆间都没有电话线相连。一共P(1 &lt;= P &lt;= 10,000)对电话线杆间可以拉电话线，其余的那些由于隔得太远而无法被连接。</p>\r\n<p>第i对电话线杆的两个端点分别为A_i、B_i，它们间的距离为L_i (1 &lt;= L_i &lt;= 1,000,000)。数据中保证每对{A_i，B_i}最多只出现1次。编号为1的电话线杆已经接入了全国的电话网络，整个农场的电话线全都连到了编号 为N的电话线杆上。也就是说，FJ的任务仅仅是找一条将1号和N号电话线杆连起来的路径，其余的电话线杆并不一定要连入电话网络。</p>\r\n<p>经过谈判，电信公司最终同意免费为FJ连结K(0 &lt;= K &lt; N)对由FJ指定的电话线杆。对于此外的那些电话线，FJ需要为它们付的费用，等于其中最长的电话线的长度（每根电话线仅连结一对电话线杆）。如果需要连 结的电话线杆不超过K对，那么FJ的总支出为0。</p>\r\n<p>请你计算一下，FJ最少需要在电话线上花多少钱。</p>\r\n<p>程序名: phoneline</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 3个用空格隔开的整数：N，P，以及K</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..P+1行: 第i+1行为3个用空格隔开的整数：A_i，B_i，L_i</li>\r\n</ul>\r\n<p>输入样例 (phoneline.in):</p>\r\n<pre>\r\n5 7 1\r\n1 2 5\r\n3 1 4\r\n2 4 8\r\n3 2 3\r\n5 2 9\r\n3 4 7\r\n4 5 6\r\n</pre>\r\n<p>输入说明:</p>\r\n<p>一共有5根废弃的电话线杆。电话线杆1不能直接与电话线杆4、5相连。电话线杆5不能直接与电话线杆1、3相连。其余所有电话线杆间均可拉电话线。电信公司可以免费为FJ连结一对电话线杆。</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第1行: 输出1个整数，为FJ在这项工程上的最小支出。如果任务不可能完成，输出-1</li>\r\n</ul>\r\n<p>输出样例 (phoneline.out):</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>输出说明:</p>\r\n<p>FJ选择如下的连结方案：1-&gt;3；3-&gt;2；2-&gt;5，这3对电话线杆间需要的电话线的长度分别为4、3、9。FJ让电信公司提供那条长度为9的电话线，于是，他所需要购买的电话线的最大长度为4。</p>', 1000, 16, 13, 0, '2012-04-05 16:23:03'),
(148, '书架', 'shelf', '<p>译 by CmYkRgB123</p>\r\n<p>Farmer John最近为奶牛图书馆购买了一个书架，书架的下层很快装满了书，现在只剩下了顶层书架有空间。</p>\r\n<p>在 N (1 &le; N &le; 20,000)头牛中，第i头牛的身高为 Hi (1 &le; Hi &le; 10,000)。书架的高度为 B (1 &le; B &le; 2,000,000,007)，且 B 小于所有奶牛的身高之和。</p>\r\n<p>书架的顶层高于最高的牛的身高，但是若干个奶牛可以站成一摞，这样总高度就是它们的身高之和。总高度应大于等于书架的高度，奶牛才能取到书。</p>\r\n<p>但是越多的奶牛站成一摞，它们就越危险。你的工作就是找到一个集合，使得尽量少的奶牛站成一摞，当然，它们要能取到顶层的书。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数: N , B</li>\r\n    <li>第 2..N+1 行: 第 i+1 行包含一个整数 Hi</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数，这个使得尽量少的奶牛站成一摞取得顶层的书的集合中奶牛的个数。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n6 40\r\n6\r\n18\r\n11\r\n13\r\n19\r\n11\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n3\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:03'),
(149, '书架2', 'shelf2', '<p>译 by CmYkRgB123</p>\r\n<p>Farmer John最近为奶牛图书馆购买了一个书架，书架的下层很快装满了书，现在只剩下了顶层书架有空间。</p>\r\n<p>在 N (1 &le; N &le; 20)头牛中，第i头牛的身高为 Hi (1 &le; Hi &le; 1,000,000)。书架的高度为 B (1 &le; B &le; 2,000,000,007)，且 B 小于所有奶牛的身高之和。</p>\r\n<p>书架的顶层高于最高的牛的身高，但是若干个奶牛可以站成一摞，这样总高度就是它们的身高之和。总高度应大于等于书架的高度，奶牛才能取到书。</p>\r\n<p>但是越多的奶牛站成一摞，它们就越危险。你的工作就是找到奶牛总高度超出书架高度的最小高度。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数: N , B</li>\r\n    <li>第 2..N+1 行: 第 i+1 行包含一个整数 Hi</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个非负整数，奶牛总高度超出书架高度的最小高度。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n5 16\r\n3\r\n1\r\n3\r\n5\r\n6\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n1\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(150, '最佳老农', 'bcl', '<p>译&nbsp;: zqzas</p>\r\n<p>题目描述</p>\r\n<p>FJ打算带着他可爱的N (1 &le; N &le; 2,000)头奶牛去参加&rdquo;年度最佳老农&rdquo;的比赛.在比赛中,每个农夫把他的奶牛排成一列,然后准备经过评委检验.</p>\r\n<p>比赛中简单地将奶牛的名字缩写为其头字母(the initial letter of every cow),举个例子,FJ带了Bessie, Sylvia,和Dora,那么就可以缩写为BSD.</p>\r\n<p>FJ只需将奶牛的一个序列重新排列,然后参加比赛.他可以让序列中的第一头奶牛,或者最后一头走出来,站到新队列的队尾.</p>\r\n<p>利欲熏心的FJ为了取得冠军,他就必须使新队列的字典序尽量小.</p>\r\n<p>给你初始奶牛序列(用头字母)表示,然后按照上述的规则组成新序列,并使新序列的字典序尽量小.</p>\r\n<p>输入格式</p>\r\n<ul>\r\n    <li>第1行:一个整数N.</li>\r\n</ul>\r\n<ul>\r\n    <li>第2行至第N+1行:每行一个大写字母,表示初始序列中该奶牛的头字母.</li>\r\n</ul>\r\n<p>输出格式</p>\r\n<ul>\r\n    <li>得到的最小字典序的序列.每输出80个字母需要一个换行!</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n6\r\nA\r\nC\r\nD\r\nB\r\nC\r\nB\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\nABCBCD\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(151, '建造路径', 'roads', '<p>译 by CmYkRgB123<br />\r\n<br />\r\n描述<br />\r\n<br />\r\nFarmer John 刚刚得到了几个新农场！他想把这几个农场用路连接起来，这样他就可以通过笔直的公路从一个农场到另一个农场了。现在已经有了几条连接着的农场。<br />\r\n<br />\r\nN (1 &le; N &le; 1,000) 个农场中，每个农场的位置在坐标平面的 (Xi, Yi) (0 &le; Xi &le; 1,000,000; 0 &le; Yi &le; 1,000,000)。已经有 M (1 &le; M &le; 1,000) 条路以前就被建好了。请你帮助 Farmer John 考虑建设尽量少长度的额外的路，使他的农场连在一起。<br />\r\n<br />\r\n输入<br />\r\n<br />\r\n* 第 1 行: 两个整数: N , M<br />\r\n* 第 2..N+1 行: 两个整数 Xi , Yi<br />\r\n* 第 N+2..N+M+2 行: 两个整数: i , j, 表示已经存在从农场i到农场j的路。<br />\r\n<br />\r\n输出<br />\r\n<br />\r\n* 第 1 行: 额外的路的最少长度，保留2小数。 请使用 64 位的浮点数。<br />\r\n<br />\r\n样例输入<br />\r\n<br />\r\n&nbsp;4 1<br />\r\n&nbsp;1 1<br />\r\n&nbsp;3 1<br />\r\n&nbsp;2 3<br />\r\n&nbsp;4 3<br />\r\n&nbsp;1 4<br />\r\n<br />\r\n样例输出<br />\r\n<br />\r\n&nbsp;4.00</p>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(152, '泥潭', 'mud', '<p>译 by CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>Farmer John在早晨6点准时去给贝茜挤奶，然而昨天晚上下了大雨，他的牧场变得泥泞不堪了。Farmer John的家在坐标平面的 (0,0) 处，贝茜在 (X, Y) (-500 &le; X &le; 500; -500 &le; Y &le; 500)。他看见了所有的 N&nbsp; (1 &le; N &le; 10,000) 个泥潭，分别在 (Ai, Bi) (-500 &le; Ai &le; 500; -500 &le; Bi &le; 500) 。每个泥潭只占一个点的位置。</p>\r\n<p>Farmer John 刚刚买了新的靴子，他绝对不想把靴子踩进泥潭弄脏，而他又想尽快的找到贝茜。他已经快晚了，因为他花了大量的时间来找到所有的泥潭的位置。 Farmer John 只能平行于坐标轴移动，每次移动一个单位。请你帮助 Farmer John 找到一条路，使得 Farmer John 能够最快的找到贝茜，而且不会弄脏靴子。我们约定一定存在一条路使 Farmer John 找到贝茜。</p>\r\n<p>输入</p>\r\n<p>* 第 1 行: 三个整数&nbsp; X, Y, N</p>\r\n<p>* 第 2..N+1 行: 第 i+1 行 包含两个整数 Ai , Bi</p>\r\n<p>输出</p>\r\n<p>* 第 1 行: Farmer John 能够最快的找到贝茜，而且不会弄脏靴子，要走的最小的距离。</p>\r\n<p>样例输入</p>\r\n<p>&nbsp;1 2 7</p>\r\n<p>&nbsp;0 2</p>\r\n<p>&nbsp;-1 3</p>\r\n<p>&nbsp;3 1</p>\r\n<p>&nbsp;1 1</p>\r\n<p>&nbsp;4 2</p>\r\n<p>&nbsp;-1 1</p>\r\n<p>&nbsp;2 2</p>\r\n<p>样例输出</p>\r\n<p>&nbsp;11</p>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(153, '奶牛探险', 'explore', '<p>译 by CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>贝茜正在一条充满许多有趣的路标的路上探险。这条路就像数轴一样被标记了，贝茜初始的时候站在原点(x = 0)处。 N (1 &le; N &le; 50,000) 个路标中，每个路标坐落于点 x1, x2, ..., xN (-100,000 &le; xi &le; 100,000)。贝茜想在日落之前访问尽可能多的路标，现在距离日落还有T (1 &le; T &le; 1,000,000,000) 分钟，她每走一个单位长度，需要1分钟。</p>\r\n<p>贝茜按照一个特殊的规则访问路标。既然距离原点越近的路标，对 Farmer John 越重要，她每次总是跑到未访问过的距离原点越近的路标。没有两个路标距离原点的距离相等。</p>\r\n<p>请你计算一下，贝茜在日落之前能够访问多少个路标。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数 T , N</li>\r\n    <li>第 2..N+1 行: 路标i的位置 xi</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 贝茜在日落之前能够访问到的路标的个数</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n25 5\r\n10\r\n-3\r\n8\r\n-7\r\n1\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n4\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(154, '阅读大赛', 'read', '<p>译 by CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>K (1 &le; K &le; 1,000) 头奶牛参加了 Farmer John 的年度阅读大赛。这个比赛的内容是读一本 N (1 &le; N &le; 100,000) 页的书，在理解它的情况下，比谁读的最快。</p>\r\n<p>奶牛 i 的阅读速度为 Si (1 &le; Si &le; 100) 页每分钟，最长连续读书的时间为 Ti (1 &le; Ti &le; 100) 分钟，需要休息的时间为 Ri (1 &le; Ri &le; 100) 分钟。奶牛i只能一次连续读 Ti 分钟，接下来她必须休息 Ri 分钟，才能继续读书。</p>\r\n<p>请你计算出每头奶牛读完书需要的时间，请向上保留到整数。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数 N , K</li>\r\n    <li>第 2..K+1 行: 第 i+1 行 包含三个整数: Si , Ti , Ri</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1..K 行: 第 i 行为一个整数，表示奶牛读完书需要的时间，向上保留到整数。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n10 3\r\n2 4 1\r\n6 1 5\r\n3 3 3\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n6\r\n7\r\n7\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(155, '最大的湖', 'lake', '<p>译 By CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>在最近的一次暴雨中，Farmer John 的农场被淹没了，形成了一个个湖。更可怕的是他的奶牛们最怕水了。好在他的保险公司会给他一笔数额不菲的赔偿，这笔赔偿金的多少取决与他的农场中最大的湖的大小。</p>\r\n<p>他的农场可以被描绘成 N (1 &le; N &le; 100) 行 M (1 &le; M &le; 100) 列的一个网格。每一格不是陆地就是湖水，已知有 K (1 &le; K &le; N &times; M) 格是水。每格水只有边相邻，才能算是属于一个湖的，顶点相邻不是。</p>\r\n<p>请你算出他的农场中最大的湖的大小。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 三个整数: N, M, K</li>\r\n    <li>第 2..K+1 行: 第 i+1 行两个整数，表示水的位置在第R行，第C列: R , C</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 最大的湖的大小(组成它的网格的数量)</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n3 4 5\r\n3 2\r\n2 2\r\n3 1\r\n2 3\r\n1 1\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n4\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(156, '挤奶时间', 'milkprod', '<p>译 By CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>贝茜是一只非常努力工作的奶牛，她总是专注于提高自己的产量。为了产更多的奶，她预计好了接下来的N (1 &le; N &le; 1,000,000)个小时，标记为0..N-1。</p>\r\n<p>Farmer John 计划好了 M (1 &le; M &le; 1,000) 个可以挤奶的时间段。每个时间段有一个开始时间(0 &le; 开始时间 &le; N), 和一个结束时间 (开始时间 &lt; 结束时间 &le; N), 和一个产量 (1 &le; 产量 &le; 1,000,000) 表示可以从贝茜挤奶的数量。Farmer John 从分别从开始时间挤奶，到结束时间为止。每次挤奶必须使用整个时间段。</p>\r\n<p>但即使是贝茜也有她的产量限制。每次挤奶以后，她必须休息 R (1 &le; R &le; N) 个小时才能下次挤奶。给定Farmer John 计划的时间段，请你算出在 N 个小时内，最大的挤奶的量。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 三个整数 N, M, R</li>\r\n    <li>第 2..M+1 行: 第 i+1 行 每行三个整数，为</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行:一个整数 在 N 个小时内，最大的挤奶的量Farmer John放入挤奶计划，开始时间，结束时间，产量。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n12 4 2\r\n1 2 8\r\n10 12 19\r\n3 6 24\r\n7 10 31\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n43\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:04'),
(157, '奶牛跨栏', 'hurdles', '<p>译 by CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>Farmer John 想让她的奶牛准备郡级跳跃比赛，贝茜和她的伙伴们正在练习跨栏。她们很累，所以她们想消耗最少的能量来跨栏。</p>\r\n<p>显然，对于一头奶牛跳过几个矮栏是很容易的，但是高栏却很难。于是，奶牛们总是关心路径上最高的栏的高度。</p>\r\n<p>奶牛的训练场中有 N (1 &le; N &le; 300) 个站台，分别标记为1..N。所有站台之间有M (1 &le; M &le; 25,000)条单向路径，第i条路经是从站台Si开始，到站台Ei，其中最高的栏的高度为Hi (1 &le; Hi &le; 1,000,000)。无论如何跑，奶牛们都要跨栏。</p>\r\n<p>奶牛们有 T (1 &le; T &le; 40,000) 个训练任务要完成。第 i 个任务包含两个数字 Ai 和 Bi (1 &le; Ai &le; N; 1 &le; Bi &le; N)，表示奶牛必须从站台Ai跑到站台Bi，可以路过别的站台。奶牛们想找一条路径从站台Ai到站台Bi，使路径上最高的栏的高度最小。</p>\r\n<p>你的任务就是写一个程序，计算出路径上最高的栏的高度的最小值。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>行 1: 两个整数 N, M, T</li>\r\n    <li>行 2..M+1: 行 i+1 包含三个整数 Si , Ei , Hi</li>\r\n    <li>行 M+2..M+T+1: 行 i+M+1 包含两个整数，表示任务i的起始站台和目标站台: Ai , Bi</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>行 1..T: 行 i 为一个整数，表示任务i路径上最高的栏的高度的最小值。如果无法到达，输出 -1。</li>\r\n</ul>\r\n<p>输入样例</p>\r\n<pre>\r\n5 6 3\r\n1 2 12\r\n3 2 8\r\n1 3 5\r\n2 5 3\r\n3 4 4\r\n2 4 8\r\n3 4\r\n1 2\r\n5 1\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n4\r\n8\r\n-1\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(158, '奶牛饮水', 'privc', '<h2>译 by CmYkRgB123</h2>\r\n<p>Farmer John 的 N (1 &lt;= N &lt;= 1,000) 头奶牛中，每头奶牛的社会地位取决于她们的产奶量。她们的社会地位被指定为1，2或者3。当他们在井边排队喝水的事后，社会地位最高的(数值最小)的奶牛 排在前面。但是奶牛们总是忘掉自己的社会地位，除非Farmer John提醒，所以她们排队很乱。</p>\r\n<p>因此，奶牛们必须通过两两交换位置达到规定的顺序。社会地位为1排在前，2的接着，3排在最后面。奶牛们通常是懒惰的，请你帮助算出所有奶牛一共至少交换几次位置，才能按顺序排列。</p>\r\n<p>程序名: privc</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数: N</li>\r\n    <li>第 2..N+1 行: 每行一个整数，为奶牛i的社会地位。</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数，至少交换的次数。</li>\r\n</ul>\r\n<p>输入样例</p>\r\n<pre>\r\n9\r\n2\r\n2\r\n1\r\n3\r\n3\r\n3\r\n2\r\n3\r\n1\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>说明</p>\r\n<pre>\r\n2   2   2 &lt; 1   1\r\n2 &lt; 1   1   1   1\r\n1 &lt; 2   2   2   2\r\n3   3 &lt; 2   2   2\r\n3   3   3   3 &lt; 2\r\n3   3   3   3   3\r\n2   2 &lt; 3   3   3\r\n3   3   3   3   3\r\n1   1   1 &lt; 2 &lt; 3\r\n</pre>', 1000, 128, 8, 0, '2012-04-05 16:23:05'),
(159, '完全平方数', 'squares', '<h2>译 By CmYkRgB123</h2>\r\n<p>Farmer John正在和贝茜玩一个数字游戏。他想好两个正整数 A 和 B (1 &lt;= B &lt;= A &lt;= 500)，贝茜的任务是猜出Farmer John想好的数。Farmer John给了贝茜提示：</p>\r\n<p>&ldquo;我选的数字A的平方，比B的平方大 N (1 &lt;= N &lt;= 1,000)。&rdquo;</p>\r\n<p>作为一个奶牛，贝茜知道这个提示会大大减少数字A ,B可能的数量。无论如何，她还是向你请教，请你编一个程序，帮计算可能的A，B的解的个数。</p>\r\n<p>程序名： squares</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>行 1: 一个整数 N</li>\r\n</ul>\r\n<p>输入说明</p>\r\n<p>请你计算有多少个整数解(A, B)满足不定方程 A^2 = B^2 + N。</p>\r\n<p>输出</p>\r\n<ul>\r\n    <li>行 1: 一个整数，解的个数</li>\r\n</ul>\r\n<p>输入样例</p>\r\n<pre>\r\n15\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>输出说明</p>\r\n<p>有2个解 (A, B) = (4, 1) 和 (A, B) = (8, 7)</p>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(160, '贝茜的秘密牧场', 'secpas', '<p>\r\n<p>农夫约翰已经从他的牧场中取得了数不清块数的正方形草皮，草皮的边长总是整数（有时农夫约翰割草皮的刀法不合适，甚至切出了边长为0的正方形草皮），他已经把草皮放在了一个奶牛贝茜已经知道的地方。</p>\r\n<p>贝茜总是希望把美味的草皮放到她的秘密庄园里，她决定从这些草皮中取出恰好4块搬到她的秘密庄园中，然后把它们分成1&times;1的小块，组成一个面积为N(1&lt;=N&lt;=10,000)个单位面积的部分。</p>\r\n<p>贝茜对选出这样四块草皮的方法数很感兴趣，如果她得到了一个4个单位面积的部分，那么她可以有5中不同的方法选4块草皮： (1,1,1,1),(2,0,0,0),(0,2,0,0),(0,0,0,2).顺序是有效的：(4,3,2,1)和(1,2,3,4)是不同的方 法。</p>\r\n<p>题目名称:secpas</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第一行：一个单独的整数N。</li>\r\n</ul>\r\n<p>样例输入(secpas.in)：</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>输出格式(secpas.out)</p>\r\n<ul>\r\n    <li>单独的一行包含一个整数，表示贝茜选四块草皮的方案数。</li>\r\n</ul>\r\n<p>样例输出</p>\r\n<pre>\r\n5\r\n</pre>\r\n</p>\r\n<pre>\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(161, '障碍训练场', 'obstacle', '<p>译 By CmYkRgB123</p>\r\n<p>考虑一个 N x N (1 &lt;= N &lt;= 100)的有1个个方格组成的正方形牧场。有些方格是奶牛们不能踏上的，它们被标记为了''x''。例如下图：</p>\r\n<pre>\r\n        . . B x .\r\n        . x x A .\r\n        . . . x .\r\n        . x . . .\r\n        . . x . .\r\n</pre>\r\n<p>贝茜发现自己恰好在点A出，她想去B处的盐块添盐。缓慢而且笨拙的动物，比如奶牛，十分讨厌转弯。尽管如此，当然在必要的时候她们还是会转弯的。对于一个给定的牧场，请你计算从A到B最少的转弯次数。开始的时候，贝茜可以使面对任意一个方向。贝茜知道她一定可以到达。</p>\r\n<p>程序名: obstacle</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>行 1: 一个整数 N</li>\r\n    <li>行 2..N + 1: 行 i+1 有 N 个字符 (''.'', ''x'', ''A'', ''B'')，表示每个点的状态。</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>行 1: 一个整数，最少的转弯次数。</li>\r\n</ul>\r\n<p>输入样例</p>\r\n<pre>\r\n3\r\n.xA\r\n...\r\nBx.\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 128, 25, 0, '2012-04-05 16:23:05'),
(162, '焰火表演', 'fireshow', '<p>译&nbsp;: zqzas</p>\r\n<p><br />\r\nFJ带着他的奶牛去看焰火表演.但是他们只能在那里呆一会儿,不能看全部表演.所以Bessie想知道她能在多少个时刻看到焰火. 这次表演有C (1 &le; C &le; 100) 个礼炮,每个礼炮每隔Ti (1 &le; Ti &le; N)个时刻(所有时刻均为整数)发射一次烟花.所有礼炮在 0 时刻发射第一次,而每个烟花仅能在刚刚被发射的那一个时刻被看到.Bessie将从时刻1到时刻N (1 &le; N &le; 2,000,000)观看烟花(包括时刻1和时刻N).</p>\r\n<p>帮助Bessie计算她能有多少个时刻看到烟花.</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第1行:两个用空格隔开的整数 C,N.</li>\r\n    <li>第2行至第C+1行,每行一个整数Ti.</li>\r\n</ul>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>一个整数,表示Bessie能在多少个时刻看到烟花.</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n2 20\r\n4\r\n6\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n7\r\n</pre>\r\n<p>样例说明:</p>\r\n<pre>\r\n   CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\r\n2                                   2                                   2 ...\r\n1           1     2     1           1           1     2     1           1 ...\r\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+ ...\r\n0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ...\r\n</pre>\r\n<p>Bessie从第1时刻到第20时刻看焰火表演. 有2个礼炮发射焰火,第一个每隔4个时刻发射一次;第二个每隔6时刻发射一次.</p>\r\n<p>由上图所示,Bessie可以在第4, 6, 8, 12, 16, 18,20时刻看到焰火,共7个时刻. 如果某时刻有多个礼炮同时发射,那么只算1次.</p>', 1000, 128, 11, 0, '2012-04-05 16:23:05'),
(163, '牛语', 'latin', '<p>译: zqzas</p>\r\n<p><br />\r\n奶牛们听说猪发明了一种秘密语言,叫做&quot;猪语&quot;,因为猪不想让FJ知道他们在商量什么.奶牛们也感觉这样很不错,所以她们想发明他们自己的语言,牛语.</p>\r\n<p>想把一个普通的英语单词转换成牛语很简单.如果一个单词的以一个元音字母(''a'',''e'',''i'',''o'',''u<i>)开头,那么只需在 这个单词的结尾加上&quot;cow&quot;.例如,&quot;udder&quot;需要变成&quot;uddercow&quot;; 如果一个单词的第一个字母不是元音字母,那么只需把这个单词的第一个字母放到单词结尾,然后再在结尾加上&quot;ow&quot;.例如 &quot;farmer&quot;需要变成&quot;armerfow&quot;.</i> 所以&quot;the cows escape at dawn&quot;就会变成&quot;hetow owscow escapecow atcow awndow.&quot; 奶牛们自信地以为这样就可以不让FJ知道他们的&quot;越狱&quot;计划.</p>\r\n<p>可惜奶牛们都不是语言学家,他们觉得这样的翻译太无聊了,所以这个任务就交给你了. 你需要将N (1 &le; N &le; 100)个英语单词翻译成牛语,单词长度在3到40之间.</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第1行: 一个整数N.</li>\r\n    <li>第2行到第N+1行: 每行一个单词.</li>\r\n</ul>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>第1行到第N行,每行一个相应的牛语单词.</li>\r\n</ul>\r\n<p><br />\r\n样例输入:</p>\r\n<pre>\r\n5\r\nudder\r\nfarmer\r\nmilk\r\naaa\r\nzzz\r\n</pre>\r\n<p>样例输出:</p>\r\n<pre>\r\nuddercow\r\narmerfow\r\nilkmow\r\naaacow\r\nzzzow\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(164, '圆桌会议', 'round', '<p>译: zqzas</p>\r\n<p><br />\r\nFJ打算召集N (1 &le; N &le; 10)头奶牛召开一个相当重要的圆桌会议</p>\r\n<p>奶牛们感觉到很紧张,他们想把最好的记忆留在脑海中,所以为了美观,他们想在开会时让所有相邻的奶牛的身高差距都不超过K (1 &le; K &le; 1,000,000),奶牛的身高用Hi (1 &le; Hi &le; 1,000,000)表示.</p>\r\n<p>请你帮助他们计算,在满足上述条件的情况下,座位有多少种安排方案.在两个不同的安排方案中,至少有一只奶牛的左手边的奶牛都是不同的.</p>\r\n<p>答案保证可以用32位的整数存储.</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行:两个用空格隔开的整数N,K.</li>\r\n    <li>第2行至第N+1行, 每行一个整数Hi.</li>\r\n</ul>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>唯一一行: 一个整数,表示有多少种满足条件的座位安排方案.</li>\r\n</ul>\r\n<p><br />\r\n样例输入:</p>\r\n<pre>\r\n4 10\r\n2\r\n16\r\n6\r\n10\r\n</pre>\r\n<p>样例输出:</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>样例说明:</p>\r\n<p>有4头奶牛,身高分别是 2, 16, 6, 和 10,可行的安排方案中任意两头奶牛的身高差距不超过10. 有两种安排方案: 2 6 16 10和2 10 16 6.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(165, '奶牛交通', 'cowtraffic', '<p>译: zqzas</p>\r\n<p><br />\r\n农场中,由于奶牛数量的迅速增长,通往奶牛宿舍的道路也出现了严重的交通拥堵问题.FJ打算找出最忙碌的道路来重点整治.</p>\r\n<p>这个牧区包括一个由M (1 &le; M &le; 50,000)条单行道路(有向)组成的网络,以及 N (1 &le; N &le; 5,000)个交叉路口(编号为1..N),每一条道路连接两个不同的交叉路口.奶牛宿舍位于第N个路口.每一条道路都由编号较小的路口通向编号较大的路 口.这样就可以避免网络中出现环.显而易见,所有道路都通向奶牛宿舍.而两个交叉路口可能由不止一条边连接.</p>\r\n<p>在准备睡觉的时候,所有奶牛都从他们各自所在的交叉路口走向奶牛宿舍,奶牛只会在入度为0的路口,且所有入度为0的路口都会有奶牛.</p>\r\n<p>帮助FJ找出最忙碌的道路,即计算所有路径中通过某条道路的最大次数.答案保证可以用32位整数存储.</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第一行:两个用空格隔开的整数:N,M.</li>\r\n    <li>第二行到第M+1行:每行两个用空格隔开的整数ai,bi,表示一条道路从ai到bi.</li>\r\n</ul>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>第一行: 一个整数,表示所有路径中通过某条道路的最大次数.</li>\r\n</ul>\r\n<p>样例输入:</p>\r\n<pre>\r\n7 7\r\n1 3\r\n3 4\r\n3 5\r\n4 6\r\n2 3\r\n5 6\r\n6 7\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>样例说明:</p>\r\n<pre>\r\n    1   4\r\n     \\ / \\\r\n      3   6 -- 7\r\n     / \\ /\r\n    2   5\r\n</pre>\r\n<p>通向奶牛宿舍的所有路径:</p>\r\n<pre>\r\n    1 3 4 6 7\r\n    1 3 5 6 7\r\n    2 3 4 6 7\r\n    2 3 5 6 7\r\n</pre>', 1000, 64, 10, 0, '2012-04-05 16:23:05'),
(166, '平衡的阵容', 'balance', '<p>译 By CmYkRgB123</p>\r\n<p>Farmer John 决定给他的奶牛们照一张合影，他让 N (1 &le; N &le; 50,000) 头奶牛站成一条直线，每头牛都有它的坐标(范围: 0..1,000,000,000)和种族(0或1)。</p>\r\n<p>一直以来 Farmer John 总是喜欢做一些非凡的事，当然这次照相也不例外。他只给一部分牛照相，并且这一组牛的阵容必须是&ldquo;平衡的&rdquo;。平衡的阵容，指的是在一组牛中，种族0和种族1的牛的数量相等。</p>\r\n<p>请算出最广阔的区间，使这个区间内的牛阵容平衡。区间的大小为区间内最右边的牛的坐标减去最做边的牛的坐标。</p>\r\n<p>输入中，每个种族至少有一头牛，没有两头牛的坐标相同。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>行 1: 一个整数: N</li>\r\n    <li>行 2..N + 1: 每行两个整数，为种族 ID 和 x 坐标。</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>行 1: 一个整数，阵容平衡的最大的区间的大小。</li>\r\n</ul>\r\n<p>输入样例</p>\r\n<pre>\r\n7\r\n0 11\r\n1 10\r\n1 25\r\n1 12\r\n1 4\r\n0 13\r\n1 22\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n11\r\n</pre>\r\n<p>输入说明</p>\r\n<p>有7头牛，像这样在数轴上。</p>\r\n<pre>\r\n            1                 1  0  1  0                          1        1\r\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r\n</pre>\r\n<p>输出说明</p>\r\n<p>牛 #1 (at 11), #4 (at 12), #6 (at 13), #7 (at 22) 组成一个平衡的最大的区间，大小为 22-11=11 个单位长度。</p>\r\n<pre>\r\n                                 &lt;--------     平衡的     --------&gt;\r\n            1                 1  0  1  0                          1        1\r\n+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\r\n0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:05'),
(167, '月度花费', 'expense', '<p>Farmer John是一个令人惊讶的会计学天才，他已经明白了他可能会花光他的钱，这些钱本来是要维持农场每个月的正常运转的。他已经计算了他以后 N(1&lt;=N&lt;=100,000)个工作日中每一天的花费moneyi(1&lt;=moneyi&lt;=10,000)，他想要为他连续 的M(1&lt;=M&lt;=N)个被叫做&ldquo;清算月&rdquo;的结帐时期做一个预算，每一个&ldquo;清算月&rdquo;包含一个工作日或更多连续的工作日，每一个工作日都仅被包 含在一个&ldquo;清算月&rdquo;当中。</p>\r\n<p>FJ的目标是安排这些&ldquo;清算月&rdquo;，使得每个清算月的花费中最大的那个花费达到最小，从而来决定他的月度支出限制。</p>\r\n<p>输入</p>\r\n<p>第一行：两个用空格隔开的整数：N和M 第2..N+1行：第i+1行包含FJ在他的第i个工作日的花费</p>\r\n<p>输出</p>\r\n<p>第一行：能够维持每个月农场正常运转的钱数</p>\r\n<p>样例输入</p>\r\n<pre>\r\n7 5\r\n100\r\n400\r\n300\r\n100\r\n500\r\n101\r\n400\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n500\r\n</pre>\r\n<p>输入细节</p>\r\n<p>这里有7个工作日来被5个&ldquo;清算月&rdquo;划分。他花费100，400，100，500，101，和400元在他的每个工作日。</p>\r\n<p>输出细节</p>\r\n<p>如果FJ安排他的月度预算，他将把前两天划分在一个月中，把第三天、第四天划分在一个月当中，最后的三个工作日各自在一个月当中，所以他一个月最多花费500元，其他的方法总是得出一个较大的结果。</p>\r\n<pre>\r\n100 400   300 100   500   101   400   每天花费\r\n---1---   ---2---   -3-   -4-   -5-   月度标号\r\n  500       400     500   101   400   月度花费\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:06'),
(168, '掷骰子', 'cowyotz', '<p>奶牛们正在用她们笨拙的方式玩着一个版本的&ldquo;快艇&rdquo;游戏（一种掷骰子游戏）。她们掷N(1&lt;=N&lt;=20)个骰子，每个骰子有S(1&amp; lt;=S&lt;=8)个面。她们对一次掷骰子能达到一个特定规则（比如&ldquo;包含三个2面朝上的&rdquo;或者&ldquo;包含一个2面朝上的和两个3面朝上的）的结果数非 常感兴趣。</p>\r\n<p>帮助她们了解这个概率。写一个程序，读入N，S，并且同时读入一些描述她们的规则的表达式。计算在所有可能的掷骰子情况（3个两面的骰子 掷出的所有情况为：{1,1,1; 1,1,2; 1,2,1; 1,2,2; 2,1,1; 2,1,2; 2,2,1; 2,2,2}）中能够满足给定规则的结果数。</p>\r\n<p>基本形式表达&rdquo;想要至少W个R面朝上的骰子&ldquo;，它看起来像</p>\r\n<pre>\r\nWxR\r\n</pre>\r\n<p>其中0&lt;=W&lt;=N , 1&lt;=R&lt;=S。每一个测试点会给出E个表达式(1&lt;=E&lt;=20)，每一个表达式包含1到10个用&lsquo;+&rsquo;连接的基本表达形式 (WxR)，&lsquo;+&rsquo;表示&ldquo;且&rdquo;的关系（看下面）。每行给出的表达式之间的关系为&ldquo;或&rdquo;。所以下面的表达式意为&ldquo;至少三个5面朝上 或 至少一个3面和两个4面&rdquo;：</p>\r\n<pre>\r\n3x5\r\n1x3+2x4\r\n</pre>\r\n<p><br />\r\n这里有一些4个5面骰子的掷出的结果，它们都满足上面给出的表达式：5,5,5,1; 4,5,5,5; 3,4,4,2; 3,4,4,3; 3,4,4,5; 4,4,5,3。</p>\r\n<p>编程注意：确认你可以从一行读入两个整数，然后在下一行读入一个字符串。在一些语言的输入/输出机制中，这是很难做到的。</p>\r\n<p>同样注意在测试点中，掷骰子的结果数不会超过1,512,768。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第一行：3个用空格分隔的整数：N,S,E</li>\r\n    <li>第二..E+1行：第i+1行描述了第i个像上面的表达式。</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第一行：单独的整数，表示满足给出表达式的掷骰子的结果数。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4 5 2\r\n3x5\r\n1x3+2x4\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n63\r\n</pre>\r\n<p>输入细节：这是问题描述中所用到的一个规则</p>\r\n<p>输出细节：63个结果符合上述表达式</p>', 1000, 128, 10, 0, '2012-04-05 16:23:06'),
(169, '青铜莲花池', 'bronlily', '<p>译 By CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>Farmer John 建造了一个美丽的池塘，用于让他的牛们审美和锻炼。这个长方形的池子被分割成了 M 行和 N 列( 1 &le; M &le; 30&nbsp;; 1 &le; N &le; 30 ) 正方形格子的 。某些格子上有惊人的坚固的莲花，还有一些岩石，其余的只是美丽，纯净，湛蓝的水。</p>\r\n<p>贝茜正在练习芭蕾舞，她从一个莲花跳跃到另一个莲花，当前位于一个莲花。她希望在莲花上一个一个的跳，目标是另一个给定莲花。她能跳既不入水，也不到一个岩石上。</p>\r\n<p>令<i>门外汉</i>惊讶的是，贝茜的每次的跳跃像国际象棋中的骑士一样：横向移动M1(1 &le;M1 &le; 30 )，纵向移动然后量M2 (1 &le;M2 &le; 30&nbsp;;M1 &ne; M2 ) ，或纵向移动然后量M1，横向移动M2。贝茜有时可能会有多达8个选择的跳跃。</p>\r\n<p>给定池塘的布局和贝茜的跳跃格式，请确定贝茜从从她的出发位置，到最终目的地，最小的跳跃次数，贝茜在给出测试数据一定可以跳到目的地。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 四个用空格隔开的整数: M, N, M1, M2</li>\r\n    <li>第 2..M + 1 行: 第 i + 1 行 有 N 个整数，表示该位置的状态: 0 为水; 1 为莲花; 2 为岩石; 3 为贝茜开始的位置; 4 为贝茜要去的目标位置.</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数，从起始点到要去的位置，贝茜最小的跳跃次数。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4 5 1 2\r\n1 0 1 0 1\r\n3 0 2 0 4\r\n0 1 2 0 0\r\n0 0 0 1 0\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>输入解释</p>\r\n<p>贝茜从第2行第1个位置开始，她的目标在第2行最右边。几个</p>\r\n<p>输出解释</p>\r\n<p>贝茜聪明地跳跃到了第1行第3个位置，然后就到了目的地。</p>', 1000, 128, 13, 0, '2012-04-05 16:23:06'),
(170, '买一送一', 'buyfree', '<p>译:zqzas</p>\r\n<p><br />\r\nFJ最近在网上发现干草买一送一的一笔交易,他每买一捆尺寸为A (1 &le; A &le; 1,000,000)的干草,就可以免费获赠一捆尺寸为 B (1 &le; B &lt; A)的干草,注意B &lt; A.</p>\r\n<p>然而,这个买卖是有限制的:需要花钱的干草都是高质量的,而免费赠送的都是次品.然而节俭的FJ并不在意质量:为了省钱他会买任意质量的干草.</p>\r\n<p>给出N (1 &le; N &le; 10,000)捆高质量的干草,以及M (1 &le; M &le; 10,000)捆次品干草,找出FJ最多可以买到多少捆干草.他可以单独买高质量的干草而没有获赠免费的次品干草;但是他不能单独买次品干草.</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第1行: 两个用空格隔开的整数:N和M.</li>\r\n    <li>第2行到第N+1行:每行一个整数,表示一捆高质量干草的尺寸.</li>\r\n    <li>第N+2行到第N+M+1行:每行一个整数,表示一捆次品干草的尺寸.</li>\r\n</ul>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>唯一一行:一个整数,表示FJ可以买到干草的最大捆数.</li>\r\n</ul>\r\n<p>样例输入:</p>\r\n<pre>\r\n3 4\r\n6\r\n1\r\n3\r\n1\r\n5\r\n3\r\n4\r\n</pre>\r\n<p>样例输出:</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>样例说明:</p>\r\n<p>共有3捆高质量的干草,尺寸分别是6,1,和3; 共有4捆次品干草,尺寸分别是1,5,3,和4.</p>\r\n<p>显然,FJ可以买到所有高质量的干草.当他买尺寸为6的高质量干草时,他可以获赠尺寸为3的次品.当他买尺寸为3的高质量干草时,他可以获赠尺寸为1的次品.然而,当他买质量为1的高质量干草时,无论如何,他都不可能再获赠次品干草.所以答案就是3+2=5.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:06'),
(171, '打保龄球', 'bowling', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 打保龄球是用一个滚球去打击十个站立的柱，将柱击倒。一局分十轮，每轮可滚球一次或多次，以击倒的柱数为依据计分。一局得分为十轮得分之和，而每轮的得分不仅与本轮滚球情况有关，还可能与后续一两轮的滚球情况有关。即某轮某次滚球击倒的柱数不仅要计入本轮得分，还可能会计入前一两轮得分。具体的滚球击柱规则和计分方法如下：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; （1）若某一轮的第一次滚球就击倒全部十个柱，则本轮不再滚球（若是第十轮则还需另加两次滚球，不妨称其为第十一轮和第十二轮，并不是所有的情况都需要滚第十一轮和第十二轮球）。该轮得分为本次击倒柱数10与以后两次滚球所击倒柱数之和。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; （2）若某一轮的第一次滚球未击倒十个柱，则可对剩下未倒的柱再滚球一次。如果这两次滚球击倒全部十个柱，则本轮不再滚球（若是第十轮则还需另加一次滚球），该轮得分为这两次共击倒柱数10与以后一次滚球所击倒柱数之和。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; （3）若某一轮两次滚球未击倒全部十个柱，则本轮不再继续滚球，该轮得分为这两次滚球击倒的柱数之和。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 总之，若&mdash;轮中一次滚球或两次滚球击倒十个柱，则本轮得分是本轮首次滚球开始的连续三次滚球击倒柱数之和（其中有一次或两次不是本轮滚球）。若一轮内二次滚球击倒柱数不足十个，则本轮得分即为这两次击倒柱数之和。下面以实例说明如下(字符&ldquo;/&rdquo;表示击倒当前球道上的全部的柱)：</p>\r\n<table border="1" width="535">\r\n    <tbody>\r\n        <tr>\r\n            <td width="58">轮</td>\r\n            <td width="34">1</td>\r\n            <td width="31">2</td>\r\n            <td width="30">3</td>\r\n            <td width="27">4</td>\r\n            <td width="30">5</td>\r\n            <td width="35">6</td>\r\n            <td width="32">7</td>\r\n            <td width="29">8</td>\r\n            <td width="34">9</td>\r\n            <td width="41">10</td>\r\n            <td width="34">11</td>\r\n            <td width="38">12</td>\r\n        </tr>\r\n        <tr>\r\n            <td height="21">击球情况</td>\r\n            <td>/</td>\r\n            <td>/</td>\r\n            <td>/</td>\r\n            <td>72</td>\r\n            <td>9/</td>\r\n            <td>81</td>\r\n            <td>8/</td>\r\n            <td>/</td>\r\n            <td>9/</td>\r\n            <td>/</td>\r\n            <td>8/</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>各轮得分</td>\r\n            <td>30</td>\r\n            <td>27</td>\r\n            <td>19</td>\r\n            <td>9</td>\r\n            <td>18</td>\r\n            <td>9</td>\r\n            <td>20</td>\r\n            <td>20</td>\r\n            <td>20</td>\r\n            <td>20</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>累计总分</td>\r\n            <td>30</td>\r\n            <td>57</td>\r\n            <td>76</td>\r\n            <td>85</td>\r\n            <td>103</td>\r\n            <td>112</td>\r\n            <td>132</td>\r\n            <td>152</td>\r\n            <td>172</td>\r\n            <td>192</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 现在请你编写一个保龄球实时计分程序，用来计算和显示某轮结束后的得分情况。若某轮的得分暂时无法算出，则该轮得分不显示。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入数据用文件bowling.in，文件内容仅有一行，为前若干轮滚球的情况，每轮滚球用一到两个字符表示，每一个字符表示一次击球，字符&ldquo;/&rdquo;表示击倒当前球道上的全部的柱，否则用一个数字字符表示本次滚球击倒的当前球道上的柱的数目，两轮滚球之间用一个空格字符隔开。<br />\r\n如上例对应的输入文件内容为：/ / / 72 9/ 81 8/ / 9/ / 8/</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出到文件bowling.out，共两行，第一行为每轮得分，第二行为到当前轮为止的总得分。每个得分之间用一个空格隔开。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nbowling.in<br />\r\n/ / / 72 9/ 81 8/ / 9/ / 8/</p>\r\n<p>输出：<br />\r\nbowling.out<br />\r\n30 27 19 9 18 9 20 20 20 20 <br />\r\n30 57 76 85 103 112 132 152 172 192</p>', 1000, 128, 6, 0, '2012-04-05 16:23:06'),
(172, '回文词', 'palin', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;回文词是一种对称的字符串&mdash;&mdash;也就是说，一个回文词，从左到右读和从右到 左读得到的结果是一样的。任意给定一个字符串，通过插入若干字符，都可以变成一个回文 词。你的任务是写一个程序，求出将给定字符串变成回文词所需插入的最少字符数。 比如字符串&ldquo;Ab3bd&rdquo;，在插入两个字符后可以变成一个回文词(&ldquo;dAb3bAd&rdquo; &ldquo;Adb3bdA&rdquo;)。然而，插入两个以下的字符无法使它变成一个回文词。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp; <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件的第一行包含一个整数N，表示给定字符串的长度(3&le;N&le;5000)。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件的第二行是一个长度为N的字符串。字符串仅由大写字母&ldquo;A&rdquo;到&ldquo;Z&rdquo;，小写字母&ldquo;a&rdquo; 到&ldquo;z&rdquo;和数字&ldquo;0&rdquo;到&ldquo;9&rdquo;构成。大写字母和小写字母将被认为是不同的。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp; 文件只有一行，包含一个整数，表示需要插入的最少字符数。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\npalin.in<br />\r\n5<br />\r\nAb3bd</p>\r\n<p>输出：<br />\r\npalin.out<br />\r\n2</p>', 1000, 128, 10, 0, '2012-04-05 16:23:06'),
(173, '词链', 'link', '<p><b>【问题描述】</b><br />\r\n给定一个仅包含小写字母的英文单词表，其中每个单词最多包含 50 个字母。</p>\r\n<p>如果一张由一个词或多个词组成的表中，每个单词（除了最后一个）都是排在它后面的单词的前缀，则称此表为一个词链。例如下面的单词组成了一个词链：</p>\r\n<p>i <br />\r\nint <br />\r\ninteger</p>\r\n<p>而下面的单词不组成词链：</p>\r\n<p>integer <br />\r\nintern</p>\r\n<p>请在给定的单词表中取出一些词，组成最长的词链。最长的词链就是包含单词数最多的词链。</p>\r\n<p>数据保证给定的单词表中，单词互不相同，并且单词按字典顺序排列。</p>\r\n<p>【输入格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;第一行一个整数 n ，表示单词表中单词数。</p>\r\n<p>下接 n 行每行一个单词。</p>\r\n<p>【输出格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp; 一个整数，表示最长词链长度。</p>\r\n<p>【输入输出样例】&nbsp;<b><br />\r\n</b>输入:<br />\r\nlink.in<br />\r\n5<br />\r\ni<br />\r\nint<br />\r\ninteger<br />\r\nintern<br />\r\ninternet</p>\r\n<p>输出:<br />\r\nlink.out<br />\r\n4</p>\r\n<p>【数据范围】</p>\r\n<p>50% 的数据， n&lt;=1000</p>\r\n<p>100% 的数据， n&lt;=10000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:06'),
(174, '奶牛词典', 'lexicon', '<p>译: zqzas</p>\r\n<p><br />\r\n没有几个人知道,奶牛有她们自己的字典,里面的有W (1 &le; W &le; 600)个词,每个词的长度不超过25,且由小写字母组成.她们在交流时,由于各种原因,用词总是不那么准确.比如,贝茜听到有人对她 说&quot;browndcodw&quot;,确切的意思是&quot;browncow&quot;,多出了两个&quot;d&quot;,这两个&quot;d&quot;大概是身边的噪音.</p>\r\n<p><br />\r\n奶牛们发觉辨认那些奇怪的信息很费劲,所以她们就想让你帮忙辨认一条收到的消息,即一个只包含小写字母且长度为L (2 &le; L &le; 300)的字符串.有些时候,这个字符串里会有多余的字母,你的任务就是找出最少去掉几个字母就可以使这个字符串变成准确的&quot;牛语&quot;(即奶牛字典中某些词 的一个排列).</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第1行:两个用空格隔开的整数,W和L.</li>\r\n    <li>第2行:一个长度为L的字符串,表示收到的信息.</li>\r\n    <li>第3行至第W+2行:奶牛的字典,每行一个词.</li>\r\n</ul>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>唯一一行:一个整数,表示最少去掉几个字母就可以使之变成准确的&quot;牛语&quot;.</li>\r\n</ul>\r\n<p>样例输入:</p>\r\n<pre>\r\n6 10\r\nbrowndcodw\r\ncow\r\nmilk\r\nwhite\r\nblack\r\nbrown\r\nfarmer\r\n</pre>\r\n<p><br />\r\n样例输出</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:06');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(175, '银色莲花池', 'silvlily', '<p>译 By CmYkRgB123</p>\r\n<p>描述</p>\r\n<p>Farmer John 建造了一个美丽的池塘，用于让他的牛们审美和锻炼。这个长方形的池子被分割成了 M 行和 N 列( 1 &le; M &le; 30&nbsp;; 1 &le; N &le; 30 ) 正方形格子的 。某些格子上有惊人的坚固的莲花，还有一些岩石，其余的只是美丽，纯净，湛蓝的水。</p>\r\n<p>贝茜正在练习芭蕾舞，她从一个莲花跳跃到另一个莲花，当前位于一个莲花。她希望在莲花上一个一个的跳，目标是另一个给定莲花。她能跳既不入水，也不到一个岩石上。</p>\r\n<p>令<i>门外汉</i>惊讶的是，贝茜的每次的跳跃像国际象棋中的骑士一样：横向移动1，纵向移动2，或纵向移动，横向移动2。贝茜有时可能会有多达8个选择的跳跃。</p>\r\n<p>Farmer John 在观察贝茜的芭蕾舞联系，他意识到有时候贝茜有可能跳不到她想去的目的地，因为路上有些地方没有莲花。于是他想要添加几个莲花使贝茜能够完成任务。一贯节俭的Farmer John想添加最少数量的莲花。当然，莲花不能放在石头上。</p>\r\n<p>请帮助Farmer John确定必须要添加的莲花的最少数量。在添加的莲花最少基础上，算出贝茜从起始点跳到目标点需要的最少的步数。最后，还要算出满足添加的莲花的最少数量时，跳跃最少步数的跳跃路径的条数。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第 1 行: 两个整数 M , N</li>\r\n    <li>第 2..M + 1 行:第 i + 1 行，第 i + 1 行 有 N 个整数，表示该位置的状态: 0 为水; 1 为莲花; 2 为岩石; 3 为贝茜开始的位置; 4 为贝茜要去的目标位置.</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>第 1 行: 一个整数: 需要添加的最少的莲花数. 如果无论如何贝茜也无法跳到，输出 -1.</li>\r\n    <li>第 2 行: 一个整数: 在添加的莲花最少基础上，贝茜从起始点跳到目标点需要的最少的步数。如果第1行输出-1，这行不输出。</li>\r\n    <li>第 3 行: 一个整数: 添加的莲花的最少数量时，跳跃步数为第2行输出的值的跳跃路径的条数 如果第1行输出-1，这行不输出。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4 8\r\n0 0 0 1 0 0 0 0\r\n0 0 0 0 0 2 0 1\r\n0 0 0 0 0 4 0 0\r\n3 0 0 0 0 0 1 0\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n2\r\n6\r\n2\r\n</pre>\r\n<p><br />\r\n输出说明</p>\r\n<p>至少要添加2朵莲花，放在了''x''的位置。</p>\r\n<pre>\r\n  0 0 0 1 0 0 0 0     0 0 0 1 0 0 0 0\r\n  0 x 0 0 0 2 0 1     0 0 0 0 0 2 0 1\r\n  0 0 0 0 x 4 0 0     0 0 x 0 x 4 0 0\r\n  3 0 0 0 0 0 1 0     3 0 0 0 0 0 1 0\r\n</pre>\r\n<p>贝茜至少要条6步，有以下两种方案</p>\r\n<pre>\r\n  0 0 0 C 0 0 0 0     0 0 0 C 0 0 0 0\r\n  0 B 0 0 0 2 0 F     0 0 0 0 0 2 0 F\r\n  0 0 0 0 D G 0 0     0 0 B 0 D G 0 0\r\n  A 0 0 0 0 0 E 0     A 0 0 0 0 0 E 0\r\n</pre>', 1000, 64, 14, 0, '2012-04-05 16:23:06'),
(176, '奶牛聚会', 'sparty', '<p>译: zqzas</p>\r\n<p><br />\r\nN(1 &le; N &le; 1000)个农场中的每个农场都有一只奶牛去参加位于第X个农场的聚会.共有M (1 &le; M &le; 100,000)条单向的道路,每条道路连接一对农场.通过道路i会花费Ti (1 &le; Ti &le; 100)的时间.</p>\r\n<p>作为参加聚会的奶牛必须走到聚会的所在地(农场X).当聚会结束时,还要返回各自的农场.奶牛都是很懒的,她们想找出花费时间最少的路线.由于道路都是单向的,所有她们前往农场X的路线可能会不同于返程的路线.</p>\r\n<p>Of all the cows, what is the longest amount of time a cow must spend walking to the party and back? 对于所有参加聚会的奶牛,找出前往聚会和返程花费总时间最多的奶牛,输出这只奶牛花费的总时间.</p>\r\n<p><br />\r\n输入格式:</p>\r\n<ul>\r\n    <li>第1行:三个用空格隔开的整数.</li>\r\n</ul>\r\n<p>第2行到第M+1行,每行三个用空格隔开的整数:Ai, Bi,以及Ti.表示一条道路的起点,终点和需要花费的时间.</p>\r\n<p><br />\r\n输出格式:</p>\r\n<ul>\r\n    <li>唯一一行:一个整数: 所有参加聚会的奶牛中,需要花费总时间的最大值.</li>\r\n</ul>\r\n<p>样例输出:</p>\r\n<pre>\r\n4 8 2\r\n1 2 4\r\n1 3 2\r\n1 4 7\r\n2 1 1\r\n2 3 5\r\n3 1 2\r\n3 4 4\r\n4 2 3\r\n</pre>\r\n<p>样例输入:</p>\r\n<pre>\r\n10\r\n</pre>\r\n<p>样例说明:</p>\r\n<p>共有4只奶牛参加聚会,有8条路,聚会位于第2个农场.</p>\r\n<p>第4只奶牛可以直接到聚会所在地(花费3时间),然后返程路线经过第1和第3个农场(花费7时间),总共10时间.</p>', 30000, 16, 10, 0, '2012-04-05 16:23:07'),
(177, '有限制的素数', 'qprime', '<p>Farmer John 开始给奶牛们标记上素数的牌子，贝茜注意到了这一切，她对各种数的牌子很好奇。</p>\r\n<p>请帮助贝茜算出从A到B (1 &le; A &le; B &le; 4,000,000; B &le; A + 1,000,000;  B &le; A + 2,000,000 )，其中包含数字D的素数的个数。</p>\r\n<p>素数是只有两个两个约数（1 和 它本身）的正整数，例如 2, 3, 5, 7, 11, 13, 17, 19, 23, 29.</p>\r\n<p>输入</p>\r\n<p>第 1 行: 三个整数 A, B, and D</p>\r\n<p>输出</p>\r\n<p>第 1 行: 包含数字D的素数的个数。</p>\r\n<p>样例输入</p>\r\n<p>10 15 3</p>\r\n<p>样例输出</p>\r\n<p>1</p>\r\n<p>输出解释</p>\r\n<p>只有 13 包含 ''3''.</p>', 1000, 128, 11, 0, '2012-04-05 16:23:07'),
(178, 'Making Change', 'change', '<p>Poor Bessie has taken a job in the convenience store located just over the border in Slobbovia. Slobbovians use different coinages than the USA; their coin values change day-by-day!</p>\r\n<p>Help Bessie make optimal change for Slobbovian shoppers. You will need to create C (1 &le; C &le; 1000) cents of change using N (1 &le; N &le; 10) coins of various values. All test cases will be solvable using the supplied coins.</p>\r\n<p>If 5 coins of values 50, 25, 10, 5, and 1 were available, Bessie would make optimum change (minimal coins) of 93 cents by using 1 x 50, 1 x 25, 1 x 10, 1 x 5, and 3 x 1 coins (a total of 7 coins).</p>\r\n<p>How hard could it be? The final two test cases will be challenging.</p>\r\n<p>Input</p>\r\n<ul>\r\n    <li>Line 1: Two space-separate integers: C and N</li>\r\n</ul>\r\n<ul>\r\n    <li>Lines 2..N + 1: Each line contains a single unique integer that is a coin value that can be used to create change</li>\r\n</ul>\r\n<p>Output</p>\r\n<ul>\r\n    <li>Line 1: A single integer that is the minimum number of coins to create C cents</li>\r\n</ul>\r\n<p>Sample Input</p>\r\n<pre>\r\n93 5\r\n25\r\n50\r\n10\r\n1\r\n5\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n7\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:07'),
(179, 'The Bale Tower', 'btwr', '<p>Always bored with cud-chewing, the cows have invented a new game. One cow retrieves a set of N (3 &le; N &le; 20) hay bales from the shed each of which is one unit high. Each bale also has some unique width and unique breadth.</p>\r\n<p>A second cow tries to choose a set of bales to make the tallest stack of bales in which each bale can be placed only on a bale whose own width and breadth are smaller than the width and breadth of the bale below. Bales can not be rotated to interchange the width and breadth.</p>\r\n<p>Help the cows determine the highest achievable tower that can be legally built form a set of bales.</p>\r\n<p>Input</p>\r\n<ul>\r\n    <li>Line 1: A single integer, N</li>\r\n</ul>\r\n<ul>\r\n    <li>Lines 2..N + 1: Each line describes a bale with two space-separated integers,respectively the width and breadth</li>\r\n</ul>\r\n<p>Output</p>\r\n<ul>\r\n    <li>Line 1: The height of the tallest possible tower that can legally be built from the bales.</li>\r\n</ul>\r\n<p>Sample Input</p>\r\n<pre>\r\n6\r\n6 9\r\n10 12\r\n9 11\r\n8 10\r\n7 8\r\n5 3\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>Input Details Six bales of various widths and breadths</p>\r\n<p>Output Details These bales can be stacked for a total height of 5:</p>\r\n<pre>\r\n10 12\r\n9 11\r\n8 10\r\n6 9\r\n5 3\r\n</pre>\r\n<p>[another stacking exists, too]</p>', 1000, 128, 11, 0, '2012-04-05 16:23:07'),
(180, 'Protecting the Flowers', 'flowers', '<p>Farmer John went to cut some wood and left N (2 &le; N &le; 100,000) cows eating the grass, as usual. When he returned, he found to his horror that the cluster of cows was in his garden eating his beautiful flowers. Wanting to minimize the subsequent damage, FJ decided to take immediate action and transport each cow back to its own barn.</p>\r\n<p>Each cow i is at a location that is Ti minutes (1 &le; Ti &le; 2,000,000) away from its own barn. Furthermore, while waiting for transport, she destroys Di (1 &le; Di &le; 100) flowers per minute. No matter how hard he tries, FJ can only transport one cow at a time back to her barn. Moving cow i to its barn requires 2*Ti minutes (Ti to get there and Ti to return). FJ starts at the flower patch, transports the cow to its barn, and then walks back to the flowers, taking no extra time to get to the next cow that needs transport.</p>\r\n<p>Write a program to determine the order in which FJ should pick up the cows so that the total number of flowers destroyed is minimized. Input</p>\r\n<ul>\r\n    <li>Line 1: A single integer N</li>\r\n</ul>\r\n<ul>\r\n    <li>Lines 2..N + 1: Each line contains two space-separated integers, Ti and Di, that describe a single cow''s characteristics</li>\r\n</ul>\r\n<p>Output</p>\r\n<ul>\r\n    <li>Line 1: A single integer that is the minimum number of destroyed flowers</li>\r\n</ul>\r\n<p>Sample Input</p>\r\n<pre>\r\n6\r\n3 1\r\n2 5\r\n2 3\r\n3 2\r\n4 1\r\n1 6\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n86\r\n</pre>\r\n<p>Output Details</p>\r\n<p>FJ returns the cows in the following order: 6, 2, 3, 4, 1, 5. While he is transporting cow 6 to the barn, the others destroy 24 flowers; next he will take cow 2, losing 28 more of his beautiful flora. For the cows 3, 4, 1 he loses 16, 12, and 6 flowers respectively. When he picks cow 5 there are no more cows damaging the flowers, so the loss for that cow is zero. The total flowers lost this way is 24 + 28 + 16 + 12 + 6 = 86.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:07'),
(181, 'Tallest Cow', 'tallest', '<p>FJ''s N (1 &le; N &le; 10,000) cows conveniently indexed 1..N are standing in a line. Each cow has a positive integer height (which is a bit of secret). You are told only the height H (1 &le; H &le; 1,000,000) of the tallest cow along with the index I of that cow.</p>\r\n<p>FJ has made a list of R (0 &le; R &le; 10,000) lines of the form &quot;cow 17 sees cow 34&quot;. This means that cow 34 is at least as tall as cow 17, and that every cow between 17 and 34 has a height that is strictly smaller than that of cow 17.</p>\r\n<p>For each cow from 1..N, determine its maximum possible height, such that all of the information given is still correct. It is guaranteed that it is possible to satisfy all the constraints.</p>\r\n<p>Input</p>\r\n<ul>\r\n    <li>Line 1: Four space-separated integers: N, I, H and R</li>\r\n    <li>Lines 2..R + 1: Two distinct space-separated integers A and B (1 &le; A, B &le; N), indicating that cow A can see cow B.</li>\r\n</ul>\r\n<p>Output</p>\r\n<ul>\r\n    <li>Lines 1..N: Line i contains the maximum possible height of cow i.</li>\r\n</ul>\r\n<p>Sample Input</p>\r\n<pre>\r\n9 3 5 5\r\n1 3\r\n5 3\r\n4 3\r\n3 7\r\n9 8\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n5\r\n4\r\n5\r\n3\r\n4\r\n4\r\n5\r\n5\r\n5\r\n</pre>\r\n<p>Input Details</p>\r\n<p>There are 9 cows, and the 3rd is the tallest with height 5.</p>', 1000, 32, 10, 0, '2012-04-05 16:23:07'),
(182, 'Balanced Lineup', 'lineup', '<p>Description</p>\r\n<p>For the daily milking, Farmer John''s N cows (1 &le; N &le; 50,000) always line up in the same order. One day Farmer John decides to organize a game of Ultimate Frisbee with some of the cows. To keep things simple, he will take a contiguous range of cows from the milking lineup to play the game. However, for all the cows to have fun they should not differ too much in height.</p>\r\n<p>Farmer John has made a list of Q (1 &le; Q &le; 200,000) potential groups of cows and their heights (1 &le; height &le; 1,000,000). For each group, he wants your help to determine the difference in height between the shortest and the tallest cow in the group.</p>\r\n<p>Input</p>\r\n<ul>\r\n    <li>Line 1: Two space-separated integers, N and Q.</li>\r\n    <li>Lines 2..N+1: Line i+1 contains a single integer that is the height of cow i</li>\r\n    <li>Lines N+2..N+Q+1: Two integers A and B (1 &le; A &le; B &le; N), representing the range of cows from A to B inclusive.</li>\r\n</ul>\r\n<p>Output</p>\r\n<ul>\r\n    <li>Lines 1..Q: Each line contains a single integer that is a response to a reply and indicates the difference in height between the tallest and shortest cow in the range.</li>\r\n</ul>\r\n<p>Sample Input</p>\r\n<pre>\r\n6 3\r\n1\r\n7\r\n3\r\n4\r\n2\r\n5\r\n1 5\r\n4 6\r\n2 2\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n6\r\n3\r\n0\r\n</pre>', 1000, 128, 18, 0, '2012-04-05 16:23:07'),
(183, '奶牛的骰子', 'bones', '<p>贝茜热爱棋盘游戏和角色扮演游戏，于是她说服农夫约翰驾车带她到业余爱好者商店，在那里她购置了3个骰子。这些骰子各自分别有s1,s2,s3个面。</p>\r\n<p>贝茜扔啊扔啊，尝试计算出哪个和（三个骰子加起来）出现的次数最多。</p>\r\n<p>我们将给出这三个骰子各自分别有多少个面，请计算出哪个和出现的频率最高。如果有多个这样的和符合要求，只需给出其中最小的那个。</p>\r\n<p>分值：70</p>\r\n<p>题目名称：bones</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第1行：三个用空格分开的整数s1,s2,s3。</li>\r\n</ul>\r\n<p>输入样例：（file bones.in）:</p>\r\n<pre>\r\n3 2 3\r\n</pre>\r\n<p>输出格式：</p>\r\n<pre>\r\n*第1行：当骰子们被扔出各种可能的组合时，出现频率最高的，数值最小的那个和。\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>输出说明：</p>\r\n<p>这里是所有可能的结果：</p>\r\n<pre>\r\n1 1 1 -&gt; 3 1 2 1 -&gt; 4 2 1 1 -&gt; 4 2 2 1 -&gt; 5 3 1 1 -&gt; 5 3 2 1 -&gt; 6\r\n1 1 2 -&gt; 4 1 2 2 -&gt; 5 2 1 2 -&gt; 5 2 2 2 -&gt; 6 3 1 2 -&gt; 6 3 2 2 -&gt; 7\r\n1 1 3 -&gt; 5 1 2 3 -&gt; 6 2 1 3 -&gt; 6 2 2 3 -&gt; 7 3 1 3 -&gt; 7 3 2 3 -&gt; 8\r\n</pre>\r\n<p>5和6都出现的最多（各5次），所以5是答案。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:08'),
(184, '搭建篱笆', 'quad', '<p>勤奋的农夫约翰想要修建一个4面的篱笆墙把他的奶牛们围起来。他有一块长为N的木板（4&lt;=N&lt;=2500）于是他想要在三个点把他们切断用以得到4块木板。</p>\r\n<p>只要能构成成四边形篱笆，这4块板子的长度可以是任意正整数。那么为了得到完整的篱笆农夫约翰有多少不同的种方法切这个长木板呢？</p>\r\n<p>注意：</p>\r\n<ul>\r\n    <li>对于两种方案而言，只要一方存在一个另一方没有的切割点，那它们就将视为不同的方案。不必担心对称或那个其他复杂的情况的排除。</li>\r\n    <li>请注意，篱笆所围的面积应当大于0。</li>\r\n    <li>你将高兴的是，我们保证答案适合有符号的32位整型变量。</li>\r\n</ul>\r\n<p>分数：250</p>\r\n<p>问题名称：quad</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第1行：一个单独的整数：N</li>\r\n</ul>\r\n<p>输入样例（file quad.in）：</p>\r\n<pre>\r\n6\r\n</pre>\r\n<p>输入说明：这个板子的长度是6。</p>\r\n<p>输出格式：</p>\r\n<ul>\r\n    <li>第1行：一个单独的整数表示切割方案数。</li>\r\n</ul>\r\n<p>输出样例：</p>\r\n<p>6</p>\r\n<p>输出说明：</p>\r\n<p>农夫约翰有10种方法切割木板：(1, 1, 1, 3); (1, 1, 2, 2); (1, 1, 3, 1); (1, 2, 1, 2); (1, 2, 2, 1); (1, 3,1, 1); (2, 1, 1, 2); (2, 1, 2, 1); (2, 2, 1, 1); (3, 1, 1, 1).但是其中的4种--(1, 1, 1, 3), (1, 1, 3, 1), (1, 3, 1, 1), (3,1, 1, 1)是不能构成篱笆的。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:08'),
(185, '挖水井', 'water', '<p>农夫约翰决定给他的N（1&lt;=N&lt;=300）个牧场浇水，这些牧场被自然的命名为1..N。他可以给一个牧场引入水通过在这个牧场挖一口井或者修一条管道使这个牧场和一个已经有水的牧场连接。</p>\r\n<p>在牧场i挖一口井的花费是w_i（1&lt;=w_i&lt;=100000）。修建一条水管连接牧场i和牧场j的花费是p_ij（1&lt;=p_ij&lt;=100000;p_ij=p_ji;p_ii=0）。</p>\r\n<p>请确定农夫约翰为了完成浇灌所有的牧场所需的最小的总花费。</p>\r\n<p>题目名称：water</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第1行：一个单独的整数n。</li>\r\n    <li>第2..n+1行：第i+1行包含一个单独的整数w_i。</li>\r\n    <li>第n+2..2n+1行：第n+1+i行包含n个用空可分开的整数；其中第j个数是p_ij。</li>\r\n</ul>\r\n<p>输入样例（file water.in）：</p>\r\n<pre>\r\n4\r\n5\r\n4\r\n4\r\n3\r\n0 2 2 2\r\n2 0 3 3\r\n2 3 0 4\r\n2 3 4 0\r\n</pre>\r\n<p>输入说明：</p>\r\n<p>这里有4个牧场，修井和修管道的代价如图。</p>\r\n<p>输出格式：</p>\r\n<ul>\r\n    <li>第1行：一个单独的整数，表示花费。</li>\r\n</ul>\r\n<p>输出样例（file water.out）：</p>\r\n<pre>\r\n9\r\n</pre>\r\n<p>输出说明：</p>\r\n<p>农夫约翰可以在第4个牧场修井，并且将每个牧场和第一个连接起来，这样，花费是3+2+2+2=9。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:08'),
(186, '牧场旅行', 'pwalk', '<p>n个被自然地编号为1..n奶牛（1&lt;=n&lt;=1000）正在同样被方便的编号为1..n的n个牧场中吃草。更加自然而方便的是，第i个奶牛就在第i个牧场中吃草。</p>\r\n<p>其中的一些对牧场被总共的n-1条双向通道的一条连接。奶牛可以通过通道。第i条通道连接的两个牧场是A_i和B_i（1&lt;=A_i&lt;=N;1&lt;=B_i&lt;=N）其长度是L_i（1&lt;=L_i&lt;=10000）。</p>\r\n<p>通道只会连接两个不同的牧场，所以这些通道使得整个牧场构成了一棵树。</p>\r\n<p>奶牛们是好交际的希望能够经常的访问别的奶牛。急切地，它们希望你能通过告诉它们Q（1&lt;=Q&lt;=1000）对牧场的路径来帮助他们安排旅行。（这里将有Q个询问，p1,p2(1&lt;=p1&lt;=n；1&lt;=p1&lt;=n)）</p>\r\n<p>分数：200</p>\r\n<p>问题名称：pwalk</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第1行：两个用空格隔开的整数：n和Q</li>\r\n    <li>第2..n行：第i+1行包含三个用空格隔开的整数：A_i,b_i和c_i</li>\r\n    <li>第n+1..N+Q行：每行包含两个用空格隔开的整数，代表两个不同的牧场，p1和p2</li>\r\n</ul>\r\n<p>输入样例（file pwalk.in）：</p>\r\n<pre>\r\n4 2\r\n2 1 2\r\n4 3 2\r\n1 4 3\r\n1 2\r\n3 2\r\n</pre>\r\n<p>输出格式：</p>\r\n<ul>\r\n    <li>第1..Q行：行i包含第i个询问的答案。</li>\r\n</ul>\r\n<p>输出样例：</p>\r\n<pre>\r\n2\r\n7\r\n</pre>\r\n<p>输出说明：</p>\r\n<p>询问1：牧场1和牧场2的路径长度为2。 询问2：3-&gt;4-&gt;1-&gt;2;总长为7。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:08'),
(187, '轮子的旋转', 'rotation', '<p>农夫约翰有一个老式的打谷机（收麦子用）需要把皮带安置在不同的齿轮上以转动零件，发动机驱动皮带轮轮1顺时针方向转着，通过一个皮带，带动轮2。轮2带动论3......总计有n（1&lt;=n&lt;=1000）个轮子（和n-1个皮带）。</p>\r\n<p><a title="Image:Belts1.jpg" class="image" href="/wiki/Image:Belts1.jpg"><img width="284" height="274" border="0" longdesc="/wiki/Image:Belts1.jpg" alt="Image:Belts1.jpg" src="/mw/images/6/69/Belts1.jpg" /></a></p>\r\n<p>上面的插图描绘了两种把皮带安置在轮上的方法。如图所示，轮1的皮带直接驱动轮2（&ldquo;直接的&rdquo;连接）所以它们有相同的转动方向。轮3用一个&ldquo;交叉的&rdquo;皮带连接轮4，所以它们有不同的方向。</p>\r\n<p>我们将给出所有皮带的安置方式，以及每个皮带系统中的驱动轮和从动轮。未给出的事实是轮1被发动机以顺时针方式驱动，请求出轮n的转动方向。每个皮带用3个整数描述：</p>\r\n<ul>\r\n    <li>S_i--驱动轮</li>\r\n    <li>D_i--从动轮</li>\r\n    <li>C_i--方向类型（0=直接的，1=交叉的）</li>\r\n</ul>\r\n<p>不幸的是，农夫约翰将以随机的顺序给出轮的信息。</p>\r\n<p>用来做例子，请考虑下面的插图。n=4，轮1是被发动机顺时针驱动的，直接的皮带连接轮1和轮2，轮2和轮3，交叉的皮带连接轮3和轮4。所以轮4（轮n）是逆时针方向。</p>\r\n<p><a title="Image:Belts2.jpg" class="image" href="/wiki/Image:Belts2.jpg"><img width="635" height="273" border="0" longdesc="/wiki/Image:Belts2.jpg" alt="Image:Belts2.jpg" src="/mw/images/3/3a/Belts2.jpg" /></a></p>\r\n<p>分数：70</p>\r\n<p>题目名称：rotation</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第一行：一个单独的整数N</li>\r\n    <li>第2..n行：S_i,D_i,C_I</li>\r\n</ul>\r\n<p>输入样例（file ratation.in）：</p>\r\n<pre>\r\n4\r\n2 3 0\r\n3 4 1\r\n1 2 0\r\n</pre>\r\n<p>输出格式：</p>\r\n<p>第一行：一个整数，表示轮n的转动类型。</p>\r\n<p>输出样例（file rotation.out）：</p>\r\n<pre>\r\n1\r\n</pre>', 2000, 128, 10, 0, '2012-04-05 16:23:08'),
(188, '被破坏的电力系统', 'pwrfail', '<p>一场邪恶的暴风雨毁坏了农夫约翰的输电网中的一些电线！农夫约翰有一张包含了所有n（2&lt;=n&lt;=1000）个电能中转点的地图，这些 点被很自然而方便的标识为1..n，并且被整数坐标x_i，y_i（-100000&lt;=x_i&lt;=100000;-100000&amp; lt;=y_i&lt;=100000）定位于坐标系。</p>\r\n<p>有w（1&lt;=w&lt;=10000）条电线仍然保存着没被暴风雨破坏，每条电线连接着两个电能中转点pi,pj（1&lt;=pi&lt;=n;1&lt;=pj&lt;=n）。</p>\r\n<p>他希望从第一个电能中转点把电导入第n个（可能通过一些中间的电能中转点，应当有一组电线连接1和n）。</p>\r\n<p>给出n个电能中转点的坐标和幸存的电线，请确定最少需要架设的电线总长度，但请注意，架设过程中，对于单条电线而言，其长度不应超过m（0.0&lt;=m&lt;=200000.0）</p>\r\n<p>给出一个例子，在下面，左边是一个包含9个电能中转电和3条幸存电线的地图。在这个任务中，规定名。m=2.0。最佳的架设方案是连接6和4，以及6和9。</p>\r\n<pre>\r\n   After the storm              Optimally reconnected\r\n3  . . . 7 9 . . . . .          3  . . . 7 9 . . . . .\r\n                                          /\r\n2  . . 5 6 . . . . . .          2  . . 5 6 . . . . . .\r\n                                        /\r\n1  2-3-4 . 8 . . . . .          1  2-3-4 . 8 . . . . .\r\n   |                               |\r\n0  1 . . . . . . . . .          0  1 . . . . . . . . .\r\n\r\n   0 1 2 3 4 5 6 7 8 9             0 1 2 3 4 5 6 7 8 9\r\n</pre>\r\n<p>这是的总长度是 1.414213562 + 1.414213562 = 2.828427124 .</p>\r\n<p>分数：350</p>\r\n<p>题目名称：pwrfail</p>\r\n<p>输入格式：</p>\r\n<ul>\r\n    <li>第一行：两个用空格隔开的整数 n和w</li>\r\n    <li>第二行：一个实数：m</li>\r\n    <li>第3..n+2：每一行包含两个用空格隔开的整数：x_i和y_i</li>\r\n    <li>第n+3..n+2+w行：两个空格隔开的整数：pi和pj</li>\r\n</ul>\r\n<p>输入样例（file pwrfail）：</p>\r\n<pre>\r\n9 3\r\n2.0\r\n0 0\r\n0 1\r\n1 1\r\n2 1\r\n2 2\r\n3 2\r\n3 3\r\n4 1\r\n4 3\r\n1 2\r\n2 3\r\n3 4\r\n</pre>\r\n<p>输入说明：</p>\r\n<p>就像图表中说的那样。</p>\r\n<p>输出格式：</p>\r\n<p>第一行：一个整数，实际结果乘以1000后取整。请不要进行任何的4舍5入工作。</p>\r\n<p>输出样例（file pwrfail.out）：</p>\r\n<pre>\r\n2828\r\n</pre>', 3000, 128, 20, 0, '2012-04-05 16:23:08'),
(189, '火车票', 'rail', '<p>现在有一条&ldquo;叶卡特琳堡－斯维尔德洛夫斯克&rdquo;铁路线。它有若干个火车站。这个铁路线可以用一条线段来表示，而火车站就是线段上的点。铁路起始于叶卡特琳堡(Eakterinburg)，终止于斯维尔德洛夫斯克(Sverlovsk)，且各站从叶卡特琳堡(它的编号是1)至斯维尔德洛夫斯克(终点)编号。  <br />\r\n&nbsp;</p>\r\n<center><img alt="" src="../../mw/images/8/8b/Ural_rail.png" /><br />\r\n</center>\r\n<p>&nbsp;</p>\r\n<center>两个站之间的票价仅跟两站间的距离有关系。票价规定如下表。\r\n<table cellspacing="1" cellpadding="9" width="473" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="50%" valign="top"><font size="3"> </font>\r\n            <p align="center"><font size="3">两站间距离 - <i>X</i></font></p>\r\n            </td>\r\n            <td width="50%" valign="top">\r\n            <p align="center"><font size="3">票价</font></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%" valign="top"><font size="3"> </font>\r\n            <p align="center"><font size="3">0&lt;<i>X</i>&lt;=<i>L<sub>1</sub></i></font></p>\r\n            </td>\r\n            <td width="50%" valign="top"><i><font size="3"> </font></i>\r\n            <p align="center"><i><font size="3">C<sub>1</sub></font></i></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%" valign="top"><i><font size="3"> </font></i>\r\n            <p align="center"><i><font size="3">L<sub>1</sub></font></i><font size="3">&lt;<i>X</i>&lt;=<i>L<sub>2</sub></i></font></p>\r\n            </td>\r\n            <td width="50%" valign="top"><i><font size="3"> </font></i>\r\n            <p align="center"><i><font size="3">C<sub>2</sub></font></i></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="50%" valign="top"><i><font size="3"> </font></i>\r\n            <p align="center"><i><font size="3">L<sub>2</sub></font></i><font size="3">&lt;<i>X</i>&lt;=<i>L<sub>3</sub></i></font></p>\r\n            </td>\r\n            <td width="50%" valign="top"><i><font size="3"> </font></i>\r\n            <p align="center"><i><font size="3">C<sub>3</sub></font></i></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</center>\r\n<p>&nbsp;</p>\r\n<p>当且仅当两站间距离不大于L3时才能购买这两站之间的直达车票。所以有时须要购买若干张票来完成整个旅行。</p>\r\n<p>&nbsp;</p>\r\n<p>例如，在上图，整条铁路有七个站。从第2站不能直达第6站(因为距离大于L3)，但有另外几种方法购票。其中一种是买两张票：一张是从第2站至第3站(票价为C2)，另一张是从第3站至第6站(票价为C3)，注意，虽然从第2站至第6站的距离为2&times;L2，但不可以买两张价值C2的票，因为一张票只可以用一次且起点和终点必须在车站上。</p>\r\n<p>&nbsp;</p>\r\n<p>你的任务时计算给出的两站之间的最小花费。</p>\r\n<h2 style="color: rgb(26, 92, 200);">输入</h2>\r\n<p>输入的第一行包含六个由空格隔开的整数L1，L2，L3，C1，C2，C3(1&lt;=L1&lt;L2&lt;L3&lt;=10^9，1&lt;=C1&lt;C2&lt;C3&lt;=10^9)。第二行为车站数N(2&lt;=N&lt;=10000)。第三行有两个由空格隔开的不等的整数，表示旅行起点和终点。接下来的N-1行为起点(叶卡特琳堡)至其它站的距离。这些距离为互不相等的正整数而且呈上升序列。从叶卡特琳堡至斯维尔德洛夫斯克的距离不超过10^9。任意两相邻站之间的距离不超过L3。旅行最小花费不超过10^9。</p>\r\n<h2 style="color: rgb(26, 92, 200);">输出</h2>\r\n<p>一个整数------最小花费。</p>\r\n<h2 style="color: rgb(26, 92, 200);">样例输入</h2>\r\n<pre>\r\n3 6 8 20 30 40\r\n7\r\n2 6\r\n3\r\n7\r\n8\r\n13\r\n15\r\n23\r\n\r\n</pre>\r\n<h2 style="color: rgb(26, 92, 200);">样例输出</h2>\r\n<pre>\r\n70</pre>', 1000, 128, 16, 0, '2012-04-05 16:23:08'),
(190, '周年纪念聚会', 'aniv', '<h2 style="color: rgb(26, 92, 200);">Background</h2>\r\n<p>校长正在筹备学校的80周年纪念聚会。由于学校的职员有不同的职务级别，可以构成一棵以校长为根的人事关系树。每个职员都有一个唯一的整数编号（范围在1到N之间），并且对应一个参加聚会所获得的欢乐度。为了使每个参加聚会者都感到欢乐，校长想设法使每个职员和他（她）的直接上司不会同时参加聚会。</p>\r\n<h2 style="color: rgb(26, 92, 200);">Problem</h2>\r\n<p>你的任务是设计一份参加聚会者的名单，使总的欢乐度最高。</p>\r\n<h2 style="color: rgb(26, 92, 200);">Input</h2>\r\n<p>输入的第一行是一个整数N，1&lt;= N &lt;=  6000<br />\r\n以下的N行是对应的N个职员的欢乐度（欢乐度是一个从-128到127之间的整数）<br />\r\n接着是学校的人事关系树，树的每一行格式如下：<br />\r\n&lt;L&gt;  &lt;K&gt;<br />\r\n表示第K个职员是第L个职员的直接上司。<br />\r\n输入以0 0表示结束</p>\r\n<p>输出：参加聚会者获得的最大总欢乐度</p>\r\n<h2 style="color: rgb(26, 92, 200);">Sample Input</h2>\r\n<pre>\r\n7\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1 3\r\n2 3\r\n6 4\r\n7 4\r\n4 5\r\n3 5\r\n0 0\r\n</pre>\r\n<h2 style="color: rgb(26, 92, 200);">Sample Output</h2>\r\n<pre>\r\n5\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:08'),
(191, '取数字问题', 'number', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 给定 M*N 的矩阵，其中的每个元素都是 -10 到 10 之间的整数。你的任务是从左上角（ 1 ， 1 ）走到右下角（ M ， N ），每一步只能向右或向下，并且不能走出矩阵的范围。你所经过的方格里面的数字都必须被选取，请找出一条最合适的道路，使得在路上被选取的数字之和是尽可能小的正整数。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行两个整数 M ， N ，（ 2&lt;=M,N&lt;=20 ），分别表示矩阵的行和列的数目。</p>\r\n<p>接下来的 M 行，每行包括 N 个整数，就是矩阵中的每一行的 N 个元素。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;仅一行一个整数，表示所选道路上数字之和所能达到的最小的正整数。如果不能达到任何正整数就输出 -1 。 <br />\r\n&nbsp;</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nnumber.in<br />\r\n2 2<br />\r\n0 2<br />\r\n1 0<br />\r\n输出：<br />\r\nnumber.out<br />\r\n1</p>', 1000, 128, 10, 0, '2012-04-05 16:23:08'),
(192, '最小乘车费用', 'busses', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;假设某条街上每 一公里 就有一个公共汽车站，并且乘车费用如下表：</p>\r\n<table border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="68">\r\n            <p>公里数</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>2</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>3</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>4</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>5</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>6</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>7</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>8</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>9</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>10</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="68">\r\n            <p>费用</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>12</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>21</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>31</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>40</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>49</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>58</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>69</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>79</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>90</p>\r\n            </td>\r\n            <td valign="top" width="38">\r\n            <p>101</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>而任意一辆汽车从不行驶超过 10 公里 。某人想行驶 n 公里，假设他可以任意次换车，请你帮他找到一种乘车方案，使得总费用最小</p>\r\n<p>注意： 10 公里 的费用比 1 公里 小的情况是允许的。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件 busses.in ，文件共两行，第一行为 10 个不超过 200 的整数，依次表示行驶 1 ～ 10 公里的费用，相邻两数间用一个空格隔开；第二行为某人想要行驶的公里数。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件 busses.out ，仅一行，包含一个整数，表示行使这么远所需要的最小费用。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\nbusses</b>.in</p>\r\n<p>12 21 31 40 49 58 69 79 90 101</p>\r\n<p>15</p>\r\n<p>busses.out</p>\r\n<p>147</p>', 1000, 128, 7, 0, '2012-04-05 16:23:09'),
(193, '最多因子数', 'divisors', '<p>【<strong>问题描述】 <br />\r\n</strong>数学家们喜欢各种类型的有奇怪特性的数。例如，他们认为945是一个有趣的数，因为它是第一个所有约数之和大于本身的奇数。 <br />\r\n为了帮助他们寻找有趣的数，你将写一个程序扫描一定范围内的数，并确定在此范围内约数个数最多的那个数。不幸的是，这个数和给定的范围的都比较大，用简单的方法寻找可能需要较多的运行时间。所以请确定你的算法能在几秒内完成最大范围内的扫描。</p>\r\n<p>【输入格式】 <br />\r\n只有一行，给出扫描的范围，由下界L和上界U确定，满足2&le;L&le;U&le;1 000 000 000。</p>\r\n<p>【输出格式】 <br />\r\n对于给定的范围，输出该范围内约数个数D最多的数P。若有多个，则输出最小的那个。 <br />\r\n请输出&ldquo;Between L and U，P has a maximum of D divisors.&rdquo;，其中L，U，P和D的含义同前 <br />\r\n面所述。</p>\r\n<p>【输入输出样例】 <br />\r\n<strong><br />\r\n</strong>输入： <br />\r\ndivisors．in <br />\r\n1000 2000</p>\r\n<p>输出： <br />\r\ndivisors.out <br />\r\nBetween 1000 and 2000,1680 has a maximum of 40 divisors.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(194, '奶酪工厂', 'factory', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 奶牛们开办了一个奶酪工厂来生产世界著名的约克奶酪。在接下来的 N (1&lt;=N&lt;=10000)  星期中，由于牛奶和劳动力的价格变化，奶酪的成本也在变化。因此奶酪工厂在第 i 个星期要花 C_i (1&lt;=C_i&lt;=5000)  分来生产一个单位的奶酪。 由于采用了最先进的技术，约克奶酪工厂在一个星期内可以生产任意多的奶酪。</p>\r\n<p>约克奶酪工厂拥有一个无限大的仓库， 每个星期生产的多余的奶酪都会放在这里。而且每个星期存放一个单位的奶酪要花费 S (1&lt;=S&lt;=100)  分，不过幸运的是由于采用了最先进的技术，奶酪在仓库里不会坏 ^_^</p>\r\n<p>工厂最近收到了客户 N 个星期的订单，第 i 个星期要向客户提供 Y_i (0&lt;=Y_i&lt;=10000) 个单位的奶酪。当然这些奶酪可以在第  i 个星期时生产，也可以从仓库中拿取。</p>\r\n<p>采用怎么样的生产策略才会使约克工厂的花费最小呢？你能帮帮它们吗？</p>\r\n<p>&nbsp;</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; * 第 1 行两个整数： N 和 S</p>\r\n<p>* 接下来的 N 行中，第 i 行的两个数表示： C_i 和 Y_i</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; * 输出仅一行，工厂生产的最小花费</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>factory.in<br />\r\n4 5<br />\r\n88 200<br />\r\n89 400<br />\r\n97 300<br />\r\n91  500<br />\r\nfactory.out<br />\r\n126900</p>\r\n<p>【输入输出样例说明】<br />\r\n最佳生产方案如下：第一个星期生产 200 个单位的奶酪全部送给客户，第二个星期生产 700 个单位的奶酪， 400  个送给客户，另外 300 个放在仓库。第三个星期把仓库中的 300 个奶酪卖给客户，第四个星期生产 500 个单位的奶酪卖给客户。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(195, '放养奶牛', 'cowties', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;有 N (3&lt;=N&lt;=100) 头奶牛一起在一块草坪上吃草，这样呢它们就不会走丢了 ^_^. 农夫  John 把他们从 1 到 N 编号，并且想把他们拴成一个圈，使得编号为 i 的奶牛与编号为 i-1 和 i+1 的奶牛分别相邻。注意编号为 1  的奶牛要和编号为 N 的奶牛拴在一起。</p>\r\n<p>每头奶牛都有几个自己喜欢的吃草的地方，只有它们站在自己喜欢的地方吃草才会感到高兴。农夫 John  在放养奶牛的时候必须让它们都高兴，你能帮他计算出此时圈养这 N 头奶牛所用绳子的最短长度 L 吗？注意这个圈的各个部分可以相交，而且两头奶牛不能站在同一个地方。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;* 第 1 行：一个整数 N</p>\r\n<p>* 接来有 N 行，这 N 行中的第 i 行用一些整数来描述编号为 i 的奶牛的信息。这一行的第一个数是 S (1&lt;=S&lt;=40) ， S  表示编号为 i 的奶牛一共有 S 个喜欢吃草的地方。接下来有 2*S 个整数分别表示这 S 个地方的坐标 (x,y), 其中  -100&lt;=x,y&lt;=100</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;* 输出仅一行，为所用绳子的最短长度 L 乘以 100 后的整数部分。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>cowties.in<br />\r\n4<br />\r\n1 0 0<br />\r\n2 1 0 2 0<br />\r\n3 -1 -1 1 1 2  2<br />\r\n2 0 1 0 2</p>\r\n<p>cowties.out<br />\r\n400</p>\r\n<p>【输入输出样例说明】</p>\r\n<p>编号为 1 的奶牛站在（ 0 ， 0 ）；编号为 2 的奶牛站在（ 1 ， 0 ）；编号为 3 的奶牛站在（ 1 ， 1 ）；编号为 4 的奶牛站在（ 0  ， 1 ）。此时把 4 头奶牛圈起来所用的绳长最短，为 4 。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(196, '花园栅栏', 'fence', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;修补工休伯特退休了，可他闲不住，每天在自家的后院栽花栽草。可渐渐的他发现附近的小鹿会趁他不注意跑进后院玩耍，弄坏他心爱的花。于是休伯特决定为后院安装栅栏围出一个花园。俗话说磨刀不误砍柴工，休伯特利用一辆旧拖拉机，一台电脑，一些废旧机器组装成了一个自动安放栅栏的机器人！这个机器人会在自己走过的路线上放置栅栏。</p>\r\n<p>休伯特把自己设计的安放栅栏的路线输入机器人中，然后高兴的回房间睡觉。可等他醒来发现一切都糟透了，这破机器人并没有按照他的规定放置栅栏！休伯特只好妥协，他想：&ldquo;事情既然这样，那我就把当前小鹿不能到达的地方当做我的花园吧！&rdquo;但是这个花园有多大呢？休伯特也不知道，他只知道他的机器人放置栅栏时向东走了 3 英尺 ，然后又向西走了 5 英尺 &hellip;&hellip;</p>\r\n<p>你能帮助休伯特算算机器人帮他围出来的花园有多大吗？</p>\r\n<p>注意：休伯特的后院可以看作是一个 100 x 100 的棋盘，每个小方格尺寸都是 1 x 1 平方英尺 。自动安放栅栏的机器 人 只能在小方格的边缘上移动 ，并且机器移动时会在自己行进的路线上安放栅栏。由于机器在小方格的边缘移动，你可以忽略掉栅栏本身的宽度。例如：如果机器向北走了 1 英尺 ，向东走了 1 英尺 ，接着向南走了 1 英尺 ，最后向西走了 1 英尺 ，那么围出的花园面积为 1 平方英尺 。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 第一行包含三个整数 (X Y Z), X Y 表示机器人开始的位置， Z 表示机器人走动的步数。 (X 是机器人距离后院最西边的距离， Y 是机器人距离后院最南边的距离 )</p>\r\n<p>接下来的 Z 行中，每行包含了一个字符 D 和整数 F ，中间用空格隔开。字符 D 指明机器人前进的方向（ N,S,E,W ） , 分别表示（北，南，东，西）。整数 F 则表示机器人这一步走了多少英尺。</p>\r\n<p>机器人永远不会走出休伯特的后院，并且它行进的路线可以重叠或相交。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出数据只有一个整数，表示机器人围出的花园的面积。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>fence.in<br />\r\n0 0 9<br />\r\nN 25<br />\r\nE 25<br />\r\nN 25<br />\r\nE 25<br />\r\nS 25<br />\r\nW 25<br />\r\nS 25<br />\r\nW 25<br />\r\nE 25<br />\r\n<br />\r\n<br />\r\nfence.out<br />\r\n1250</p>\r\n<p>【输入输出样例说明】</p>\r\n<p>机器人行进的路线如下图红线所示：围城花园的面积为 25*25*2=1250</p>\r\n<p><img height="384" width="512" alt="" src="/mw/images/d/db/Mn06cc_clip_image001.gif" /></p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(197, '排名系统', 'rank', '<p>[题目描述]</p>\r\n<p>排名系统通常要应付三种请求：上传一条新的得分记录、查询某个玩家的当前排名以及返回某个区段内的排名记录。当某个玩家上传自己最新的得分记录时，他原有的得分记录会被删除。为了减轻服务器负担，在返回某个区段内的排名记录时，最多返回10条记录。</p>\r\n<p>[输入]</p>\r\n<p>第一行是一个整数n（10&lt;=n&lt;=250000）表示请求总数目。接下来n行,每行包含了一个请求。请求的具体格式如下：</p>\r\n<p>+Name Score 上传最新得分记录。Name表示玩家名字，由大写英文字母组成，不超过10个字符。Score为最多8位的正整数。</p>\r\n<p>?Name 查询玩家排名。该玩家的得分记录必定已经在前面上传。如果两个玩家的得分相同，则先得到该得分的玩家排在前面。</p>\r\n<p>?Index 返回自第Index名开始的最多10名玩家名字。Index必定合法，即不小于1，也不大于当前有记录的玩家总数。</p>\r\n<p>[输出]</p>\r\n<p>对于?Name格式的请求，应输出一个整数表示该玩家当前的排名。</p>\r\n<p>对于?Index格式的请求，应在一行中依次输出从第Index名开始的最多10名玩家姓名，用一个空格分隔。</p>\r\n<p>[样例]</p>\r\n<p>Input</p>\r\n<p>20<br />\r\n+ADAM 1000000<br />\r\n+BOB 1000000<br />\r\n+TOM 2000000<br />\r\n+CATHY 10000000<br />\r\n?TOM<br />\r\n?1<br />\r\n+DAM 100000<br />\r\n+BOB 1200000<br />\r\n+ADAM 900000<br />\r\n+FRANK 12340000<br />\r\n+LEO 9000000<br />\r\n+KAINE 9000000<br />\r\n+GRACE 8000000<br />\r\n+WALT 9000000<br />\r\n+SANDY 8000000<br />\r\n+MICK 9000000<br />\r\n+JACK 7320000<br />\r\n?2<br />\r\n?5<br />\r\n?KAINE</p>\r\n<p>Output</p>\r\n<p>2<br />\r\nCATHY TOM ADAM BOB<br />\r\nCATHY LEO KAINE WALT MICK GRACE SANDY JACK TOM BOB<br />\r\nWALT MICK GRACE SANDY JACK TOM BOB ADAM DAM<br />\r\n4</p>\r\n<p>说明</p>\r\n<p>+ADAM 1000000&nbsp;&nbsp;&nbsp;&nbsp; 加入ADAM的得分记录</p>\r\n<p>+BOB 1000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 加入BOB的得分记录</p>\r\n<p>+TOM 2000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 加入TOM的得分记录</p>\r\n<p>+CATHY 10000000&nbsp;&nbsp; 加入CATHY的得分记录</p>\r\n<p>?TOM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 输出TOM目前排名</p>\r\n<p>?1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 目前有记录的玩家总数为4，因此应输出第1名到第4名。</p>\r\n<p>+DAM 100000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 加入DAM的得分记录</p>\r\n<p>+BOB 1200000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更新BOB的得分记录</p>\r\n<p>+ADAM 900000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更新ADAM的得分记录（即使比原来的差）</p>\r\n<p>+FRANK 12340000&nbsp;&nbsp; 加入FRANK的得分记录</p>\r\n<p>+LEO 9000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 加入LEO的得分记录</p>\r\n<p>+KAINE 9000000&nbsp;&nbsp;&nbsp; 加入KAINE的得分记录</p>\r\n<p>+GRACE 8000000&nbsp;&nbsp;&nbsp; 加入GRACE的得分记录</p>\r\n<p>+WALT 9000000&nbsp;&nbsp;&nbsp;&nbsp; 加入WALT的得分记录</p>\r\n<p>+SANDY 8000000&nbsp;&nbsp;&nbsp; 加入SANDY的得分记录</p>\r\n<p>+MICK 9000000&nbsp;&nbsp;&nbsp;&nbsp; 加入MICK的得分记录</p>\r\n<p>+JACK 7320000&nbsp;&nbsp;&nbsp;&nbsp; 加入JACK的得分记录</p>\r\n<p>?2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 目前有记录的玩家总数为12，因此应输出第2名到第11名。</p>\r\n<p>?5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 输出第5名到第13名。</p>\r\n<p>?KAINE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 输出KAINE的排名</p>\r\n<p>[数据范围]</p>\r\n<p>20%数据满足N&lt;=100</p>\r\n<p>100%数据满足N&lt;=250000</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(198, '血色叛徒', 'crusade', '<p class="cjk" style="margin-bottom: 0cm;"><b>题目描述</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">巫妖王愤怒了，他的天灾军团终于将要卷土重来。血色十字军的领主们组织了一支敢死队前往诺森德大陆。孤立于联盟和部落的血色敢死队很快就遭到了天灾军团的重重包围。现在他们只好聚集了起来，成为一个方阵来抵抗天灾军团的围剿。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">可怕的是，他们之中有人感染上了亡灵瘟疫，如果不设法组织瘟疫扩散，他们很快就会遭到灭顶之灾。军团方阵是一个<font face="Times New Roman, serif"><span lang="en-US">N</span></font>行<font face="Times New Roman, serif"><span lang="en-US">M</span></font>列 的矩阵，每个单元是一个血色敢死队的成员。感染瘟疫的人，每过一个小时，就会向四周扩散瘟疫，直到所有人全部感染上瘟疫。血色敢死队已经开始调查瘟疫的源 头。令人震惊的是，这次瘟疫是有预谋的。血色敢死队的内部出现了叛徒，这个无耻的叛徒投靠了天灾军团，想要毁灭血色敢死队！</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">他们猜对了，你就是那个叛徒！在你的行踪败露之前，要尽快完成巫妖王的命令，并且逃离血色敢死队。一开始你就掌握了感染源的位置，你的任务是算出血色敢死队的领主们感染瘟疫的时间，并且将它报告给巫妖王，以便于对血色敢死队的下一轮围剿。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输入格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行：四个整数<font face="Times New Roman, serif"><span lang="en-US">N</span></font>，<font face="Times New Roman, serif"><span lang="en-US">M</span></font>，<font face="Times New Roman, serif"><span lang="en-US">A</span></font>，<font face="Times New Roman, serif"><span lang="en-US">B</span></font>，表示军团矩阵有<font face="Times New Roman, serif"><span lang="en-US">N</span></font>行<font face="Times New Roman, serif"><span lang="en-US">M</span></font>列。有<font face="Times New Roman, serif"><span lang="en-US">A</span></font>个感染源，<font face="Times New Roman, serif"><span lang="en-US">B</span></font>为血色敢死队中领主的数量。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">接下来<font face="Times New Roman, serif"><span lang="en-US">A</span></font>行：每行有两个整数<font face="Times New Roman, serif"><span lang="en-US">x</span></font>，<font face="Times New Roman, serif"><span lang="en-US">y</span></font>，表示感染源在第<font face="Times New Roman, serif"><span lang="en-US">x</span></font>行第<font face="Times New Roman, serif"><span lang="en-US">y</span></font>列。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">接下来<font face="Times New Roman, serif"><span lang="en-US">B</span></font>行：每行有两个整数<font face="Times New Roman, serif"><span lang="en-US">x</span></font>，<font face="Times New Roman, serif"><span lang="en-US">y</span></font>，表示领主的位置在第<font face="Times New Roman, serif"><span lang="en-US">x</span></font>行第<font face="Times New Roman, serif"><span lang="en-US">y</span></font>列。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输出格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>至<font face="Times New Roman, serif"><span lang="en-US">B</span></font>行：每行一个整数，表示这个领主感染瘟疫的时间，输出顺序与输入顺序一致。如果某个人的位置在感染源，那么他感染瘟疫的时间为<font face="Times New Roman, serif"><span lang="en-US">0</span></font>。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">5 4 2 3</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">1 1</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">5 4</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">3 3</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">5 3</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">2 4</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">3</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">1</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">3</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例说明</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">如下图，标记出了所有人感染瘟疫的时间以及感染源和领主的位置。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><a name="_1287166726"></a><a name="_1287166692"></a><a name="_1287166673"></a><a name="_1287166669"></a><a name="_1287166634"></a><a name="_1287166597"></a><img height="280" width="227" align="bottom" alt="" name="对象1" src="http://www.ruvtex.cn/mw/images/a/a7/Crusade.gif" /></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=M,N&lt;=500</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=A,B&lt;=M*N</span></font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(199, '地精贸易', 'goblin', '<p class="cjk" style="margin-bottom: 0cm;"><b>问题描述</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">聪明地地精发现，互不来往的联盟与部落的市场上的某些商品存在着很大的差价。这决定了地精可以从中获取相当可观的利润。然而这个发现还并没有被大部分地精知道，于是年轻的地精菲利克斯决定从事此业。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">菲利克斯几乎花光了它所有的积蓄购买了一个相当大的飞艇，以及 往返于铁炉堡和奥格瑞玛之间的各种通行证。铁炉堡和奥格瑞玛分别是联盟和部落的商业中心。菲利克斯决定在铁炉堡购买一些商品，驾驶飞艇到奥格瑞玛以当地市 场价卖掉，然后在奥格瑞玛买一些商品，驾驶飞艇再回到铁炉堡卖掉。这样一个来回，菲利克斯可以赚到不少钱。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">通过商业调查，他已经在出发前就了解联盟和部落的各种商品的价格。在他现有的资产的前提下，他希望能够在一次旅行中赚取尽可能多的金币。那么请你设计一个程序，为菲利克斯设计一个购买方案，使一次来回能够赚到最多的金币。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输入格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，两个整数，<font face="Times New Roman, serif"><span lang="en-US">N</span></font>，<font face="Times New Roman, serif"><span lang="en-US">M</span></font>，表示他在出发前有<font face="Times New Roman, serif"><span lang="en-US">N</span></font>个金币，联盟和部落的市场中都有<font face="Times New Roman, serif"><span lang="en-US">M</span></font>种商品。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">2-M+1</span></font>行，每行两个整数，<font face="Times New Roman, serif"><span lang="en-US">Ai</span></font>，<font face="Times New Roman, serif"><span lang="en-US">Bi</span></font>，表示第<font face="Times New Roman, serif"><span lang="en-US">i</span></font>种商品在铁炉堡的市场价为<font face="Times New Roman, serif"><span lang="en-US">Ai</span></font>，在奥格瑞玛的市场价为<font face="Times New Roman, serif"><span lang="en-US">Bi</span></font>。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输出格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，一个整数，菲利克斯一次来回最多能够赚到的金币数。最后结果不超过<font face="Times New Roman, serif"><span lang="en-US">4000000</span></font>。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第<font face="Times New Roman, serif"><span lang="en-US">2 - M+1</span></font>行，第<font face="Times New Roman, serif"><span lang="en-US">i+1</span></font>行为第<font face="Times New Roman, serif"><span lang="en-US">i</span></font>个商品的购买方法，输出一个句子。如果要从联盟购买<font face="Times New Roman, serif"><span lang="en-US">k</span></font>个，输出&rdquo;<font face="Times New Roman, serif"><span lang="en-US">Buy k from Alliance&rdquo;</span></font>，如果要从部落购买<font face="Times New Roman, serif"><span lang="en-US">k</span></font>个，输出&rdquo;<font face="Times New Roman, serif"><span lang="en-US">Buy k from Horde&rdquo;</span></font>，如果不需要购买，输出&rdquo;<font face="Times New Roman, serif"><span lang="en-US">Buy 0&rdquo;</span></font>。如果多个的方案赚得的金币都是最大，则输出购买的商品序号尽量靠前的这种方案。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">23 5</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">6 9</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">11 7</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">3 2</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">4 6</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">5 3</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">33</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">Buy 3 from Alliance</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">Buy 1 from Horde</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">Buy 0</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">Buy 1 from Alliance</span></font><br />\r\n<font face="Times New Roman, serif"><span lang="en-US">Buy 9 from Horde</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例说明</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">初始时，菲利克斯在铁炉堡，他有<font face="Times New Roman, serif"><span lang="en-US">23</span></font>个金币，这时他购买<font face="Times New Roman, serif"><span lang="en-US">3</span></font>个商品<font face="Times New Roman, serif"><span lang="en-US">1</span></font>，<font face="Times New Roman, serif"><span lang="en-US">1</span></font>个商品<font face="Times New Roman, serif"><span lang="en-US">4</span></font>，花费<font face="Times New Roman, serif"><span lang="en-US">3*6+1*4=22</span></font>个金币，剩余<font face="Times New Roman, serif"><span lang="en-US">1</span></font>个金币。到达奥格瑞玛，他把它们卖掉，可以获得<font face="Times New Roman, serif"><span lang="en-US">3*9+1*6=33</span></font>个金币，赚了<font face="Times New Roman, serif"><span lang="en-US">11</span></font>个金币。这时，他用他的<font face="Times New Roman, serif"><span lang="en-US">34</span></font>个金币，在奥格瑞玛购买<font face="Times New Roman, serif"><span lang="en-US">1</span></font>个商品<font face="Times New Roman, serif"><span lang="en-US">2</span></font>，<font face="Times New Roman, serif"><span lang="en-US">9</span></font>个商品<font face="Times New Roman, serif"><span lang="en-US">5</span></font>，花费<font face="Times New Roman, serif"><span lang="en-US">1*7+9*3=34</span></font>个金币。回到铁炉堡，卖掉可以获得<font face="Times New Roman, serif"><span lang="en-US">1*11+9*5=56</span></font>个金币，赚了<font face="Times New Roman, serif"><span lang="en-US">22</span></font>个金币。与起始时他的<font face="Times New Roman, serif"><span lang="en-US">23</span></font>个金币相比，他赚了<font face="Times New Roman, serif"><span lang="en-US">33</span></font>个金币。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=N&lt;=100,000</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=M&lt;=100</span></font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(200, '地铁重组', 'subway', '<p><b>问题描述<br />\r\n</b></p>\r\n<p style="margin-bottom: 0cm;">蒙提在暴风城与铁炉堡之间的地铁站中工作了许多年，然而最近，地铁站要扩建了。侏儒们攻克了建设长距离穿海隧道的难题，矮人们的炸药系统也有了很大的进步。于是，联盟决定修建通往达纳苏斯的地铁。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">拥有常年的地铁站工作经验的蒙提被派往了铁炉堡<font face="宋体, SimSun"><span lang="en-US">-</span></font>达纳苏斯线路，他的工作是进行地铁重组和检修。如下图，这是他的工作，进行地铁重组。</p>\r\n<p style="margin-bottom: 0cm;"><img height="209" width="349" border="0" align="bottom" alt="" name="图形1" src="http://www.ruvtex.cn/mw/images/e/e1/Subway.jpg" /></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">在左边部分停靠着<font face="宋体, SimSun"><span lang="en-US">n</span></font>节车厢，根据如上方式标号<font face="宋体, SimSun"><span lang="en-US">1</span></font>、<font face="宋体, SimSun"><span lang="en-US">2</span></font>、&hellip;&hellip;、<font face="宋体, SimSun"><span lang="en-US">n</span></font>，中间有一个停车轨道，这个轨道有一个尽头，它最多只能同时停放<font face="宋体, SimSun"><span lang="en-US">p</span></font>节 车厢。现在，为了将所有的车厢的顺序打乱重组，需要让车厢首先从左边的轨道上先驶进停车轨道，然后在进入右边的轨道。侏儒制造的地铁的每节车厢都有完整的 动力装置，不必依赖车头的带动。每节车厢必须进入一次停车轨道进行检修，然后才能去右边的轨道。对于一个给定的停车轨道的大小和左边轨道的车厢的数目，蒙 提想知道，这些车厢到右边轨道以后，有多少种不同的排列顺序。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">实质上，轨道就是一个后进先出的栈，你要算出车厢重组的方案数。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;">第<font face="宋体, SimSun"><span lang="en-US">1</span></font>行：两个整数<font face="宋体, SimSun"><span lang="en-US">n,p</span></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;">第一行：一个整数<font face="宋体, SimSun"><span lang="en-US">a</span></font>，为方案数除以<font face="宋体, SimSun"><span lang="en-US">4096</span></font>的余数</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">3 2</span></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">4</span></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">1&lt;=n&lt;=500</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">1&lt;=p&lt;=300</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(201, '埃雷萨拉斯的宝藏', 'eldrethalas', '<p style="margin-bottom: 0cm;" class="cjk"><b>问题描述</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">一万两千年前，精灵还是在艾萨拉女王的统治下，辛德拉是女王手 下一名很有地位的法师。他受任建造了一座城市，来保存女王的法师们进行魔法研究的成果和法术物品。这个城市就是埃雷萨拉斯。永恒之井的爆炸，使这里的精灵 和总部联系中断，并失去了永恒之井的水做为能量的来源。辛德拉的后人为了满足魔法的欲望，捕猎了一个恶魔，伊莫塔尔，并以水晶塔建造了一个带有能量平衡系 统的结界监狱，水晶塔从恶魔身上吸取能量，一部分维持结界监狱，一部分可以让精灵狂热者吸收。近万年平安无事。但是现在，恶魔的能量被消耗得越来越多，最 终变得不稳定，已经难以维持结界监狱的消耗。统治这里的托尔塞林王子开始下令屠杀。只有少数狂热者之外的其他人都要死，以减少魔法能量的消耗。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">终于，强大的戈多克食人魔入侵了埃雷萨拉斯，并杀死了大量的精灵。他们把这里当作他们的领地，叫做厄运之槌。面临灭顶之灾的精灵们把他们祖先留下的宝藏用魔法结界藏了起来，以防戈多克食人魔抢走。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">作为一名勇敢的探险者，你悄悄来到了埃雷萨拉斯，来寻找传说中的宝藏。终于，你看到了宝藏，他就在你的前方不远处。但是你不能贸然前进，因为路上有着强大的魔法结界。这些结界根据能量的不同分为<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">P</font></span></font>种，踏入每种结界，你都会受到一定的伤害。为了拿到宝藏，这些伤害算不了什么。但是你要尽可能地减少伤害，请你设计一条路线，使你穿越结界获取宝藏受到的伤害最少。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">下面是一个魔法结界能量示意图，结界是一个正方形，内部有<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">P</font></span></font>种不同的能量，每种字母表示一种能量。你从最上端开始走，每次能走到与你所在的位置邻接的一个单元格，或者在同种能量结界中任意传送。重复进入同一种能量结界不会再次受到伤害。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|AAABBC|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|ABCCCC|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|AABBDD|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|EEEEEF|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|EGGEFF|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">|GGFFFF|</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">你有<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">H</font></span></font>点生命值，请你在贸然行动之前先判断是否能够活着（生命值<b>大于</b><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">0</font></span></font>）穿越结界拿到宝藏，如果能够，请求出最大的生命值。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1</font></span></font>行 三个非负整数 <font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">N P H</font></span></font>。<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">N</font></span></font>为结界的边长，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">P</font></span></font>为不同的能量结界的数量，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">H</font></span></font>为你的生命值。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">2-P+1</font></span></font>行 每行一个非负整数，表示走到该种能量结界受到的伤害值。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">P+2</font></span></font>至第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">P+2+N</font></span></font>行 每行<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">N</font></span></font>个正整数，为地图上该单元格的能量种类的编号，编号为<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1..P</font></span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">如果你能够穿越结界到达对岸的宝藏，输出最多剩余的生命值。如果不能穿越，输出<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">NO</font></span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">6 7 10</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">3</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">2</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">2</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">3</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1 1 1 2 2 3</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1 2 3 3 3 3</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1 1 2 2 4 4</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">5 5 5 5 5 6</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">5 7 7 5 6 6</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">7 7 6 6 6 6</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">7</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例说明</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">路线为</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">起始<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">-2-5-6-</font></span></font>目标</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1 1 1 </font><font face="宋体, SimSun"><b>2</b></font><font face="宋体, SimSun"> 2 3</font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1 2 3 3 3 3</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1 1 2 </font><font face="宋体, SimSun"><b>2</b></font><font face="宋体, SimSun"> 4 4</font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">5 5 5 </font><font face="宋体, SimSun"><b>5</b></font><font face="宋体, SimSun"> 5 6</font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">5 7 7 </font><font face="宋体, SimSun"><b>5</b></font><font face="宋体, SimSun"> 6 6</font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">7 7 6 </font><font face="宋体, SimSun"><b>6</b></font><font face="宋体, SimSun"> 6 6</font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">对于<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">40%</font></span></font>数据</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">4&lt;=N&lt;=10</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">对于<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">100%</font></span></font>数据</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">4&lt;=N&lt;=50</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">1&lt;=P&lt;=N*N</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">0&lt;=H&lt;=200000000</span></font></p>', 1000, 256, 10, 0, '2012-04-05 16:23:09'),
(202, '沙漠赛道', 'mirage', '<p style="margin-bottom: 0cm;" class="cjk"><b>问题描述</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">在闪光平原沙漠上，侏儒和地精正在进行赛车大赛。侏儒和地精都把他们最先进的科技应用到了赛车的提速上，以便于轻松超越对方。精彩激烈的比赛吸引了来自全艾泽拉斯的观众们。他们根据自己的喜好在比赛开始之前对两支队伍投注，以赢得不菲的回报。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">如果投注的车队胜出，那么投注者可以获得赌注的金额的两倍的报偿。如果投注的车队落败，那么就没有任何回报了。如果两队平局，每个投注者可以获得所有投注者赌注金额的几何平均数。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">作为沙漠赛道的老板，你在一开始就获得了两支车队的信息。你知 道了两个赛车的发动机的动力指数，以及发生各种事故的概率。赛车在行驶的过程中，可能会陷入沙坑，零件损坏，撞击赛道或者被沙漠虫群袭击。每种事故都是致 命的，只要赛车发生其中任何一种（或多种）事故，就一定无法到达终点了。任何一辆车发生事故，另一辆车就一定获胜，当然如果两辆车都发生事故，那就是平局 了。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">现在，有许多观众已经投注了，请你算出侏儒队和地精队获胜和平局的概率，以及比赛利润的期望。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>详细说明</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">例如下表说明了两队发生各种故障的概率。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" width="399" bordercolor="#000000" border="1">\r\n    <col width="53" /> 	<col width="68" /> 	<col width="68" /> 	<col width="68" /> 	<col width="68" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="53">\r\n            <p class="cjk">&nbsp;</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk">陷入沙坑</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk">零件损坏</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk">撞击赛道</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk">虫群袭击</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="53">\r\n            <p class="cjk">侏儒队</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.05</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.10</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.08</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.12</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="53">\r\n            <p class="cjk">地精队</p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.10</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.15</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.04</span></font></p>\r\n            </td>\r\n            <td width="68">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.00</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">下表为两队赛车发动机动力指数，我们规定，当两车都不发生事故时，每个队获胜的概率为<font face="Times New Roman, serif"><span lang="en-US">(</span></font>该队发动机动力指数<font face="Times New Roman, serif"><span lang="en-US">/</span></font>两队发动机动力指数和<font face="Times New Roman, serif"><span lang="en-US">)</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" width="146" bordercolor="#000000" border="1">\r\n    <col width="39" /> 	<col width="33" /> 	<col width="30" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="39">\r\n            <p class="cjk">&nbsp;</p>\r\n            </td>\r\n            <td width="33">\r\n            <p class="cjk">动力</p>\r\n            </td>\r\n            <td width="30">\r\n            <p class="cjk">概率</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="39">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="33">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">120</span></font></p>\r\n            </td>\r\n            <td width="30">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.6</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="39">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n            <td width="33">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">80</span></font></p>\r\n            </td>\r\n            <td width="30">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.4</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">根据以上数据，我们可以算出，侏儒队获胜概率约为<font face="Times New Roman, serif"><span lang="en-US">0.4889</span></font>，地精队获胜概率约为<font face="Times New Roman, serif"><span lang="en-US">0.4294</span></font>，两队平局概率约为<font face="Times New Roman, serif"><span lang="en-US">0.0817</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">下表为观众投注的金额。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" width="569" bordercolor="#000000" border="1">\r\n    <col width="37" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="38" /> 	<col width="37" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="37">\r\n            <p class="cjk">赛队</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">侏儒</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n            <td width="37">\r\n            <p class="cjk">地精</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="37">\r\n            <p class="cjk">金额</p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">100</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">200</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">300</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">400</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">500</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">600</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">500</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">400</span></font></p>\r\n            </td>\r\n            <td width="38">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">300</span></font></p>\r\n            </td>\r\n            <td width="37">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">100</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">投注总额为<font face="Times New Roman, serif"><span lang="en-US">3400</span></font>，当侏儒获胜时，你要支付<font face="Times New Roman, serif"><span lang="en-US">1500*2=3000</span></font>，利润为<font face="Times New Roman, serif"><span lang="en-US">400</span></font>。当地精获胜时，<font face="Times New Roman, serif"><span lang="en-US">1900*2=3800</span></font>，利润为<font face="Times New Roman, serif"><span lang="en-US">-400</span></font>。当两队平局时，几何平均数为<font face="Times New Roman, serif"><span lang="en-US">290.7692</span></font>，你要支付<font face="Times New Roman, serif"><span lang="en-US">290.7692*10=2907.692</span></font>，利润为<font face="Times New Roman, serif"><span lang="en-US">492.308</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">可以得出下表。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" width="569" bordercolor="#000000" border="1">\r\n    <col width="127" /> 	<col width="128" /> 	<col width="128" /> 	<col width="128" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="127">\r\n            <p class="cjk">&nbsp;</p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk">侏儒胜</p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk">地精胜</p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk">平局</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="127">\r\n            <p class="cjk">利润<font face="Times New Roman, serif"><span lang="en-US">&xi;</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">400</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">-400</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">492.308</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="127">\r\n            <p class="cjk">概率<font face="Times New Roman, serif"><span lang="en-US">P</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.4889</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.4294</span></font></p>\r\n            </td>\r\n            <td width="128">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.0817</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">由以上可得，比赛利润的期望</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">E&xi;=400*0.4889+(-400)*0.4294+492.308*0.0817=64.038</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，<font face="Times New Roman, serif"><span lang="en-US">4</span></font>个小于<font face="Times New Roman, serif"><span lang="en-US">1</span></font>的非负实数，为侏儒队赛车发生各种故障的概率。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">2</span></font>行，<font face="Times New Roman, serif"><span lang="en-US">4</span></font>个小于<font face="Times New Roman, serif"><span lang="en-US">1</span></font>的非负实数，为地精队赛车发生各种故障的概率。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">3</span></font>行，两个正整数，表示侏儒队赛车和地精队赛车的发动机动力指数。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">4</span></font>行，一个整数<font face="Times New Roman, serif"><span lang="en-US">N</span></font>，为下注的观众的数目。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">5-N+5</span></font>行，每行一个正实数和一个整数，表示下注的金额和支持的队伍，<font face="Times New Roman, serif"><span lang="en-US">0</span></font>为侏儒队，<font face="Times New Roman, serif"><span lang="en-US">1</span></font>为地精队。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，三个用空格隔开的正实数，分别为侏儒队获胜概率，地精队获胜概率，平局概率，保留两位小数。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">2</span></font>行，一个实数，为利润的期望，保留两位小数</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.05 0.10 0.08 0.12</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.10 0.15 0.04 0.00</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">120 80</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">100.0 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">200.0 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">300.0 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">400.0 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">500.0 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">600.0 1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">500.0 1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">400.0 1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">300.0 1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">100.0 1</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0.49 0.43 0.08</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">64.04</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0&lt;=N&lt;=100000</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1.0&lt;=</span></font>每个赌注金额<font face="Times New Roman, serif"><span lang="en-US">&lt;=100000.0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>概念参考</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>几何平均数</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">n</span></font>个正实数乘积的<font face="Times New Roman, serif"><span lang="en-US">n</span></font>次算术根。即给定<font face="Times New Roman, serif"><span lang="en-US">n</span></font>个正实数 <font face="Times New Roman, serif"><span lang="en-US">a1</span></font>，<font face="Times New Roman, serif"><span lang="en-US">a2</span></font>，&hellip;，<font face="Times New Roman, serif"><span lang="en-US">an</span></font>，其几何平均数为<font face="Times New Roman, serif"><span lang="en-US">(a1*a2*&hellip;&hellip;*an)^(1/n)</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>期望</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">数学期望的简称。离散随机变量的一切可能值与对应的概率<font face="Times New Roman, serif"><span lang="en-US">P</span></font>的乘积之和称为数学期望。</p>', 1000, 128, 20, 0, '2012-04-05 16:23:09');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(203, '美酒节赛羊', 'goat', '<p><b>问题描述</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">又到了一年一度的艾泽拉斯美酒节，联盟和部落都<span lang="zh-CN">会</span>用自己的粮食来酿造最好的美酒<span lang="zh-CN">来庆祝这次节日</span>。山羊大赛一向是美酒节的亮点，冒险者们带着他们从世界各地找来的山羊一起来参加山羊大赛。他们各自骑上自己的山羊，在一个很长的跑道上比赛驾驭技术，最先到达终点的选手可以获得一笔数额不菲的奖金。比赛的规则是这样的：</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<ol>\r\n    <li>\r\n    <p class="cjk" style="margin-bottom: 0cm;">参赛的山羊必须保证有以下特征</p>\r\n    <ol>\r\n        <li>\r\n        <p class="cjk" style="margin-bottom: 0cm;">山羊都会疲劳的，它的疲劳度上限为<font face="Times New Roman, serif"><span lang="en-US">P</span></font>。</p>\r\n        </li>\r\n        <li>\r\n        <p class="cjk" style="margin-bottom: 0cm;">山羊只能有三种行进方式。</p>\r\n        <ol type="i">\r\n            <li>\r\n            <p class="cjk" style="margin-bottom: 0cm;">慢速奔跑，每秒行进<font face="Times New Roman, serif"><span lang="en-US">1</span></font>码，每秒疲劳度减少<font face="Times New Roman, serif"><span lang="en-US">1</span></font>；</p>\r\n            </li>\r\n            <li>\r\n            <p class="cjk" style="margin-bottom: 0cm;">中速奔跑，每秒行进<font face="Times New Roman, serif"><span lang="en-US">5</span></font>码，每秒疲劳度增加<font face="Times New Roman, serif"><span lang="en-US">2</span></font>；</p>\r\n            </li>\r\n            <li>\r\n            <p class="cjk" style="margin-bottom: 0cm;">快速奔跑，每秒行进<font face="Times New Roman, serif"><span lang="en-US">10</span></font>码，每秒疲劳度增加<font face="Times New Roman, serif"><span lang="en-US">5</span></font>。</p>\r\n            </li>\r\n        </ol>\r\n        </li>\r\n    </ol>\r\n    </li>\r\n    <li>\r\n    <p class="cjk" style="margin-bottom: 0cm;">所有选手骑着各自的山羊，同时从起点出发，出发时疲劳度为<font face="Times New Roman, serif"><span lang="en-US">0</span></font>。</p>\r\n    </li>\r\n    <li>\r\n    <p class="cjk" style="margin-bottom: 0cm;">如果每一时刻山羊的疲劳度达到了上限，山羊必须持续至少<font face="Times New Roman, serif"><span lang="en-US">10</span></font>秒的慢速奔跑。</p>\r\n    </li>\r\n    <li>\r\n    <p class="cjk" style="margin-bottom: 0cm;">赛道的长度为<font face="Times New Roman, serif"><span lang="en-US">S</span></font>码，首先到达终点的选手为获胜者，</p>\r\n    </li>\r\n</ol>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">嗜财如命的地精们听到这一消息后，想不顾一切得获得奖金。<span lang="zh-CN">地精</span>总工程师尼克斯&bull;斯普克斯宾，用最好的外壳加上最强的地精专用动力装置组装了一个<span lang="zh-CN">&ldquo;</span>山羊<span lang="zh-CN">&rdquo;</span>。为了胜过他们的强劲对手&mdash;&mdash;侏儒队，他们想在比赛前就知道侏儒队的山羊能在最少多少秒的时间内到达终点。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">地精雇佣迪菲亚兄弟会的间谍，已经获得了侏儒山羊的疲劳度上限<font face="Times New Roman, serif"><span lang="en-US">P</span></font>。现在地精们找到了你，请你为他们<span lang="zh-CN">&ldquo;</span>山羊<span lang="zh-CN">&rdquo;的</span>芯片写一个程序，算出侏儒队能在最少多少秒的时间内到达终点。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输入格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">两个整数 <font face="Times New Roman, serif"><span lang="en-US">S ,P</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输出格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">一个整数 <font face="Times New Roman, serif"><span lang="en-US">T</span></font>，表示侏儒队最少到达终点的时间。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">50 20</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例说明</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">下面是一种<b>可能</b>的方式，也许并不唯一。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<dl><dd>\r\n<table cellspacing="0" cellpadding="7" width="471" bordercolor="#000000" border="1">\r\n    <col width="80" /> 		<col width="81" /> 		<col width="81" /> 		<col width="81" /> 		<col width="77" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><b>方式</b></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk">快</p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk">慢</p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk">中</p>\r\n            </td>\r\n            <td width="77">\r\n            <p class="cjk">快</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><b>时间</b></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">6</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">7</span></font></p>\r\n            </td>\r\n            <td width="77">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><b>疲劳度</b></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2</span></font></p>\r\n            </td>\r\n            <td width="77">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">17</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><b>距离</b></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">15</span></font></p>\r\n            </td>\r\n            <td width="81">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">20</span></font></p>\r\n            </td>\r\n            <td width="77">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">50</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</dd></dl>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><span lang="zh-CN">对于</span><font face="Times New Roman, serif"><span lang="en-US">30%</span></font><span lang="zh-CN">的数据</span></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">S&lt;=100</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">对于<font face="Times New Roman, serif"><span lang="en-US">50%</span></font>的数据</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">S&lt;=300,000</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">对于<font face="Times New Roman, serif"><span lang="en-US">100%</span></font>的数据</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">S&lt;=25,000,000 ,P&lt;=100</span></font></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:09'),
(204, '阿鲁高的远航', 'sail', '<p style="margin-bottom: 0cm;" class="cjk"><b>题目描述</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">我尝流连于格雷迈恩之墙，叹息着轻抚隔世的沧桑。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">我曾徜徉于洛丹米尔的水，飘离在腐败的气息之上。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">卫道士有卫道士的避风港，叛节者有叛节者的理想乡。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">魔法师有魔法师的墓志铭，造物主有造物主的礼拜堂。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">影牙城堡的旧主人，执着于疯狂。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">牙将被诅咒磨砺，影终被黑夜深藏。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">我曾抬头看着银松穹顶的冷光，暗月的辉耀隐约中露出寒芒。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">巨大的引力牵动着星辰的轨道，谁又看得到这个世界的真相。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">我曾经是肯瑞托的一名成员，第三次战争中，达拉然被亡灵天灾彻 底攻陷。在不断的失败和恐惧中，我召唤了远古的恶魔，贪婪而又凶猛的沃根。沃根恐怖的力量很快清理了附近的亡灵天灾，但是它也开始对肯瑞托的成员们发动了 攻击。可悲的是，我堕落了，我把附了沃根魔法的手腕强加在自己的朋友手上，让他们变成了我的奴仆。一个夜晚，我带领沃根，悄悄穿越格雷迈恩之墙，进攻了影 牙城堡。原来辉煌的城堡，逐渐被阴影和血腥味所笼罩。我隐身于城堡内高高的塔顶不断扩充自己的军队，幻想有一天可以成为这片大陆的主人。终于有一天，来自 外面的五位英雄让我清醒了过来，我才明白了我的罪孽，但是已经晚了。等待我的，只有死亡。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">巫妖王剥夺了我最后的权力，死亡。他复活了我，我成了当年我痛恨的敌人，亡灵。我很清醒，但是我没有办法控制自己的意识。我建立了血月神教，领导狼人们成为天灾军团的爪牙。深深地忏悔，现在，我只能逃离诺森德。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">追随者们为我制造了<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">MGGS</font></span></font>号勘探船，然而在漫长的旅途中，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">MGGS</font></span></font>由于空间有限，我必须消耗法力创造结界以携带更多的燃料。每个港口的库存燃料是有限的。在途中每一天，都可以驶到一个地精港口补充燃料，我没有钱，只能从他们那里抢。我的目标是永夜港，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">MGGS</font></span></font>号要航行<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">T</font></span></font>天 才能到达。由于天气条件的不同，每天航行的燃料消耗也不同。每天都可以到达一个地精港口，抢夺一些燃料（也可以不抢，从结界中得到燃料补充所需，注意，每 天的消耗必须被满足），抢夺每个单位燃料的法力消耗也是不同的。如果燃料除供这一天消耗外有剩余，我必须把它存到法力结界中，但是限于结界规模，我只能把 不超过<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">V</font></span></font>的燃料存储到结界中。在结界中存储的每个单位的燃料每天会消耗掉<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">W</font></span></font>点法力值。为了留有足够多的法力来对抗天灾军团的追捕，我必须尽量地减少法力的消耗。请你算出我最少的法力消耗是多少。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1</font></span></font>行，四个整数，航行的天数<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">T</font></span></font>，结界的最大存储量<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">V</font></span></font>，每个港口的库存<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">A</font></span></font>，结界中每存储一单位燃料一天的法力消耗<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">W</font></span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">2</font></span></font>行至第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1+T</font></span></font>行，第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">k+1</font></span></font>行有两个整数，分别表示第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">k</font></span></font>天的需要的燃料<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">N[k]</font></span></font>，抢夺第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">k</font></span></font>天到达的港口的每个单位燃料的法力消耗<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">B[k]</font></span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1</font></span></font>行，最小的法力消耗。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">2</font></span></font>行至第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1+T</font></span></font>行，第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">k+1</font></span></font>行有一个整数，表示第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">k</font></span></font>天到达港口后抢夺燃料的数量。如果有多种解，使每天抢夺的燃料数组成一个序列，所有这些序列构成一个集合，对这个集合进行第一位为第一关键字，第二位为第二关键字，&hellip;&hellip;的多关键字排序，输出其中最小的一个即可。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="it-IT">1&lt;=T&lt;=1000</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><span lang="it-IT">1&lt;=V</span></font></span></font>，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><span lang="it-IT">A</span></font></span></font>，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><span lang="it-IT">W</span></font></span></font>，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><span lang="it-IT">B[i]&lt;=100</span></font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><span lang="it-IT">1&lt;=N[i]</span></font><font face="宋体, SimSun"><span lang="it-IT">&lt;=V</span></font></span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">2 5 10 5</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">5 20</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">3 30</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">175</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">8</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="宋体, SimSun"><span lang="en-US">0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例说明</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">在第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1</font></span></font>天抢夺<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">8</font></span></font>个单位燃料，法力消耗<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">8*20=160</font></span></font>。<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">5</font></span></font>个用于当天直接使用，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">3</font></span></font>个放入结界，存储法力消耗<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">3*5=15</font></span></font>。在第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">2</font></span></font>天不需购买，直接使用结界中的<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">3</font></span></font>个单位燃料。所以总法力消耗为<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">160+15=175</font></span></font>。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(205, '奥术能量环流', 'arcane', '<p style="margin-bottom: 0cm;" class="cjk"><b>奥术能量环流</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">为了对抗巫妖王的天灾军团新一轮的入侵，暴风城正在被改建为一个港口城市。这个港口将会有通向诺森德的船只，以支援在诺森德战斗的联盟勇士。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">在教堂广场和花园区之间的运河的尽头，有一堵坚固的城墙。然而 现在这里却被规划成为了通向港口的唯一途径，于是矮人们正在考虑如何将这堵墙拆掉。这堵墙是在六年前暴风城石工会建成的，它是当年为了抵抗兽人的入侵而建 立的，因而异常的坚固。然而现在石工会背叛了暴风城，他们组成了迪菲亚兄弟会，请他们来帮暴风城的贵族们是绝无可能的。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">矮人们准备使用尽可能多的炸药炸掉它，但是大主教本尼斯塔九世强烈反对这一愚蠢的做法，因为这样会使大教堂如世界末日来临一般的震动。侏儒们认为把砖一块一块地卸下来是个不错的方法，但是砖与砖之间连接得异常紧密。于是，如何拆掉它便成了一个棘手的问题。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">聪明的侏儒大工匠梅卡托克带领他的学徒工程师们彻底研究了这一堵墙，他们发现了这堵墙精妙的内部结构。墙内每块砖与其相邻的砖之间由奥术能量连接了起来，连接砖与砖之间的奥术能量是有极性的，发射方向总是从正极指向负极。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">墙的内部存在着若干个<b>奥术能量环流</b>。所谓奥术能量环流，就是指在由多块砖组成的一个系统中，从<b>每一块</b>砖沿着奥术极性能量的发射方向出发，在该系统中进行若干次传递以后，都能够回到这块砖来。他们还发现，拆砖的时候，只有把所有的奥术能量环流都破坏掉，才能取下砖。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">例如下面图样，这是大工匠梅卡托克带回实验室进行进一步研究的一个模型。</p>\r\n<p lang="" style="margin-bottom: 0cm;" class="cjk"><img src="http://www.ruvtex.cn/mw/images/3/35/Arcane.gif" alt="" /></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">在这个模型中，有<font face="Times New Roman, serif"><span lang="en-US">2*4=8</span></font>块砖，相邻的砖之间已经用箭头标出了奥术极性能量的方向，由正极指向负极。经过分析不难发现，这个结构中存在着<font face="Times New Roman, serif"><span lang="en-US">{1,2,5,6},{3,4}</span></font>两个<b>极大奥术能量环流</b><span style="">（再也加不进去另外一块砖使其仍为奥术能量环流）</span>。当然<font face="Times New Roman, serif"><span lang="en-US">{1,5}</span></font>也是一个奥术能量环流，但是它不是极大的，因为它是环流<font face="Times New Roman, serif"><span lang="en-US">{1,2,5,6}</span></font>的一个子环流。极大奥术能量环流就是一种环流，这种环流不是其他环流的子环流。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">暴风城的贵族们采纳了梅卡托克的方案，尽管如此，实际执行工作的矮人们还是无法理解。他们请你来帮助编写一个程序，在动工前算出这堵墙中存在的极大奥术能量环流的个数。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，两个整数<font face="Times New Roman, serif"><span lang="en-US">N,M</span></font>，表示这堵墙由<font face="Times New Roman, serif"><span lang="en-US">N</span></font>行<font face="Times New Roman, serif"><span lang="en-US">,M</span></font>列块砖组合起来。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">2-N+1</span></font>行，第<font face="Times New Roman, serif"><span lang="en-US">i</span></font>行有<font face="Times New Roman, serif"><span lang="en-US">M</span></font>个整数，第<font face="Times New Roman, serif"><span lang="en-US">j</span></font>个整数<font face="Times New Roman, serif"><span lang="en-US">Pij</span></font>表示这块砖的状态。<font face="Times New Roman, serif"><span lang="en-US">Pij</span></font>为一个小于<font face="Times New Roman, serif"><span lang="en-US">16</span></font>的非负整数，把它转化为二进制以后，每个二进制位表示这块砖是否向一个方向发出极性奥术能量。二进制数从左到右第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>位为上，第<font face="Times New Roman, serif"><span lang="en-US">2</span></font>为下，第<font face="Times New Roman, serif"><span lang="en-US">3</span></font>位为左，第<font face="Times New Roman, serif"><span lang="en-US">4</span></font>位为右，<font face="Times New Roman, serif"><span lang="en-US">1</span></font>表示发射，<font face="Times New Roman, serif"><span lang="en-US">0</span></font>表示没有。状态转换如下表。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" bordercolor="#000000" border="1" width="531">\r\n    <col width="81" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="81">\r\n            <p class="cjk">状态</p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">3</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">4</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">6</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">7</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="81">\r\n            <p class="cjk">二进制表示</p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0000</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0001</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0010</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0011</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0100</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0101</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0110</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">0111</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" bordercolor="#000000" border="1" width="529">\r\n    <col width="81" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="40" /> 	<col width="39" /> 	<col width="39" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="81">\r\n            <p class="cjk">状态</p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">8</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">9</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">11</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">12</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">13</span></font></p>\r\n            </td>\r\n            <td width="39">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">14</span></font></p>\r\n            </td>\r\n            <td width="39">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">15</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="81">\r\n            <p class="cjk">二进制表示</p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1000</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1001</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1010</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1011</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1100</span></font></p>\r\n            </td>\r\n            <td width="40">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1101</span></font></p>\r\n            </td>\r\n            <td width="39">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1110</span></font></p>\r\n            </td>\r\n            <td width="39">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1111</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，一个整数，极大奥术能量环流的个数。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2 4</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5 5 1 2</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">8 2 3 0</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例说明</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">样例如题中所给出的图所示。有<font face="Times New Roman, serif"><span lang="en-US">{1,2,5,6},{3,4}</span></font>两个极大奥术能量环流。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=N , M &lt;=100</span></font></p>', 1000, 128, 20, 0, '2012-04-05 16:23:10'),
(206, 'IP网络管理员', 'networkip', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;Alex 是一个 IP 网络管理员。他的顾客拥有一堆私人 IP 地址，他想把这些 IP 地址组成一个最小的 IP  网络。</p>\r\n<p>每个 IP 地址是由 4 个 byte 类型数顺次由 3 个 dot 连接而成，形如 ''byte0.byte1.byte2.byte 3''  （不计引号）。每个 byte 类型数是一个 0 至 255 （包括 0 和 255 ）的首位不为零的十进制整数。</p>\r\n<p>IP 网络由网络地址和网络掩码来描述，他们的描述方式与 IP 地址相同。为了准确的理解 IP  地址、网络地址和网络掩码的意义，你需要把它们按照二进制表示写出。他们的二进制表示都由 32 bits 组成： 8 bits 描述 byte0 、然后 8  bits 描述 byte1 、然后 8 bits 描述 byte2 、最后 8 bits 描述 byte3 。</p>\r\n<p>特定的 IP 网络包含 2^n 个 IP 地址。它的网络掩码的前 32-n 个 bits 为 1 ，后 n 个 bits 为 0 ；其网络地址的前  32&ndash;n 个 bits 为 0 或者 1 ，后 n 个 bits 为 0 。这个 IP 网络包含了所有前 32&ndash;n 个 bits 与其网络地址相同且后 n 个  bits 任意的所有 IP 地址，总共 2^n 个。我们说一个 IP 网络比另一个 IP 网络小，当且仅当它包含更少的 IP 地址。</p>\r\n<p>比如，网络地址和网络掩码分别为 194.85.160.176 和 255.255.255.248 的 IP 网 络包含了从 194.85.160.176  至 194.85.160.183 的 IP 地址。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 第一行一个正整数 m （ 1 &lt;= m &lt;= 1000 ）表示 Alex 的 IP 地址数。然后 m  行每行描述一个 IP 地址。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 两行，分别表示能够包含所有 IP 地址的最小 IP 网络的网络地址和网络掩码。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>networkip.in <br />\r\n3<br />\r\n194.85.160.177<br />\r\n194.85.160.183<br />\r\n194.85.160.178</p>\r\n<p>networkip.out<br />\r\n194.85.160.176<br />\r\n255.255.255.248</p>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(207, '硬币游戏', 'coins', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; Alice 和 Bob 决定要玩一个有趣的硬币游戏。游戏的一开始他们把 n (1&lt;=n&lt;=10^6  ) 个硬币放成一个圆圈，如下图所示。一次操作是指拿走一个硬币或者拿走两个相邻的硬币，而其他的硬币留在原来的位置不动。每次操作至少要拿走一个硬币。从 Alice  开始，游戏双方轮流进行操作。拿到最后一个硬币的人获胜。</p>\r\n<p align="center"><img height="152" width="162" alt="" src="http://www.ruvtex.cn/mw/images/e/e7/Coins.gif" /></p>\r\n<p>注意：当 n&gt;3 时，我们沿顺时针方向用 C1 ， C2 ， &hellip;.. Cn 来表示这 n 个硬币。如果 Alice 拿走了 C2 ，那么 C1 和  C3 就不相邻了！（因为它们中间有一个空位置）</p>\r\n<p>假设 Alice 和 Bob 都很聪明，并且两个人都用最好的策略来比赛。现在请你来写一个程序判断谁将会赢得这个比赛？</p>\r\n<p>&nbsp;</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; * 第一行一个整数 k, 表示有 k 组测试数据。 (1&lt;=k&lt;=10000)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; * 以下 k  行每行一个整数 n (1&lt;=n&lt;=10^6 ) ，表示游戏开始时硬币的个数。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; * 对于每一个 n ，如果 Alice 能获胜，输出&ldquo; Alice &rdquo;，否则输出&ldquo; Bob &rdquo;。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入：  <br />\r\n3<br />\r\n1<br />\r\n2<br />\r\n3<br />\r\n<br />\r\n输出：<br />\r\nAlice<br />\r\nAlice<br />\r\nBob</p>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(208, '移动骷髅', 'klgame', '<p><font color="#0000ff"> </font><b>【问题描述】</b></p>\r\n<p>这是一个游戏</p>\r\n<h3>游戏说明</h3>\r\n<p>游戏目标 : 将红色骷髅移至中间的红色方格内 .</p>\r\n<p>游戏规则 : 你可以移动任何一个骷髅 , 他会向着你所指的方向走去 , 直到前方出现障碍物 , 即前面有其他骷髅 , 如果骷髅掉出棋盘外 , 则游戏失败  .</p>\r\n<p>由于这个游戏到后来实在太复杂了 , 我们可爱的芯心不知道该怎么走了 , 但是她又是那么的坚强和自信 , 一定要自己玩过去 ,  所以她只想知道每一关需要的最少步数 .</p>\r\n<p>【输入格式】</p>\r\n<p>第一行为一整数N,表示有N关. <br />\r\n每组测试数据为一个5*5的距阵,描述一个起始状态. <br />\r\n每组测试数据之间有一空行.  <br />\r\n2表示红色骷髅,1表示白色骷髅,0表示无骷髅. <br />\r\n保证不会出现无解的情况.</p>\r\n<p>【输出格式】 <br />\r\n你只需要依次输出每关的最少步数 . 具体格式参照样例 .&nbsp;&nbsp;&nbsp;</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入：</p>\r\n<p>2<br />\r\n10001<br />\r\n00000<br />\r\n02010<br />\r\n00000<br />\r\n10001</p>\r\n<p>00010<br />\r\n02000<br />\r\n10000<br />\r\n01010<br />\r\n00001</p>\r\n<p>输出：</p>\r\n<p>level 1:<br />\r\n1<br />\r\nlevel 2:<br />\r\n3</p>\r\n<object height="400" width="550" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0">\r\n<param value="14552" name="_cx" />\r\n<param value="10583" name="_cy" />\r\n<param value="" name="FlashVars" />\r\n<param value="http://www.ruvtex.cn/images/ai.swf" name="Movie" />\r\n<param value="http://www.ruvtex.cn/images/ai.swf" name="Src" />\r\n<param value="Window" name="WMode" />\r\n<param value="0" name="Play" />\r\n<param value="-1" name="Loop" />\r\n<param value="High" name="Quality" />\r\n<param value="" name="SAlign" />\r\n<param value="-1" name="Menu" />\r\n<param value="" name="Base" />\r\n<param value="" name="AllowScriptAccess" />\r\n<param value="ShowAll" name="Scale" />\r\n<param value="0" name="DeviceFont" />\r\n<param value="0" name="EmbedMovie" />\r\n<param value="" name="BGColor" />\r\n<param value="" name="SWRemote" />\r\n<param value="" name="MovieData" />\r\n<param value="1" name="SeamlessTabbing" />\r\n<param value="0" name="Profile" />\r\n<param value="" name="ProfileAddress" />\r\n<param value="0" name="ProfilePort" />\r\n<param value="all" name="AllowNetworking" />\r\n<param value="false" name="AllowFullScreen" />                               <embed height="400" width="550" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" quality="high" src="http://www.ruvtex.cn/images/ai.swf"></embed>         </object>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(209, '工作分配', 'divide', '<p><b>【问题描述】</b><br />\r\nGG 有 n 份工作要完成，每一份工作有一个类型系数 Ak 。由于工作数目太多了， GG  光靠自己的能力是无法完成的，所以他打算雇佣很多工人来帮他。工人是非常精明的，他们要求按照工作数目收费，如果分派给他的工作数目小于 k  ，他们将不愿意接受。工人完成一份工作的收费是 C 。但是， GG  也是很精明的老板，考虑到有些工作之间很类似，完成了一份工作之后可以很轻松的完成下一份工作，所以他提出了这样的要求，假设工人接受的工作的类型系数是 {B1,  B2, B3 &hellip; Bp} ，他能够得到的报酬将是 C + (maxB &ndash; minB)^2 。</p>\r\n<p>作为 GG 的助理，现在你有责任告诉他，为了完成这些工作，他至少要支付多少钱给工人（不算你的工资）？</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;第一行三个正整数 n 、 k 、 C （ 1 &lt;= k &lt;= n &lt;= 10^6 ， 0 &lt; C  &lt;= 10^9 ），意义如题所述；</p>\r\n<p>第二行 n 个正整数描述 n 份工作的类型系数（ 0 &lt; A &lt;= 10^9 ）。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 一个整数表示 GG 最少需要支付的工资（保证答案不大于 10^17  ）。<br />\r\n【输入输出样例】&nbsp;<b><br />\r\n</b>输入:<br />\r\n2 1 1<br />\r\n2 4</p>\r\n<p>输出:<br />\r\n2</p>\r\n<p><b>【样例说明】</b></p>\r\n<p>如果分给一个工人做，收费为 1 + (4 &ndash; 2)^2 = 5 ；</p>\r\n<p>如果分给两个工人作，收费为 1 + 1 = 2 ；</p>\r\n<p>所以最小收费为 2 。</p>\r\n<p><b>【数据规模】</b></p>\r\n<p>对于 50 分的测试数据中保证有 N &lt;= 1000</p>\r\n<p>对于 80 分的测试数据中保证有 N &lt;= 100000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(210, '彩色穿孔卡片', 'punch', '<p style="margin-bottom: 0cm;"><b>问题描述</b></p>\r\n<p style="margin-bottom: 0cm;">&ldquo;在逃离诺莫瑞根的时候，我们留下了太多的数据！非常重要的数据！&rdquo;大机械师卡斯派普十分着急，&ldquo;尽管已经拿回了许多彩色穿孔卡片，但是混乱的数据令人无法忍受！&rdquo;</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">自从诺莫瑞根陷落以后，侏儒们一直寄居在铁炉堡中。大机械师卡斯派普花了不少钱来悬赏勇士们去诺莫瑞根替他取回一些卡片，现在他已经有了一大堆彩色穿孔卡片。但是这些卡片都是残缺不全的，有的甚至还是无效的，想从这些破烂中恢复数据，实在是一件不容易的事。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">卡斯派普发现每个卡片的开头和结尾都有标记，记录着它原本在卡片机中的位置，于是想出了一个恢复数据的方法。把每张卡片上的两个标记<font face="宋体, SimSun"><span lang="en-US">A,B</span></font>看成数轴上的两个点，然后把卡片一张一张按顺序地贴到一个数轴上，每张卡片的颜色都不同，他想知道贴完卡片以后的数轴上一共有多少种不同的颜色。卡斯派普请你帮助他写一个程序来解决这个问题。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>输入</b></p>\r\n<p style="margin-bottom: 0cm;">第<font face="宋体, SimSun"><span lang="en-US">1</span></font>行：一个整数<font face="宋体, SimSun"><span lang="en-US">N</span></font>，表示卡斯派普收集到的卡片的数量。</p>\r\n<p style="margin-bottom: 0cm;">第<font face="宋体, SimSun"><span lang="en-US">2</span></font>行至第<font face="宋体, SimSun"><span lang="en-US">N</span></font>＋<font face="宋体, SimSun"><span lang="en-US">1</span></font>行：第<font face="宋体, SimSun"><span lang="en-US">i+1</span></font>行给出了第<font face="宋体, SimSun"><span lang="en-US">i</span></font>张卡片的头尾两个标记<font face="宋体, SimSun"><span lang="en-US">Ai,Bi</span></font>，贴卡片的顺序与输入文件中出现的先后顺序一致。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>输出</b></p>\r\n<p style="margin-bottom: 0cm;">第<font face="宋体, SimSun"><span lang="en-US">1</span></font>行：一个整数，表示卡斯派普能在数轴上看到的不同的颜色的数目。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">4</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">0 5</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">3 8</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">5 6</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">4 7</span></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">3</span></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>样例说明</b></p>\r\n<p style="margin-bottom: 0cm;">如图所示</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><a name="_1286382802"></a><a name="_1286382771"></a> <img height="145" width="452" align="bottom" alt="" src="http://www.ruvtex.cn/mw/images/2/23/Punch.gif" name="对象1" /></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;">可以看到的不同颜色的卡片数为<font face="宋体, SimSun"><span lang="en-US">3</span></font>，<font face="宋体, SimSun"><span lang="en-US">3</span></font>号卡片被<font face="宋体, SimSun"><span lang="en-US">4</span></font>号卡片所覆盖。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">50%</span></font>的数据满足<font face="宋体, SimSun"><span lang="en-US">N&lt;=1,000, 0&lt;=Ai&lt;Bi&lt;=100,000(1&lt;=i&lt;=N);</span></font></p>\r\n<p style="margin-bottom: 0cm;"><font face="宋体, SimSun"><span lang="en-US">100%</span></font>的数据满足<font face="宋体, SimSun"><span lang="en-US">N&lt;=10,000, 0&lt;=Ai&lt;Bi&lt;=1,000,000,000(1&lt;=i&lt;=N)</span></font>。</p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>', 1000, 128, 11, 0, '2012-04-05 16:23:10');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(211, '艾萨拉的激流', 'azshara', '<p class="cjk" style="margin-bottom: 0cm;"><b>问题描述</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">沿着卡利姆多北方边界延展的破碎的海岸，在世界大分裂之前曾经 是暗夜精灵首都艾萨琳的一部分，艾萨拉。恶魔终于从这个世界被消除，这片土地被撕碎并被大海吞没，剩下的只有曾经雄伟城市的废墟。自那以后，这个岩石交错 的岛屿、峭壁悬崖和珊瑚丛生的海洋成为许多传说来源。暗夜精灵们认为这是个被诅咒的地方，从来没有人敢来探险，连经验最丰富的船长都从这里绕行。因为这里 有巨大的水生物，可怕的暗礁，强大的激流与巨浪。然而传闻这里水下有着惊人的宝藏，一直吸引着地精们。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">地精菲利克斯购买了最好的探险艇，来探索艾萨拉海岸水下传说中的宝藏。不出所料，海底果然有大量的宝藏。但是这些宝藏被一个激流覆盖，菲利克斯不可能把他的探险艇停下来。这个激流可以被描述为一个<font face="Times New Roman, serif"><span lang="en-US">W&times;L</span></font>的矩形，分成个一个个单元格。每个单元格可能是宝藏，也可能是一块礁石。从上游开始，每过<font face="Times New Roman, serif"><span lang="en-US">1</span></font>秒， 菲利克斯的探险艇就会被冲往下游的一个单位。在被冲往下游的过程中，菲利克斯可以控制方向，选择他的正前，左边，或右边的一个单位，以免触碰礁石。菲利克 斯从这个激流的最上游的任意一个单元格开始向下漂流，每经过一个单元格就可以取走这个单元格上的宝藏。菲利克斯千万不能碰到礁石，否则他的探险艇会损坏。 请你算出，菲利克斯最多一共能拿到多少个单位的宝藏。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输入格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">第一行，两个整数<font face="Times New Roman, serif"><span lang="en-US">W</span></font>，<font face="Times New Roman, serif"><span lang="en-US">L</span></font>。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">接下来的<font face="Times New Roman, serif"><span lang="en-US">L</span></font>行，每行<font face="Times New Roman, serif"><span lang="en-US">W</span></font>个整数，以&rdquo;从上游到下游，面朝水流方向从左向右&ldquo;的顺序依次为每个单元格中的宝藏的单位数目，如果为<font face="Times New Roman, serif"><span lang="en-US">-1</span></font>则表示这个单元格是礁石。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>输出格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">一个整数，表示得到的宝藏。</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>数据规模</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=W&lt;=1000</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">1&lt;=L&lt;=10000</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">所有涉及到的数字不会超过<font face="Times New Roman, serif"><span lang="en-US">32</span></font>位带符号整型的范围</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输入</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">3 5</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">5 1 3</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">-1 7 -1</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">5 1 10</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">4 -1 7</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">20 10 5</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例输出</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><font face="Times New Roman, serif"><span lang="en-US">41</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;"><b>样例说明</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<table cellspacing="0" cellpadding="7" width="287" bordercolor="#000000" border="1">\r\n    <col width="80" /> 	<col width="19" /> 	<col width="24" /> 	<col width="26" /> 	<col width="24" /> 	<col width="27" />\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk">上游<font face="Times New Roman, serif"><span lang="en-US">-&gt;</span></font>下游</p>\r\n            </td>\r\n            <td width="19">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2</span></font></p>\r\n            </td>\r\n            <td width="26">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">3</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">4</span></font></p>\r\n            </td>\r\n            <td width="27">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="19">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><span style="background: rgb(255, 255, 0) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">5</span></span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">-1</span></font></p>\r\n            </td>\r\n            <td width="26">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><span style="background: rgb(255, 255, 0) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">5</span></span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><span style="background: rgb(255, 255, 0) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">4</span></span></font></p>\r\n            </td>\r\n            <td width="27">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><span style="background: rgb(255, 255, 0) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">20</span></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">2</span></font></p>\r\n            </td>\r\n            <td width="19">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><span style="background: rgb(255, 255, 0) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;">7</span></span></font></p>\r\n            </td>\r\n            <td width="26">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">1</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">-1</span></font></p>\r\n            </td>\r\n            <td width="27">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="80">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">3</span></font></p>\r\n            </td>\r\n            <td width="19">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">3</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">-1</span></font></p>\r\n            </td>\r\n            <td width="26">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10</span></font></p>\r\n            </td>\r\n            <td width="24">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">7</span></font></p>\r\n            </td>\r\n            <td width="27">\r\n            <p class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p class="cjk" style="margin-bottom: 0cm;">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm;">如上表，菲利克斯可以从<font face="Times New Roman, serif"><span lang="en-US">(1,1)</span></font>开始，第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>秒向右转一下，被冲到<font face="Times New Roman, serif"><span lang="en-US">(2,2)</span></font>。第<font face="Times New Roman, serif"><span lang="en-US">2</span></font>秒向左转一下，被冲到<font face="Times New Roman, serif"><span lang="en-US">(3,1)</span></font>。接下来正前行走，经过<font face="Times New Roman, serif"><span lang="en-US">(4,1),(5,1)</span></font>，一共拿到<font face="Times New Roman, serif"><span lang="en-US">5+7+5+4+20=41</span></font>个单位的宝藏。</p>', 2000, 128, 10, 0, '2012-04-05 16:23:10'),
(212, '潜入辛迪加', 'syndicate', '<p class="cjk" style="margin-bottom: 0cm"><b>问题描述</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm">&ldquo;我们最新的研究成果《毒药研究方案》被可恶的辛迪加偷走了！&rdquo;作为拉文霍德的一员，你一定感到很震惊，因为它是我们最尖端的科研人员的一年的研究成果。被辛迪加获得，我们可能会有灭顶之灾。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm">狡猾的辛迪加为了躲避我们的追杀，他们并没有把《毒药研究方 案》带回激流堡，而是把它藏了起来。但是终究是我们技高一筹，运用侏儒的最新研究成果&ldquo;静电放射探测器&rdquo;，我们已经发现了他们的藏身之地。原来他们早就在 奥特兰克山脉的地下修建了一个巨大的城市，现在，他们就把《毒药研究方案》放在了城市的最深处。更好的消息是，我们已经发现了地下城的入口。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><a name="OLE_LINK2"></a><a name="OLE_LINK1"></a>作为一名出色的盗贼，你要学会以彼之道，还施彼身&mdash;&mdash;把《毒药研究方案》偷回来。然而辛迪加布置了严密的防御，更糟糕的是，他们从地精购买了电磁监视器。无论你的潜行技巧有多么高明，只要一接近它，就会出发警报。只有破坏它的供电系统，才能电磁监视器悄无声息得失效。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><a name="OLE_LINK4"></a><a name="OLE_LINK3"></a>现在，&ldquo;静电放射探测器&rdquo;已经为我们生成了一张地图，它可以告诉你整个地下城的布局结构，包括每一个电磁监视器的位置，及其供电装置的位置。辛迪加的地下城可以被描述为一个<font face="Times New Roman, serif"><span lang="en-US">N*N</span></font>的表格，城市的入口在<font face="Times New Roman, serif"><span lang="en-US">(1,1)</span></font>处，目标《毒药研究方案》在<font face="Times New Roman, serif"><span lang="en-US">(N,N)</span></font>处。每个单元格可能是一片空地、一个障碍物、一个辛迪加卫士、一个电磁监视器、或者一个的供电装置。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm">从入口处开始，每步你只能上、下、左、右移动到相邻的一个单元 格，不可以停留在原地。你只能进入空地，或者失去供电系统的电磁监视器的位置，或者摧毁供电装置。你不能移动到障碍物上，也不能进入辛迪加卫士的视线中。 辛迪加卫士可以监视自己所在单元格以及上下左右共五格的位置，而且他们的视线可以重叠。你不能杀死辛迪加卫士，也不能被他们发现。每个电磁监视器的供电装 置可能存在，也可能无法破坏或者根本不存在。一个供电装置也可能会对应零个、一个或多个电磁监视器，意味着摧毁它，对应的所有电磁监视器都会失效。<font face="Times New Roman, serif"><span lang="en-US">(1,1)</span></font>和<font face="Times New Roman, serif"><span lang="en-US">(N,N)</span></font>一定是可以通行的。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm">拉文霍德要求你在执行任务之前首先给出一个计划书，即要求算出至少一共需要多少步，才能拿到我们的《毒药研究方案》。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><b>输入格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行，两个整数<font face="Times New Roman, serif"><span lang="en-US">N, M</span></font>。表示地图大小为<font face="Times New Roman, serif"><span lang="en-US">N*N</span></font>，供电装置的数量为<font face="Times New Roman, serif"><span lang="en-US">M</span></font>。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">第<font face="Times New Roman, serif"><span lang="en-US">2-N+1</span></font>行，每行<font face="Times New Roman, serif"><span lang="en-US">N</span></font>个整数，每个整数<font face="Times New Roman, serif"><span lang="en-US">i</span></font>可能是<font face="Times New Roman, serif"><span lang="en-US">0</span></font>，<font face="Times New Roman, serif"><span lang="en-US">-1</span></font>，<font face="Times New Roman, serif"><span lang="en-US">-2</span></font>或者一个正整数。<font face="Times New Roman, serif"><span lang="en-US">i=0</span></font>表示该位置为一块空地，<font face="Times New Roman, serif"><span lang="en-US">i=-1</span></font>表示该位置为一个障碍物，<font face="Times New Roman, serif"><span lang="en-US">i=-2</span></font>表示该位置为一个辛迪加卫士。如果<font face="Times New Roman, serif"><span lang="en-US">i</span></font>是一个属于<font face="Times New Roman, serif"><span lang="en-US">[1,M]</span></font>的正整数，则表示该位置为一个供电装置，其编号为<font face="Times New Roman, serif"><span lang="en-US">i</span></font>。如果<font face="Times New Roman, serif"><span lang="en-US">i</span></font>是一个大于<font face="Times New Roman, serif"><span lang="en-US">M</span></font>的正整数，则表示该位置为一个电磁监视器，它的电力由编号为<font face="Times New Roman, serif"><span lang="en-US">i-M</span></font>的供电装置提供。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><b>输出格式</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm">一个整数，为拿到《毒药研究方案》所需的最少的步数。如果不能到达输出-1.</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><b>样例输入</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">6 2</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">0 0 0 -2 -1 2</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">-1 0 0 0 -1 0</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">-2 0 0 0 3 3</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">-2 0 0 -1 -1 4</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">0 -1 0 0 -1 0</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">1 0 0 0 -1 0</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><b>样例输出</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><font face="Times New Roman, serif"><span lang="en-US">24</span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><b>样例说明</b></p>\r\n<p class="cjk" style="margin-bottom: 0cm"><a name="OLE_LINK6"></a><a name="OLE_LINK5"></a>地图如下图，<font face="Times New Roman, serif"><span lang="en-US">S</span></font>为入口，<font face="Times New Roman, serif"><span lang="en-US">T</span></font>为目标，黑色的单元格为障碍物。每个<font face="Times New Roman, serif"><span lang="en-US">E</span></font>表示一个卫兵，<font face="Times New Roman, serif"><span lang="en-US">(E)</span></font>为卫兵的监视范围。<font face="Times New Roman, serif"><span lang="en-US">K1</span></font>表示供电装置<font face="Times New Roman, serif"><span lang="en-US">1</span></font>，<font face="Times New Roman, serif"><span lang="en-US">K2</span></font>表示供电装置<font face="Times New Roman, serif"><span lang="en-US">2</span></font>。<font face="Times New Roman, serif"><span lang="en-US">D1</span></font>表示供电装置为<font face="Times New Roman, serif"><span lang="en-US">1</span></font>的电磁监视器，<font face="Times New Roman, serif"><span lang="en-US">D2</span></font>表示供电装置为<font face="Times New Roman, serif"><span lang="en-US">2</span></font>的电磁监视器。</p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm">最优的路线为<font face="Times New Roman, serif"><span lang="en-US">(1,1<font face="宋体, SimSun">) &rarr;(1,2) &rarr;(2,2) &rarr;(2,3) &rarr;(3,3) &rarr;(4,3) &rarr;(5,3) &rarr;(6,3) &rarr;(6,2) &rarr;(6,1)(</font></span></font>破坏供电<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">1) &rarr;(6,2) &rarr;(6,3) &rarr;(5,3) &rarr;(4,3) &rarr;(3,3) &rarr;(3,4) &rarr;(3,5) &rarr;(3,6) &rarr;(2,6) &rarr;(1,6)(</font></span></font>破坏供电<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun">2) &rarr;(2,6) &rarr;(3,6) &rarr;(4.6) &rarr;(5,6) &rarr;(6,6)</font></span></font></p>\r\n<p class="cjk" style="margin-bottom: 0cm">&nbsp;</p>\r\n<p class="cjk" style="margin-bottom: 0cm"><a name="_1285610665"></a><a name="_1285610648"></a><a name="_1285610453"></a><a name="_1285609477"></a><a name="_1285609096"></a><a name="_1285609065"></a><a name="_1285609017"></a><a name="_1285609004"></a><a name="_1285608882"></a><a name="_1285608846"></a><a name="_1285608817"></a><a name="_1285608807"></a><img height="337" alt="" width="317" align="bottom" name="对象1" src="http://www.ruvtex.cn/mw/images/3/30/Syndicate.gif" /></p>\r\n<pre><b>数据规模</b>\r\n\r\n对于15%数据\r\nM=0\r\n\r\n对于40%数据\r\nM&lt;=2\r\n\r\n对于100%数据\r\n2&lt;=N&lt;=50\r\n0&lt;=M&lt;=16\r\n</pre>', 1000, 512, 13, 0, '2012-04-05 16:23:10'),
(213, '灵魂分流药剂', 'soultap', '<p style="margin-bottom: 0cm;" class="cjk"><b>问题描述</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">幽暗城皇家炼金师赫布瑞姆刚刚发明了一种用来折磨战俘的新型药 剂，这种药剂被称为灵魂分流药剂。灵魂分流药剂的妙处在于能够给战俘带来巨大的痛苦，但是却不会让战俘死去。这种药剂中包含了一些治疗的成分，所以即使战 俘想自尽，也会被救活。用这种求生不得，求死不能的感觉，来对付反对希尔瓦娜斯女王的狂徒们，实在是太美妙了。当然，灵魂分流药剂要限定在一个用量范围之 内，过少会达不到效果，而过多会直接杀了战俘。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">最近，我们抓获了一个来自暴风城的探子，他掌握了我们的许多重要情报。希尔瓦娜斯女王命令你用最痛苦的手段折磨他。你从你的导师，灵魂分流药剂的发明者&mdash;&mdash;皇家炼金师赫布瑞姆那里获得了<font face="Times New Roman, serif"><span lang="en-US">N</span></font>瓶药剂。每瓶按照药性的不同装在<font face="Times New Roman, serif"><span lang="en-US">M</span></font>个箱子中。每瓶药剂都有一个规格：对服用者造成的肉体伤害<font face="Times New Roman, serif"><span lang="en-US">w</span></font>，对服用者造成的意志折磨<font face="Times New Roman, serif"><span lang="en-US">v</span></font>，所属的箱子<font face="Times New Roman, serif"><span lang="en-US">t</span></font>，和对服用者造成的痛苦值<font face="Times New Roman, serif"><span lang="en-US">p</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">据我们测试，那个暴风城探子的生命值为<font face="Times New Roman, serif"><span lang="en-US">A</span></font>，意志力为<font face="Times New Roman, serif"><span lang="en-US">B</span></font>。你要从每个箱子中最多拿取<font face="Times New Roman, serif"><span lang="en-US">1</span></font>瓶药剂喂给他。注意，喂给他的药剂造成的总肉体伤害不能超过他的生命值<font face="Times New Roman, serif"><span lang="en-US">A</span></font>，否则他会死去，总意志折磨不能超过他的意志力<font face="Times New Roman, serif"><span lang="en-US">B</span></font>，否则他会精神崩溃，我们没有必要给一个精神崩溃的傻瓜制造那么多痛苦。在不让他死去或者精神崩溃的前提下，你要尽可能多的给他制造痛苦，你能解决这个问题吗？</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输入格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行：四个整数<font face="Times New Roman, serif"><span lang="en-US">N,M,A,B</span></font>，<font face="Times New Roman, serif"><span lang="en-US">M</span></font>个箱子的编号为<font face="Times New Roman, serif"><span lang="en-US">1..M</span></font>。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">2</span></font>行至第<font face="Times New Roman, serif"><span lang="en-US">N+1</span></font>行：第<font face="Times New Roman, serif"><span lang="en-US">i+1</span></font>行四个整数<font face="Times New Roman, serif"><span lang="en-US">w,v,t,p</span></font>表示第<font face="Times New Roman, serif"><span lang="en-US">i</span></font>瓶药剂的肉体伤害，意志折磨，所属箱子的编号，和造成的痛苦值。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>输出格式</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">第<font face="Times New Roman, serif"><span lang="en-US">1</span></font>行：一个整数，表示能够造成的最大的痛苦值。</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输入</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5 3 20 20</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5 10 1 200</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10 5 1 100</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">8 11 2 56</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">10 10 2 50</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">5 5 3 100</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>样例输出</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">300</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><b>数据规模</b></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">对于<font face="Times New Roman, serif"><span lang="en-US">30%</span></font>的数据</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">N&lt;=30</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">M&lt;=5</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk">&nbsp;</p>\r\n<p style="margin-bottom: 0cm;" class="cjk">对于<font face="Times New Roman, serif"><span lang="en-US">100%</span></font>的数据</p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">N&lt;=100</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">M&lt;=10</span></font></p>\r\n<p style="margin-bottom: 0cm;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US">A,B&lt;=100</span></font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:10'),
(214, '连续素数和', 'conprime', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 一些正整数可以表示成一个或多个连续素数和的形式。那么一个正整数可以表示成多少种连续素数和的形式呢？例如： 53 有 2 种连续素数和的形式分别是 5+7+11+13+17 和 53. 正整数 41 有 3 种连续素数和的形式： 2+3+5+7+11+13,11+13+17 和 41. 整数 3 只有一种连续素数和的形式就是 3 。 20 就不能表示成连续素数的和。</p>\r\n<p>你的任务就是找出整数 N 能表示成的连续素数和的种数。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; * 每行一个正整数 N(2&lt;=N&lt;=10000) ，表示你要处理的数。当 N=0 时输入结束。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; * 对于每一个整数 N ，你要输出它能表示成连续素数和的种数。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入<br />\r\n2<br />\r\n3<br />\r\n17<br />\r\n41<br />\r\n20<br />\r\n666<br />\r\n12<br />\r\n53<br />\r\n0<br />\r\n<br />\r\n输出<br />\r\n1<br />\r\n1<br />\r\n2<br />\r\n3<br />\r\n0<br />\r\n0<br />\r\n1<br />\r\n2</p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(215, '数星星', 'stars', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; Alice 喜欢没事的时候研究恒星图。你可以把这张恒星图看成笛卡尔平面直角坐标系，坐标系上的点代表恒星。 Alice 想研究一下最多有多少颗恒星在同一条直线上呢？</p>\r\n<p><img height="235" width="321" alt="" src="/images/image/mn06ec_clip_image001.jpg" /></p>\r\n<p>例如看上面的一幅恒星图，最多有 3 颗恒星在同一条直线上，他们的编号分别是 1 ， 2 和 5 。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;* 第一行一个整数 N (1&lt;=N&lt;=1000) ，代表恒星的个数。</p>\r\n<p>* 接下来有 N 行，每行两个数字 X ， Y (0&lt;=X,Y&lt;=1000) 表示恒星的坐标。注意，测试数据中一个位置最多只有一颗恒星</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; * 输出最多有多少颗恒星在同一条直线上</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n5<br />\r\n0 0<br />\r\n2 0<br />\r\n0 2<br />\r\n1 1<br />\r\n2 2</p>\r\n<p>输出：<br />\r\n3</p>\r\n<p>【输入输出样例说明】</p>\r\n<p>最多有 3 颗恒星在同一条直线上，如下图所示：两条蓝色直线上都包含了 3 个恒星。</p>\r\n<p><img height="128" width="156" alt="" src="/images/image/mn06ec_clip_image001.gif" /></p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(216, '越狱第1季第13集', 'prisonbreak', '<p><font color="#0000ff"><br />\r\n</font></p>\r\n<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;经过艰苦的努力， Michael 带着他的哥哥 Lincoln 以及其他六个人逃出了 Fox River 监狱。 D.P.Corper 在死之前告诉了他们五百万美金的下落。而现在，他们的目标只有一个：迅速赶到犹他州找出那五百万美金，然后亡命天涯！</p>\r\n<p>T-bag 抢到一辆卡车，这八个人坐着这辆卡车出发了。不久 Michael 发现这辆卡车十分废油，每公里要消耗 1 升 油！所以途中他们必须停下车来加油。而警方已经开始了对他们的全面追捕，所以 Michael 希望停车加油的次数越少越好。</p>\r\n<p>还好这辆卡车的油箱无限的大，可以装下任意多升的油 -_-! 。而 Michael 也从一本车载旅行手册上查到了这一路上 N 个加油站的详细信息。那么你能帮助 Michael 计算出他们为了到达犹他州最少的加油次数吗？</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行：一个整数 N (1 &lt;= N &lt;= 10,000) ，表示这一路上共有 N 个加油站。</p>\r\n<p>接下来的 N 行：每行两个整数 a 和 b ，表示这个加油站距离犹他州有 a 公里，并且这个加油站有 b(1&lt;=b&lt;=100) 升油。</p>\r\n<p>最后一行两个整数： L 和 P(1&lt;=L,P&lt;=1000000) ，表示这群逃犯出发时距离犹他州有 L 公里，并且此时油箱中有 P 升油 .</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输入他们要到达犹他州路上最少要加油的次数，如果无论如何也到达不了犹他州，输出 -1 。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\n4<br />\r\n4 4<br />\r\n5 2<br />\r\n11 5<br />\r\n15 10<br />\r\n25 10</p>\r\n<p>输出：<br />\r\n2</p>\r\n<p>【输入输出样例说明】</p>\r\n<p>输入说明</p>\r\n<p>这辆卡车开始有 10 升 油，距离犹他州有 25 公里 。这一路上有 4 个加油站，分别距离犹他州有 4 ， 5 ， 11 ， 15 公里 ；分别有油4 ，2 ， 5 ， 10 升 。</p>\r\n<p>输出说明</p>\r\n<p>卡车先开 10 公里 ，停车加 10 升 油；然后再开 4 公里 ，停车加 5 升 油，然后直接开到犹他州。共停车加油两次。</p>\r\n<p>PS ：若对问题描述中的人物关系有疑问，请参看最近美国福克斯电视台热播的电视剧《越狱》。如果有人看到了第 2 季的第 11 集，请联系 QQ ： 172359841 ，谢谢 ^_^</p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(217, '疾病管理', 'disease', '<p><font color="#0000ff"><br />\r\n</font></p>\r\n<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;天啊，真是不幸！最近在农夫 John 的农场上有 D(1&lt;=D&lt;=15) 种疾病 ( 疾病的编号为  1..D) 在奶牛当中流行。 John 想要给他的 N(1&lt;=N&lt;=1000)  头奶牛挤牛奶。挤出来的牛奶都被放在一个罐子里面。如果这些牛奶中包含了超过 K(1&lt;=K&lt;=D) 种的疾病，那么这些牛奶就要全部被丢弃掉了（浪费啊  -_-! ）。 John 应该给这 N 头奶牛当中的哪些奶牛挤奶，才能使得牛奶不被丢弃，并且挤牛奶的数量最多呢？</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 第一行：三个整数 N,D 和 K</p>\r\n<p>接下来有 N 行：这当中的第 i 行描述了第 i 个奶牛得病的信息。第一个数字 p ，表示第 i 头奶牛得了 p 种病，接下来有 p  个数字表示这些病的编号。如果 p 等于 0 ，表明这头奶牛很健康。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出 John 最多可以给多少头奶牛挤牛奶。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入:<br />\r\n6 3 2<br />\r\n0<br />\r\n1 1<br />\r\n1 2<br />\r\n1 3<br />\r\n2 2 1<br />\r\n2  2 1<br />\r\n<br />\r\n<br />\r\n输出:<br />\r\n5</p>\r\n<p>【输入输出样例说明】</p>\r\n<p>John 最多可以给 5 头奶牛挤牛奶。他们的编号分别为 1,2,3,5,6. 此时这些牛奶中只包含 2 种疾病，编号为 1 ， 2 。疾病种数不超过  K=2.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(218, '笨小猴', 'word', '<p>【问题描述】</p>\r\n<p>笨小猴的词汇量很小，所以每次做英语选择题的时候都很头痛。但是他找到了一种方法，经实验证明，用这种方法去选择选项的时候选对的几率非常大!</p>\r\n<p>这种方法的具体描述如下：假设maxn单词中出现次数最多的字母的出现次数，minn是单词中出现次数最少的字母的出现次数，如果maxn-minn是一个质数，那么笨小猴就认为这是个Lucky Word，这样的单词很可能就是正确的答案。</p>\r\n<p>【输入】</p>\r\n<p>输入文件word.in只有一行，是一个单词，其中只可能出现小写字母，并且长度小于100。</p>\r\n<p>【输出】</p>\r\n<p>输出文件word.out共两行，第一行是一个字符串，假如输入的单词是Lucky Word，那么输出&ldquo;Lucky Word&rdquo;，否则输出&ldquo;No Answer&rdquo;；</p>\r\n<p>第二行是一个整数，如果输入单词是Lucky Word，输出maxn&mdash;minn的值，否则输出0。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>word.in</p>\r\n<pre>\r\nerror\r\n</pre>\r\n<p>word.out</p>\r\n<pre>\r\nLucky Word\r\n2\r\n</pre>\r\n<p>【输入输出样例1解释】</p>\r\n<p>单词error中出现最多的字母r出现了3次，出现次数最少的字母出现了1次，3-1=2，2是质数。</p>\r\n<p>【输入输出样例2】</p>\r\n<p>word.in</p>\r\n<pre>\r\nolymipic\r\n</pre>\r\n<p>word.out</p>\r\n<pre>\r\nNo Answer\r\n0\r\n</pre>\r\n<p>【输入输出样例2解释】</p>\r\n<p>单词olymipic中出现最多的字母i出现了2次，出现次数最少的字母出现了1次，2-1=1,l不是质数。</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(219, '传纸条', 'message', '<p>【问题描述】</p>\r\n<p>小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学被安排坐成一个m行、n列的矩阵，而小渊和小 轩被安排坐在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的 左上角，坐标(1，1)，小轩坐在矩阵的右下角，坐标(m，n)。从小渊传给小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左 传递。</p>\r\n<p>在活动进行中，小渊希望给小轩传一张纸条，同时希望小轩给他回复。班里的每个同学都可以帮他们传递，但只会帮他们一次，也就是说如果此人在小渊递给小轩纸条的时候帮忙，那么在小轩递给小渊的时候就不会再帮忙。反之亦然。</p>\r\n<p>还有一件事情需要注意，全班每个同学愿意帮忙的好心程度有高有低(注意：小渊和小轩的好心程度没有定义，输入时用0表示)，可以用一个 O-- 100的自然数来表示，数越大表示越好心。小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这两条路径上同学的好心程 度之和最大。现在，请你帮助小渊和小轩找到这样两条路径。</p>\r\n<p>【输入】</p>\r\n<p>输入文件message．in的第一行有2个用空格隔开的整数m和n，表示班里有m行n列 (1&lt;=m，n&lt;=50)。 接下来的m行是一个m*n的矩阵，矩阵中第i行j列的整数表示坐在第i行j列的学生的好心程度。每行的n个整数之间用空格隔开。</p>\r\n<p>【输出】</p>\r\n<p>输出文件message．out共一行，包含一个整数，表示来回两条路上参与传纸条的同学的好心程度之和的最大值。</p>\r\n<p>【输入输出样例】</p>\r\n<p>matches.in</p>\r\n<pre>\r\n3 3\r\n0 3 9\r\n2 8 5\r\n5 7 0\r\n</pre>\r\n<p>matches.out</p>\r\n<pre>\r\n34\r\n</pre>\r\n<p>【限制】</p>\r\n<p>30%的数据满足：l&lt;=m，n&lt;=10</p>\r\n<p>100%的数据满足：1&lt;=m，n&lt;=50</p>', 1000, 128, 10, 0, '2012-04-05 16:23:11'),
(220, '火柴棒等式', 'matches', '<p>【问题描述】</p>\r\n<p>给你n根火柴棒，你可以拼出多少个形如&ldquo;A+B=C&rdquo;的等式?等式中的A、B、C是用火柴棒拼出的整数(若该数非零，则最高位不能是0)。用火柴棒拼数字0--9的拼法如图所示：</p>\r\n<p><a href="http://www.ruvtex.cn/wiki/Image:Noip08match.jpg" class="image" title="Image:Noip08match.jpg"><img height="116" border="0" width="553" src="http://www.ruvtex.cn/mw/images/8/81/Noip08match.jpg" alt="Image:Noip08match.jpg" longdesc="http://www.ruvtex.cn/wiki/Image:Noip08match.jpg" /></a></p>\r\n<p>注意</p>\r\n<ol>\r\n    <li>加号与等号各自需要2根火柴棒</li>\r\n    <li>如果A&ne;B，则A+B=C与B+A=C视为不同的等式(A、B、C&gt;=0)</li>\r\n    <li>n根火柴棒必须全部用上</li>\r\n</ol>\r\n<p>【输入】</p>\r\n<p>输入文件matches.in共一行，有一个整数n(n&lt;=24)。</p>\r\n<p>【输出】</p>\r\n<p>输出文件matches.out共一行，有一个整数，表示能拼成的不同等式的数目。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>matches.in</p>\r\n<pre>\r\n14\r\n</pre>\r\n<p>matches.out</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>【输入输出样例1解释】</p>\r\n<p>2个等式为0+1=1和l+0=1</p>\r\n<p>【输入输出样例2】</p>\r\n<p>matches.in</p>\r\n<pre>\r\n18\r\n</pre>\r\n<p>matches.out</p>\r\n<pre>\r\n9\r\n</pre>\r\n<p>【输入输出样例2解释】</p>\r\n<p>9个等式为:</p>\r\n<pre>\r\n0+4=4\r\n0+11=11\r\n1+10=11\r\n2+2=4\r\n2+7=9\r\n4+0=4\r\n7+2=9\r\n10+1=11\r\n11+0=11\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:12'),
(221, '双栈排序', 'twostack', '<p>【问题描述】</p>\r\n<p>Tom最近在研究一个有趣的排序问题。如图所示，通过2个栈S1和s2，Tom希望借助以下4种操作实现将输入序列升序排序。</p>\r\n<p><span class="image"><img height="121" border="0" width="164" src="http://www.ruvtex.cn/mw/images/f/f9/Noip08st1.jpg" alt="Image:Noip08st1.jpg" longdesc="http://www.ruvtex.cn/wiki/Image:Noip08st1.jpg" /></span></p>\r\n<ul>\r\n    <li>操作a\r\n    <ul>\r\n        <li>如果输入序列不为空，将第一个元素压入栈Sl</li>\r\n    </ul>\r\n    </li>\r\n    <li>操作b\r\n    <ul>\r\n        <li>如果栈S1不为空，将Sl栈顶元素弹出至输出序列</li>\r\n    </ul>\r\n    </li>\r\n    <li>操作c\r\n    <ul>\r\n        <li>如果输入序列不为空，将第一个元素压入栈s2</li>\r\n    </ul>\r\n    </li>\r\n    <li>操作d\r\n    <ul>\r\n        <li>如果栈S2不为空，将S2栈顶元素弹出至输出序列</li>\r\n    </ul>\r\n    </li>\r\n</ul>\r\n<p>如果一个l～n的排列P可以通过一系列操作使得输出序列为l,2,&hellip;,(n-1)，n，Tom就称P是一个&ldquo;可双栈排序排列&rdquo;。例如 (1，3，2，4)就是一个&ldquo;可双栈排序排列&rdquo;，而(2，3，4，1)不是。下图描述了一个将(1，3，2，4)排序的操作序 列：&lt;a,c,c,b,a,d,d,b&gt;</p>\r\n<p><span class="image"><img height="532" border="0" width="500" src="http://www.ruvtex.cn/mw/images/7/7d/Noip08st2.jpg" alt="Image:Noip08st2.jpg" longdesc="http://www.ruvtex.cn/wiki/Image:Noip08st2.jpg" /></span></p>\r\n<p>当然,这样的操作序列有可能有多个，对于上例(1，3，2，4)，&lt;a，b，a，a，b，b，a，b&gt;是另外一个可行的操作序列。Tom希望知道其中字典序最小的操作序列是什么。</p>\r\n<p>【输入】</p>\r\n<p>输入文件twostack.in的第一行是一个整数n。</p>\r\n<p>第二行有n个刚空格隔开的正整数，构成一个1～n的排列。</p>\r\n<p>【输出】</p>\r\n<p>输出文件twostack.out共一行，如果输入的排列不是&ldquo;可双栈排序排列&rdquo;，输出数字0；</p>\r\n<p>否则输出字典序最小的操作序列，每两个操作之间用空格隔开，行尾没有空格。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>twostack.in</p>\r\n<pre>\r\n4\r\n1 3 2 4\r\n</pre>\r\n<p>towstack.out</p>\r\n<pre>\r\na b a a b b a b\r\n</pre>\r\n<p>【输入输出样例2】</p>\r\n<p>twostack.in</p>\r\n<pre>\r\n4\r\n2 3 4 1\r\n</pre>\r\n<p>towstack.out</p>\r\n<pre>\r\n0\r\n</pre>\r\n<p><br />\r\n【输入输出样例3】</p>\r\n<p>twostack.in</p>\r\n<pre>\r\n3\r\n2 3 1\r\n</pre>\r\n<p>towstack.out</p>\r\n<pre>\r\na c a b b d\r\n</pre>\r\n<p><br />\r\n【限制】</p>\r\n<ul>\r\n    <li>30%的数据满足： n&lt;=10</li>\r\n    <li>50%的数据满足： n&lt;=50</li>\r\n    <li>100%的数据满足：n&lt;=1000</li>\r\n</ul>', 1000, 128, 15, 0, '2012-04-05 16:23:12'),
(222, '便宜的旅行', 'tan', '<p>坐马车来进行横穿大陆的旅行一般都要花去几天的时间，所以路上在旅馆的住宿费用是很大的一笔开销。为了使旅行的安全和舒适，人们只在白天赶路，并且每天最多只能走800公里。在旅途中时，车夫和旅客们都是在旅馆中度过晚上的（不包括起点和终点）。现在我们想要尽可能的减少在路上的开销，就是在旅馆中的住宿费用（即使增加了花在路上的时间也无所谓）。由于旅行是在一条高速公路上进行的，所以旅途是单向并且没有分叉的，也就是马车只经过路上的每个点一次。现给出每个旅馆距离起点的距离和一个人（包括车夫和旅客）在旅馆住一个晚上的费用。我们假设在路上的每个点最多都只能有一个旅馆，在起点和终点的住宿是不用花费的。并且保证每800公里必然有一个旅馆，也就是说，这样的旅行必然是可以实现的。 <br />\r\n<br />\r\n任务 <br />\r\n<br />\r\n请写一个程序 <br />\r\n<br />\r\n在文本文件中读入路程的总长度、旅馆的数目和对旅馆的描述； <br />\r\n<br />\r\n找出两个旅行的方案： <br />\r\n<br />\r\n一个最便宜的方案（就是付出的宿费最少的方案）；如果有多个方案，选择在旅馆中度夜的次数最少的方案； <br />\r\n<br />\r\n一个最短的方案（就是在旅馆中度夜的次数最少的方案）；如果有多个方案，选择花费最少的方案； <br />\r\n<br />\r\n把结果，就是两个旅行方案，最便宜和最短的旅行方案，输出到文件中。 <br />\r\n<br />\r\n输入格式： <br />\r\n<br />\r\n在文本文件的第一行包括两个用空格分开的正整数。第一个整数d为从起点到终点的距离，第二个整数h为旅馆的数目，d &lt;= 16000，h &lt;= 1000。以下的h行每行两个整数，为对旅馆的描述。每行中的第一个整数为旅馆距离起点的距离，第二个为旅馆的住宿费用，为不大于1000的整数。数据是按照据起点距离递增的顺序排列的。 <br />\r\n<br />\r\n输出格式： <br />\r\n<br />\r\n你应该在文本文件中输出最便宜的旅程方案。也就是说，从起点开始需要过夜的旅馆距离起点的距离。类似的，你应该在文件的第二行输出最短的旅程方案。所有的整数应该的用空格分开。 <br />\r\n<br />\r\n样例： <br />\r\n<br />\r\n输入<br />\r\n2000 7<br />\r\n100 54<br />\r\n120 70<br />\r\n400 17<br />\r\n700 38<br />\r\n1000 25<br />\r\n1200 18<br />\r\n1440 40<br />\r\n<br />\r\n输出<br />\r\n400 1200<br />\r\n400 1200</p>', 1000, 128, 11, 0, '2012-04-05 16:23:12'),
(223, 'XOR门', 'xor', '<p>一个XOR门包含两个输入和一个输出，它的工作可以用下表描述：</p>\r\n<pre>\r\ninput 1 input 2 output\r\n0         0        0\r\n0         1        1\r\n1         0        1\r\n1         1        0\r\n</pre>\r\n<p>如果一个XOR门系统有n个输入和1个输出，且满足以下条件，则称这个XOR门系统为XOR网络。</p>\r\n<ol>\r\n    <li>系统的每一个输入都至少与一个XOR门的输入端相连；</li>\r\n    <li>系统中每个门的输入必须与系统的一个输入或另一个门的输出连接；</li>\r\n    <li>有且只有有一个门的输出与系统的输出相连；</li>\r\n    <li>每个门的输出要与另外至少一个门的输入或系统的输出相连；</li>\r\n    <li>这些XOR门存在一种编号方式，使得每个门的输入都与系统的输入或具有较小编号的门的输出相连。</li>\r\n</ol>\r\n<p>例子：</p>\r\n<p><a title="Image:Xor.png" class="image" href="http://www.ruvtex.cn/mw/images/7/76/Xor.png"><img height="207" width="400" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Xor.png" alt="Image:Xor.png" src="http://www.ruvtex.cn/mw/images/7/76/Xor.png" /></a></p>\r\n<p>图中有一个由6个XOR门组成的XOR系统。它有5个输入和1个输出，它满足以上的5个条件，所以它是一个XOR网络。注意：图中给出的编号方式不满足条件5，但可以找到一种满足条件的编号方式。</p>\r\n<p>网络的输入标号为1到5，一种输入状态可以用一个长度为n的字符串表示，每一位是0或1，我们假设第I个数字表示第I个输入的状态。每一个 输入都是一个自然数的二进制编码，所以我们可以按输入状态表示的数值的大小将它们排序。我们要测试一个电路门网络，通过向它发送一个范围以内的输入，计算 使输出是1的输入个数。</p>\r\n<p>任务：</p>\r\n<ol>\r\n    <li>从文本文件xor.in中读入电路网的的描述。描述包括输入的个数n，XOR门的个数m，以及XOR门连接的情况。</li>\r\n    <li>从文件中读入两个长度为n的二进制串，表示输入的上限和下限。</li>\r\n    <li>计算给定范围内有多少种输入可以使输出为1。</li>\r\n    <li>将结果写入文件xor.out。</li>\r\n</ol>\r\n<p>我们假设3 &lt; n &lt; 100, 3 &lt; m &lt; 3000，而且网络中的门是用1到m之间的数任 意编号的。</p>\r\n<p>输入格式： 文件第一行包含三个整数，分别表示输入的个数，门的个数，连接到输出的门的编号。以下的m行描述网络中的连接情况。第I行表示第I个门的两个输入，两个输 入为范围[-n,m]之间的一个整数。如果输入是网络的第k个输入，则连接的描述是一个整数－k，如果输入是第j个门，则连接的描述是一个整数j。以下两 行各有一个n位二进制串，表示输入的上限和下限。我们假设给定范围内最多100000种输入。</p>\r\n<p>输出格式： 输出文件包含一个整数，表示给定范围内有多少种输入可以使输出为1。</p>\r\n<p>样例：</p>\r\n<p>输入文件xor.in:</p>\r\n<pre>\r\n5 6 5\r\n-1 -2\r\n1 3\r\n1 -2\r\n2 -3\r\n4 6\r\n-4 -5\r\n00111\r\n01110\r\n</pre>\r\n<p>输出文件xor.out</p>\r\n<pre>\r\n5\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:12');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(224, '基因串', 'gen', '<p>基因串是由一串有限长度的基因所组成的，其中每一个基因都可以用26个英文大写字母中的一个来表示，不同的字母表示不同的基因类型。一个单独的基因 可以生长成为一对新的基因，而可能成长的规则是通过一个有限的成长规则集所决定的。每一个成长的规则可以用三个大写英文字母A1A2A3来描述，这个规则 的意思是基因A1可以成长为一对基因A2A3。</p>\r\n<p>我们用大写字母S来表示一类被称作超级基因的基因。因为每一个基因串都是由一串超级基因根据给出的规则所成长出来的。</p>\r\n<p>任务：</p>\r\n<p>请写一个程序：</p>\r\n<ul>\r\n    <li>从文本文件中读入有限条成长的规则和一些我们想要得到的基因串；</li>\r\n    <li>对于每个基因串，试判断它是否可以由一个有限长度的超级基因串成长得出。如果可以，那么请给出可成长为该基因串的最短超级基因串的长度；</li>\r\n    <li>把结果输出到文本文件中。</li>\r\n</ul>\r\n<p>输入格式：</p>\r\n<p>在文本文件GEN.IN的第一行包括一个整数n，1 &lt;= n &lt;= 10000。以下的n行中每行都包括一个成长的规则，每个规则由三个大写英文字母组成。</p>\r\n<p>在该文件的第n+1行包括一个整数k，1 &lt;= k &lt;= 10000。以下的k行中每行都有一个基因串。每个基因串都是一个长度不超过100的大写字符串。</p>\r\n<p>输出格式：</p>\r\n<p>在文件的第i（应共k行）行中你应该输出入下内容：</p>\r\n<p>一个正整数，表示成长为该基因串所需的最短的超级基因串的长度；</p>\r\n<p>或一个单词NIE（波兰语的&ldquo;否&rdquo;），如果说无法由超级基因串成长成为该基因串。</p>\r\n<p>样例：</p>\r\n<p>输入</p>\r\n<pre>\r\n6\r\nSAB\r\nSBC\r\nSAA\r\nACA\r\nBCC\r\nCBC\r\n3\r\nABBCAAABCA\r\nCCC\r\nBA\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n3\r\n1\r\nNIE\r\n</pre>', 1500, 128, 15, 0, '2012-04-05 16:23:12'),
(225, '独木舟', 'kaj', '<p>我们想组织一次独木舟的旅游。独木舟可以在某个海港租借。所有的独木舟都相同，并且最多载两人。参加者的重量之和都不会超过给定的最大重量。我们的目的是想在此次旅行中付费最少。</p>\r\n<p>输入</p>\r\n<p>在文本文件的第一行有一个整数w, 80&lt;=w&lt;=200, 表示每个独木舟的最大载重重量。</p>\r\n<p>在第二行有一个整数n, 1 &lt;= n &lt;= 30000,表示参与旅游的人数.</p>\r\n<p>下面的n行每行一个整数，属于[5..w]. 表示参与者的重量。</p>\r\n<p>输出</p>\r\n<p>在文本文件的第一行有一个整数，表示最少租借独木舟的数目.</p>\r\n<p>示例</p>\r\n<p>输入</p>\r\n<pre>\r\n100\r\n9\r\n90\r\n20\r\n20\r\n30\r\n50\r\n60\r\n70\r\n80\r\n90\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n6\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:12'),
(226, '单色三角形', 'tro', '<p>在空间中给出了n个点。这些点任三点不共线，并且每两个点之间都有一条线相连，每一条线不是红的就是黑的。在这些点和线组成的三角形中，如果一个三角形的三条边的颜色都相同，那么我们就称这个三角形为单色三角形。现给出所有涂红色的线，试求出单色三角形的数目。</p>\r\n<p>任务：</p>\r\n<p>请写一个程序：</p>\r\n<p>从文本文件中读入点数和对红色连线的描述；</p>\r\n<p>找出该图中红色三角形的数目；</p>\r\n<p>把结果输出到文件中。</p>\r\n<p>输入格式：</p>\r\n<p>在文本文件的第一行包括一个整数n，3 &lt;= n &lt;= 1000，为空间中的点数。</p>\r\n<p>该文件的第二行为一个整数m，0 &lt;= m &lt;= 250000，为红色连线的数目。</p>\r\n<p>以下的m行中每行为两个用空格分开的整数p和k，1 &lt;= p &lt; k &lt;= n，表示第p点和第k号点之间的连线为红色。</p>\r\n<p>输出格式：</p>\r\n<p>你应该在文本文件输出唯一的一个整数&mdash;&mdash;同色三角形的数目。</p>\r\n<p>样例：</p>\r\n<p>输入</p>\r\n<pre>\r\n6\r\n9\r\n1 2\r\n2 3\r\n2 5\r\n1 4\r\n1 6\r\n3 4\r\n4 5\r\n5 6\r\n3 6\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 128, 7, 0, '2012-04-05 16:23:12'),
(227, '阿里巴巴', 'ali', '<p>想要&ldquo;芝麻开门&rdquo;，必须拥有一定数量的钱币，其中包括至少z枚金币，s枚银币和m枚铜币。 最初，阿里巴巴拥有三种钱币若干枚。他可以按照一定规则和芝麻之门的守护者进行交易。 每一种规则用以下形式表示：</p>\r\n<p>z1, s1, m1 -&gt; z2, s2, m2 (zi, si, mis属于集合{0,1,2,3,4})。</p>\r\n<p>这样一种规则表示阿里巴巴可以将z1枚金币, s1枚银币, m1枚铜币换成z2枚金币, s2枚银币, m2枚铜币。 一次交易而得的钱币可以继续参加下一次的交易。</p>\r\n<p>任务</p>\r\n<p>从文件中读入几组数据；对于每一组数据：</p>\r\n<ul>\r\n    <li>阿里巴巴最初拥有的金银铜三种钱币数目</li>\r\n    <li>&ldquo;芝麻开门&rdquo;所需的金银铜三种钱币数目</li>\r\n    <li>所有交易规则</li>\r\n</ul>\r\n<p>对每一组数据，判断是否存在有限次的交易，使阿里巴巴能开启芝麻之门。如果是，则将最少交易次数输出，否则在输出NIE(波兰文NO)</p>\r\n<p>把结果写进文件中</p>\r\n<p>输入格式 文件的第一行有一个整数d&lt;=10,表示数据的组数。</p>\r\n<p>接下来是d组数据，每组占若干行。</p>\r\n<p>第一行是三个数zp, sp, mp ，属于集合{0,1,2,3,4}。表示阿里巴巴最初拥有的金银铜数目。</p>\r\n<p>第二行是三个数z, s, m ， 属于集合{0,1,2,3,4}。表示芝麻开门所需的金银铜数目。</p>\r\n<p>第三行是规则总数r，1&lt;=r&lt;=10。</p>\r\n<p>以下r行每行有六个数z1, s1, m1, z2, s2, m2 ，属于集合{0,1,2,3,4}。表示一种简单的交易z1, s1, m1 -&gt; z2, s2, m2。</p>\r\n<p>数字之间由若干个空格隔开。</p>\r\n<p>输出格式</p>\r\n<p>文件的第i行为第i组数据的答案：</p>\r\n<p>一个非负整数&mdash;&mdash;阿里巴巴要开启芝麻之门所需的最少交易次数，或者</p>\r\n<p>单词NIE(波兰文NO)</p>\r\n<p>样例输入</p>\r\n<pre>\r\n2\r\n2 2 2\r\n3 3 3\r\n3\r\n0 1 1 2 0 0\r\n1 0 1 0 2 0\r\n1 1 0 0 0 2\r\n1 1 1\r\n2 2 2\r\n4\r\n1 0 0 0 1 0\r\n0 1 0 0 0 1\r\n0 0 1 1 0 0\r\n2 0 0 0 2 2\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\nNIE\r\n9\r\n</pre>', 1000, 128, 6, 0, '2012-04-05 16:23:12'),
(228, 'n-k集合数', 'lic', '<p>我们称一个自然数集合X为一个n-k集，如果它具有如下性质：</p>\r\n<ol>\r\n    <li>对于X中的每一个元素x有1 &lt;= x &lt;= n；</li>\r\n    <li>X中的所有元素之和均大于k；</li>\r\n    <li>X中不包括连续自然数。</li>\r\n</ol>\r\n<p>任务：</p>\r\n<p>请写一个程序：</p>\r\n<ul>\r\n    <li>在文件中读入两个整数n和k；</li>\r\n    <li>计算所有不同的n-k集的数目；</li>\r\n    <li>将结果输出到文件中。</li>\r\n</ul>\r\n<p>输入格式：</p>\r\n<p>在文件中的第一行包括两个由空格分开的整数n和k，1 &lt;= n &lt;= 100，0 &lt;= k &lt;= 400。</p>\r\n<p>输出格式：</p>\r\n<p>你应该在文件的第一行中输出一个非负整数，为所有不同的n-k集的数目。</p>\r\n<p>样例：</p>\r\n<p>输入</p>\r\n<pre>\r\n5 6\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n3\r\n</pre>', 1000, 128, 15, 0, '2012-04-05 16:23:12'),
(229, '单词等式', 'row', '<p>所有非空的01序列被称作一个二进制单词。一组相等的单词是如下形式的等式：x1x2..xl=y1y2..yr ，这里xi 和yj 是二进制字符01或是用小写字母表示的变量。对每一个变量都有一个固定长度的两进制单词来代替这个变量，这个长度称之为这个变量的长度。为了解决单词相等 的问题我们需要用某种方法分配给所有变量适当的二进制单词（这个二进制单词的长度必须为这个变量的长度），使得变量被取代后的等式成立。对一个给定的等式 计算有几种解答。</p>\r\n<p>例子：</p>\r\n<p>让a,b,c,d,e分别为长度为4，2，4，4，2的5个变量。考虑以下等式：1bad1=acbe。这个等式有16种不同的解答方案。</p>\r\n<p>任务：</p>\r\n<p>写一个程序：</p>\r\n<ul>\r\n    <li>从文件中读入等式的数目以及它们的描述。</li>\r\n    <li>对每个等式找出它们的解答方案数。</li>\r\n    <li>将结果写入文件。</li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>在文件的第一行有一个整数x(1&lt;=x&lt;=5)表示等式的数目，随后有x个等式的描述。每个描述包括6行，两个等 式的描述之间没有空行。每个等式用以下方式描述：在描述的第一行有一个整数k(0&lt;=k&lt;=26)表示等式中不同的变量数目，我们假设变量是 从a起的k个小写字母。第二行有k个由空格隔开的正整数，表示k个变量的长度（第一个数表示a的长度，第二个数表示b的长度）。第三行有一个整数l，表示 等式左边的长度（有0 1及变量（单个字母）组成的单词长度）。等式左边将被写在下一行，仅包括01及小写字母而没有空格。以下两行给出了对等式左边的描述，第一行为一个正整数 r，表示等式右边的长度，等式的右边被写在第二行。等式两边所有变量的和相等且不超过10000。</p>\r\n<p>输出：</p>\r\n<p>对每个I (1&lt;=I&lt;=x)，你的程序必须在第I行给出第I个等式的不同解答方案数，并将它写入文件。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n1\r\n5\r\n4 2 4 4 2\r\n5\r\n1bad1\r\n4\r\nacbe\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\n16\r\n</pre>', 1000, 128, 12, 0, '2012-04-05 16:23:12'),
(230, '公路网', 'sie', '<p>一张磁盘被写入了一张公路网。这张磁盘包括一个写有任何两个村庄之间最短路径长的表格。所有的路都是双向的。地图上的村庄所处的位置有以下一个有趣 的特点：如果村庄A与村庄B之间的最短路径长等于村庄A与村庄C之间的最短路径长和村庄B与村庄C之间的最短路径长之和，我们就说村庄C处在村庄A与村庄 B的最短路径上。如果不存在其他的C使村庄C在村庄A与村庄B的最短路径上，我们把村庄A、B称为相邻的村庄。试找出所有的相邻村庄。</p>\r\n<p>例子： 对于如下一张距离表格：</p>\r\n<pre>\r\n  A B C\r\nA 0 1 2\r\nB 1 0 0\r\nC 2 3 3\r\n</pre>\r\n<p>相邻的村庄有村庄A和B，A和C。</p>\r\n<p>任务： 编一个程序：</p>\r\n<ul>\r\n    <li>从文件中读入最短距离表格。</li>\r\n    <li>找出所有的相邻村庄。</li>\r\n    <li>把结果写入文件。</li>\r\n</ul>\r\n<p>输入： 在文件的第一行有一个整数n(1&lt;=n&lt;=200)表示地图中村庄的个数，村庄被标号为1..n。</p>\r\n<p>以下n行给出最短距离表格，在第i+1行(1&lt;=i&lt;=n)有n个非负整数(不超过200)，有空格隔开，第j个整数表示村庄I与j的最短距离。</p>\r\n<p>输出：</p>\r\n<p>你的程序必须在文件中给出所有的相邻村庄对。每行写一对，每一对只出现一次。每一对中的数字必须升序给出，且当对(a,b)与(c,d)满足（a&lt;c）或（a=c且b&lt;d）对(a,b)在(c,d)之前。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n3\r\n0 1 2\r\n1 0 3\r\n2 3 0\r\n</pre>\r\n<p>输出样例:</p>\r\n<pre>\r\n1 2\r\n1 3\r\n</pre>', 1000, 128, 12, 0, '2012-04-05 16:23:13'),
(231, '追赶', 'gon', '<p>&ldquo;追赶&rdquo;是两个人用棋盘玩的游戏。棋盘由编号由1到n的方块组成。每两个不同的方块将被得知它们是否与另一个相邻。每一个玩家都有一个由他控制的硬 币。在游戏的开始，玩家的硬币被放在固定的不同的方块中。一个回合内一个玩家可以不移动他的硬币，也可以把硬币移到一个相邻的方块里。</p>\r\n<p>棋盘具有如下属性：</p>\r\n<p>它不包括三角形，也就是没有任意三个不同的方块，它们两两相邻， 每一个玩家到达都能到达任意一个方块。</p>\r\n<p>一个游戏由许多回合组成。在一个回合内，每一个玩家移一步。每一个回合由玩家A开始。我们说如果两个硬币在同一个方块中，那么玩家A被玩家 B赶上。问题要求，决定是否能对于给定一个硬币的初始位置，玩家B在对手独立移动的情况下都能赶上玩家A。如果这样，在两个人都玩得很好条件下, 多少回合玩家B赶上玩家A（即，玩家A尽量远离玩家B，玩家B尽可能快的赶上有些者A）。</p>\r\n<p>例如</p>\r\n<p><a href="http://www.ruvtex.cn/mw/images/9/91/Gon.png" class="image" title="Image:Gon.png"><img width="208" height="172" border="0" src="http://www.ruvtex.cn/mw/images/9/91/Gon.png" alt="Image:Gon.png" longdesc="http://www.ruvtex.cn/wiki/Image:Gon.png" /></a></p>\r\n<p>用图表示棋盘，相邻的方块（用圆圈表示）用边相连接. 如果在游戏的开始玩家A 和 B分别放置硬币在9和4的位置，那么在第三轮（如果两个人都玩的很好），玩家B将赶上玩家A. 如果开始玩家A 和 B分别放置硬币在8和4的位置，那么玩家B将不能赶上玩家A（如果A不出错）.</p>\r\n<p>任务</p>\r\n<p>写一个程序:</p>\r\n<ul>\r\n    <li>文本文件GON.IN t中描述了一个棋盘，初始状态下方块中放置硬币的编号。</li>\r\n    <li>判断是否玩家B能赶上玩家A, 如果能，计算将有需要多少回合（如果两个玩家都玩得很好）;</li>\r\n    <li>将结果写入文本文件 GON.OUT中.</li>\r\n</ul>\r\n<p>输入</p>\r\n<p>在文件GON.IN 的第一行有4个整数n, m, a 和b，它们用单个空格分隔。2&lt;=n&lt;=3000, -1&lt;=m&lt;=15000, 1&lt;=a,b&lt;=n ，a &lt;b。它们分别表示棋盘中的方块数目, 相邻的一对方块（无序）数目，玩家A的硬币放置在方块中的编号，玩家B的硬币放置在方块中的编号。下面的每一行包含两个用一个空格分开的整数，表示每一对 相邻的方块编号。</p>\r\n<p>输出</p>\r\n<p>在文本文件GON.OUT 的第一行写入如下信息：</p>\r\n<ul>\r\n    <li>一个单词NIE ，如果玩家 B不能赶上玩家A, 或者</li>\r\n    <li>一个整数－如果玩家B能赶上玩家A的最少游戏轮数</li>\r\n</ul>\r\n<p>输入示例</p>\r\n<pre>\r\n9 11 9 4\r\n1 2\r\n3 2\r\n1 4\r\n4 7\r\n7 5\r\n5 1\r\n6 9\r\n8 5\r\n9 8\r\n5 3\r\n4 8\r\n</pre>\r\n<p>输出示例 &nbsp;3</p>', 1000, 128, 22, 0, '2012-04-05 16:23:13'),
(232, '最轻的语言', 'naj', '<p>字母表AK由英文字母表的大写字母K组成。一个被称作重量的正整数被委派给字母表的每一个字母。一个由字母表AK的字母组成的字符串的重量是这个字 符串的所有字母的总重量。一个基于字母表AK的语言由这个字母表的字母组成的字符串的有限集合。一个语言的重量是所有它的字符串的重量之和。如果这个语言 的任意两个字符串W、V，W不是V的前缀，那我们说这个语言不是前缀的。</p>\r\n<p>我们想找出基于字母表AK的N个要素的非前缀语言的可能的最小重量。</p>\r\n<p>例如</p>\r\n<p>假设K=2，字母a的重量W（a）=2 字母b的重量W（b）=5。字符串ab的重量W（ab）=2+5=7。 W（aba）=2+5+2=9。语言J={ab，aba，b}的重量-W（J）=21。语言J不是非前缀，因为字符串ab是aba的前缀。基于字母表A2最轻的三元非前缀语言（假设字母的重量如前）是{b，aa，ab}；它的重量是16。</p>\r\n<p>任务</p>\r\n<p>写一个程序：</p>\r\n<ul>\r\n    <li>从文本文件中读取两个整数n，k和字母表Ak 的k个字母的重量；</li>\r\n    <li>计算基于字母表Ak 的非前缀的n元语言的最小重量；</li>\r\n    <li>把结果写到文本文件。</li>\r\n</ul>\r\n<p>输入</p>\r\n<p>在输入文件的首行有两个被空格号分开的正整数n、k(2&lt;=n&lt;=10000, 2&lt;=k&lt;=26)。它们是语言中的字符串数和字母表中各个字母数。第二行包括被空格号隔开的k个正整数。每一个都不大于10000。第I个数是第I个字母的重量。</p>\r\n<p>输出</p>\r\n<p>在输出文件的首行应该写一个整数-基于字母表Ak 的最轻的非前缀的n元语言重量。</p>\r\n<p>样例输入 &nbsp;</p>\r\n<pre>\r\n3 2\r\n2 5\r\n</pre>\r\n<p>样例输出 &nbsp;</p>\r\n<pre>\r\n16\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:13'),
(233, '窗户', 'okn', '<p>我们在笛卡尔坐标系中有一个多边形，多边形的边平行于坐标轴，每两条相邻的边是垂直正交的并且每一个顶点的坐标都是整数。我们还给出一个边也平行于坐标轴的矩形窗户。多边形的内部被涂成红色，那么有几个分开的红色部分将在窗户中被看到。</p>\r\n<p>例子：</p>\r\n<p>如下图：</p>\r\n<p><a href="http://www.ruvtex.cn/mw/images/7/71/Okn.png" class="image" title="Image:Okn.png"><img height="300" border="0" width="273" src="http://www.ruvtex.cn/mw/images/7/71/Okn.png" alt="Image:Okn.png" longdesc="http://www.ruvtex.cn/wiki/Image:Okn.png" /></a></p>\r\n<p>有两个红色的部分将被通过窗子看到。</p>\r\n<p>任务：</p>\r\n<p>写一个程序</p>\r\n<ul>\r\n    <li>\r\n    <p>从文件中读入窗户与多边形的描述。</p>\r\n    </li>\r\n    <li>\r\n    <p>计算能通过窗户看到的分开的红色部分的个数。</p>\r\n    </li>\r\n    <li>\r\n    <p>将结果写入文件。</p>\r\n    </li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>在文件的第一行有四个整数x1,y1,x2,y2 (0&lt;=x1,y1,x2,y2&lt;=10000),有一个空格隔开，（x1,y1）是窗户左上角的坐标，（x2,y2）是窗户右下角的坐标。 下一行有一个整数n（4&lt;=n&lt;=5000）表示多边形的顶点数。以下n行以逆时针的顺序给出了多边形的顶点坐标，也就是说当我们沿着给出的 多边形的边走时，多边形的内部在外部的左边。每一行包括两个整数x y(0&lt;=x,y&lt;=10000),有一个空格隔开，第(i+2)行表示多边形的第i个顶点。</p>\r\n<p>输出：</p>\r\n<p>在文件的第一行有且仅有一个整数表示能够通过窗户看到的分开的红色区域的个数。</p>\r\n<p>输入样例：</p>\r\n<p>0 5 8 1<br />\r\n24<br />\r\n0 0<br />\r\n4 0<br />\r\n4 2<br />\r\n5 2<br />\r\n5 0<br />\r\n7 0<br />\r\n7 3<br />\r\n3 3<br />\r\n3 2<br />\r\n2 2<br />\r\n2 4<br />\r\n1 4<br />\r\n1 5<br />\r\n2 5<br />\r\n2 6<br />\r\n3 6<br />\r\n3 5<br />\r\n4 5<br />\r\n4 6<br />\r\n5 6<br />\r\n5 4<br />\r\n7 4<br />\r\n7 7<br />\r\n0 7</p>\r\n<p>输出样例：</p>\r\n<p>2</p>\r\n<p>&nbsp;</p>', 2000, 64, 16, 0, '2012-04-05 16:23:13'),
(234, '相交的矩形', 'pro', '<p>在一个平面上画了n个矩形。每一个矩形有平行于坐标轴的边和整数的顶点坐标。 我们定义一个如下的块：</p>\r\n<ol>\r\n    <li>每一个矩形是一个块，</li>\r\n    <li>如果两个不同的块有一个公共段那么它们组成一个新的块，否则我们说这些块是独立的。</li>\r\n</ol>\r\n<p>图1的矩形组成了两个独立的块。</p>\r\n<p><a title="Image:Poi pro 1.gif" class="image" href="http://www.ruvtex.cn/mw/images/0/00/Poi_pro_1.gif" target="_blank"><img width="134" height="148" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Poi_pro_1.gif" alt="Image:Poi pro 1.gif" src="http://www.ruvtex.cn/mw/images/0/00/Poi_pro_1.gif" /></a></p>\r\n<p>图2的矩形组成了一个块。</p>\r\n<p><a title="Image:Poi pro 2.gif" class="image" href="http://www.ruvtex.cn/mw/images/0/00/Poi_pro_1.gif" target="_blank"><img width="134" height="149" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Poi_pro_2.gif" alt="Image:Poi pro 2.gif" src="http://www.ruvtex.cn/mw/images/0/00/Poi_pro_1.gif" /></a></p>\r\n<p>任务</p>\r\n<p>写一个程序:</p>\r\n<ol>\r\n    <li>从文件中读取矩形数和它们顶点的坐标；</li>\r\n    <li>找出各个由矩形组成的独立块的数目；</li>\r\n    <li>把结果写到文件中。</li>\r\n</ol>\r\n<p>输入</p>\r\n<p>在输入文件的首行有一个整数n（1 &lt;= n &lt;=7000），它是矩形数。在接下来的n行里有矩形的坐标，每一个矩形被四个数描述：左下角顶点的坐标x,y和右上角顶点坐标。所有这些坐标都是不大于10000的非零整数。</p>\r\n<p>输出</p>\r\n<p>在文件的首行应该写下一个整数-被所给矩形形成的独立块的数量。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n9\r\n0 3 2 6\r\n4 5 5 7\r\n4 2 6 4\r\n2 0 3 2\r\n5 3 6 4\r\n3 2 5 3\r\n1 4 4 7\r\n0 0 1 4\r\n0 0 4 1\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:13'),
(235, '步兵问题', 'mus', '<p>在Louis三世和他的重臣-红衣主教Richelieu时期的一个旅馆里n个步兵正在大口的吃肉喝酒。由于喝个不停，因此步兵们热心于吵架。一场喝醉了酒的争吵爆发了，每个步兵都谩骂着对方。</p>\r\n<p>决斗是不可避免的。但是谁应该以什么顺序去打谁？他们决定（第一个回合来自他们的共同争吵）他们围成一圈按顺序选出一些人。被选出的士兵和他右边相邻的人打斗。失败的人离开游戏，为了更加精确，他的尸体将被仆人拖走。下一个步兵将站在失败者的旁边成为胜利者的邻居。</p>\r\n<p>一些年后，当历史学家读了胜利者的记录后，他们意识到最终胜利的结果依靠一个按决斗顺序展开的圆环。他们注意到一个栅栏练习表明，谁靠着谁 能赢得一场决斗。它表现在（用数学语言）&ldquo;A赢B&rdquo;的关系不是及物的！步兵A比B打的更好，B比C更好，C比A更好是有可能的。当然，他们三个当中的首场 决斗影响了最后的结果。如果A和B先打，那么C最终会赢。但是如果B和C先打，那么A就最终会赢。历史学家被他们的发现感到入迷，决定去核实那么步兵能够 生存。法国的命运和整个文明的欧洲真正依靠这个！</p>\r\n<p>任务</p>\r\n<p>N个人以从1到n的连贯数字站成一行。他们要决斗n-1次。在第一个回合这些人中的一个（编号为I）打他右边的邻居，也就是编号为 I+1（如果I=n，则要打的人为编号为1的）。一个失败者离开游戏，圆环收缩以至下一个人能成为胜利者的邻居。我们被给出可能的决斗结果的表，用一个矩 阵形式。如果Ai,j = 1，那么编号为I的人总是战胜编号为j的人。如果Ai,j = 0，那么编号为I的人输给编号为j的人。如果存在一系列n-1的图，我们说编号为k的人赢得了这个游戏，赢得了最终的决斗。</p>\r\n<p>写一个程序:</p>\r\n<p>从文件读取矩阵A，  计算可能赢得比赛的人的编号，  把结果写到文件</p>\r\n<p>输入</p>\r\n<p>在文件的首行有一个整数n（满足不等式3&lt;=n&lt;=100）被记录。在接下来的n行的每一行里将出现有0或1组成的n位的字符 串。一个第I行第j列的数字表示Ai,j 。当然，对于i&lt;&gt;j ，Ai,j = 1 - Aj,i 。对于每一个I，Ai,i = 1。</p>\r\n<p>输出</p>\r\n<p>在输入文件的首行，应该写下m-可能赢得这个游戏的人数。在接下来的m行里，这些人的编号应该被按照升序记录，每一行一个。</p>\r\n<p>样例输入 &nbsp;</p>\r\n<pre>\r\n7\r\n1111101\r\n0101100\r\n0111111\r\n0001101\r\n0000101\r\n1101111\r\n0100001\r\n</pre>\r\n<p>样例输出 &nbsp;</p>\r\n<pre>\r\n3\r\n1\r\n3\r\n6\r\n</pre>\r\n<p>备注</p>\r\n<p>决斗顺序：1-2，1-3, 5-6, 7-1, 4-6, 6-1 得到最后胜利的是编号为6的人。你也能检查仅有两个人（1和3）更有可能赢得这个游戏。</p>', 1000, 128, 20, 0, '2012-04-05 16:23:13'),
(236, '洞穴探险', 'gro', '<p>问题描述</p>\r\n<p>古老的Byte山上有一处神秘的连环洞穴。考古学家们为了对这个洞穴进行研究，组织了一次探险活动。他们花了几天的时间仔细地翻阅了前人留下的资料，对该连环洞穴有了大致的了解。</p>\r\n<p>这是一个有许多不同的小溶洞组成的连环洞穴，每个小溶洞都分布在不同的地层中，并且可能通过洞穴隧道与其他小溶洞相通。</p>\r\n<p>考古学家们已经发现了作为连环洞穴的入口的一个小溶洞，并且根据前人的资料，绘制出了洞穴的地图，标明了哪些小溶洞之间是有洞穴隧道相连的。</p>\r\n<p>富有冒险和激情的考古学家们都期望自己能够独自进行探险活动。于是，他们又提出了这样的要求：从入口的溶洞出发时，每个人都选择一条不同的 洞穴隧道前进；探险结束时，每个人都是通过不同的洞穴隧道抵达最底层的小溶洞。当然了，这些考古学家也达成了妥协：在探险的过程中，可以有不止一名的考古 学家通过同一条洞穴隧道。 为了体现这次探险活动的一往直前的精神，考古学家们还决定，要从小溶洞入口进入，一直抵达最底层的溶洞！每个考古学家探险路线上通过的小溶洞所在的地层必 须比该路线上前一个溶洞的地层低。</p>\r\n<p>考古学家提出来如此多的要求使得本次探险活动的组织者犯了愁，他究竟最多能邀请多少位考古学家来参加这项活动呢？</p>\r\n<p>输入文件</p>\r\n<p>第一行是一个数N（2&lt;=N&lt;=200），表示小溶洞的总数。每个小溶洞用一个数字标号，标号越大，该小溶洞的所在地层越低。入口的小溶洞标号为1，最底层的小溶洞标号为N。</p>\r\n<p>以下共有N-1行，第i+1行表示的是标号为i个溶洞与哪些溶洞相连。每行第一个数字是Mi，表示共与Mi个溶洞相连，随后是Mi个数字，为这些溶洞的标号。</p>\r\n<p>输出文件</p>\r\n<p>输出文件只有一行，为一个整数，表示的是最多能有多少位考古学家参加这次活动。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n12\r\n4 3 4 2 5\r\n1 8\r\n2 9 7\r\n2 6 11\r\n1 8\r\n2 9 10\r\n2 10 11\r\n1 12\r\n2 10 12\r\n1 12\r\n1 12\r\n</pre>\r\n<p>该数据描述的是下面这样一个连环洞穴：</p>\r\n<p><span class="image"><img height="336" alt="Image:Gro.png" width="196" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Gro.png" src="http://192.168.1.253/mw/images/b/be/Gro.png" /></span></p>\r\n<p>样例输出</p>\r\n<pre>\r\n3\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:14'),
(237, '三色二叉树', 'trot', '<p>问题描述</p>\r\n<p>一棵二叉树可以按照如下规则表示成一个由0、1、2组成的字符序列，我们称之为&ldquo;二叉树序列S&rdquo;：</p>\r\n<ul>\r\n    <li>0 该树没有子节点</li>\r\n    <li>1S1 该树有一个子节点，S1为其二叉树序列</li>\r\n    <li>1S1S2 该树有两个子节点，S1,S2分别为两个二叉树的序列</li>\r\n</ul>\r\n<p>例如，下图所表示的二叉树可以用二叉树序列S=21200110来表示。</p>\r\n<p><span class="image"><img alt="Image:Trot.gif" width="231" longdesc="http://www.ruvtex.cn/wiki/Image:Trot.gif" height="128" src="http://www.ruvtex.cn/mw/images/5/52/Trot.gif" /></span></p>\r\n<p>你的任务是要对一棵二叉树的节点进行染色。每个节点可以被染成红色、绿色或蓝色。并且，一个节点与其子节点的颜色必须不同，如果该节点有两个子节点，那么这两个子节点的颜色也必须不相同。给定一棵二叉树的二叉树序列，请求出这棵树中最多和最少有多少个点能够被染成绿色。</p>\r\n<p>输入文件</p>\r\n<p><br />\r\n输入文件仅有一行，不超过10000个字符，表示一个二叉树序列。</p>\r\n<p>输出文件</p>\r\n<p>输出文件也只有一行，包含两个数，依次表示最多和最少有多少个点能够被染成绿色。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n1122002010\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n5 2\r\n</pre>', 1000, 128, 13, 0, '2012-04-05 16:23:14'),
(238, '地图着色', 'map', '<p>在Byteland新的行政划分以后，制图工作室需要制作国家新的统计地图。因为技术上的原因，仅有很少的颜色能够被使用。地图上有着相同或者相似的人口（居民数）的地区被着为相同的颜色。对于给定的颜色K，让A（k）为数字，意思为：</p>\r\n<ol>\r\n    <li>至少有一半颜色为k的地区人口不大于A（k）。</li>\r\n    <li>至少有一半颜色为k的地区人口不少于A（k）。</li>\r\n</ol>\r\n<p>地区的着色误差是指A（k）与地区人口之间的差额的绝对值，累积误差是指所有地区的着色误差之和。我们寻找一种地图的最佳着色方案（即最小的累积误差）</p>\r\n<p>任务</p>\r\n<p>写一个程序：</p>\r\n<ol>\r\n    <li>从输入文件读取Byteland地区的人口，</li>\r\n    <li>计算最小的累积误差，</li>\r\n    <li>把结果写到文件中。</li>\r\n</ol>\r\n<p>输入</p>\r\n<p>在输入文件的首行有一个整数n（10&lt; n &lt;3000），它是Byteland的地区数。第二行有数字m（2 &lt;= m &lt;= 10），表示用于着色的颜色数。在接下来的n行中的每一行里有一个非负的整数- Byteland一个地区的人口数。注：人口数不超过2^30。</p>\r\n<p>输出</p>\r\n<p>你的程序应该在输出文件单独的一行里写下一个整数&mdash;等于能够完成地图最佳着色的最小累积误差。</p>\r\n<p>样例输入 &nbsp;</p>\r\n<pre>\r\n11\r\n3\r\n21\r\n14\r\n6\r\n18\r\n10\r\n2\r\n15\r\n12\r\n3\r\n2\r\n2\r\n</pre>\r\n<p>样例输出 &nbsp;</p>\r\n<pre>\r\n15\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:14'),
(239, '积水', 'wod', '<p>问题描述</p>\r\n<p>有这样一块土地，它可以被划分N*M个正方形小块，每块面积是一平方英寸，第i行第j列的小块可以表示成P(i,j)。这块土地高低不平，每一小块地P(i,j)都有自己的高度H(i,j)(单位是英寸)。</p>\r\n<p>一场倾盆大雨后，由于这块地地势高低不同，许多低洼地方都积存了不少降水。假如你已经知道这块土地的详细信息，你能求出它最多能积存多少立方英寸的降水么?</p>\r\n<p>输入格式</p>\r\n<p>输入文件的第一行是两个正整数n和m,1&lt;=n&lt;=100,1&lt;=m&lt;=100,表示土地的尺寸。下面n行，每行m个整数(1..10000);第j行第i个数表示第j行第i列立方体的高。</p>\r\n<p>输出格式</p>\r\n<p>输出文件只有一个数，表示在这个建筑上可以聚合的积水的最大值</p>\r\n<p>输入输出样例</p>\r\n<p>输入</p>\r\n<pre>\r\n3 6\r\n3 3 4 4 4 2\r\n3 1 3 2 1 4\r\n7 3 1 6 4 1\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>下图是其方案：</p>\r\n<p><span class="image"><img height="110" alt="Image:Wod.png" width="193" longdesc="http://www.ruvtex.cn/wiki/Image:Wod.png" src="http://www.ruvtex.cn/mw/images/7/73/Wod.png" /></span></p>', 1000, 128, 13, 0, '2012-04-05 16:23:14'),
(240, '仓库管理员', 'mag', '<p>问题描述</p>\r\n<p>码头仓库是一块N&times;M个格子的矩形，有的格子是空闲的&mdash;&mdash;没有任何东西，有的格子上已经堆放了沉重的货物&mdash;&mdash;太重了而不再可能被移动。</p>\r\n<p>现在，仓库管理员有一项任务，要将一个小箱子推到指定的格子上去。管理员可以在仓库中移动，但不得跨过沉重的不可移动的货物和箱子。当管理 员站在与箱子相邻的格子上时，他可以做一次推动，把箱子推到另一个相邻的格子。考虑到箱子很重，仓库管理员为了节省体力，想尽量减少推箱子的次数。你能帮 帮他么？</p>\r\n<p>输入文件</p>\r\n<p>输入文件第一行有两个数N，M（1&lt;=N,M&lt;=100），表示仓库是N&times;M的矩形。以下有N行，每行有M个字符，表示一个格子的状态。</p>\r\n<ul>\r\n    <li>S 表示该格子上放了不可移动的沉重货物。</li>\r\n    <li>w 表示该格子上没有任何东西</li>\r\n    <li>M 表示仓库管理员初始的位置</li>\r\n    <li>P 表示箱子的初始位置</li>\r\n    <li>K 表示箱子的目标位置</li>\r\n</ul>\r\n<p>输出文件</p>\r\n<p>输出文件只有一行，一个数，表示仓库管理员最少要推多少次箱子。如果仓库管理员不可能将箱子推到目标位置，那么请输出NIE，表示无解。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n10 12\r\nSSSSSSSSSSSS\r\nSwwwwwwwSSSS\r\nSwSSSSwwSSSS\r\nSwSSSSwwSKSS\r\nSwSSSSwwSwSS\r\nSwwwwwPwwwww\r\nSSSSSSSwSwSw\r\nSSSSSSMwSwww\r\nSSSSSSSSSSSS\r\nSSSSSSSSSSSS\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n7\r\n</pre>', 1000, 128, 18, 0, '2012-04-05 16:23:14'),
(241, '汽油花费', 'pal', '<p>一些旅行车从城市A到城市B运送包裹。在沿途由很多价格不同的加油站。第一个加油站的位置在路程的开始。旅行车的油箱容积可能不同，车在沿途需要及时给油箱加油，我们假设，每个油站有足够的油。</p>\r\n<p>输入</p>\r\n<p>在文件的第一行为一个整数p表示油箱的容量, 1 &lt; p &lt;= 1000000. 在第二行有一个整数n表是沿途加油站的数目。1 &lt; n &lt;= 1000000.接下来的n行每行有两个用单个正整数分隔的整数ci, di, 其中ci表示第I油站的价格. di 表示I和第(i+1)个油站的距离- (dn 就是最后一个油站到结束点的距离). 1 &lt;= ci &lt;= 1000, 1 &lt;= di &lt;= 1000000.</p>\r\n<p>AB的路线长度(所有di之和) 不超过1000000.</p>\r\n<p>输出</p>\r\n<p>一个整数，为路线AB中加油的最少花费</p>\r\n<p>样例输入</p>\r\n<pre>\r\n40\r\n3\r\n2 10\r\n1 15\r\n2 5\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n40\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:14'),
(242, 'Addon', 'addon', '<p>科学家们发现了一种新的放射性元素&mdash;&mdash;ADDON。ADDON是已知的效率最高的核燃料，因此他们决定建立一个ADDON核反应堆。 根据计划，一间燃料室是一根竖直的管子。燃料棒（即装有ADDON的圆筒）将一根叠一根的被放进燃料室里，搭建成一个圆柱。燃料棒具有不同的高度。 核反应循环开始于将燃料棒放进燃料室中。接下来的步骤才是点火。麻烦的是，圆柱的高度不能是任意的&mdash;&mdash;只有某些特定的高度才能保证反应的安全。这样的高度被称作稳定高度。 现在，反应堆的设计师们面临着两个任务：确定燃料室的高度以及选择一个用于制造ADDON的燃料棒的高度集合。 我们说一个高度集合是安全的（对于一个特定高度的燃料室），则有：对于任意一根由高度属于这个集合的燃料棒搭建而成的，且高度不超过燃料室的高度的圆柱，它的高度一定是稳定的。 我们说一个高度集合是完备的（对于一个特定高度的燃料室），则有：对于任意一根高度是稳定的,并且其高度不超过燃料室高度的圆柱，都一定能够由高度属于该集合的燃料棒搭建而成。</p>\r\n<p>任务</p>\r\n<p>写一个程序</p>\r\n<ol>\r\n    <li>从文件中读入一个稳定高度的集合；</li>\r\n    <li>找出存在一个安全且完备的高度集合的核燃料室的最大可能值；</li>\r\n    <li>对于找到的核燃料室，找出一个元素个数最少的安全且完备的高度集合；</li>\r\n    <li>将结果写入文件；</li>\r\n</ol>\r\n<p>输入</p>\r\n<p>文件的第一行是一个自然数n（1&lt;=n&lt;=10000），代表所给的稳定高度的个数。 接下来的n行，每行是一个不超过10000的正整数。这些数按照升序给出，代表了稳定高度。</p>\r\n<p>输出</p>\r\n<p>文件的第一行是找到的燃料室高度的最大可能值。</p>\r\n<p>接下来的每行按照升序给出你所找到的高度集合中的一个元素。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n14\r\n5\r\n10\r\n12\r\n15\r\n17\r\n20\r\n21\r\n22\r\n24\r\n26\r\n27\r\n30\r\n31\r\n33\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n24\r\n5\r\n12\r\n21\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:14'),
(243, '啤酒厂建造', 'bro', '<p>Abstinence岛的居民非常喜欢喝alkoholfree啤酒。虽然到目前为止这种啤酒还是从波兰进口的，但今年他们要在岛上的某一城市建一 啤酒厂。所有城市都位于海岸边，彼此之间通过一条环绕全岛的高速公路联接。啤酒投资商搜集了一些啤酒需求量的信息，譬如每个城市的日啤酒消费量为多少件， 任意俩城市的距离等。一件啤酒每英里的运输费用是一泰勒，因而，将适当件数的啤酒从啤酒厂运往各个城市时，每天的费用将会是很大一笔数目。问题的关键在于 啤酒厂的位置。投资商想找到一个使得日花费量为最小的城市来建造啤酒厂。</p>\r\n<p>任务</p>\r\n<p>编写一程序：</p>\r\n<ul>\r\n    <li>从文件读入城市的个数，任意两城市的距离，以及他们的日啤酒消费量；</li>\r\n    <li>计算日运输费用的最小值；</li>\r\n    <li>结果写入文件.</li>\r\n</ul>\r\n<p>输入</p>\r\n<p>第一行的整数N表示城市的个数，5&lt;=N&lt;=10000(我们假定城市都是沿高速公路编号，相邻的城市编号也紧接。城市一与城 市N相邻）。接下来的N行每行为俩个用单个空格隔开的非负数。第I+1行的数字Z（I）与D（I）分别表示为城市I的啤酒需求量和从城市I沿高速公路到下 一城市的距离（用英里做度量）。公路的总长不超过1000000英里。每一城市日啤酒需求量不大于1000件。</p>\r\n<p>输出</p>\r\n<p>你的程序将在文件的第一行且只在这一行写入一整数，此整数应为日运输费用的最小值。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n6\r\n1 2\r\n2 3\r\n1 2\r\n5 2\r\n1 10\r\n2 3\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n41\r\n</pre>', 1000, 128, 17, 0, '2012-04-05 16:23:14'),
(244, '滑雪队', 'nar', '<p>一个滑雪队在Byte山上组织了一次训练。山的北坡有一个滑雪场，所有的滑雪者都要从山上的起点站滑到山下的终点站。此次训练中各队员同时出发到终点站会合，除了始末两处外，队员们的滑雪路径不能相交，且山上的滑雪道只能从上往下滑。</p>\r\n<p>滑雪道的分布地图由多块被林地连接的空地组成，每块空地都处于不同的高度。两块空地间至多由一块林地连接。滑雪过程中，滑雪者可以选择路径访问任一空地（但不必全部经过）。各滑雪道只在空地相会，既不穿隧道，也不临空飞越。</p>\r\n<p>任务：</p>\r\n<p>编写一个程序完成下列工作：</p>\r\n<ul>\r\n    <li>读入滑雪场的地图；</li>\r\n    <li>算出能参加训练的最大队员数；</li>\r\n    <li>把结果写入文件。</li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>文件的第一行是空地的数目n，2&le;n&le;5000。以下n-1行，每行都有一些用空格分开的整数，第(i+1)行的数字描述的是从空地i沿林 地往下可到达的其它空地。该行第一个整数k表示这些空地的个数，以下k个整数即它们的编号，按从东到西的顺序排列(即通向各空地的林地的位置)。空地从1 到n编号。起点站建于空地1，终点站建于空地n。</p>\r\n<p>输出：</p>\r\n<p>仅一行，包括一个整数，即能参加训练的最大人数。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n15\r\n5 3 5 9 2 4\r\n1 9\r\n2 7 5 \r\n2 6 8\r\n1 7\r\n1 10\r\n2 14 11\r\n2 10 12\r\n2 13 10\r\n3 13 15 12\r\n2 14 15\r\n1 15\r\n1 15\r\n1 15\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\n3\r\n</pre>\r\n<p>如下图</p>\r\n<p><a class="image" title="Image:Nar.png" href="http://www.ruvtex.cn/mw/images/5/5a/Nar.png"><img height="304" alt="Image:Nar.png" width="312" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Nar.png" src="http://192.168.1.253/mw/images/5/5a/Nar.png" /></a></p>', 1000, 128, 9, 0, '2012-04-05 16:23:15'),
(245, '促销活动', 'prom', '<p>问题描述</p>\r\n<p>促销活动遵守以下规则：</p>\r\n<ol>\r\n    <li>一个消费者 &mdash;&mdash; 想参加促销活动的消费者，在账单下记下他自己所付的费用，他个人的详细情况，然后将账单放入一个特殊的投票箱。</li>\r\n    <li>当每天促销活动结束时，从投票箱中抽出两张账单：</li>\r\n</ol>\r\n<ul>\r\n    <li>第一张被抽出的账单是金额最大的账单</li>\r\n    <li>然后被抽出的是金额最小的账单，对于付了金额最大账单的这位消费者，将得到一定数目的奖金，其奖金数等于他账单上的金额与选出的最小金额的差。</li>\r\n    <li>为了避免一个消费者多次获奖，根据上面所抽出的两张账单都不返回到投票箱，但是剩下的账单还继续参加下一天的促销活动。</li>\r\n</ul>\r\n<p>超市的售出额是巨大的，这样可以假定，在每天结束，拿出数额最大账单和数额最小账之前，在投票箱内就已经至少存在了 2 张账单。你的任务是去计算每天促销活动投进投票箱的账单数额的基本信息。在整个活动中开销总数。</p>\r\n<p>本题中约定：</p>\r\n<p>整个活动持续了 N 天 (N&lt;=5000) 。 第 i 天放入的帐单有 a[i] 张， a[i]&lt;=10^5 。且 sigma(a[1]...a[n])&lt;=10^6 。 每一天放入的帐单的面值均 &lt;=10^6 。</p>\r\n<p>输入格式</p>\r\n<p>输入文件的第一行是一个整数 n （ 1 &lt;= n &lt;= 5000 ），表示促销活动历时的天数。</p>\r\n<p>以下的 n 行，每行包含若干由空格分隔的非负整数。第 i+1 行的数表示在第 i 天投入箱子的账单金额。每行的第一个数是一个整数 k （ 0 &lt;= k &lt;= 10^5 ）， 表示当日账单的数目。后面的 k 个正整数代表这 k 笔账单的金额，均小于10^6 。</p>\r\n<p>整个活动中涉及到的账单笔数不会超过 10^6 。</p>\r\n<p>输出格式</p>\r\n<p>输出文件的唯一一行是一个整数，等于整个促销活动中应该付出的奖金总额。</p>\r\n<p>【输入输出样例】</p>\r\n<p>输入</p>\r\n<pre>\r\n5\r\n3 1 2 3\r\n2 1 1\r\n4 10 5 5 1\r\n0\r\n1 2\r\n</pre>\r\n<p>输出</p>\r\n<pre>\r\n19\r\n</pre>', 1000, 128, 7, 0, '2012-04-05 16:23:15'),
(246, '特工的故事', 'age', '<p>由于他们的谍报人员最近发生了不幸，中央情报局驻Byteland决定提升其特工人员的活动能力。为了让其特工人员能安全会晤，这是迄今为止麻烦最 大的一次准备活动。我们的程序就是为了解决这些问题。对于一给定的Byteland的公路网络，以及俩特工人员的初始位置，我们应该能够回答他们的安全会 晤是不是可能的。同时，为了使安全会晤成为可能，特工人员要做到以下几点：</p>\r\n<ul>\r\n    <li>特工人员白天行动，碰面只能在晚上；</li>\r\n    <li>特工人员必须每天改变他的行踪（一天内不能呆在同一城市）；</li>\r\n    <li>特工人员只能沿着连接俩城市的公路走（不幸的是，在Byteland，公路是单向的）；</li>\r\n    <li>特工人员不能走的太快（避免怀疑）---一天内他顶多只能从一个城市到另一城市；</li>\r\n    <li>任意俩城市的距离都很短，特工人员早上从一城市出发傍晚之前就能到达另一城市；</li>\r\n    <li>安全的碰面意味着俩特工人员在同一个傍晚到达同一城市。</li>\r\n</ul>\r\n<p>要求</p>\r\n<p>编写一程序：</p>\r\n<ol>\r\n    <li>从文件中读入Byteland的城市个数、公路网络描述，以及特工人员的初始位置；</li>\r\n    <li>核对是否存在一安全的碰面，若存在，则计算须多少天来安排这次会晤；</li>\r\n    <li>结果写入文件中。</li>\r\n</ol>\r\n<p>输入</p>\r\n<p>在第一行为俩整数n、m，1&lt;=n&lt;=250,0&lt;=m&lt;=n*(n-1)。n表示城市的个数，m表示道路的条 数。第二行的整数a(1),a(2)分别表示1号和2号特工人员的出发位置。接下来的m行每行为俩自然数a、b，用空格隔开，1&lt;=a、b&amp; lt;=n,并且a&lt;&gt;b,表示从城市a到城市b存在一道路。</p>\r\n<p>输出</p>\r\n<p>或者恰有一正整数，它表示安排这次安全会晤的最小时间（以天数作为单位），如果这样的碰面可能的话；或者为一单词NIE，如果这样的碰面不可能的话。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n6 7\r\n1 5\r\n1 2\r\n4 5\r\n2 3\r\n3 4\r\n4 1\r\n5 4\r\n5 6\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n3\r\n</pre>', 1000, 128, 14, 0, '2012-04-05 16:23:15'),
(247, '售票系统', 'railway', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;某次列车途经C个城市，城市编号依次为1到C，列车上共有S个座位，铁路局规定售出的车票只能是坐票， 即车上所有的旅客都有座。售票系统是由计算机执行的，每一个售票申请包含三个参数，分别用O、D、N表示，O为起始站，D为目的地站，N为车票张数。售票 系统对该售票申请作出受理或不受理的决定，只有在从O到D的区段内列车上都有N个或N个以上的空座位时该售票申请才被受理。请你写一个程序，实现这个自动 售票系统。</p>\r\n<p align="left">【输入格式】 <br />\r\n第一行包含三个用空格隔开的整数C、S和R，其中1&le;C&le;60000， l&le;S&le;60000，1&le;R&le;60000。C为城市个数，S为列车上的座位数，R为所有售票申请总数。接下来的R行每行为一个售票申请，用三个由空格隔开的整数O，D和N表示，O为起始站，D 为目的地站，N为车票站数，其中1&le;D&le;C，1&le;O&le;C，所有的售票申请按申请的时间从早到晚给出。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出共有R行，每行输出一个&ldquo;YES&rdquo;或&ldquo;NO&rdquo;，表示当前的售票申请被受理或不被受理。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入:<br />\r\n4 6 4<br />\r\n1 4 2<br />\r\n1 3 2<br />\r\n2 4 3<br />\r\n1 2 3<br />\r\n<br />\r\n输出:<br />\r\nYES<br />\r\nYES<br />\r\nNO<br />\r\nNO</p>', 1000, 128, 12, 0, '2012-04-05 16:23:15'),
(248, '画家的工作室', 'mal', '<p>画家的工作室正在准备大规模生产绘画作品。绘画作品准备利用不同尺寸的正方形来完成，一个尺寸为I的正方形包括2^I行2^I列，并且在某些行与列 的交叉处有孔。尺寸为0的正方形有一个孔，对于I&gt;0，尺寸为I的正方形由4个2^(I-1)*2^(I-1)的正方形构成。如下图：&ldquo;bez otworow&rdquo;在波兰语中表示没有孔，&ldquo;matryca stopnia&rdquo;表示尺寸大小。</p>\r\n<p><span class="image"><img height="277" width="300" longdesc="http://www.ruvtex.cn/wiki/Image:POI9801_1.jpg" alt="Image:POI9801_1.jpg" src="../../../../../mw/images/6/6b/POI9801_1.jpg" /></span></p>\r\n<p>在右边的正方形以及左下角的正方形都是尺寸为I-1的正方形，而左上角的正方形内没有孔。图画是用下面的方式构成的：首先，我们固定三个非 负整数n,x,y。然后，我们把两个尺寸均为n的正方形重叠起来，将其中一个向右移x列向上移y行。我们把它们放到一张白色的帆布上，再将黄色的颜料覆盖 到这两个正方形重叠的地方。用这种方法我们在帆布上两个正方形孔重叠的地方得到了黄色的斑点。</p>\r\n<p>例子： 考虑两个尺寸为2的正方形。</p>\r\n<p><img height="306" width="300" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:POI9801_2.jpg" alt="Image:POI9801_2.jpg" src="../../../../../mw/images/5/5b/POI9801_2.jpg" /></p>\r\n<p>上面的正方形被向上移了2行向右移了2列。有3个符合要求的孔。</p>\r\n<p>任务：</p>\r\n<p>写一个程序： 从文件读入两个正方形的尺寸以及上方的正方形将要被移动的行列数。计算帆布上黄色斑点的数目。把结果写入文件。</p>\r\n<p>输入：</p>\r\n<p>在文件MAL.IN的第一行有一个整数n（0&lt;=n&lt;=100），表示用来生产作品的正方形尺寸。第二行有一个整数x第三行有一个整数y（0&lt;=x,y&lt;=2^n）,x y表示上方正方形需要移动的列数与行数。</p>\r\n<p>输出：</p>\r\n<p>在输出文件的第一行应当被写入一个整数表示帆布上的斑点数。</p>\r\n<p>样例输入：</p>\r\n<pre>\r\n2\r\n2\r\n2\r\n</pre>\r\n<p>样例输出：</p>\r\n<pre>\r\n3\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:15'),
(249, '最长公共子串', 'pow', '<p>给出几个由小写字母构成的单词，求它们最长的公共子串的长度。</p>\r\n<p>任务</p>\r\n<ul>\r\n    <li>从文件中读入单词</li>\r\n    <li>计算最长公共子串的长度</li>\r\n    <li>输出结果到文件</li>\r\n</ul>\r\n<p>输入</p>\r\n<p>文件的第一行是整数 n，1&lt;=n&lt;=5，表示单词的数量。接下来n行每行一个单词，只由小写字母组成，单词的长度至少为1，最大为2000。</p>\r\n<p>输出：</p>\r\n<p>仅一行，一个整数，最长公共子串的长度。</p>\r\n<p>样例输入：</p>\r\n<pre>\r\n3\r\nabcb\r\nbca\r\nacbc\r\n</pre>\r\n<p>样例输出：</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 64, 16, 0, '2012-04-05 16:23:15');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(250, '密度图', 'dmap', '<p>问题描述</p>\r\n<p>在ByteLand上有一块地区，蕴藏了ByteLand上最珍贵的Bit矿物质。科学家们将这块地区划分成了N&times;N个相同大小的单元格， 并对每个单元格进行了考察研究：有的单元格中有丰富的Bit矿物质&mdash;&mdash;科学家用1来标识；有的单元格蕴藏的矿物质很少&mdash;&mdash;科学家用0来标识。</p>\r\n<p>假设用W(i,j)和F(i&rsquo;,j&rsquo;)来分别表示两个单元格。那么它们之间的距离被定义为：max(|i - i''|, |j - j''|)，例如W(1,3)和F(4,2)的距离为3。</p>\r\n<p>鉴于可持续发展的思想和开采能力的限制，ByteLand当局计划以一块单元格为中心，开采与中心距离不超过R的所有单元格内的矿藏。为了选定一个合适的单元格作中心，当局希望能够预先了解：以任意一个单元格为中心时，开采量的情况。</p>\r\n<p>于是，当局将一张矿藏地图交给你，上面的N&times;N个单元格中包含数字0或1。你被要求根据这张矿藏地图，绘制出相应的&ldquo;矿藏密度图&rdquo;，分别以每块单元格为中心，计算与中心距离不超过R的所有标识为1的单元格个数。</p>\r\n<p>输入文件</p>\r\n<p>第一行有两个数字N和R（0&lt;=R&lt;N&lt;=250）。</p>\r\n<p>以下N行，每行N个数字。第i+1行第j个数字为单元格(i,j)的标识&mdash;&mdash;0或1。</p>\r\n<p>输出文件</p>\r\n<p>输出文件有N行，每行N个数字。第i行第j个数字表示：与(i,j)距离不超过R的所有标识为1的单元格个数。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n5 1\r\n1 0 0 0 1\r\n1 1 1 0 0 \r\n1 0 0 0 0 \r\n0 0 0 1 1\r\n0 1 0 0 0\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n3 4 2 2 1\r\n4 5 2 2 1\r\n3 4 3 3 2\r\n2 2 2 2 2\r\n1 1 2 2 2\r\n</pre>', 1000, 128, 14, 0, '2012-04-05 16:23:15'),
(251, '区间', 'prz', '<p>有一些闭区间[ai,bi]（i=1、2、&hellip;、n），找出区间数最少的表示方案，并按递增的顺序定稿输出文件。当a&le;b＜c&le;d时，我们说区间[a,b]和[c,d]为递增顺序。</p>\r\n<p>任务：</p>\r\n<p>你的任务是编写一个程序完成下列工作：</p>\r\n<ul>\r\n    <li>从文件中读入这些区间；</li>\r\n    <li>算出满足上述条件的区间；</li>\r\n    <li>把结果写入文件。</li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>文件的第一行是整数n，3&le;n&le;50000，代表区间个数，以下第i+1行1&le;i&le;n，有两个用空格分开的的整数ai和bi表示一个闭区间[ai,bi]（1&le;ai&le;bi&le;1000000）。</p>\r\n<p>输出：</p>\r\n<p>文件包括，所求的不相交闭区间，每行描述一个闭区间，按照递增顺序。每个区间用两个以空格分开的整数表示，分别是该区间的开头和末端。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n5\r\n5 6\r\n1 4\r\n10 10\r\n6 9\r\n8 10\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\n1 4\r\n5 10\r\n</pre>', 1000, 128, 9, 0, '2012-04-05 16:23:15'),
(252, '蚂蚁和瓢虫', 'mro', '<p>蚂蚁和蚜虫是共生的。蚜虫分泌出蜜汁给蚂蚁引用。蚂蚁帮助蚜虫赶走它的天敌&mdash;&mdash;瓢虫。在蚂蚁山附近有一个树，这里是蚜虫生活的地方。蚜虫吸取树的汁 液。有n个蚂蚁兵，用1到n编号。一个瓢虫威胁着这个文明，它经常出现在蚜虫活动的地方。当瓢虫坐在树上时，蚂蚁兵会出动把它赶走。他们按照如下的规则：</p>\r\n<p>树上的任意两点之间都只有一条路径,所有的蚂蚁都沿着它所在点到瓢虫的路径前进，每移动一个位置，花的时间是单位1。</p>\r\n<ul>\r\n    <li>如果蚂蚁和瓢虫在同一个位置，那么蚂蚁立即把它赶走。</li>\r\n    <li>如果某个蚂蚁的路径上有另外一只蚂蚁，那么距离目标较远的蚂蚁待在原地不动，较近的那个蚂蚁继续前进。</li>\r\n    <li>如果有多个蚂蚁要进入同一个位置，那么选择编号最小的蚂蚁，其余的蚂蚁留在原位置不动。</li>\r\n    <li>当蚂蚁到达了瓢虫的位置以后，把它赶走，然后停留在该位置。</li>\r\n</ul>\r\n<p>瓢虫是非常顽固的动物，它被赶走了以后还会再停留到别的位置。然后蚂蚁继续行动。为了使问题简单化，我们假定从一个位置到达与它相邻的位置花1个单位的时间。</p>\r\n<p>任务：</p>\r\n<p>读入树的描述，蚂蚁的开始位置，以及瓢虫停留地点。 给出每个蚂蚁的最后的位置，以及该蚂蚁赶走瓢虫的次数。</p>\r\n<p>输入：</p>\r\n<p>文件的第一行，一个整数n，1&lt;=n&lt;=5000。表示地点的编号。接下来n-1行描述了树里的边，每行两个整数a和b，表示 这两点之间相连。然后一行是整数k，1&lt;=k&lt;=1000 and k&lt;=n。是蚂蚁兵的数目。接下来k行，每行一个整数，表示蚂蚁兵开始的位置。没有两个蚂蚁位于一个位置。然后是一个整数l, 1&lt;=l&lt;=500,即瓢虫停留l次。下面的l行每行一个整数，表示瓢虫依次停留的位置。</p>\r\n<p>输出：</p>\r\n<p>k行。每行两个整数，分别表示第k个蚂蚁最后的位置以及它赶走瓢虫的次数。</p>\r\n<p>Sample Input</p>\r\n<pre>\r\n4\r\n1 2\r\n1 3\r\n2 4\r\n2\r\n1\r\n2\r\n2\r\n2\r\n4\r\n</pre>\r\n<p>Sample Output</p>\r\n<pre>\r\n1 0\r\n4 2\r\n</pre>\r\n<p>Figure</p>\r\n<pre><span class="image"><img style="width: 159px; height: 98px" height="80" alt="Image:Mro.gif" width="136" border="0" longdesc="http://www.ruvtex.cn/wiki/Image:Mro.gif" src="http://192.168.1.253/mw/images/4/49/Mro.gif" /></span>\r\n</pre>', 1000, 128, 16, 0, '2012-04-05 16:23:15'),
(253, '反质数', 'ant', '<p>题意描述</p>\r\n<p>如果一个自然数n，满足：所有小于n的自然数的约数个数都小于n的约数个数，则n是一个反质数。例如：1, 2, 4, 6, 12, 24。</p>\r\n<p>任务</p>\r\n<p>编一个程序完成以下操作：</p>\r\n<ul>\r\n    <li>从输入文件中读入自然数n。</li>\r\n    <li>计算不大于n的最大的反质数。</li>\r\n    <li>将结果输出到文件中。</li>\r\n</ul>\r\n<p>输入格式</p>\r\n<p>输入文件只有一个整数，n（1&le;n&le;2000000000）。</p>\r\n<p>输出格式</p>\r\n<p>输出文件只有一个整数，即不大于n的最大的反质数。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n1000\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n840\r\n</pre>', 1000, 128, 22, 0, '2012-04-05 16:23:16'),
(254, '旅行', 'pod', '<p>让我们先确定某个城市的交通网络图，图中的点（编号为1..n），表示车站；边(pi,pj) (其中pi&ne;pj)，表示有一条路线直接连接车站pi和pj(1&le;pi, pj&le;n)。城市中的公共汽车线路从1到k编号。在线路l上有车站pl,1, pl,2,...,pl,sl,，用rl,1, rl,2,...,rl,sl-1表示对应相邻两车站间的行驶时间。例如rl,1 是从车站pl,1 到pl,2所需的时间，rl,2是从车站pl,2到pl,3所需的时间。同一线路上的车站互不相同(即若i&ne;j则pl,i&ne;pl,j)。在线路l上，发车 时间有固定的周期，表示为cl， 其中cl 属于集合{6, 10, 12, 15, 20, 30, 60}；而且在每个整点g:0 (0&le;g&le;23)，从车站pl,1 必有一辆车出发。于是可知在g:cl,、g:2cl,... 时(g:cl 表示g小时后的cl分钟)，都有车出发。所有的路线均为双向：从车站pl,1到pl,sl ，从车站pl,sl 到 pl,1，且同时以车。在这样的一个城市中，我们打算做一次从车站x到车站y的旅行。你可以假定该旅行是能够完成的，而且所需的时间不超过24小时。旅行 中在任一车站我们都可以换车，上下车的时间不计，但等车的时间要计算在内。我们的目的是尽可能快地完成从车站x到车站y的旅行。</p>\r\n<p>下图是一个有6个车站的交通网，有两条公共汽车线路。线路1：经过车站1、3、4、6；线路2：经过车站2、4、3、5。发车的周期是：c1=15，c2=20。相邻车站间行驶时间己标在图中的边上，以下标1、2表示不同的线路。</p>\r\n<p><span class="image"><img height="182" alt="Image:Pod.gif" width="383" longdesc="http://www.ruvtex.cn/wiki/Image:Pod.gif" src="http://192.168.1.253/mw/images/0/0f/Pod.gif" /></span></p>\r\n<p>假定在23:30我们在车站5，目标是到车站6。则必须等10分钟(在23:40)才有一班2路车从车站5出发。接下来有两种旅行方案，其 一：在23:51到达车站3，等3分钟，改乘1路车到达车站6(0:16)。其二：继续乘2路车到车站4(0:8)，再等13分钟(0:21)乘1路车到 车站6(0:31)。因此到达车站6时最早的时间是0:16。</p>\r\n<p>任务：</p>\r\n<ul>\r\n    <li>从文件中读入对交通网的描述，交通路线，起始车站x，终点车站y，旅行开始的时间gx和mx(gx表示小时，mx表示分钟)；</li>\r\n    <li>找出从x到y的最早到达时间；</li>\r\n    <li>把到车站y的最早时间gy：my写入文件。</li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>文件的第一行是6个用空格分开的整数：</p>\r\n<ul>\r\n    <li>车站总数n（1&le;n&le;1000）；</li>\r\n    <li>路线数目k（1&le;k&le;2000）；</li>\r\n    <li>起点车站x（1&le;x&le;n）；</li>\r\n    <li>终点车站y（1&le;y&le;n）；</li>\r\n    <li>旅行开始时刻中的小时gx（0&le;gx&le;23）；</li>\r\n    <li>旅行开始时间中的分钟mx（0&le;mx&le;59）。</li>\r\n</ul>\r\n<p>车站从1至n编号，路线从1至k编号。接下来的3k行用来描述路线，每条路线的描述占3行：</p>\r\n<ul>\r\n    <li>描述路线l的第一行是两个用一空格分开的整数：sl和cl，分别表示路线经过的车站数目和发车周期，其中2&le;sl&le;n，cl属于集合｛6,10,15,20,30,60｝。</li>\r\n    <li>描述路线l的第二行有sl个不同的整数，以一个空格分开：pl,1,pl,2,...,pl,sl，表示路线l经过车站的编号( 当1&le;i&le;sl时，1&le;pl,i&le;n)。</li>\r\n    <li>描述路线l的第三行有sl-1个用空格分开的整数：rl,1, rl,2,..., rl,sl-1，表示路线l上相邻两车站间的行驶时间，以分钟作为单位( 当1&le;i&le;sl-1时，1&le;rl,i&le;240)。</li>\r\n</ul>\r\n<p>所有路线的车站数目之和不超过4000（即s1+s2+...+sk&le;4000）。</p>\r\n<p>输出：</p>\r\n<p>文件中仅有两个用一空格分开的整数，即最早到达终点的时间：gy和my，（0&le;gy&le;23，0&le;my&le;59）。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n6 2 5 6 23 30\r\n4 15\r\n1 3 4 6\r\n9 12 10\r\n4 20\r\n5 3 4 2\r\n11 17 11\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\n0 16\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:16'),
(255, '跳舞蝇的教练', 'pch', '<p>Byteland一直以奇妙的跳舞蝇而闻名于世。驯养的苍蝇能和着音乐的节奏精确地做每一次飞跃。通常，训练者会在桌上放一排硬币，这些硬币的排列 并不按照特定的顺序。每枚硬币上都有一行题字：i&rarr;j，i是这枚硬币的编号，j是站在硬币i上的苍蝇下一步应该飞往的硬币编号。训练者在每个硬币上放一只 苍蝇，然后开始放音乐。那些苍蝇就跟着音乐的节拍开始跳舞，在每一拍中苍蝇都会直接跳到编号为j的硬币上。在舞蹈中，可能会出现多只苍蝇在同一硬币上的情 况。这样，跳舞蝇就会一起继续表演。假定有n只苍蝇，n枚硬币。则一旦确定了n枚硬币上的题字，那么这场表演也就确定了。然而，对硬币不同的设置也可能导 致相同的表演，只要我们把硬币按适当的顺序排列。 让我们先来看3枚硬币上的表演。如果表演是这样进行：从第一个硬币到第二个，第二个到第三个，第三个又回到第一个硬币（表示为1&rarr;2，2&rarr;3，3&rarr;1）。 具体表演是3只苍蝇绕圈跳跃，从不相遇。那么表演1&rarr;2，2&rarr;3，3&rarr;3，则是与其不同的。因为该表演为：两拍后，所有的苍蝇在第3枚硬币上相遇，然后一 直在原地跳跃。</p>\r\n<p>但是，设置1&rarr;2，2&rarr;3，3&rarr;2，4&rarr;4和1&rarr;1、2&rarr;3、3&rarr;2、4&rarr;3就是同样的类型。如果你把前者的硬币从左到右排列，而把后者从右到左排列，就会看到相同的表演。</p>\r\n<p>任务：</p>\r\n<p>如果跳舞蝇的两次表演是相同的，就会使观众不满，请编写一个程序：</p>\r\n<ul>\r\n    <li>从文件中读入测试任务的个数；</li>\r\n    <li>对每一个测试任务，从PCH.IN中读入两组硬币设置，验证是否能把硬币按一定顺序排列，使跳舞蝇给出相同的表演；</li>\r\n    <li>把结果写入文件。</li>\r\n</ul>\r\n<p>输入：</p>\r\n<p>文件的第一行是测试任务的个数d(1&le;d&le;100)，以下3*d行，每三行描述一个任务。三行中的第一行是一个整数 n(1&le;n&le;2000)，表示硬币的个数。后两行每行均为一套硬币的描述。格式为n个用空格分开的1&hellip;n范围内的整数，第i个整数表示硬币i上的苍蝇应该 飞向的硬币的编号。</p>\r\n<p>输出：</p>\r\n<p>对每个任务，均要在文件中输出一行，仅包含一个字母。如果可以按一定顺序排硬币使表演相同则输出&ldquo;T&rdquo;，否则输出&ldquo;N&rdquo;。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n2\r\n3\r\n2 3 1\r\n2 3 3\r\n4\r\n2 3 2 4\r\n1 3 2 3\r\n</pre>\r\n<p>输出样例：</p>\r\n<pre>\r\nN\r\nT\r\n</pre>', 1000, 128, 11, 0, '2012-04-05 16:23:16'),
(256, '金矿', 'kop', '<p>问题描述</p>\r\n<p>金矿的老师傅年底要退休了。经理为了奖赏他的尽职尽责的工作，决定在一块包含 n(n &le; 15000) 个采金点的长方形土地中划出一块长度为 S ，宽度为 W 的区域奖励给他(1 &le; s , w &le; 10 000)。老师傅可以自己选择这块地的位置，显然其 中包含的采金点越多越好。你的任务就是计算最多能得到多少个采金点。如果一个采金点的位置在长方形的边上，它也应当被计算在内。</p>\r\n<p>输入格式</p>\r\n<p>输入文件的第一行有两个整数,中间用一个空格隔开，表示长方形土地的长和宽即s和w(1&lt;=s,w&lt;=10 000)。第二行有一个整数n(1&lt;=n&lt;=15 000)，表示金矿数量。下面的n行与金矿相对应，每行两个整数x和y (-30 000&lt;=x,y&lt;=30 000),中间用一个空格隔开，表示金矿的坐标。</p>\r\n<p>输出格式</p>\r\n<p>输出文件只有一个整数，表示选择的最大金矿的数。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n1 2\r\n12\r\n0 0\r\n1 1\r\n2 2\r\n3 3\r\n4 5\r\n5 5\r\n4 2\r\n1 4\r\n0 5\r\n5 0\r\n2 3\r\n3 2\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n4\r\n</pre>', 1000, 128, 15, 0, '2012-04-05 16:23:16'),
(257, '动态排名系统', 'dynrank', '<p>[问题描述]<br />\r\n给定一个长度为N的已知序列A[i](1&lt;=i&lt;=N)，要求维护这个序列，能够支持以下两种操作：<br />\r\n1、查询A[i],A[i+1],A[i+2],...,A[j](1&lt;=i&lt;=j&lt;=N)中，升序排列后排名第k的数。<br />\r\n2、修改A[i]的值为j。<br />\r\n<br />\r\n所谓排名第k，指一些数按照升序排列后，第k位的数。例如序列{6,1,9,6,6}，排名第3的数是6，排名第5的数是9。<br />\r\n<br />\r\n[输入格式]<br />\r\n第一行包含一个整数D(0&lt;=D&lt;=4)，表示测试数据的数目。接下来有D组测试数据，每组测试数据中，首先是两个整数N(1&lt;=N&lt;=50000),M(1&lt;=M&lt;=10000)，表示序列的长度为N，有M个操作。接下来的N个不大于1,000,000,000正整数，第i个表示序列A[i]的初始值。然后的M行，每行为一个操作<br />\r\nQ i j k 或者<br />\r\nC i j<br />\r\n分别表示查询A[i],A[i+1],A[i+2],...,A[j](1&lt;=i&lt;=j&lt;=N)中，升序排列后排名第k的数，和修改A[i]的值为j。<br />\r\n<br />\r\n[输出格式]<br />\r\n对于每个查询，输出一行整数，为查询的结果。测试数据之间不应有空行。<br />\r\n<br />\r\n[样例输入]<br />\r\n2<br />\r\n5 3<br />\r\n3 2 1 4 7<br />\r\nQ 1 4 3<br />\r\nC 2 6<br />\r\nQ 2 5 3<br />\r\n5 3<br />\r\n3 2 1 4 7<br />\r\nQ 1 4 3<br />\r\nC 2 6<br />\r\nQ 2 5 3<br />\r\n<br />\r\n[样例输出]<br />\r\n3<br />\r\n6<br />\r\n3<br />\r\n6</p>', 6000, 64, 10, 0, '2012-04-05 16:23:16'),
(258, '卫星覆盖', 'satellitecover', '<p>SERCOI（Space-Earth Resource Cover-Observe lnstitute）是一个致力于利用卫星技术对空间和地球资源进行覆盖观测的组织。现在他们研制成功一种新型资源观测卫星-SERCOI-308。这种 卫星可以覆盖空间直角坐标系中一定大小的立方体空间，卫星处于该立方体的中心。</p>\r\n<p>其中（x,y,z）为立方体的中心点坐标，r为此中心点到立方体各个面的距离（即r为立方体高的一半）．立方体的各条边均平行于相应的坐标轴。我们可以用一个四元组(x,y,z,r)描述一颗卫星的状态，它所能覆盖的空间体积 。 由于一颗卫星所能覆盖的空间体积是有限的，因此空间中可能有若干颗卫星协同工作。它们所覆盖的空间区域可能有重叠的地方，如下图所示（阴影部分表示重叠的区域）。</p>\r\n<p><span class="image"><img height="200" width="197" longdesc="http://www.ruvtex.cn/wiki/Image:Satellitecover.png" alt="Image:Satellitecover.png" src="http://www.ruvtex.cn/mw/images/5/58/Satellitecover.png" /></span></p>\r\n<p>写一个程序，根据给定的卫星分布情况，计算它们所覆盖的总体积。</p>\r\n<p>输入输出</p>\r\n<p>输入文件的第一行是一个正整数N（1&lt;=N&lt;=100）：表示空间中的卫星总数。接下来的N行每行给 出了一颗卫星的状态，用空格隔开的四个正整数x,y,z,r依次表示了该卫星所能覆盖的立方体空间的中心点坐标和半高，其中 -1000&lt;=x,y,z&lt;=1000, 1&lt;=r&lt;=200。</p>\r\n<p>输出文件只有一行,包括一个正整数，表示所有这些卫星所覆盖的空间总体积。</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n3\r\n0 0 0 3\r\n1 -1 0 1\r\n19 3 5 6\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n1944\r\n</pre>', 1000, 128, 20, 0, '2012-04-05 16:23:16'),
(259, '亲戚', 'relations', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;或许你并不知道，你的某个朋友是你的亲戚。他可能是你的曾祖父的外公的女婿的外甥女的表姐的孙子。如果能得到完整的家谱，判断两个人是否是亲戚应该是可行的，但如果两个人的最近公共祖先与他们相隔好几代，使得家谱十分庞大，那么检验亲戚关系实非人力所能及。在这种情况下，最好的帮手是计算机。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;为了将问题简化，你将得到一些亲戚关系的信息，如同Xuebin和Grant是亲戚，Grant和Tension是亲戚等，从这些信息中，你可以推出xuebin和Tension是亲戚。请写一个程序，对于我们的关于亲戚关系的提问，以最快的速度给出答案。</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 输入由两部分组成：<br />\r\n第一部分以N、M开始。N为问题涉及到的人的个数（1＜N＜20000）。这些人的编号为1、2、3、&hellip;、N。下面有M行（1＜M＜1000000），每行有两个数ai、bi，表示已知ai和bi是亲戚。<br />\r\n第二部分以Q开始。以下Q行有Q个询问（1＜Q＜1000000），每行为ci、di，表示询问ci和di是否为亲戚。</span></div>\r\n<div>【输出格式】</div>\r\n<div><span>输出有若干行，</span></div>\r\n<div>对于每个询问ci、di，若ci和di为亲戚，则输出Yes，否则输出No。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件</div>\r\n<div>10 7<br />\r\n2 4<br />\r\n5 7<br />\r\n1 3<br />\r\n8 9<br />\r\n1 2<br />\r\n5 6<br />\r\n2 3<br />\r\n3<br />\r\n3 4<br />\r\n7 10<br />\r\n8 9</div>\r\n<div>输出文件</div>\r\n<div>Yes<br />\r\nNo<br />\r\nYes<br />\r\n&nbsp;</div>', 1000, 128, 12, 0, '2012-04-05 16:23:16'),
(260, '银河英雄传说', 'galaxy', '<div><b>【问题描述】</b><br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;公元五八○一年，地球居民迁移至金牛座&alpha;第二行星，在那里发表银河联邦创立宣言，同年改元为宇宙历元年，并开始向银河系深处拓展。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;宇宙历七九九年，银河系的两大军事集团在巴米利恩星域爆发战争。泰山压顶集团派宇宙舰队司令莱因哈特率领十万余艘战舰出征，气吞山河集团点名将杨威利组织麾下三万艘战舰迎敌。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;杨威利擅长排兵布阵，巧妙运用各种战术屡次以少胜多，难免恣生骄气。在这次决战中，他将巴米利恩星域战场划分成30000列，每列依次编号为1, 2, &hellip;, 30000。之后，他把自己的战舰也依次编号为1, 2, &hellip;, 30000，让第i号战舰处于第i列(i = 1, 2, &hellip;, 30000)，形成&ldquo;一字长蛇阵&rdquo;，诱敌深入。这是初始阵形。当进犯之敌到达时，杨威利会多次发布合并指令，将大部分战舰集中在某几列上，实施密集攻击。合并指令为M i j，含义为让第i号战舰所在的整个战舰队列，作为一个整体(头在前尾在后)接至第j号战舰所在的战舰队列的尾部。显然战舰队列是由处于同一列的一个或多个战舰组成的。合并指令的执行结果会使队列增大。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;然而，老谋深算的莱因哈特早已在战略上取得了主动。在交战中，他可以通过庞大的情报网络随时监听杨威利的舰队调动指令。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;在杨威利发布指令调动舰队的同时，莱因哈特为了及时了解当前杨威利的战舰分布情况，也会发出一些询问指令：C i j。该指令意思是，询问电脑，杨威利的第i号战舰与第j号战舰当前是否在同一列中，如果在同一列中，那么它们之间布置有多少战舰。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;作为一个资深的高级程序设计员，你被要求编写程序分析杨威利的指令，以及回答莱因哈特的询问。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;最终的决战已经展开，银河的历史又翻过了一页&hellip;&hellip;</div>\r\n<div>【输入格式】</div>\r\n<div>输入文件galaxy.in的第一行有一个整数T（1&lt;=T&lt;=500,000），表示总共有T条指令。</div>\r\n<div>以下有T行，每行有一条指令。指令有两种格式：</div>\r\n<ol>\r\n    <li>M i j ：i和j是两个整数（1&lt;=i , j&lt;=30000），表示指令涉及的战舰编号。该指令是莱因哈特窃听到的杨威利发布的舰队调动指令，并且保证第i号战舰与第j号战舰不在同一列。</li>\r\n    <li>C i j ：i和j是两个整数（1&lt;=i , j&lt;=30000），表示指令涉及的战舰编号。该指令是莱因哈特发布的询问指令。</li>\r\n</ol>\r\n<div>【输出格式】</div>\r\n<div>输出文件为galaxy.out。你的程序应当依次对输入的每一条指令进行分析和处理：</div>\r\n<div>如果是杨威利发布的舰队调动指令，则表示舰队排列发生了变化，你的程序要注意到这一点，但是不要输出任何信息；</div>\r\n<div>如果是莱因哈特发布的询问指令，你的程序要输出一行，仅包含一个整数，表示在同一列上，第i号战舰与第j号战舰之间布置的战舰数目。如果第i号战舰与第j号战舰当前不在同一列上，则输出-1。</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名：galaxy<span>.in</span></div>\r\n<div>4<br />\r\nM 2 3<br />\r\nC 1 2<br />\r\nM 2 4<br />\r\nC 4 2</div>\r\n<div>输出文件名：<span>galaxy.out</span></div>\r\n<div>-1<br />\r\n1</div>\r\n<p>【样例说明】</p>\r\n<div>战舰位置图：表格中阿拉伯数字表示战舰编号</div>\r\n<table cellspacing="0" cellpadding="0" border="1" width="480">\r\n    <tbody>\r\n        <tr>\r\n            <th width="80">&nbsp;</th>\r\n            <th width="80">第一列</th>\r\n            <th width="80">第二列</th>\r\n            <th width="80">第三列</th>\r\n            <th width="80">第四列</th>\r\n        </tr>\r\n        <tr>\r\n            <td height="20" align="center">初始时</td>\r\n            <td align="center">1</td>\r\n            <td align="center">2</td>\r\n            <td align="center">3</td>\r\n            <td align="center">4</td>\r\n            <td align="center">&hellip;&hellip;</td>\r\n        </tr>\r\n        <tr>\r\n            <td height="20" align="center">M 2 3</td>\r\n            <td align="center">1</td>\r\n            <td align="center">3<br />\r\n            2</td>\r\n            <td align="center">4</td>\r\n            <td align="center">&hellip;&hellip;</td>\r\n        </tr>\r\n        <tr>\r\n            <td height="20" align="center">C 1 2</td>\r\n            <td align="center" colspan="5">1号战舰与2号战舰不在同一列，因此输出-1</td>\r\n        </tr>\r\n        <tr>\r\n            <td height="20" align="center">M 2 4</td>\r\n            <td align="center">1</td>\r\n            <td align="center">4<br />\r\n            3<br />\r\n            2</td>\r\n            <td align="center">&hellip;&hellip;</td>\r\n        </tr>\r\n        <tr>\r\n            <td height="20" align="center">C 4 2</td>\r\n            <td align="center" colspan="5">4号战舰与2号战舰之间仅布置了一艘战舰，编号为3，输出1</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:17'),
(261, '积木游戏', 'buildinggame', '<p>SERCOI 最近设计了一种积木游戏。每个游戏者有N块编号依次为1 ，2，&hellip;，N的长方体积木。对于每块积木,它的三条不同的边分别称为&rdquo;a边&rdquo;、&ldquo;b边&rdquo;和&rdquo;c边&rdquo;，如下图所示：</p>\r\n<p><span class="image"><img height="160" width="229" longdesc="http://www.ruvtex.cn/wiki/Image:Buildinggame.PNG" alt="Image:Buildinggame.PNG" src="http://www.ruvtex.cn/mw/images/b/b8/Buildinggame.PNG" /></span></p>\r\n<p>游戏规则如下：</p>\r\n<p>1.从N块积木中选出若干块，并将它们分成M（l&lt;=M&lt;=N） 堆，称为第1堆，第2 堆&hellip;，第M堆。每堆至少有1块积木，并且第K堆中任意一块积木的编号要大于第K+1堆中任意一块积木的编号(2&lt;=K&lt;=M)。</p>\r\n<p>2.对于每一堆积木,游戏者要将它们垂直摞成一根柱子,并要求满足下面两个条件：</p>\r\n<p>(1)除最顶上的一块积木外，任意一块积木的上表面同且仅同另一块积木的下表面接触，并且要求下面的积木的上表面能包含上面的积木的下表面，也就是说，要求下面的积木的上表面的两对边的长度分别大于等于上面的积木的两对边的长度。</p>\r\n<p>(2)对于任意两块上下表面相接触的积木，下面的积木的编号要小于上面的积木的编号。</p>\r\n<p>最后，根据每人所摞成的M根柱子的高度之和来决出胜负。</p>\r\n<p>请你编一程序，寻找一种摞积木的方案，使得你所摞成的M根柱子的高度之和最大。</p>\r\n<p>输入输出</p>\r\n<p>输入文件的第一行有两个正整数N和M（1&lt;=M&lt;=N&lt;=100），分别表示积木总数和要求 摞成的柱子数。这两个数之间用一个空格符隔开。接下来N行依次是编号从1到N的N个积木的尺寸，每行有三个1至1000之间的整数，分别表示该积木a 边,b边和c边的长度。同一行相邻两个数之间用一个空格符隔开。</p>\r\n<p>输出文件只有一行，为一个整数，表示M根柱子的高度之和。</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n4 2\r\n10 5 5\r\n8 7 7\r\n2 2 2\r\n6 6 6\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n24\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:17'),
(262, '竞赛排名', 'competitionsort', '<p>某市组织了一次中学生科技全能竞赛，每个选手要参加数学、物理、化学、天文、地理、生物、计算机和英语共八项竞赛,最后综合八项竞赛的成绩排出总名次。选手编号依次为：1,2...N（N为参赛总人数）。</p>\r\n<p>设<a class="image" title="Image:Competitionsort 1.gif" href="../../../../wiki/Image:Competitionsort_1.gif"><img border="0" alt="Image:Competitionsort 1.gif" width="19" longdesc="/wiki/Image:Competitionsort_1.gif" height="25" src="../../../../mw/images/8/82/Competitionsort_1.gif" /></a>分别表示编号为i的选手第j项竞赛的成绩<a class="image" title="Image:Competitionsort 2.gif" href="../../../../wiki/Image:Competitionsort_2.gif"><img border="0" alt="Image:Competitionsort 2.gif" width="137" longdesc="/wiki/Image:Competitionsort_2.gif" height="21" src="../../../../mw/images/f/fd/Competitionsort_2.gif" /></a>。其它指标如下：</p>\r\n<ul>\r\n    <li>第j项竞赛的平均分 <a class="image" title="Image:Competitionsort 3.gif" href="../../../../wiki/Image:Competitionsort_3.gif"><img border="0" alt="Image:Competitionsort 3.gif" width="177" longdesc="/wiki/Image:Competitionsort_3.gif" height="45" src="../../../../mw/images/d/df/Competitionsort_3.gif" /></a></li>\r\n    <li>选手i的总分 <a class="image" title="Image:Competitionsort 4.gif" href="../../../../wiki/Image:Competitionsort_4.gif"><img border="0" alt="Image:Competitionsort 4.gif" width="168" longdesc="/wiki/Image:Competitionsort_4.gif" height="47" src="../../../../mw/images/c/c2/Competitionsort_4.gif" /></a></li>\r\n    <li>选手i第j项竞赛的位置分 <a class="image" title="Image:Competitionsort 5.gif" href="../../../../wiki/Image:Competitionsort_5.gif"><img border="0" alt="Image:Competitionsort 5.gif" width="439" longdesc="/wiki/Image:Competitionsort_5.gif" height="117" src="../../../../mw/images/7/7c/Competitionsort_5.gif" /></a></li>\r\n    <li>选手i的总位置分 <a class="image" title="Image:Competitionsort 6.gif" href="../../../../wiki/Image:Competitionsort_6.gif"><img border="0" alt="Image:Competitionsort 6.gif" width="245" longdesc="/wiki/Image:Competitionsort_6.gif" height="45" src="../../../../mw/images/e/eb/Competitionsort_6.gif" /></a></li>\r\n</ul>\r\n<p>排名规则如下:</p>\r\n<ol>\r\n    <li>总位置分高的选手名次在前：</li>\r\n    <li>若两个或两个以上的选手总位置分相同，则总分高的选手名次在前：</li>\r\n    <li>若两个或两个以上的选手总位置分和总分均相同，则编号在前的选手名次在前。</li>\r\n</ol>\r\n<p>请你为竞赛组委会编一程序，计算本次全能竞赛的总排名情况。</p>\r\n<p>输入输出</p>\r\n<p>输入文件的第一行为参赛总人数N<a class="image" title="Image:Competitionsort 7.gif" href="../../../../wiki/Image:Competitionsort_7.gif"><img border="0" alt="Image:Competitionsort 7.gif" width="105" longdesc="/wiki/Image:Competitionsort_7.gif" height="21" src="../../../../mw/images/c/c2/Competitionsort_7.gif" /></a>，从第二行到第N行依次为编号为1到编号为N的选手的成绩，每行有8个0～100之间的整数，代表该选手的8项竞赛成绩<a class="image" title="Image:Competitionsort 8.gif" href="../../../../wiki/Image:Competitionsort_8.gif"><img border="0" alt="Image:Competitionsort 8.gif" width="81" longdesc="/wiki/Image:Competitionsort_8.gif" height="24" src="../../../../mw/images/0/00/Competitionsort_8.gif" /></a>。同一行相邻两个数之间用一个空格符隔开。</p>\r\n<p>输出文件有N行，从第1行到第N行依次为排名第1的选手的编号，排名第2的选手的编号，&hellip;，排名第N的选手的编号。</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n3\r\n72 82 73 68 95 86 82 90\r\n72 90 50 60 80 70 65 80\r\n72 82 73 68 95 86 82 90\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n1\r\n3\r\n2\r\n</pre>', 50, 4, 5, 0, '2012-04-05 16:23:17'),
(263, '图形', 'picture', '<p>&nbsp;一些矩形的海报、照片或其他同样形状的图片被张贴在墙上。它们的边都是垂直或水平的。每个矩形可以部分或全部覆盖其它矩形。所有矩形组成的集合的边界称为周界。</p>\r\n<p><strong>[ 任务描述 ] ： </strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;写一个程序计算周界。</p>\r\n<p>下图是一个有 7 个矩形的例子。</p>\r\n<p><strong><img height="219" width="284" alt="" src="http://192.168.1.252/os/zhuanti/xdtree/picture/211.jpg" /></strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Figure 1. 一个 7 个矩形的集合</p>\r\n<p>对应的周界为如图 2 所示所有线段的集合。</p>\r\n<p><img height="228" width="382" alt="" src="http://192.168.1.252/os/zhuanti/xdtree/picture/212.jpg" /></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Figure 2. 矩形集合的周界</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;所有的矩形的坐标都是整数。</p>\r\n<p><strong>[ 输入数据 ] ： </strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;文件 PICTURE.IN 的第一行张贴在墙壁上的矩形图片的数目。在随后的行中，每行有两个点的坐标，分别为某一个矩形的左下角和右上角的坐标。每一个坐标由 X 坐标与 Y 坐标组成。</p>\r\n<p>样例输入：</p>\r\n<p>7 <br />\r\n-15 0 5 10 <br />\r\n-5 8 20 25 <br />\r\n15 -4 24 14 <br />\r\n0 -6 16 4 <br />\r\n2 15 10 22 <br />\r\n30 10 36 20 <br />\r\n34 0 40 16</p>\r\n<p>对应着图 1 的例子。</p>\r\n<p><strong>[ 输出数据 ] ： </strong></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;文件 PICTURE.OUT 包含一行，为一个非负整数，表示输入数据中所有矩形集的周界。</p>\r\n<p>样例输出：</p>\r\n<p>228</p>\r\n<p><strong>[ 限制 ] ： </strong></p>\r\n<p>0 &lt;= 矩形数 &lt; 5000</p>\r\n<p>所有坐标在 [-10000,10000] 内，结果的值可能需要 32 位有带符号表示。</p>', 1000, 128, 5, 0, '2012-04-05 16:23:17'),
(264, '数列操作', 'shulie', '<p><b>【问题描述】</b></p>\r\n<p>&nbsp;假设有一列数 {A<sub>i</sub> }(1 &le; i &le; n) ，支持如下两种操作：</p>\r\n<p>(1)将 A<sub> k </sub>的值加 D 。（ k, D 是输入的数）</p>\r\n<p>(2) 输出 A<sub> s</sub> +A<sub> s+1</sub> +&hellip;+A<sub> t</sub> 。（ s, t 都是输入的数， S &le; T ）</p>\r\n<p>根据操作要求进行正确操作并输出结果。</p>\r\n<p>【输入格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;         输入文件第一行一个整数 <b>n(0&lt;=n&lt;=100000) </b>， 第二行为 n 个整数，表示 {A<sub> i</sub> } 的初始值。</p>\r\n<p align="left">第三行为一个整数 <b>m(0&lt;=m&lt;=150000) </b>，表示操作数 v 下接 m 行，每行描述一个操作，有如下两种情况：</p>\r\n<p align="left">ADD k d ( 表示将 A<sub> k </sub>加 d ， 1&lt;=k&lt;=n ， d 为整数 )</p>\r\n<p align="left">SUM s t （表示输出 A<sub> s</sub> +&hellip;+A<sub> t</sub> ）</p>\r\n<p>【输出格式】</p>\r\n<p>&nbsp;&nbsp;&nbsp; 对于每一个 SUM 提问，输出结果</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入:</p>\r\n<p>4<br />\r\n1 4 2 3 <br />\r\n3<br />\r\nSUM 1 3 <br />\r\nADD 2 50<br />\r\nSUM 2 3</p>\r\n<p>输出:</p>\r\n<p>7<br />\r\n56</p>', 1000, 16, 16, 0, '2012-04-05 16:23:17'),
(265, '线段覆盖', 'xdfg', '<p><b>【问题描述】</b></p>\r\n<p>有一根长度为 L 的白色条状物。有两种操作：</p>\r\n<ol>\r\n    <li>用一条长度为 T 的黑布盖住条状物的 [a, a+T] 这个区间 (0&lt;=a, T&lt;=L) 。</li>\r\n    <li>把某条黑布拿走。</li>\r\n</ol>\r\n<p>输入 L 和 n 次操作，要你输出每次操作之后：</p>\r\n<ol>\r\n    <li>条状物上有多少个黑区间。</li>\r\n    <li>条状物上黑区间的总长度。</li>\r\n</ol>\r\n<p>【输入格式】</p>\r\n<p>输入文件第一行两个整数<b>L(1&lt;=L&lt;=200000), n(1&lt;=n&lt;=200000)</b></p>\r\n<p>以下有n行,第2--n+1行每行有3个整数m,a,T，m表示操作类型,1表示放入黑布,2表示拿走黑布,a,T表示黑布在L上的起始位置与长度,拿走的黑布保证是原来已经存在的.</p>\r\n<p align="left">【输出格式】</p>\r\n<p>输出有n行,每行两个整数x,y,x表示L上的黑区间个数,y表示黑区间的总长度.</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入:</p>\r\n<p>20 4 <br />\r\n1 5 3 <br />\r\n1 7 2 <br />\r\n2 5 3 <br />\r\n1 16 3</p>\r\n<p>输出:</p>\r\n<p>1 3<br />\r\n1 4<br />\r\n1 2<br />\r\n2 5</p>', 2000, 20, 14, 0, '2012-04-05 16:23:17'),
(266, '最佳游览', 'perfecttour', '<p>有一座旅游城，它的街道成网格状．其中东西向的街道是&ldquo;风景线、两旁分布着许多景观：南北向的街道都是林荫道，两旁没有任何建筑物。由于游客众多，风最线被规定为单行道，游客在风景线上只能从西走到东，林荫道上则可以任意行走。</p>\r\n<p>一名游客将到这座旅游城旅游。他根据自己对景观的喜好给所有的风景线打了分，分值是从-100到+100的整数，分值越大表示我们的旅游者越喜欢这条风最线上的景致。显然这位游客不可能给这座旅游城的所有风景线都打负分。</p>\r\n<pre>\r\n-50	&ndash;47	&ndash;36	&ndash;30	&ndash;23\r\n17	&ndash;19	34	&ndash;13	&ndash;8\r\n-42	&ndash;3	43	34	-45\r\n</pre>\r\n<p>游客可以从旅游城的任一个十字路口开始游览，在任一个十字路口结束游览。我们的旅游者希望一路上游览的所有风最线的分值之和能够尽可能地大。请你写一个程序，帮助这位游客寻找一条最佳的游览路线。</p>\r\n<p>输入输出</p>\r\n<p>输入文件的第一行是两个整数M和N，之间用一个空格符隔开，M表示旅游城南北向林荫道的段数，N表示东西向风景 线的段数，1&lt;=M&lt;=100，1&lt;=N&lt;=20000。接下来的M行依次给出了由北向南各条风景线的分值信息。每行有N个整 数，依次表示了自西向东每段风景线的分值。同一行相邻两个数之间用一个空格隔开。</p>\r\n<p>输出文件只有一行，含一个整数，表示你的程序所找到的最佳游览路线的总分值。</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n3 6\r\n50 -47 -36 -30 -23\r\n17 -19 34 -13 -8\r\n-42 -3 43 34 -45\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n124\r\n</pre>', 1000, 128, 9, 0, '2012-04-05 16:23:17'),
(267, '最优乘车', 'bustravel', '<p>H城是一个旅游胜地，每年都有成千上万的人前来观光。为方便游客，巴士公司在各个旅游景点及宾馆，饭店等地都设置了巴士站并开通了一些单程巴上线路。每条单程巴士线路从某个巴士站出发，依次途经若干个巴士站，最终到达终点巴士站。</p>\r\n<p>一名旅客最近到H城旅游，他很想去S公园游玩，但如果从他所在的饭店没有一路巴士可以直接到达S公园，则他可能要先乘某一路巴士坐几站，再下来换乘同一站台的另一路巴士, 这样换乘几次后到达S公园。</p>\r\n<p>现在用整数1,2,&hellip;N 给H城的所有的巴士站编号，约定这名旅客所在饭店的巴士站编号为1,S公园巴士站的编号为N。</p>\r\n<p>写一个程序，帮助这名旅客寻找一个最优乘车方案,使他在从饭店乘车到S公园的过程 中换车的次数最少。</p>\r\n<p>输入输出</p>\r\n<p>输入文件的第一行有两个数字M和N(1&lt;=M&lt;=100 1&lt;N&lt;=500)，表示开通了M条单程巴士线路，总共有N个车站。从第二行到第M+1行依次给出了第1条到第M条巴士线路的信息。其中第 i+1行给出的是第i条巴士线路的信息，从左至右按运行顺序依次给出了该线路上的所有站号相邻两个站号之间用一个空格隔开。</p>\r\n<p>输出文件只有一行。如果无法乘巴士从饭店到达S公园，则输出&quot;N0&quot;，否则输出你的程序所找到的最少换车次数，换车次数为0表示不需换车即可到达</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n3 7\r\n6 7\r\n4 7 3 6\r\n2 1 3 5\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:17'),
(268, '文件匹配', 'wildcard', '<p>在计算机的日常操作中，经常需要对当前回录下的所有文件中的一部分文件进行操作。例如，将当前目录下的所有文本文件复制至另一个目录下：将当前目录下所有以a 打头的文件删除; 等等。</p>\r\n<p>很多操作系统都采用正则表达式来实现文件匹配功能。一种简单的正则表达式由英文字母（区分大小写）。数字及通配符&rdquo;*&rdquo;和&rdquo;?&rdquo;组成，&rdquo;?&rdquo;代表任意一个字符，&rdquo;*&rdquo;&rdquo;则可以代表零个或任意多个字符。</p>\r\n<p>例如：</p>\r\n<ul>\r\n    <li>a*b可以匹配acb(*代表c)\r\n    <ul>\r\n        <li>可以匹配aabb (*代表ab）</li>\r\n        <li>可以匹配asdsfdfdb (*代表sdsfdfd)</li>\r\n        <li>可以匹配ab (*不代表任何字符)</li>\r\n    </ul>\r\n    </li>\r\n    <li>a*b不可以匹配ac（缺少最右边的字母b)\r\n    <ul>\r\n        <li>不可以匹配bb（缺少最左边的字母a )</li>\r\n        <li>不可以匹配 abbc（最右边的字母不是b)</li>\r\n    </ul>\r\n    </li>\r\n    <li>a?b可以匹配acb（？代表c)\r\n    <ul>\r\n        <li>不可以匹配ab（缺少中间的一个字符）</li>\r\n        <li>不可以匹配accb（？只能代表一个字符）</li>\r\n    </ul>\r\n    </li>\r\n</ul>\r\n<p>现要对某目录下的部分文件进行操作。写一个程序,寻找一个正则表达式，使其能匹配的待操作文件最多，但不能匹配任何不进行操作的文件。注意你所找到的最优正则表达式的长度应当是最短的。如果有多个长度最短的最优正则表达式，则其中任意一个都是允许的。</p>\r\n<p>输入输出</p>\r\n<p>输入文件由N（1&lt;=N&lt;=250）行组成。每行给出了一个文件名（由英文字母和数字组成：英文字 符要区分大小写，文件名长度不超过8个字符），其后是一个空格符和一个字符（&ldquo;+&rdquo;或&quot;-&quot;）.&ldquo;+&rdquo;表示要对该行给出的文件进行操作，&quot;-&rdquo;表示不进行 操作。</p>\r\n<p>输出文件由两行组成。第一行是一个整数，给出了你的程序所找到的最优正则表达式所能匹配的文件数目．在第二行给出你的程序所找到的最优正则表达式。</p>\r\n<p>样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\nEXCHANGE +\r\nEXT +\r\nHARDWARE +\r\nMOUSE -\r\nNETWORK -\r\n</pre>\r\n<p>输出文件</p>\r\n<pre>\r\n2\r\nE*\r\n</pre>', 1000, 16, 20, 0, '2012-04-05 16:23:17'),
(269, '个人所得税', 'personaltax', '<p>某国个人所得税法规定，普通公民的主要应纳税收入项目及纳税金额如下：</p>\r\n<p>工资、薪金所得。按月计算征税，以每月收入额减除费用800元后的余额作为该月应纳税所得额，税率如下表所示：</p>\r\n<pre>\r\n级数	月应纳税所得额	税率（%）\r\n1	不超过500元的	5\r\n2	超过500元~2000元的部分	10\r\n3	超过2000元~5000元的部分	15\r\n4	超过5000元~20000元的部分	20\r\n5	超过20000元~40000元的部分	25\r\n6	超过40000元~60000元的部分	30\r\n7	超过60000元~80000元的部分	35\r\n8	超过80000元~100000元的部分	40\r\n9	超过100000元的部分	45\r\n</pre>\r\n<p>一次性劳动报酬所得。按次计算征税，每次不超过4000元的，减除费用800元；4000元以上的，减除20%的费用，余额为应纳税所得额。征税税率如下表所示：</p>\r\n<pre>\r\n级数	每次应纳税所得额	税率（%）\r\n1	不超过20000元的部分	20\r\n2	超过20000元~50000元的部分	30\r\n3	超过50000元的部分	40\r\n</pre>\r\n<p>由上面可以看出，个人工资、薪金及一次性劳动报酬所得都是按照超额累进税率来征税的。超额累进税率将应纳税所得额按数额大小分成若干等级，每一等级 规定一个税率，税率依次提高，但每一纳税人的的应纳税所得额依照所属等级同时适用几个税率分别计算，将计算结果相加后的总额作为应纳税款。</p>\r\n<p>例如，某人某月工资总额为3800元，减去800元后，应纳税所得额为3000元。其中1级500元，2级1500元，3级1000元， 税率分别为5%、10%、15%，应纳税总额为500*5%+1500*10%+1000*15%=325（元）。现在需要你编一程序，根据该国某公司的 所有职员一年内的各项收入信息（收入项目、收入时间、收入金额）计算该公司所有职员这一年应交纳的个人所得税总额。</p>\r\n<p>输入</p>\r\n<p>输入文件的第一行为一个正整数M（M&lt;= 50000），表示该公司的职员总数（职员编号依次为1,2,&hellip;,M）。接下来的各行每行表示一年内某一个职员的一项收入信息。具体格式如下： 工资、薪金收入信息：PAY 职员编号 收入时间 收入金额</p>\r\n<p>一次性劳务报酬收入信息：INCOME 职员编号 收入时间 收入金额</p>\r\n<p>其中，收入时间格式为：MM/DD，MM表示月份（1&lt;= MM&lt;=12），DD表示日期（1&lt;= DD&lt;=31）；收入金额是一个正整数（单位：元），并假设每人每项收入金额小于100万元。</p>\r\n<p>输入文件以字符&ldquo;#&rdquo;表示结束。输入文件中同一行相邻两项之间用一个或多个空格隔开。</p>\r\n<p>输出</p>\r\n<p>输出文件只有一个正数P(保留两位小数)，P表示该公司所有职员一年内应交纳的个人所得税总额（单位：元）。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n2\r\nPAY 1 2/23 3800 \r\nINCOME 2 4/8 4010\r\nINCOME 2 4/18 800\r\nPAY 1 8/14 6700\r\nPAY 1 8/10 1200\r\nPAY 2 12/10 20000\r\n#\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n5476.60\r\n</pre>', 100, 8, 5, 0, '2012-04-05 16:23:18'),
(270, '围巾裁剪', 'scarfcut', '<p>裁缝有一块非常珍贵的丝绸围巾。可惜的是，围巾的某些部分已经被蛀虫给咬坏了。裁缝当然不愿意就这么把围巾给丢了，于是，他想把围巾给裁成两块小围巾送给他的两个女儿。自然，两块小围巾的面积之和越大越好。</p>\r\n<p>这块围巾是一个正三角形，三条边被均匀地分成了N段，即这个正三角形被均匀地分成了N2个单元，每个单元是一个面积为1的正三角形。图一所 示为一个N=5的围巾，图中带阴影的单元表示被蛀虫咬坏的部分。从上往下看，围巾被分成了N行，第一行有1个单元，第二行有3个单元，其中有2个是形如D 的，有1个是形如&Ntilde; 的（这两种三角形我们认为是形状相同的）。第三行有5个，其中有3个是形如D 的，有2个是形如&Ntilde; 的&hellip;&hellip; 。用坐标（X,Y）给每个单元定位，第一行的单元的坐标为（1,1）；第二行从左到右的三个单元的坐标依次为（2,1）、（2,2）、（2,3）；&hellip;。</p>\r\n<p><a title="Image:Scarfcut.jpg" class="image" href="../../../../wiki/Image:Scarfcut.jpg"><img hspace="0" height="131" border="0" width="253" longdesc="http://www.ruvtex.cn/wiki/Image:Scarfcut.jpg" alt="Image:Scarfcut.jpg" src="../../../../mw/images/4/45/Scarfcut.jpg" /></a></p>\r\n<p>围巾的剪裁条件如下：</p>\r\n<ol>\r\n    <li>裁成的两块小围巾形状与原来的大围巾完全相同，都是正三角形。</li>\r\n    <li>每一块小围巾里都不存在被蛀虫咬坏的部分。</li>\r\n    <li>裁剪时必须沿着单元的边界裁剪。</li>\r\n    <li>要求两块小围巾的面积的总和最大。</li>\r\n</ol>\r\n<p>图中，最优的裁剪方法已经用粗线画了出来，面积和为4+9=13。</p>\r\n<p>现在需要你编一个程序来帮助裁缝解决这个问题。</p>\r\n<p>输入</p>\r\n<p>输入文件第一行为一个整数N（1&lt;=N&lt;=100），表示这块围巾总共被分成了N2个单元。第二行为一个整数M（0&lt;= M&lt;=N2-2），表示这块围巾共有M个单元被蛀虫咬坏了。接下的M行，每一行有两个正整数X和Y，为这M个被蛀虫咬坏的单元的坐标。</p>\r\n<p>输入文件中同一行相邻两项之间用一个或多个空格隔开。</p>\r\n<p>输出</p>\r\n<p>输出文件仅含一个整数，为你所找到的裁出两块小围巾面积总和的最大值。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n5\r\n5\r\n3 2\r\n4 1\r\n4 4\r\n5 4\r\n5 2\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n13\r\n</pre>', 1000, 128, 5, 0, '2012-04-05 16:23:18');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(271, '并行计算', 'parallel', '<p>运算器（ALU）是计算机中的重要部件，它的功能是进行数学运算。图一是运算器的工作简图，运算器的一次运算操作过程为：运算器在控制器的控制下， 从指定的存储器（MEMORY）存储单元中读出待运算的两个源操作数A和B，经过一定时间的计算后得到运算结果C，并将它写入指定的存储器存储单元中。</p>\r\n<p><a class="image" title="Image:Parallel1.jpg" href="../../../../wiki/Image:Parallel1.jpg"><img height="173" border="0" width="384" alt="Image:Parallel1.jpg" longdesc="http://www.ruvtex.cn/wiki/Image:Parallel1.jpg" src="../../../../mw/images/5/56/Parallel1.jpg" /></a> 图一</p>\r\n<p>运算器能完成的运算种类及所需时间如下表所示：</p>\r\n<table cellspacing="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>运算种类</td>\r\n            <td>运算操作</td>\r\n            <td>所需运算时间</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1</td>\r\n            <td>C=A+B</td>\r\n            <td>Tadd</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>C=A-B</td>\r\n            <td>Tsub</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>C=A*B</td>\r\n            <td>Tmul</td>\r\n        </tr>\r\n        <tr>\r\n            <td>4</td>\r\n            <td>C=A/B</td>\r\n            <td>Tdiv</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>在计算复杂的四则混合运算表达式时，运算器就变成了高速计算的&ldquo;瓶颈&rdquo;。为了得到更快的运算速度，计算机科学家们设计了一种有两个运算器的并行计算机，它的结构简图如图二所示。</p>\r\n<p><a class="image" title="Image:Parallel2.jpg" href="../../../../wiki/Image:Parallel2.jpg"><img height="240" border="0" width="443" alt="Image:Parallel2.jpg" longdesc="http://www.ruvtex.cn/wiki/Image:Parallel2.jpg" src="../../../../mw/images/a/a9/Parallel2.jpg" /></a> 图二</p>\r\n<p>由于两个运算器可以同时进行运算，因此大大提高了整机运算速度。该并行计算机有以下两种控制指令：</p>\r\n<p>运算指令</p>\r\n<ul>\r\n    <li>OP Time Alu_no Operate_no Address1 Address2 Address3</li>\r\n</ul>\r\n<p>其中OP为运算指令标识符，其后有六个参数：</p>\r\n<ul>\r\n    <li>Time表示执行该指令的开始时间</li>\r\n    <li>Alu_no表示承担该次运算操作的运算器编号（Alu_no&isin;{1，2}）</li>\r\n    <li>Operate_no表示该次运算的运算种类（Operate_no&isin;{1，2，3，4}）</li>\r\n    <li>Address1,Address2表示待运算的两个源操作数的存储单元地址</li>\r\n    <li>Address3表示该次运算结束后存放运算结果的存储单元地址</li>\r\n</ul>\r\n<p>结束指令</p>\r\n<ul>\r\n    <li>END Time Address</li>\r\n</ul>\r\n<p>其中 END为结束指令标识符，其后有两个参数：</p>\r\n<ul>\r\n    <li>Time表示整个控制程序的结束时间</li>\r\n    <li>Address表示存放最终计算结果的存储单元地址</li>\r\n</ul>\r\n<p>每个运算器同一时刻可以执行一条运算指令，结束指令表示控制程序结束。</p>\r\n<p>现在需要你编一个程序，对给定的待计算的表达式，自动生成一段控制程序，使图二所示的并行计算机能够正确计算该表达式的值，并使总运算时间尽量小。</p>\r\n<p>输入</p>\r\n<p>输入文件的第一行为四个不超过1000的正整数，依次为Tadd、Tsub、Tmul和Tdiv。 输入文件的第二行为待计算的四则混合运算表达式（长度不超过255个字符），表达式中的变量用大写英文字母表示，各变量的初始值依照变量的字母顺序依次存 放在地址为1,2,&hellip;的存储单元中。</p>\r\n<p>输入文件中同一行相邻两项之间用一个或多个空格隔开。</p>\r\n<p>输出</p>\r\n<p>输出文件为完成该表达式计算的最优控制指令段。指令根据其开始执行时间先后依次输出（对于开始执行时间相同的两条指令，输出先后次序不限），每条指令占一行。输出文件中同一行相邻两项之间用一个空格隔开。</p>\r\n<p>约定</p>\r\n<ul>\r\n    <li>控制程序初始执行时间从0时刻开始。</li>\r\n    <li>问题中所涉及的各种时间量的单位相同。</li>\r\n    <li>存储器的存储单元最多有1K个。</li>\r\n    <li>由于数据读写时间同运算时间相比较小，可忽略不计。</li>\r\n    <li>如果两个运算器同时对同一个存储单元进行操作，则运算器1先操作，运算器2后操作</li>\r\n</ul>\r\n<p>评分</p>\r\n<ul>\r\n    <li>程序的得分将取决于其所能找到的最优解与标准最优解相比较的优劣程度。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n2 2 4 12\r\nC+(A+B)*C-E/F+F\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\nOP 0 1 1 1 2 6\r\nOP 0 2 4 4 5 8\r\nOP 2 1 1 3 5 7\r\nOP 4 1 3 6 3 10\r\nOP 8 1 1 10 7 11\r\nOP 12 1 2 11 8 12\r\nEND 14 12\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:18'),
(272, '免费馅饼', 'freepizza', '<p>SERKOI最新推出了一种叫做&ldquo;免费馅饼&rdquo;的游戏:游戏在一个舞台上进行。舞台的宽度为W格，天幕的高度为H格，游戏者占一格。开始时游戏者站在舞台的正中央，手里拿着一个托盘。下图为天幕的高度为4格时某一个时刻游戏者接馅饼的情景。</p>\r\n<p><a title="Image:Freepizza.gif" class="image" href="../../../../wiki/Image:Freepizza.gif"><img height="215" border="0" width="384" longdesc="http://www.ruvtex.cn/wiki/Image:Freepizza.gif" alt="Image:Freepizza.gif" src="../../../../mw/images/4/47/Freepizza.gif" /></a></p>\r\n<p>游戏开始后，从舞台天幕顶端的格子中不断出现馅饼并垂直下落。游戏者左右移动去接馅饼。游戏者每秒可以向左或向右移动一格或两格，也可以站在原地不动。</p>\r\n<p>馅饼有很多种，游戏者事先根据自己的口味，对各种馅饼依次打了分。同时，在8-308电脑的遥控下，各种馅饼下落的速度也是不一样的，下落速度以格/秒为单位。</p>\r\n<p>当馅饼在某一秒末<b>恰好</b>到达游戏者所在的格子中，游戏者就收集到了这块馅饼。</p>\r\n<p>写一个程序，帮助我们的游戏者收集馅饼，使得所收集馅饼的分数之和最大。</p>\r\n<p>输入</p>\r\n<p>输入文件的第一行是用空格隔开的两个正整数，分别给出了舞台的宽度W（1到99之间的奇数）和高度H（1到100之间的整数）。</p>\r\n<p>接下来依馅饼的初始下落时间顺序给出了所有馅饼的信息。每一行给出了一块馅饼的信息。由四个正整数组成，分别表示了馅饼的初始下落时刻（0到1000秒），水平位置、下落速度（1到100）以及分值。游戏开始时刻为0。从1开始自左向右依次对水平方向的每格编号。</p>\r\n<p>输入文件中同一行相邻两项之间用一个或多个空格隔开。</p>\r\n<p>输出</p>\r\n<p>输出文件的第一行给出了一个正整数，表示你的程序所收集的最大分数之和。</p>\r\n<p>其后的每一行依时间顺序给出了游戏者每秒的决策。输出0表示原地不动、1或2表示向右移动一步或两步、-1 或-2表示向左移动一步或两步。输出应持续到游戏者收集完他要收集的最后一块馅饼为止。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n3 3\r\n0 1 2 5 \r\n0 2 1 3\r\n1 2 1 3\r\n1 3 1 4\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n12\r\n-1\r\n1\r\n1\r\n</pre>', 1000, 128, 7, 0, '2012-04-05 16:23:18'),
(273, '软件安装盘', 'software', '<p>软件安装通常是一件令人头疼的事。软件一般都包括若干个相对独立的部分（称为&ldquo;组件&rdquo;），在安装的时候由用户决定安装哪些部分。并且，这些相对独立的组件之间在安装时有一定的先后顺序要求。</p>\r\n<p>由于当代的个人计算机普遍安装了软盘驱动器，所以软件的最流行的载体形式是软盘。然而，由于软盘的容量有限，稍大一些的软件就无法用一张软盘装下。这时，这些软件往往要用很多张软盘来存储。每张磁盘上存储了软件的一个或多个组件。这些软盘称为软件的安装盘。</p>\r\n<p>由于软件的各个组件分散在不同的软盘上，而在安装时又有一定的先后顺序要求，所以很容易发生要求用户反复换盘的情况。而计算机用户在安装软 件的时候，最反感的就是反复在软盘之间切换：找盘、插盘、取盘、找盘、插盘、取盘、&hellip;，一切都显得那么琐碎和无序。因此，有必要对软件安装盘的制作提出下 述要求：</p>\r\n<p>永远不要让用户将一张磁盘插入两次。更精确地，要求对安装盘从1开始顺序编号，使得安装的时候，用户只要按顺序插入磁盘即可。</p>\r\n<p>出于经济的考虑，通常要求安装盘的总数最少。写一个程序，对于给定的软件，制定最优的安装盘方案。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>输入文件的第一行是一个正整数M（1&lt;= M&lt;= 109），给出了每张磁盘的最大容量（字节数）。</li>\r\n    <li>输入文件的第二行是一个正整数N（1&lt;= N&lt;= 100），给出了软件的组件数。接下来的N行每行给出一个组件的详细信息。包括：</li>\r\n</ul>\r\n<ol>\r\n    <li>组件所占的字节数；</li>\r\n    <li>在安装该组件之前应先安装的组件序号（如有多个组件须先安装，则每个都应列出其序号，若无须先安装其它组件，则该行只含组件所占字节数）。</li>\r\n</ol>\r\n<ul>\r\n    <li>输入文件中同一行相邻两项之间用一个或多个空格隔开。</li>\r\n</ul>\r\n<p>输出</p>\r\n<p>输出文件的第一行给出了最优安装盘方案的软盘数。如果不存在最优安装盘方案，则输出0。接下来的每一行顺序给出了每张盘上存储的组件的序号。如果一张盘上存储了多个组件，则输出所有这些组件的序号，中间用一个空格隔开。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n1457664\r\n3\r\n512665\r\n912345 1\r\n832542 1\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n2\r\n1 2\r\n3\r\n</pre>', 1000, 128, 5, 0, '2012-04-05 16:23:18'),
(274, '公牛和母牛', 'bullcow', '<pre>\r\n\r\nBulls and Cows [Neal Wu, 2008]\r\n\r\nFarmer John wants to position N (1 &lt;= N &lt;= 100,000) cows and bulls\r\nin a single row to present at the annual fair.\r\n\r\nFJ has observed that the bulls have been quite pugnacious lately;\r\nif two bulls too close together in the line, they will argue and\r\nbegin to fight, ruining the presentation. Ever resourceful, FJ\r\ncalculated that any two bulls must have at least K (0 &lt;= K &lt; N)\r\ncows between them in order to avoid a fight.\r\n\r\nFJ would like you to help him by counting the number of possible\r\nsequences of N bulls and cows that avoid any fighting. FJ considers\r\nall bulls the to be the same and all cows to be the same; thus, two\r\nsequences are only different if they have different kinds of cattle\r\nin some position.\r\n\r\nPROBLEM NAME: bullcow\r\n\r\nINPUT FORMAT:\r\n\r\n* Line 1: Two space-separated integers: N and K\r\n\r\nSAMPLE INPUT (file bullcow.in):\r\n\r\n4 2\r\n\r\nINPUT DETAILS:\r\n\r\nFJ wants a row of 4 cattle, but any two bulls must have at least\r\ntwo cows in between them.\r\n\r\nOUTPUT FORMAT:\r\n\r\n* Line 1: A single integer representing the number of ways FJ could\r\n        create such a sequence of cattle. Since this number can be\r\n        quite large, output the result modulo 5,000,011.\r\n\r\nSAMPLE OUTPUT (file bullcow.out):\r\n\r\n6\r\n\r\nOUTPUT DETAILS:\r\n\r\nThe following are the six possible sequences FJ could create (note that ''C''\r\nstands for cow and ''B'' stands for bull):\r\nCCCC\r\nBCCC\r\nCBCC\r\nCCBC\r\nCCCB\r\nBCCB\r\n\r\n</pre>', 1000, 128, 12, 0, '2012-04-05 16:23:18'),
(275, '环绕大陆', 'surround', '<pre><pre>\r\nSurround the Islands [Fatih Gelgi, 2008]\r\n\r\nFarmer John has bought property in the Caribbean and is going to\r\ntry to raise dairy cows on a big farm composed of islands. Set in\r\nhis ways, he wants to surround all the islands with fence.\r\n\r\nEach island in the farm has the shape of a polygon. He fences the\r\nislands one side at a time (between a consecutive pair of vertices)\r\nand proceeds clockwise around a given island with his fencing\r\noperations. Since he wants to fence all the islands, he must at\r\nsome point travel to any other islands using a boat.\r\n\r\nHe can start fencing at any vertex and, at any vertex he encounters,\r\ntravel to some vertex on another island, fence all the way around it, and\r\nthen IMMEDIATELY return back to the same vertex on the original island\r\nusing the same path he traveled before. Each boat trip has a cost defined\r\nby a supplied matrix.\r\n\r\nThe islands are described by a set of N (3 &lt;= N &lt;= 500) pairs of\r\nvertices V1,V2 (1 &lt;= V1 &lt;= N; 1 &lt;= V2 &lt;= N) although you must figure\r\nout how to assemble them into islands. The vertices are conveniently\r\nnumbered 1..N.\r\n\r\nThe cost of traveling by boat between each pair of vertices is given\r\nby a symmetric cost matrix whose elements fall in the range 0..1000.\r\n\r\nWhat is the minimum cost of surrounding the islands with the fence?\r\n\r\nPROBLEM NAME: surround\r\n\r\nINPUT FORMAT:\r\n\r\n* Line 1: A single integer: N\r\n\r\n* Lines 2..N+1: Each line describes an island''s border with two\r\n        space-separated integers: V1 and V2\r\n\r\n* Lines N+2..2*N+1: Line i-N-1 contains N integers that describe row i\r\n        of the cost matrix: Row_i\r\n\r\nSAMPLE INPUT (file surround.in):\r\n\r\n12\r\n1 7\r\n7 3\r\n3 6\r\n6 10\r\n10 1\r\n2 12\r\n2 9\r\n8 9\r\n8 12\r\n11 5\r\n5 4\r\n11 4\r\n0 15 9 20 25 8 10 13 17 8 8 7\r\n15 0 12 12 10 10 8 15 15 8 8 9\r\n9 12 0 25 20 18 16 14 13 7 12 12\r\n20 12 25 0 8 13 14 15 15 10 10 10\r\n25 10 20 8 0 16 20 18 17 18 9 11\r\n8 10 18 13 16 0 10 9 11 10 8 12\r\n10 8 16 14 20 10 0 18 20 6 16 15\r\n13 15 14 15 18 9 18 0 5 12 12 13\r\n17 15 13 15 17 11 20 5 0 22 8 10\r\n8 8 7 10 18 10 6 12 22 0 11 12\r\n8 8 12 10 9 8 16 12 8 11 0 9\r\n7 9 12 10 11 12 15 13 10 12 9 0\r\n\r\nINPUT DETAILS:\r\n\r\n  1        10            4\r\n    xxxxxxx              x\r\n   xxxxxxxxx            xxxx\r\n7 xxxxxxxxxxx 6        xxxxxxx\r\n xxxxxxxxxxx       11 xxxxxxxxxx 5\r\n  xxxxxxx\r\n   xxx\r\n  3         12 xxxxxxx 2\r\n              xxxxxxxx\r\n              xxxxxxxx\r\n             xxxxxxxxx\r\n             xxxxxxxxx\r\n            xxxxxxxxxx\r\n            xxxxxxxxxx\r\n          8 xxxxxxxxxx 9\r\n\r\nThe example describes three islands: {1,7,3,6,10}, {4,5,11} and\r\n{2,9,8,12}. The travel costs are provided as a matrix. For example,\r\nthe travel cost from vertex 1 to 2 is 15.\r\n\r\nOUTPUT FORMAT:\r\n\r\n* Line 1: A single integer that specifies the minimum cost of building\r\n        the fence\r\n\r\nSAMPLE OUTPUT (file surround.out):\r\n\r\n30\r\n\r\nOUTPUT DETAILS:\r\n\r\nThere is more than one solution. One is: FJ starts from vertex 3\r\nthen 7 and stops at 1, travels to 11 followed by 4,5,11. He then\r\nreturns back to 1, and travels to 12 followed by 2,9,8,12. Finally,\r\nhe returns back to 1 and continues with 10,6,3,7. The costs are 8\r\n* 2 = 16 for traveling from 1 to 11 and returning back, and 7 * 2\r\n= 14 for traveling from 1 to 12 and back -- a total cost of 30.\r\n</pre>\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:18'),
(276, '神灯', 'lepr', '<pre>\r\nThe Leprechaun [Adopted from BOI''98, 2008]\r\n\r\nImagine Bessie''s surprise as she spied a leprechaun prancing through\r\nthe north pasture. Being no one''s fool, she charged at the leprechaun\r\nat captured him with her prehensile hooves.\r\n\r\n&quot;One wish, bovine one. That''s all I have for cows,&quot; he said.\r\n\r\n&quot;Riches,&quot; Bessie said dreamily. &quot;The opportunity for riches.&quot;\r\n\r\nLeprechauns never grant precisely the easiest form of their captor''s\r\nwishes. As the smoke cleared from the location of a loud explosion,\r\na shimmering donut spun slowly over the verdant green fields.\r\n\r\n&quot;I have made you a torus,&quot; the leprechaun cooed. &quot;And on that torus\r\nis an N x N matrix (1 &lt;= N &lt;= 200) of integers in the range\r\n-1,000,000..1,000,000 that will determine the magnitude of your\r\nriches. You must find the sequence of contiguous integers all in\r\none row, one column, or on one diagonal that yields the largest sum\r\nfrom among all the possible sequences on the torus.&quot;\r\n\r\nBessie pondered for a moment and realized that the torus was a\r\ndevice for &quot;wrapping&quot; the columns, rows, and diagonals of a matrix\r\nso that one could choose contiguous elements that &quot;wrapped around&quot;\r\nthe side or top edge.\r\n\r\nBessie will share the matrix with you.  Determine the value of the\r\nlargest possible sum (which requires choosing at least one matrix\r\nelement).\r\n\r\nBy way of example, consider the 4 x 4 matrix on the left below that\r\nhas all the elements from one exemplary &quot;wrapped&quot; diagonal marked:\r\n\r\n           8  6  6* 1           8  6* 6  1\r\n          -3  4  0  5*         -3  4  0  5\r\n           4* 2  1  9           4  2  1  9*\r\n           1 -9* 9 -2           1 -9  9*-2\r\n\r\nThe marked diagonal of the right-hand matrix includes two nines\r\n(the highest available number) and a six for a total of 24. This\r\nis the best possible sum for this matrix and includes only three\r\nof the four possible elements on its diagonal.\r\n\r\nPROBLEM NAME: lepr\r\n\r\nINPUT FORMAT:\r\n\r\n* Line 1: A single integer: N\r\n\r\n* Lines 2..N+1: Line i+1 contains N space-separated integers that\r\n        compose row i of the matrix\r\n\r\nSAMPLE INPUT (file lepr.in):\r\n\r\n4\r\n8 6 6 1\r\n-3 4 0 5\r\n4 2 1 9\r\n1 -9 9 -2\r\n\r\nOUTPUT FORMAT:\r\n\r\n* Line 1: A single integer that is the largest possible sum computable\r\n        using the rules above\r\n\r\nSAMPLE OUTPUT (file lepr.out):\r\n\r\n24\r\n</pre>', 1000, 128, 8, 0, '2012-04-05 16:23:19'),
(277, '地震损坏', 'damage', '<pre>\r\n地震损坏[Hal Burch, 2004]\r\n\r\n农夫John的农场遭受了一场地震.有一些牛棚遭到了损坏,但幸运地,所有牛棚间的路经都还能使用.\r\n\r\nFJ的农场有P(1 &lt;= P &lt;= 30,000)个牛棚,编号1..P. C(1 &lt;= C &lt;= 100,000)条双向路经联\r\n接这些牛棚,编号为1..C. 路经i连接牛棚a_i和b_i (1 &lt;= a_i&lt;= P;1 &lt;= b_i &lt;= P).路经\r\n可能连接a_i到它自己,两个牛棚之间可能有多条路经.农庄在编号为1的牛棚.\r\n\r\nN (1 &lt;= N &lt;= P)头在不同牛棚的牛通过手机短信report_j(2 &lt;= report_j &lt;= P)告诉FJ它\r\n们的牛棚(report_j)没有损坏,但是它们无法通过没有路经和损坏的牛棚回到到农场.\r\n\r\n当FJ接到所有短信之后,找出最小的不可能回到农庄的牛棚数目.这个数目包括损坏的牛棚.\r\n\r\n注意:前50次提交将提供在一些测试数据上的运行结果.\r\n\r\nPROBLEM NAME: damage\r\n\r\n输入格式:\r\n\r\n* 第1行: 三个空格分开的数: P, C, 和 N\r\n\r\n* 第2..C+1行: 每行两个空格分开的数: a_i 和 b_i\r\n\r\n* 第C+2..C+N+1行: 每行一个数: report_j\r\n\r\n样例输入 (damage.in):\r\n\r\n4 3 1\r\n1 2\r\n2 3\r\n3 4\r\n3\r\n\r\n输出格式:\r\n\r\n* 第1行: 一个数,最少不能回到农庄的牛的数目(包括损坏的牛棚).\r\n\r\n样例输出 (damage.out):\r\n\r\n3\r\n\r\n输出解释:\r\n\r\n牛棚2遭到损坏,导致牛棚2, 3, 4里面的牛无法回到农庄.\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:19'),
(278, '气象牛', 'baric', '<pre>\r\n气象牛 [Jeffrey Wang, 2007]\r\n\r\n\r\n为了研究农场的气候,Betsy帮助农夫John做了N(1 &lt;= N &lt;= 100)次气压测量并按顺序记录\r\n了结果M_1...M_N(1 &lt;= M_i &lt;= 1,000,000).\r\nBetsy想找出一部分测量结果来总结整天的气压分布. 她想用K(1 &lt;= K &lt;= N)个数s_j\r\n(1 &lt;= s_1 &lt; s_2 &lt; ... &lt; s_K &lt;= N)来概括所有测量结果. 她想限制如下的误差:\r\n\r\n对于任何测量结果子集,每一个非此子集中的结果都会产生误差.总误差是所有测量结果的误差之\r\n和.更明确第说, 对于每一个和所有s_j都不同的i:\r\n\r\n* 如果 i 小于 s_1, 误差是:\r\n             2 * | M_i - M_(s_1) | \r\n\r\n* 如果i在s_j和s_(j+1)之间,误差是:\r\n            | 2 * M_i - Sum(s_j, s_(j+1)) |  \r\n  注:Sum(x, y) = M_x + M_y; (M_x 和 M_y 之和)\r\n\r\n* 如果i大于s_K,误差为:\r\n             2 * | M_i - M_(s_K) |\r\n\r\nBesty给了最大允许的误差E (1 &lt;= E &lt;= 1,000,000),找出最小的一部分结果史得误\r\n差最多为E.\r\n\r\nPROBLEM NAME: baric\r\n\r\n输入格式:\r\n\r\n* 第一行: 两个空格分离的数: N 和 E\r\n\r\n* 第2..N+1行: 第i+1行包含一次测量记录:M_i\r\n\r\n样例输入(baric.in):\r\n\r\n4 20\r\n10\r\n3\r\n20\r\n40\r\n\r\n输入解释:\r\n\r\nBessie做了4次记录,分别为10,3,20,和40.最大允许误差是20.\r\n\r\n输出格式:\r\n\r\n* 第一行: 两个空格分开的数: 最少能达到误差小于等于E的测量数目和使用那个测量\r\n数目能达到的最小误差.\r\n\r\n样例输出 (baric.out):\r\n\r\n2 17\r\n\r\n输出解释:\r\n\r\n选择第二和第四次测量结果能达到最小误差17. 第一次结果的误差是2*|10-3| = 14;\r\n第三次结果的误差是|2*20 - (3+40)|=3.\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:19'),
(279, '安全路径', 'travel', '<pre>\r\n安全路经 [龙凡, 2008]\r\n\r\nGremlins最近在农场上泛滥,它们经常会阻止牛们从农庄(牛棚_1)走到别的牛棚(牛_i的目的\r\n地是牛棚_i).每一个gremlin只认识牛_i并且知道牛_i一般走到牛棚_i的最短路经.所以它\r\n们在牛_i到牛棚_i之前的最后一条牛路上等牛_i. 当然,牛不愿意遇到Gremlins,所以准备找\r\n一条稍微不同的路经从牛棚_1走到牛棚_i.所以,请你为每一头牛_i找出避免gremlin_i的最\r\n短路经的长度.\r\n\r\n和以往一样, 农场上的M (2 &lt;= M &lt;= 200,000)条双向牛路编号为1..M并且能让所有牛到\r\n达它们的目的地, N(3 &lt;= N &lt;= 100,000)个编号为1..N的牛棚.牛路i连接牛棚a_i\r\n(1 &lt;= a_i &lt;= N)和b_i (1 &lt;= b_i &lt;= N)并且需要时间t_i (1 &lt;=t_i &lt;= 1,000)通过.\r\n没有两条牛路连接同样的牛棚,所有牛路满足a_i!=b_i.在所有数据中,牛_i使用的牛棚_1到牛\r\n棚_i的最短路经是唯一的.\r\n\r\n以下是一个牛棚,牛路和时间的例子:\r\n\r\n      1--[2]--2-------+\r\n      |       |       |\r\n     [2]     [1]     [3]\r\n      |       |       |\r\n      +-------3--[4]--4\r\n\r\n   行程         最佳路经      最佳时间     最后牛路\r\np_1 到 p_2       1-&gt;2          2         1-&gt;2\r\np_1 到 p_3       1-&gt;3          2         1-&gt;3\r\np_1 到 p_4      1-&gt;2-&gt;4        5         2-&gt;4\r\n\r\n当gremlins进入农场后:\r\n\r\n   行程         最佳路经      最佳时间      避免\r\np_1 到 p_2     1-&gt;3-&gt;2         3         1-&gt;2\r\np_1 到 p_3     1-&gt;2-&gt;3         3         1-&gt;3\r\np_1 到 p_4     1-&gt;3-&gt;4         6         2-&gt;4\r\n\r\n20%的数据满足N&lt;=200.\r\n\r\n50%的数据满足N&lt;=3000.\r\n\r\n时间限制: 3秒\r\n\r\n内存限制: 64 MB\r\n\r\nPROBLEM NAME: travel\r\n\r\n输入格式:\r\n\r\n* 第一行: 两个空格分开的数, N和M\r\n\r\n* 第2..M+1行: 三个空格分开的数a_i, b_i,和t_i\r\n\r\n样例输入 (travel.in):\r\n\r\n4 5\r\n1 2 2\r\n1 3 2\r\n3 4 4\r\n3 2 1\r\n2 4 3\r\n\r\n输入解释:\r\n\r\n跟题中例子相同\r\n\r\n输出格式:\r\n\r\n* 第1..N-1行: 第i行包含一个数:从牛棚_1到牛棚_i+1并且避免从牛棚1到牛棚i+1最\r\n短路经上最后一条牛路的最少的时间.如果这样的路经不存在,输出-1.\r\n\r\n样例输出 (travel.out):\r\n\r\n3\r\n3\r\n6\r\n\r\n输出解释:\r\n\r\n跟题中例子相同\r\n</pre>', 3000, 64, 10, 0, '2012-04-05 16:23:19'),
(280, '奶牛的糖果', 'treat', '<pre>\r\nTrick or Treat on the Farm [Jacob Steinhardt, 2008]\r\n\r\nEvery year in Wisconsin the cows celebrate the USA autumn holiday\r\nof Halloween by dressing up in costumes and collecting candy that\r\nFarmer John leaves in the N (1 &lt;= N &lt;= 100,000) stalls conveniently\r\nnumbered 1..N.\r\n\r\nBecause the barn is not so large, FJ makes sure the cows extend\r\ntheir fun by specifying a traversal route the cows must follow.  To\r\nimplement this scheme for traveling back and forth through the barn,\r\nFJ has posted a &quot;next stall number&quot; next_i (1 &lt;= next_i &lt;= N) on\r\nstall i that tells the cows which stall to visit next; the cows\r\nthus might travel the length of the barn many times in order to\r\ncollect their candy.\r\n\r\nFJ mandates that cow i should start collecting candy at stall i.\r\nA cow stops her candy collection if she arrives back at any stall\r\nshe has already visited.\r\n\r\nCalculate the number of unique stalls each cow visits before being\r\nforced to stop her candy collection.\r\n\r\nPOINTS: 100\r\n\r\nPROBLEM NAME: treat\r\n\r\nINPUT FORMAT:\r\n\r\n* Line 1: A single integer: N\r\n\r\n* Lines 2..N+1: Line i+1 contains a single integer: next_i\r\n\r\nSAMPLE INPUT (file treat.in):\r\n\r\n4\r\n1\r\n3\r\n2\r\n3\r\n\r\nINPUT DETAILS:\r\n\r\nFour stalls.\r\n* Stall 1 directs the cow back to stall 1.\r\n* Stall 2 directs the cow to stall 3\r\n* Stall 3 directs the cow to stall 2\r\n* Stall 4 directs the cow to stall 3\r\n\r\nOUTPUT FORMAT:\r\n\r\n* Lines 1..N: Line i contains a single integer that is the total\r\n        number of unique stalls visited by cow i before she returns to\r\n        a stall  she has previously visited.\r\n\r\nSAMPLE OUTPUT (file treat.out):\r\n\r\n1\r\n2\r\n2\r\n3\r\n\r\nOUTPUT DETAILS:\r\n\r\nCow 1:  Start at 1, next is 1.  Total stalls visited: 1.\r\nCow 2:  Start at 2, next is 3, next is 2.  Total stalls visited: 2.\r\nCow 3:  Start at 3, next is 2, next is 3.  Total stalls visited: 2.\r\nCow 4:  Start at 4, next is 3, next is 2, next is 3. Total stalls visited: 3.\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:19'),
(281, '密信', 'sec', '<pre>\r\nSecret Message [David Benjamin and Jacob Steinhardt, 2008]\r\n\r\nBessie is leading the cows in an attempt to escape! To do this, the\r\ncows are sending secret binary messages to each other.\r\n\r\nEver the clever counterspy, Farmer John has intercepted the first\r\nb_i (1 &lt;= b_i &lt;= 10,000) bits of each of M (1 &lt;= M &lt;= 50,000) of\r\nthese secret binary messages.\r\n\r\nHe has compiled a list of N (1 &lt;= N &lt;= 50,000) partial codewords\r\nthat he thinks the cows are using. Sadly, he only knows the first\r\nc_j (1 &lt;= c_j &lt;= 10,000) bits of codeword j.\r\n\r\nFor each codeword j, he wants to know how many of the intercepted\r\nmessages match that codeword (i.e., for codeword j, how many times\r\ndoes a message and the codeword have the same initial bits).  Your\r\njob is to compute this number.\r\n\r\nThe total number of bits in the input (i.e., the sum of the b_i and\r\nthe c_j) will not exceed 500,000.\r\n\r\nMemory Limit: 32MB\r\n\r\nPOINTS: 270\r\n\r\nPROBLEM NAME: sec\r\n\r\nINPUT FORMAT:\r\n\r\n* Line 1: Two integers: M and N\r\n\r\n* Lines 2..M+1: Line i+1 describes intercepted code i with an integer\r\n        b_i followed by b_i space-separated 0''s and 1''s\r\n\r\n* Lines M+2..M+N+1: Line M+j+1 describes codeword j with an integer\r\n        c_j followed by c_j space-separated 0''s and 1''s\r\n\r\nSAMPLE INPUT (file sec.in):\r\n\r\n4 5\r\n3 0 1 0\r\n1 1\r\n3 1 0 0\r\n3 1 1 0\r\n1 0\r\n1 1\r\n2 0 1\r\n5 0 1 0 0 1\r\n2 1 1\r\n\r\nINPUT DETAILS:\r\n\r\nFour messages; five codewords.\r\nThe intercepted messages start with 010, 1, 100, and 110.\r\nThe possible codewords start with 0, 1, 01, 01001, and 11.\r\n\r\nOUTPUT FORMAT:\r\n\r\n* Lines 1..N: Line j: The number of messages that the jth codeword\r\n        could match.\r\n\r\nSAMPLE OUTPUT (file sec.out):\r\n\r\n1\r\n3\r\n1\r\n1\r\n2\r\n\r\nOUTPUT DETAILS:\r\n\r\n0 matches only 010: 1 match\r\n1 matches 1, 100, and 110: 3 matches\r\n01 matches only 010: 1 match\r\n01001 matches 010: 1 match\r\n11 matches 1 and 110: 2 matches\r\n\r\n</pre>', 1000, 128, 13, 0, '2012-04-05 16:23:19'),
(282, 'SERNET模拟', 'sernet', '<p>计算机网络是现代科技发展的热点，传输性能是计算机网络的主要性能指标。SERKOI网络开发小组设计了一种称为SERNET的网络，并希望开发一个模拟软件来模拟该网络的数据传输情况，进而计算出网络的传输性能。</p>\r\n<p>SERNET网络由服务器及连接它们的网络传输线路组成，服务器用服务器地址予以标识，网络传输线路为双向传输线路。网络传输过程中将各种 待传输数据分割为若干个大小相同的数据包，以数据包为单位进行传输。数据包在传输线路上传输时需要一定的传输时间，不同的传输线路的传输时间不同。服务器 处理数据的时间较之于传输时间很小，可忽略不计。每一个数据包中除了包括具体的数据信息外，还含有如下标识信息：</p>\r\n<ul>\r\n    <li>数据包编号</li>\r\n    <li>数据包源服务器地址</li>\r\n    <li>数据包目的服务器地址</li>\r\n</ul>\r\n<p>网络传输的功能就是将一个个数据包从源服务器传输到目的服务器。对于每一个数据包，具体的网络传输方案为：</p>\r\n<p>源服务器将待发送的数据包一律复制若干份并向与之相连的所有服务器发送该数据包。服务器接收到一个数据包后，如果该数据包符合下面任何一个条件：</p>\r\n<ul>\r\n    <li>数据包的源服务器地址与本服务器地址相同</li>\r\n    <li>数据包的目的服务器地址与本服务器地址相同</li>\r\n    <li>本服务器已转发过与该数据包编号相同的数据包</li>\r\n</ul>\r\n<p>则接收该数据包；否则，服务器将其复制若干份并向与它相连的所有服务器转发该数据包。这里，两台服务器&ldquo;相连&rdquo;的含义指它们之间有网络传输线路直接相连。</p>\r\n<p>现在需要你编一个程序来模拟SERNET网络中的数据包传输情况。</p>\r\n<p>输入</p>\r\n<p>输入文件的第一行为一个正整数N（N&lt;100），表示SERNET中服务器的数目。第二行有N个互不相等的不超过100的正整数，表 示每个服务器的地址。 第三行有一个正整数M，表示SERNET中传输线路的数目。接下来的M行每行用三个正整数表示一条传输线路连接的两台服务器的地址以及该传输线路的传输时 间。线路传输时间为不超过100的正整数。 接下来的一行为一个正整数K（K&lt;10000），表示SERNET中数据包的数目。以下的K行每行表示一个数据包的信息，格式为： 数据包编号 起始发送时间 源服务器地址 目的服务器地址</p>\r\n<p>其中数据包编号为互不相同的小于100000的正整数。</p>\r\n<p>输入文件的最后一行为一个正整数T（T&lt;10000），T为输出时刻。</p>\r\n<p>输入文件中同一行相邻两项之间用一个或多个空格隔开。</p>\r\n<p>输出</p>\r\n<p>输出文件的第一行为一个整数P，表示T时刻后还在网络中传输的数据包数目（编号相同的数据包为同一数据包）。</p>\r\n<p>约定</p>\r\n<ul>\r\n    <li>本题中所有时间量的单位均相同；</li>\r\n    <li>每一条传输线路上在同一时刻能传输任意多个数据包。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4\r\n57 42 10 93\r\n4\r\n57 42 6\r\n42 93 5\r\n42 10 2\r\n10 93 10\r\n2\r\n433 10 57 10\r\n5678 11 42 93\r\n23\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n1\r\n</pre>', 1000, 128, 5, 0, '2012-04-05 16:23:19'),
(283, '钉子和小球', 'ball', '<p>有一个三角形木板,竖直立放，上面钉着n(n+1)/2颗钉子，还有(n+1)个格子（当n=5时如图1）。每颗钉子和周围的钉子的距离都等于d，每个格子的宽度也都等于d，且除了最左端和最右端的格子外每个格子都正对着最下面一排钉子的间隙。</p>\r\n<p>让一个直径略小于d的小球中心正对着最上面的钉子在板上自由滚落，小球每碰到一个钉子都可能落向左边或右边（概率各1/2），且球的中心还会正对着下一颗将要碰上的钉子。例如图2就是小球一条可能的路径。</p>\r\n<p>我们知道小球落在第i个格子中的概率pi= <a title="Image:Ball1.gif" class="image" href="../../../../wiki/Image:Ball1.gif"><img height="39" border="0" width="132" longdesc="http://www.ruvtex.cn/wiki/Image:Ball1.gif" alt="Image:Ball1.gif" src="../../../../mw/images/7/7f/Ball1.gif" /></a> ，其中i为格子的编号，从左至右依次为0,1,...,n。</p>\r\n<p>现在的问题是计算拔掉某些钉子后，小球落在编号为m的格子中的概率pm。假定最下面一排钉子不会被拔掉。例如图3是某些钉子被拔掉后小球一条可能的路径。</p>\r\n<p><a title="Image:Ball2.gif" class="image" href="../../../../wiki/Image:Ball2.gif"><img height="132" border="0" width="421" longdesc="http://www.ruvtex.cn/wiki/Image:Ball2.gif" alt="Image:Ball2.gif" src="../../../../mw/images/3/3e/Ball2.gif" /></a></p>\r\n<p>输入</p>\r\n<p>第1行为整数n（2&lt;=n&lt;=50）和m（0&lt;=m&lt;=n）。以下n行依次为木板上从上至下n行钉子的信息，每行中&lsquo;*&rsquo;表示钉子还在，&lsquo;.&rsquo;表示钉子被拔去，注意在这n行中空格符可能出现在任何位置。</p>\r\n<p>输出</p>\r\n<p>仅一行，是一个既约分数(0写成0/1)，为小球落在编号为m的格子中的概pm。既约分数的定义：A/B是既约分数，当且仅当A、B为正整数且A和B没有大于1的公因子。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n5 2\r\n    *\r\n   * .\r\n  * * *\r\n * . * *\r\n* * * * *\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n7/16\r\n</pre>', 1000, 128, 5, 0, '2012-04-05 16:23:19');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(284, '内存分配', 'memory', '<p>内存是计算机重要的资源之一，程序运行的过程中必须对内存进行分配。</p>\r\n<p>经典的内存分配过程是这样进行的：</p>\r\n<ol>\r\n    <li>内存以内存单元为基本单位，每个内存单元用一个固定的整数作为标识，称为地址。地址从0开始连续排列，地址相邻的内存单元被认为是逻辑上连续的。我们把从地址i开始的s个连续的内存单元称为首地址为i长度为s的地址片。</li>\r\n    <li>运行过程中有若干进程需要占用内存，对于每个进程有一个申请时刻T，需要内存单元数M及运行时间P。在运行时间P内（即T时刻开始，T+P时刻结束），这M个被占用的内存单元不能再被其他进程使用。</li>\r\n    <li>假设在T时刻有一个进程申请M个单元，且运行时间为P，则：\r\n    <ol>\r\n        <li>若T时刻内存中存在长度为M的空闲地址片，则系统将这M个空闲单元分配给该进程。若存在多个长度为M个空闲地址片，则系统将首地址最小的那个空闲地址片分配给该进程。</li>\r\n        <li>如果T时刻不存在长度为M的空闲地址片，则该进程被放入一个等待队列。对于处于等待队列队头的进程，只要在任一时刻，存在长度为M的空 闲地址片，系统马上将该进程取出队列，并为它分配内存单元。注意，在进行内存分配处理过程中，处于等待队列队头的进程的处理优先级最高，队列中的其它进程 不能先于队头进程被处理。</li>\r\n    </ol>\r\n    </li>\r\n</ol>\r\n<p>现在给出一系列描述进程的数据，请编写一程序模拟系统分配内存的过程。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>第一行是一个数N，表示总内存单元数（即地址范围从0到N-1）</li>\r\n    <li>从第二行开始每行描述一个进程的三个整数T、M、P（M&lt;=N）。</li>\r\n    <li>数据已按T从小到大排序。</li>\r\n    <li>最后一行用三个0表示结束。</li>\r\n    <li>输入文件最多10000行，且所有数据都小于10^9。</li>\r\n    <li>输入文件中同一行相邻两项之间用一个或多个空格隔开。</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>包括2行。</li>\r\n    <li>第一行是全部进程都运行完毕的时刻。</li>\r\n    <li>第二行是被放入过等待队列的进程总数。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n10\r\n1 3 10\r\n2 4 3\r\n3 4 4\r\n4 1 4\r\n5 3 4\r\n0 0 0\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n12\r\n2\r\n</pre>\r\n<p>样例示例</p>\r\n<table width="669" cellspacing="1" cellpadding="0" border="1" style="background: white none repeat scroll 0% 0%; width: 501.7pt; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;" class="MsoNormalTable">\r\n    <tbody>\r\n        <tr style="page-break-inside: avoid; height: 14.6pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 14.6pt;" rowspan="2">\r\n            <p align="center" style="text-align: center;">时</p>\r\n            <p align="center" style="text-align: center;">刻</p>\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">T</span></p>\r\n            </td>\r\n            <td width="41%" style="padding: 5.25pt; width: 41.24%; height: 14.6pt;" colspan="12">\r\n            <p align="center" style="text-align: center;">内存占用情况</p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 14.6pt;">\r\n            <p align="center" style="text-align: center;">进程事件</p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">0</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;" colspan="2">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">1</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.8%; height: 13.5pt;" colspan="2">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">2</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">3</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">4</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">5</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">6</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">7</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">8</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">9</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;" rowspan="2">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">A</span>申请空间（<span lang="EN-US" style="font-family: System;">M=3,P=10</span>）<span lang="EN-US">&lt;</span>成功<span lang="EN-US">&gt;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">1</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">2</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: black none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System; color: white;">B</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">B</span>申请空间（<span lang="EN-US" style="font-family: System;">M=4,P=3</span>）<span lang="EN-US">&lt;</span>成功<span lang="EN-US">&gt;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">3</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: black none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System; color: white;">B</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">C</span>申请空间（<span lang="EN-US" style="font-family: System;">M=4,P=4</span>）<span lang="EN-US">&lt;</span>失败进入等待队列<span lang="EN-US">&gt;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">4</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: black none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System; color: white;">B</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; background: rgb(204, 204, 204) none repeat scroll 0% 0%; width: 3.58%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">D</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">D</span>申请空间（<span lang="EN-US" style="font-family: System;">M=1,P=4</span>）<span lang="EN-US">&lt;</span>成功<span lang="EN-US">&gt;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">5</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: rgb(224, 224, 224) none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">C</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; background: rgb(204, 204, 204) none repeat scroll 0% 0%; width: 3.58%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">D</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">B</span>结束，释放空间</p>\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">C</span>从等待队列取出，分配空间</p>\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">E</span>申请空间（<span lang="EN-US" style="font-family: System;">M=3,P=4</span>）<span lang="EN-US">&lt;</span>失败进入等待队列<span lang="EN-US">&gt;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">6</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: rgb(224, 224, 224) none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">C</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; background: rgb(204, 204, 204) none repeat scroll 0% 0%; width: 3.58%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">D</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">7</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: rgb(224, 224, 224) none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">C</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; background: rgb(204, 204, 204) none repeat scroll 0% 0%; width: 3.58%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;"><span lang="EN-US" style="font-family: System;">D</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">8</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="15%" style="padding: 5.25pt; background: rgb(224, 224, 224) none repeat scroll 0% 0%; width: 15.92%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="4">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">C</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(166, 166, 166) none repeat scroll 0% 0%; width: 12.8%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="3">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">E</span></b></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">D</span>结束，释放空间</p>\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">E</span>从等待队列取出，分配空间</p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">9</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(166, 166, 166) none repeat scroll 0% 0%; width: 12.8%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="3">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">E</span></b></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">C</span>结束，释放空间</p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">10</span></b></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(243, 243, 243) none repeat scroll 0% 0%; width: 12.24%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="5">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">A</span></b></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(166, 166, 166) none repeat scroll 0% 0%; width: 12.8%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="3">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">E</span></b></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 13.5pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 13.5pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">11</span></b></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.42%; height: 13.5pt;" colspan="2">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.3%; height: 13.5pt;" colspan="2">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.24%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 13.5pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="12%" style="padding: 5.25pt; background: rgb(166, 166, 166) none repeat scroll 0% 0%; width: 12.8%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; height: 13.5pt;" colspan="3">\r\n            <p align="center" style="text-align: center;"><b><span lang="EN-US" style="font-family: System;">E</span></b></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 13.5pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">A</span>结束，释放空间</p>\r\n            </td>\r\n        </tr>\r\n        <tr style="page-break-inside: avoid; height: 21.35pt;">\r\n            <td width="4%" style="padding: 5.25pt; width: 4.78%; height: 21.35pt;">\r\n            <p class="MsoNormal"><b><span lang="EN-US">12</span></b></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.42%; height: 21.35pt;" colspan="2">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.3%; height: 21.35pt;" colspan="2">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.24%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="4%" style="padding: 5.25pt; width: 4.74%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="3%" style="padding: 5.25pt; width: 3.58%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="5%" style="padding: 5.25pt; width: 5.34%; height: 21.35pt;">\r\n            <p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td width="53%" style="padding: 5.25pt; width: 53.42%; height: 21.35pt;">\r\n            <p align="center" style="text-align: center;">进程<span lang="EN-US" style="font-family: System;">E</span>结束，释放空间</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>', 1000, 128, 5, 0, '2012-04-05 16:23:19'),
(285, '最优连通子集', 'subset', '<p>众所周知，我们可以通过直角坐标系把平面上的任何一个点P用一个有序数对(x,y)来唯一表示，如果x,y都是整数，我们就把点P称为整点，否则点P称为非整点。我们把平面上所有整点构成的集合记为W。</p>\r\n<p><b>定义1</b></p>\r\n<ul>\r\n    <li>两个整点P1(x1,y1),P2(x2,y2)，若|x1-x2|+|y1-y2|=1，则称P1,P2相邻，记作P1~P2，否则称P1,P2不相邻。</li>\r\n</ul>\r\n<p><b>定义2</b></p>\r\n<ul>\r\n    <li>设点集S是W的一个有限子集，即S={P1,P2,&hellip;,Pn}(n&gt;=1)，其中Pi(1&lt;=i&lt;=n)属于W，我们把S称为整点集。</li>\r\n</ul>\r\n<p><b>定义3</b></p>\r\n<ul>\r\n    <li>设S是一个整点集，若点R,T属于S，且存在一个有限的点序列Q1,Q2,&hellip;,Qk满足:</li>\r\n</ul>\r\n<ol>\r\n    <li>\r\n    <ol>\r\n        <li>Qi属于S（1&lt;=i&lt;=k）;</li>\r\n        <li>Q1=R,Qk= T;</li>\r\n        <li>Qi~Qi+1(1&lt;=i&lt;=k-1)，即Qi与Qi+1相邻;</li>\r\n        <li>对于任何1&lt;=i&lt;j&lt;=k有Qi&ne;Qj;</li>\r\n    </ol>\r\n    </li>\r\n</ol>\r\n<ul>\r\n    <li>我们则称点R与点T在整点集S上连通，把点序列Q1,Q2,&hellip;,Qk称为整点集S中连接点R与点T的一条道路。</li>\r\n</ul>\r\n<p><b>定义4</b></p>\r\n<ul>\r\n    <li>若整点集V满足：对于V中的任何两个整点，V中有且仅有一条连接这两点的道路，则V称为单整点集。</li>\r\n</ul>\r\n<p><b>定义5</b></p>\r\n<ul>\r\n    <li>对于平面上的每一个整点，我们可以赋予它一个整数，作为该点的权，于是我们把一个整点集中所有点的权的总和称为该整点集的权和。</li>\r\n</ul>\r\n<p>我们希望对于给定的一个单整点集V，求出一个V的最优连通子集B，满足：</p>\r\n<ol>\r\n    <li>B是V的子集</li>\r\n    <li>对于B中的任何两个整点，在B中连通；</li>\r\n    <li>B是满足条件(1)和(2)的所有整点集中权和最大的。</li>\r\n</ol>\r\n<p>输入</p>\r\n<p>第1行是一个整数N，表示单整点集V中点的个数；</p>\r\n<p>以下N行中，第i行(1&lt;=i&lt;=N)有三个整数，Xi,Yi,Ci依次表示第i个点的横坐标，纵坐标和权。同一行相邻两数之间用一个空格分隔。</p>\r\n<p>输出</p>\r\n<p>仅一个整数，表示所求最优连通集的权和。</p>\r\n<p>样例输入</p>\r\n<pre>\r\n5\r\n0 0 -2\r\n0 1 1\r\n1 0 1\r\n0 -1 1\r\n-1 0 1\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n2\r\n</pre>\r\n<p>参数约定</p>\r\n<ul>\r\n    <li>2&lt;=N&lt;=1000</li>\r\n    <li>-10^6&lt;=Xi,Yi&lt;=10^6</li>\r\n    <li>-100&lt;=Ci&lt;=100</li>\r\n</ul>', 1000, 128, 5, 0, '2012-04-05 16:23:20'),
(286, '01串', 'sequence', '<p>给定7个整数N,A0,B0,L0,A1,B1,L1，要求设计一个01串S=s1s2&hellip;si&hellip;sN，满足：</p>\r\n<ol>\r\n    <li>si=0或si=1，1&lt;=i&lt;=N；</li>\r\n    <li>对于S的任何连续的长度为L0的子串sjsj+1&hellip;sj+L0-1(1&lt;=j&lt;=N-L0+1)，0的个数大于等于A0且小于等于B0;</li>\r\n    <li>对于S的任何连续的长度为L1的子串sjsj+1&hellip;sj+L1-1(1&lt;=j&lt;=N-L1+1)，1的个数大于等于A1且小于等于B1;</li>\r\n</ol>\r\n<p>例如，N=6,A0=1,B0=2,L0=3,A1=1,B1=1,L1=2，则存在一个满足上述所有条件的01串S=010101。</p>\r\n<p>输入</p>\r\n<ul>\r\n    <li>仅一行，有7个整数，依次表示N,A0,B0,L0,A1,B1,L1（3&lt;=N&lt;=1000，1&lt;= A0&lt;=B0&lt;=L0&lt;=N，1&lt;=A1&lt;=B1&lt;=L1&lt;=N），相邻两个整数之间用一个空格分隔</li>\r\n</ul>\r\n<p>输出</p>\r\n<ul>\r\n    <li>仅一行，若不存在满足所有条件的01串，则输出一个整数-1，否则输出一个满足所有条件的01串。</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n6 1 2 3 1 1 2\r\n</pre>\r\n<p>样例输出</p>\r\n<pre>\r\n010101\r\n</pre>', 1000, 128, 5, 0, '2012-04-05 16:23:20'),
(287, '假面舞会', 'party2008', '<p class="MsoNormal">【问题描述】</p>\r\n<p class="MsoNormal">一年一度的假面舞会又开始了，栋栋也兴致勃勃的参加了今年的舞会。今年的面具都是主办方特别定制的。每个参加舞会的人都可以在入场时选择一个自己喜欢的面 具。每个面具都有一个编号，主办方会把此编号告诉拿该面具的人。为了使舞会更有神秘感，主办方把面具分为k (k&ge;3)类，并使用特殊的技术将每个面具的编号标在了面具上，只有戴第i 类面具的人才能看到戴第i+1 类面具的人的编号，戴第k 类面具的人能看到戴第1 类面具的人的编号。<br />\r\n参加舞会的人并不知道有多少类面具，但是栋栋对此却特别好奇，他想自己算出有多少类面具，于是他开始在人群中收集信息。<br />\r\n栋栋收集的信息都是戴第几号面具的人看到了第几号面具的编号。如戴第2号面具的人看到了第5 号面具的编号。栋栋自己也会看到一些编号，他也会根据自己的面具编号把信息补充进去。由于并不是每个人都能记住自己所看到的全部编号，因此，栋栋收集的信 息不能保证其完整性。现在请你计算，按照栋栋目前得到的信息，至多和至少有多少类面具。由于主办方已经声明了k&ge;3，所以你必须将这条信息也考虑进去。</p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal">输入文件第一行包含两个整数n, m，用一个空格分隔，n 表示主办方总共准备了多少个面具，m 表示栋栋收集了多少条信息。<br />\r\n接下来m 行，每行为两个用空格分开的整数a, b，表示戴第a 号面具的人看到了第b 号面具的编号。相同的数对a, b 在输入文件中可能出现多次。</p>\r\n<p class="MsoNormal">【输出格式】</p>\r\n<p class="MsoNormal">输出文件包含两个数，第一个数为最大可能的面具类数，第二个数为最小可能的面具类数。如果无法将所有的面具分为至少3 类，使得这些信息都满足，则认为栋栋收集的信息有错误，输出两个-1。</p>\r\n<p><span lang="EN-US">            【输入样例一】<br />\r\n6 5<br />\r\n1 2<br />\r\n2 3<br />\r\n3 4<br />\r\n4 1<br />\r\n3 5<br />\r\n【输出样例一】<br />\r\n4 4<br />\r\n【输入样例二】<br />\r\n3 3<br />\r\n1 2<br />\r\n2 1<br />\r\n2 3<br />\r\n【输出样例二】<br />\r\n-1 -1<br />\r\n【数据规模和约定】<br />\r\n50%的数据，满足n &le; 300, m &le; 1000；<br />\r\n100%的数据，满足n &le; 100000, m &le; 1000000。　</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:20'),
(288, '志愿者招募', 'employee', '<p>【问题描述】</p>\r\n<p>申奥成功后，布布经过不懈努力，终于成为奥组委下属公司人力资源部门的主管。布布刚上任就遇到了一个难题：为即将启动的奥运新项目招募一批短期志愿者。经过估算，这个项目需要N 天才能完成，其中第i 天至少需要Ai 个人。<br />\r\n布布通过了解得知，一共有M 类志愿者可以招募。其中第i 类可以从第Si 天工作到第Ti 天，招募费用是每人Ci 元。新官上任三把火，为了出色地完成自己的工作，布布希望用尽量少的费用招募足够的志愿者，但这并不是他的特长！于是布布找到了你，希望你帮他设计一种最 优的招募方案。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件的第一行包含两个整数N, M，表示完成项目的天数和可以招募的志愿者的种类。<br />\r\n接下来的一行中包含N 个非负整数，表示每天至少需要的志愿者人数。<br />\r\n接下来的M 行中每行包含三个整数Si, Ti, Ci，含义如上文所述。为了方便起见，我们可以认为每类志愿者的数量都是无限多的。</p>\r\n<p>【输出格式】<br />\r\n输入文件中仅包含一个整数，表示你所设计的最优方案的总费用。</p>\r\n<p>【输入样例】<br />\r\n3 3<br />\r\n2 3 4<br />\r\n1 2 2<br />\r\n2 3 5<br />\r\n3 3 2<br />\r\n【输出样例】<br />\r\n14</p>\r\n<p>【样例说明】<br />\r\n招募3 名第一类志愿者和4 名第三类志愿者。<br />\r\n【数据规模和约定】<br />\r\n30%的数据中，1 &le; N, M &le; 10，1 &le; Ai &le; 10；<br />\r\n100%的数据中，1 &le; N &le; 1000，1 &le; M &le; 10000，题目中其他所涉及的数据均<br />\r\n不超过2^31-1。</p>', 2000, 512, 10, 0, '2012-04-05 16:23:20'),
(289, '奥运物流', 'trans', '<p>【问题描述】</p>\r\n<p>2008 北京奥运会即将开幕，举国上下都在为这一盛事做好准备。为了高效率、成功地举办奥运会，对物流系统进行规划是必不可少的。</p>\r\n<p>物流系统由若干物流基站组成，以1&hellip;N 进行编号。每个物流基站i 都有且仅有一个后继基站Si，而可以有多个前驱基站。基站i 中需要继续运输的物资都将被运往后继基站Si，显然一个物流基站的后继基站不能是其本身。编号为1 的物流基站称为控制基站，从任何物流基站都可将物资运往控制基站。注意控制基站也有后继基站，以便在需要时进行物资的流通。在物流系统中，高可靠性与低成 本是主要设计目。对于基站i，我们定义其&ldquo;可靠性&rdquo; R(i) 如下：</p>\r\n<p>设物流基站i 有w 个前驱基站1 2 , , w P P&nbsp;??P ，即这些基站以i 为后继基站，则基站i 的可靠性R(i)满足下式：</p>\r\n<p><a title="Image:Trans1.jpg" class="image" href="../../../../wiki/Image:Trans1.jpg"><img height="57" border="0" width="198" longdesc="http://www.ruvtex.cn/wiki/Image:Trans1.jpg" alt="Image:Trans1.jpg" src="../../../../mw/images/6/69/Trans1.jpg" /></a></p>\r\n<p>其中Ci 和k 都是常实数且恒为正，且有k 小于1。</p>\r\n<p>整个系统的可靠性与控制基站的可靠性正相关，我们的目标是通过修改物流系统，即更改某些基站的后继基站，使得控制基站的可靠性R(1)尽量 大。但由于经费限制，最多只能修改m 个基站的后继基站，并且，控制基站的后继基站不可被修改。因而我们所面临的问题就是，如何修改不超过m 个基站的后继，使得控制基站的可靠性R(1)最大化。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件trans.in 第一行包含两个整数与一个实数，N, m, k。其中N 表示基站数目，m 表示最多可修改的后继基站数目，k 分别为可靠性定义中的常数。</p>\r\n<p>第二行包含N 个整数，分别是S1, S2&hellip;SN，即每一个基站的后继基站编号。</p>\r\n<p>第三行包含N 个正实数，分别是C1, C2&hellip;CN，为可靠性定义中的常数。</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件trans.out 仅包含一个实数，为可得到的最大R(1)。精确到小数点两位。</p>\r\n<p>【输入样例】</p>\r\n<pre>\r\n4 1 0.5\r\n2 3 1 3\r\n10.0 10.0 10.0 10.0\r\n</pre>\r\n<p>【输出样例】</p>\r\n<pre>\r\n30.00\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>原有物流系统如图所示，4 个物流基站的可靠性依次为22.8571，21.4286，25.7143，10。</p>\r\n<p><a title="Image:Trans2.jpg" class="image" href="../../../../wiki/Image:Trans2.jpg"><img height="217" border="0" width="433" longdesc="http://www.ruvtex.cn/wiki/Image:Trans2.jpg" alt="Image:Trans2.jpg" src="../../../../mw/images/e/ef/Trans2.jpg" /></a></p>\r\n<p>最优方案为将2 号基站的后继基站改为1 号，如右图所示。 此时4 个基站的可靠性依次为30，25，15，10。</p>\r\n<p>【数据规模和约定】</p>\r\n<p>本题的数据，具有如下分布：</p>\r\n<p><a title="Image:Trans3.jpg" class="image" href="../../../../wiki/Image:Trans3.jpg"><img height="161" border="0" width="399" longdesc="http://www.ruvtex.cn/wiki/Image:Trans3.jpg" alt="Image:Trans3.jpg" src="../../../../mw/images/e/e8/Trans3.jpg" /></a></p>\r\n<p>对于所有的数据，满足 m &le; N &le; 60，Ci &le; 10^6，0.3 &le; k &lt; 1，请使用双精度实数，无需考虑由此带来的误差。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:20'),
(290, '丘比特的烦恼', 'cupid', '<p>　　随着社会的不断发展，人与人之间的感情越来越功利化。最近，爱神丘比特发现，爱情也已不再是完全纯洁的了。这使得丘比特很是苦恼，他越来越难找到合适的男女，并向他们射去丘比特之箭。于是丘比特千里迢迢远赴中国，找到了掌管东方人爱情的神&mdash;&mdash;月下老人，向他求教。<br />\r\n月下老人告诉丘比特，纯洁的爱情并不是不存在，而是他没有找到。在东方，人们讲究的是缘分。月下老人只要做一男一女两个泥人，在他们之间连上一条红线，那么它们所代表的人就会相爱&mdash;&mdash;无论他们身处何地。而丘比特的爱情之箭只能射中两个距离相当近的人，选择的范围自然就小了很多，不能找到真正的有缘人。<br />\r\n丘比特听了月下老人的解释，茅塞顿开，回去之后用了人间的最新科技改造了自己的弓箭，使得丘比特之箭的射程大大增加。这样，射中有缘人的机会也增加了不少。<br />\r\n情人节(Valentine''s day)的午夜零时，丘比特开始了自己的工作。他选择了一组数目相等的男女，感应到他们互相之间的缘分大小，并依此射出了神箭，使他们产生爱意。他希望能选择最好的方法，使被他选择的每一个人被射中一次，且每一对被射中的人之间的缘分的和最大。<br />\r\n当然，无论丘比特怎么改造自己的弓箭，总还是存在缺陷的。首先，弓箭的射程尽管增大了，但毕竟还是有限的，不能像月下老人那样，做到&ldquo;千里姻缘一线牵 &rdquo;。其次，无论怎么改造，箭的轨迹终归只能是一条直线，也就是说，<b>如果两个人之间的连线段上有别人，那么莫不可向他们射出丘比特之箭</b>，否则，按月下老人的话，就是&ldquo;乱点鸳鸯谱&rdquo;了。<br />\r\n作为一个凡人，你的任务是运用先进的计算机为丘比特找到最佳的方案。</p>\r\n<p>输入文件格式：<br />\r\n输入文件第一行为正整数k，表示丘比特之箭的射程，第二行为正整数n(n&lt;30)，随后有2n行，表示丘比特选中的人的信息，其中前n行为男子，后n行为女子。每个人的信息由两部分组成：他的姓名和他的位置。姓名是长度小于20且仅包含字母的字符串，<b>忽略大小写的区别</b>，位置是由一对整数表示的坐标，它们之间用空格分隔。格式为x y Name。输入文件剩下的部分描述了这些人的缘分。每一行的格式为Name1 Name2 p。Name1和Name2为有缘人的姓名，p是他们之间的缘分值(p为小于等于255的正整数)。以一个End作为文件结束标志。<u><b>每两个人之间的缘分如果被描述多次，以最后一次为准。如果没有被描述，则说明他们缘分值为1。</b></u></p>\r\n<p>输出文件格式：<br />\r\n输出文件仅一个正整数，表示每一对被射中的人之间的缘分的总和。这个和应当是最大的。</p>\r\n<p>输入样例<br />\r\n2<br />\r\n3<br />\r\n0 0 Adam<br />\r\n1 1 Jack<br />\r\n0 2 George<br />\r\n1 0 Victoria<br />\r\n0 1 Susan<br />\r\n1 2 Cathy<br />\r\nAdam Cathy 100<br />\r\nSusan George 20<br />\r\nGeorge Cathy 40<br />\r\nJack Susan 5<br />\r\nCathy Jack 30<br />\r\nVictoria Jack 20<br />\r\nAdam Victoria 15<br />\r\nEnd</p>\r\n<p>输出样例<br />\r\n65</p>', 1000, 128, 10, 0, '2012-04-05 16:23:20');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(291, '设计路线', 'design', '<p>【问题描述】</p>\r\n<p>Z 国坐落于遥远而又神奇的东方半岛上，在小Z 的统治时代公路成为这里主要的交通手段。Z 国共有n 座城市，一些城市之间由双向的公路所连接。非常神奇的是Z 国的每个城市所处的经度都不相同，并且最多只和一个位于它东边的城市直接通过公路相连。Z 国的首都是Z 国政治经济文化旅游的中心，每天都有成千上万的人从Z 国的其他城市涌向首都。</p>\r\n<p>为了使Z 国的交通更加便利顺畅，小Z 决定在Z 国的公路系统中确定若干条规划路线，将其中的公路全部改建为铁路。</p>\r\n<p>我们定义每条规划路线为一个长度大于1 的城市序列，每个城市在该序列中最多出现一次，序列中相邻的城市之间由公路直接相连(待改建为铁路)。并且，每个城市最多只能出现在一条规划路线中，也就是说，任意两条规划路线不能有公共部分。</p>\r\n<p>当然在一般情况下是不可能将所有的公路修建为铁路的，因此从有些城市出发去往首都依然需要通过乘坐长途汽车，而长途汽车只往返于公路连接的相邻的城市之间，因此从某个城市出发可能需要不断地换乘长途汽车和火车才能到达首都。</p>\r\n<p>我们定义一个城市的&ldquo;不便利值&rdquo;为从它出发到首都需要乘坐的长途汽车的次数，而Z 国的交通系统的&ldquo;不便利值&rdquo;为所有城市的不便利值的最大值，很明显首都的&ldquo;不便利值&rdquo;为0。小Z 想知道如何确定规划路线修建铁路使得Z 国的交通系统的&ldquo;不便利值&rdquo;最小，以及有多少种不同的规划路线的选择方案使得&ldquo;不便利值&rdquo;达到最小。当然方案总数可能非常大，小Z 只关心这个天文数字mod Q 后的值。</p>\r\n<p>注意：规划路线1-2-3 和规划路线3-2-1 是等价的，即将一条规划路线翻转依然认为是等价的。两个方案不同当且仅当其中一个方案中存在一条规划路线不属于另一个方案。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件第一行包含三个正整数N、M、Q，其中N 表示城市个数，M 表示公路总数，N 个城市从1~N 编号，其中编号为1 的是首都。Q 表示上文提到的设计路线的方法总数的模数。接下来M 行，每行两个不同的正数ai、bi (1&le; ai , bi &le; N)表示有一条公路连接城市ai 和城市bi。 输入数据保证一条公路只出现一次。</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件应包含两行。第一行为一个整数，表示最小的&ldquo;不便利值&rdquo;。 第二行为一个整数，表示使&ldquo;不便利值&rdquo;达到最小时不同的设计路线的方法总数 mod Q 的值。<br />\r\n如果某个城市无法到达首都，则输出两行-1。</p>\r\n<p>【输入样例】</p>\r\n<p>5 4 100<br />\r\n1 2<br />\r\n4 5<br />\r\n1 3<br />\r\n4 1</p>\r\n<p><br />\r\n【输出样例】<br />\r\n1<br />\r\n10</p>\r\n<p><br />\r\n【样例说明】<br />\r\n以下样例中是10 种设计路线的方法：<br />\r\n(1) 4-5<br />\r\n(2) 1-4-5<br />\r\n(3) 4-5, 1-2<br />\r\n(4) 4-5, 1-3<br />\r\n(5) 4-5, 2-1-3<br />\r\n(6) 2-1-4-5<br />\r\n(7) 3-1-4-5<br />\r\n(8) 1-4<br />\r\n(9) 2-1-4<br />\r\n(10) 3-1-4</p>\r\n<p><br />\r\n【数据规模和约定】<br />\r\n对于20%的数据，满足N,M &le; 10。<br />\r\n对于50%的数据，满足N,M &le; 200。<br />\r\n对于60%的数据，满足N,M &le; 5000。<br />\r\n对于100%的数据，满足1 &le; N,M &le; 100000，1 &le; Q &le; 120000000。</p>', 2000, 128, 10, 0, '2012-04-05 16:23:20'),
(292, '瓷片项链', 'ring', '<p>原始部落用一种稀有的泥土烧制直径相同的圆瓷片并串成项链，串的时候沿瓷片的直径方向顺次连接，瓷片之间没有空隙也不重叠，一条项链至少由一个瓷片构成。</p>\r\n<p>每个烧制的瓷片厚度是一定的，直径D和所用泥土的体积V有以下关系：</p>\r\n<p>D=0.3*(V-V0)^0.5 (V&gt;V0)</p>\r\n<p>其中V0为烧制每一片的损耗，单位与V相同。当用料小于等于V0时，不能烧制成瓷片。</p>\r\n<p>例： V总 = 10，V0 = 1，若烧制成一片瓷片，V = V总= 10，D = 0.9。如果把泥土均分成2份，每份泥土的体积为V = V总/2 = 5，单个瓷片的直径为 ,串起来的总长为1.2。</p>\r\n<p>给定了泥土的总体积和烧制单个瓷片的损耗，烧制的瓷片数不同，能够得到的项链总长度也不相同，请计算烧制多少个瓷片能使所得到的项链最长。</p>\r\n<p>[输入文件]</p>\r\n<p>文件仅有两行，每一行仅包含一个整数和一个换行/回车符。第一行的数字为泥土总体积V总 (0&lt;V总&lt;60000)，第二行为烧制单个瓷片的损耗V0(0&lt; V0&lt;600)。</p>\r\n<p>[输出文件]</p>\r\n<p>文件中仅包含一个数字和一个换行/回车符。该数字为能获得最长项链而烧制的瓷片数。如果不能烧制成瓷片或者最优解不唯一（存在两个或者两个以上方案均能获得最长项链），输出数字0。</p>\r\n<p>[输入输出文件样例1]</p>\r\n<p>Input</p>\r\n<pre>\r\n10\r\n1\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n5\r\n</pre>\r\n<p>[输入输出文件样例2]</p>\r\n<p>Input</p>\r\n<pre>\r\n10\r\n2\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n0\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:20'),
(293, '单词查找树', 'trie', '<p>在进行文法分析的时候，通常需要检测一个单词是否在我们的单词列表里。为了提高查找和定位的速度，通常都要画出与单词列表所对应的单词查找树，其特点如下：</p>\r\n<ul>\r\n    <li>根节点不包含字母，除根节点外每一个节点都仅包含一个大写英文字母；</li>\r\n    <li>从根节点到某一节点，路径上经过的字母依次连起来所构成的字母序列，称为该节点对应的单词。单词列表中的每个词，都是该单词查找树某个节点所对应的单词；</li>\r\n    <li>在满足上述条件下，该单词查找树的节点数最少。</li>\r\n</ul>\r\n<p>单词列表对应的单词查找树</p>\r\n<pre>\r\nA\r\nAN\r\nASP\r\nAS\r\nASC\r\nASCII\r\nBAS\r\nBASIC\r\n<a class="image" title="Image:Trie.gif" href="../../../../wiki/Image:Trie.gif"><img border="0" alt="Image:Trie.gif" width="258" longdesc="http://www.ruvtex.cn/wiki/Image:Trie.gif" height="370" src="../../../../mw/images/3/3e/Trie.gif" /></a>\r\n</pre>\r\n<p>对一个确定的单词列表，请统计对应的单词查找树的节点数（包括根节点）</p>\r\n<p>[输入文件]</p>\r\n<p>该文件为一个单词列表，每一行仅包含一个单词和一个换行/回车符。每个单词仅由大写的英文字符组成，长度不超过63个字符。文件总长度不超过32K，至少有一行数据。</p>\r\n<p>[输出文件]</p>\r\n<p>该文件中仅包含一个整数和一个换行/回车符。该整数为单词列表对应的单词查找树的节点数。</p>\r\n<p>[输入输出文件样例]</p>\r\n<p>Input</p>\r\n<pre>\r\nA\r\nAN\r\nASP\r\nAS\r\nASC\r\nASCII\r\nBAS\r\nBASIC\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n13\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(294, '青蛙过河', 'frog', '<p>大小各不相同的一队青蛙站在河左岸的石墩（记为A）上，要过到对岸的石墩(记为D)上去。河心有几片菏叶(分别记为Y1&hellip;Ym)和几个石墩(分别记为S1&hellip;Sn)。图示如下：</p>\r\n<p><a class="image" title="Image:Frog.gif" href="../../../../wiki/Image:Frog.gif"><img border="0" alt="Image:Frog.gif" width="402" longdesc="http://www.ruvtex.cn/wiki/Image:Frog.gif" height="206" src="../../../../mw/images/9/99/Frog.gif" /></a></p>\r\n<p>青蛙的站队和移动方法规则如下：</p>\r\n<ol>\r\n    <li>每只青蛙只能站在荷叶、石墩，或者仅比它大一号的青蛙背上（统称为合法的落脚点）；</li>\r\n    <li>一只青蛙只有背上没有其它青蛙的时候才能够从一个落脚点跳到另一个落脚点；</li>\r\n    <li>青蛙允许从左岸A直接跳到河心的石墩、荷叶和右岸的石墩D上，允许从河心的石墩和荷叶跳到右岸的石墩D上；</li>\r\n    <li>青蛙在河心的石墩之间、荷叶之间以及石墩和荷叶之间可以来回跳动；</li>\r\n    <li>青蛙在离开左岸石墩后，不能再返回左岸；到达右岸后，不能再跳回；</li>\r\n    <li>假定石墩承重能力很大，允许无论多少只青蛙都可呆在上面。但是，由于石墩的面积不大，至多只能有一只青蛙直接站在上面，而其他的青蛙只能依规则1落在比它大一号的青蛙的背上。</li>\r\n    <li>荷叶不仅面积不大，而且负重能力也有限，至多只能有一只青蛙站在上面。</li>\r\n    <li>每一步只能移动一只青蛙，并且移动后需要满足站队规则；</li>\r\n    <li>在一开始的时候，青蛙均站在A上，最大的一只青蛙直接站在石墩上，而其它的青蛙依规则6站在比其大一号的青蛙的背上。</li>\r\n</ol>\r\n<p>青蛙希望最终能够全部移动到D上，并完成站队。</p>\r\n<p>设河心有m片荷叶和n个石墩，请求出这队青蛙至多有多少只，在满足站队和移动规则的前提下，能从A过到D。</p>\r\n<p>例如，在m=1且 n=1时，河心有一片荷叶（Y1）和一个石墩（S1），此时至多有4只青蛙能够过河（由小到大称为1、2、3、4），过河的一种方法为：</p>\r\n<table style="border-bottom: medium none; border-left: medium none; border-collapse: collapse; border-top: medium none; border-right: medium none" class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-bottom: windowtext 1pt solid; border-left: windowtext 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: windowtext 1pt solid; border-right: windowtext 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span style="font-family: 宋体">开始</span></p>\r\n            </td>\r\n            <td style="border-bottom: windowtext 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: windowtext 1pt solid; border-right: windowtext 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;</span></p>\r\n            </td>\r\n            <td style="border-bottom: windowtext 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: windowtext 1pt solid; border-right: windowtext 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">2</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 1</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">1 from A to Y<sub>1</sub></span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">2</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp; &nbsp;&nbsp;Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 2</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">2 from A to S<sub>1</sub></span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 3</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">1 from Y<sub>1</sub> to S<sub>1</sub></span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4&nbsp;&nbsp;&nbsp; 2</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 4</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3 from A to Y<sub>1</sub></span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 5</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">4 from A to D</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; &nbsp;4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 6</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">3 from Y<sub>1</sub> to D</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 7 </span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">1 from S<sub>1</sub> to Y<sub>1</sub></span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp; &nbsp;&nbsp;&nbsp;4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 8</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">2 from S<sub>1</sub> to D</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 88.2pt" class="MsoBodyTextIndent"><span lang="EN-US">2</span></p>\r\n            <p style="text-indent: 88.2pt" class="MsoBodyTextIndent"><span lang="EN-US">3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp; 4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-bottom: 1pt solid; border-left: 1pt solid; padding-bottom: 0cm; padding-left: 5.4pt; width: 50.4pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="67">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">Step 9</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 3cm; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="113">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">1 from Y<sub>1</sub> to D</span></p>\r\n            </td>\r\n            <td style="border-bottom: 1pt solid; border-left: medium none; padding-bottom: 0cm; padding-left: 5.4pt; width: 119.35pt; padding-right: 5.4pt; border-top: medium none; border-right: 1pt solid; padding-top: 0cm" valign="top" width="159">\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4</span></p>\r\n            <p style="text-indent: 0cm" class="MsoBodyTextIndent"><span lang="EN-US">A&nbsp;&nbsp;&nbsp; S<sub>1</sub>&nbsp;&nbsp;&nbsp; Y<sub>1</sub>&nbsp;&nbsp;&nbsp; D</span></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>此例中，当河心有一片荷叶和一个石墩时，4只青蛙能够跳动9步过河。</p>\r\n<p>[输入文件]</p>\r\n<p>文件仅有两行，每一行仅包含一个整数和一个换行/回车符。第一行的数字为河心的石墩数n（0&lt;=n&lt;=25），第二行为荷叶数m（0&lt;=m&lt;=25）。</p>\r\n<p>[输出文件]</p>\r\n<p>文件中仅包含一个数字和一个换行/回车符。该数字为在河心有n个石墩和m片荷叶时，最多能够过河的青蛙的只数。</p>\r\n<p>[输入输出文件样例]</p>\r\n<p>Input</p>\r\n<pre>\r\n1\r\n1\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n4\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(295, '程序分析器', 'analyser', '<p>Tiny Basm语言(简称为TB语言)的巴科斯-瑙尔范式(BNF)为：</p>\r\n<ul>\r\n    <li>&lt;程序&gt; ::= &lt;语句&gt; [CrLf] { &lt;语句&gt; [CrLf] }</li>\r\n    <li>&lt;语句&gt; ::= &lt;行号&gt; [Space] &lt;语句体&gt;</li>\r\n    <li>&lt;语句体&gt; ::= &lt;累加语句&gt; | &lt;输出语句&gt; | &lt;转移语句&gt; | &lt;条件语句&gt; | &lt;结束语句&gt;</li>\r\n    <li>&lt;累加语句&gt; ::= &lt;变量&gt; + &lt;整数&gt;</li>\r\n    <li>&lt;输出语句&gt; ::= &lt;变量&gt;&nbsp;?</li>\r\n    <li>&lt;转移语句&gt; ::= GO [Space] &lt;行号&gt;</li>\r\n    <li>&lt;条件语句&gt; ::= IF [Space] &lt;变量&gt; = &lt;整数&gt; [Space] &lt;转移语句&gt;</li>\r\n    <li>&lt;结束语句&gt; ::= END</li>\r\n    <li>&lt;变量&gt; ::= &lt;字母&gt;</li>\r\n    <li>&lt;行号&gt; ::= &lt;整数&gt;</li>\r\n    <li>&lt;整数&gt; ::= &lt;数字&gt; { &lt;数字&gt; }</li>\r\n    <li>&lt;字母&gt; ::= A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z</li>\r\n    <li>&lt;数字&gt; ::= 0|1|2|3|4|5|6|7|8|9</li>\r\n</ul>\r\n<p>注：其中&ldquo;::=&rdquo;表示定义为，&ldquo;|&rdquo;表示或，{}内的项可以重复任意多次或不出现，&ldquo;[Space]&rdquo;表示空格(一个字符，ASCII码为32)，&ldquo;[CrLf]&rdquo;表示回车/换行(两个字符，ASCII码分别为13和10)。</p>\r\n<p>错误语句示例(在输入文件中不会出现任何错误语句)： 10[Space]A+1.5 （不符合累加语句的定义，所加的不是整数） 20[Space]A[Space]? （不符合输出语句的定义，多加了一个空格） 30[Space]IF[Space]A=B[Space]GO[Space]10 （不符合条件语句的定义，不应变量=变量）</p>\r\n<p>TB程序的执行：</p>\r\n<ul>\r\n    <li>程序从行号最小的一条语句开始执行，在未遇到条件语句时按行号由小至大顺序执行。</li>\r\n    <li>所有变量在程序执行前被自动初始化为0。</li>\r\n    <li>累加语句将语句中变量的值加上语句中的整数送回该变量。</li>\r\n    <li>输出语句将语句中变量的值在监视器上显示出来。</li>\r\n    <li>执行条件语句时，当且仅当该语句中的变量与紧跟在等号后面的整数值相等，后面的转移语句才被执行。该语句中的所有整数值至多为4位。</li>\r\n    <li>转移语句被执行后，程序将转去执行GO后面指定的行号的语句。</li>\r\n    <li>当程序执行结束语句后，结束整个程序的执行。</li>\r\n    <li>假设该系统能处理任意大小的整数，而不会发生溢出。</li>\r\n</ul>\r\n<p>请编程，对于给定的TB语言程序P，求该程序所执行的语句数(执行条件语句不论是否成功转移，仅记为执行一条语句)。</p>\r\n<p>[输入文件]</p>\r\n<ul>\r\n    <li>输入文件为一个TB语言程序P，语句数不超过100行。</li>\r\n    <li>P中每条语句的长度不超过20个字符。</li>\r\n    <li>P中转移语句里GO后面的行号一定有对应的语句。</li>\r\n    <li>P中可能有多个不同行号的结束语句。</li>\r\n    <li>P中行号最大的语句一定是结束语句。</li>\r\n    <li>P中的行号都不大于3000。</li>\r\n    <li>输入文件不一定是按行号递增顺序给出P的。</li>\r\n</ul>\r\n<p>[输出文件]</p>\r\n<ul>\r\n    <li>输出文件有且仅有一行：</li>\r\n    <li>如果程序能够正常结束，输出该程序所执行的语句数；</li>\r\n    <li>如果程序不能正常结束，输出-1。</li>\r\n</ul>\r\n<p>[输入输出文件样例] Input</p>\r\n<pre>\r\n10 A+1\r\n20 IF A=5 GO 60\r\n60 END\r\n30 A+2\r\n40 A?\r\n50 GO 20\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n11\r\n</pre>\r\n<p>[样例说明] 执行语句行号按顺序为 10-&gt;20-&gt;30-&gt;40-&gt;50-&gt;20-&gt;30-&gt;40-&gt;50-&gt;20-&gt;60 共11条语句被执行。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(296, '古城之谜', 'lostcity', '<p>著名的考古学家石教授在云梦高原上发现了一处古代城市遗址。让教授欣喜的是在这个他称为冰峰城(Ice-Peak City)的城市中有12块巨大石碑，上面刻着用某种文字书写的资料，他称这种文字为冰峰文。然而当教授试图再次找到冰峰城时，却屡屡无功而返。</p>\r\n<p>幸好当时教授把石碑上的文字都拍摄了下来，为了解开冰峰城的秘密，教授和他的助手牛博士开始研究冰峰文，发现冰峰文只有陈述句这一种句型和名词(n)、动词(v)、辅词(a)这三类单词，且其文法很简单：</p>\r\n<ul>\r\n    <li>&lt;文章&gt;		::= &lt;句子&gt; { &lt;句子&gt; }</li>\r\n    <li>&lt;句子&gt;		::= &lt;陈述句&gt;</li>\r\n    <li>&lt;陈述句&gt;   &nbsp;::=	&lt;名词短语&gt; { &lt;动词短语&gt; &lt;名词短语&gt; } [ &lt;动词短语&gt; ]</li>\r\n    <li>&lt;名词短语&gt;	::=	&lt;名词&gt; | [ &lt;辅词&gt; ] &lt;名词短语&gt;</li>\r\n    <li>&lt;动词短语&gt;	::=	&lt;动词&gt; | [ &lt;辅词&gt; ] &lt;动词短语&gt;</li>\r\n    <li>&lt;单词&gt;		::=	&lt;名词&gt; | &lt;动词&gt; | &lt;辅词&gt;</li>\r\n</ul>\r\n<p>注：其中&lt;名词&gt;、&lt;动词&gt;和&lt;辅词&gt;由词典给出，&ldquo;::=&rdquo;表示定义为，&ldquo;|&rdquo;表示或，{}内的项可以重复任意多次或不出现，[]内的项可以出现一次或不出现。</p>\r\n<p>在研究了大量资料后，他们总结了一部冰峰文词典，由于冰峰文恰好有26个字母，为了研究方便，用字母a到z表示它们。</p>\r\n<p>冰峰文在句子和句子之间以及单词和单词之间没有任何分隔符，因此划分单词和句子令石教授和牛博士感到非常麻烦，于是他们想到了使用计算机来 帮助解决这个问题。假设你接受了这份工作，你的第一个任务是写一个程序，将一篇冰峰文文章划分为最少的句子，在这个前提下，将文章划分为最少的单词。</p>\r\n<p>[输入文件]</p>\r\n<ul>\r\n    <li>输入文件第1行为词典中的单词数n（n&lt;=1000）。</li>\r\n    <li>输入文件第2行至第(n+1)行每行表示一个单词，形为&ldquo;&alpha;.mot&rdquo;， &alpha;表示词性，可能是n(名词),v（动词）,a（辅词）中的一个，mot为单词，单词的长度不超过20。拼写相同而词性不同的单词视为不同的单词，如输入 示例中的n.kick与v.kick是两个不同的单词。</li>\r\n    <li>输入文件第(n+2)行为需要划分的文章，以&ldquo;.&rdquo;结束。</li>\r\n    <li>输入文件中的文章确保为冰峰文。文章是由有限个句子组成的，每个句子只包含有限个单词。文章长度不超过5KB。</li>\r\n</ul>\r\n<p>[输出文件]</p>\r\n<ul>\r\n    <li>输出文件为两行，每行一个整数。</li>\r\n    <li>输出文件第1行为划分出来的句子数。</li>\r\n    <li>输出文件第2行为划分出来的单词数。</li>\r\n</ul>\r\n<p><br />\r\n[输入输出文件样例]</p>\r\n<p>Input</p>\r\n<pre>\r\n11\r\nn.table\r\nn.baleine\r\na.silly\r\nn.snoopy\r\nn.sillysnoopy\r\nv.is\r\nv.isnot\r\nn.kick\r\nv.kick\r\na.big\r\nv.cry\r\nsillysnoopyisnotbigtablebaleinekicksnoopysillycry.\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\n2\r\n9\r\n</pre>\r\n<p>[样例说明]</p>\r\n<p>（为了阅读方便，划分的单词用空格分隔，在单词右标出它的词性，每行写一个句子，用句号表示句子结束。）</p>\r\n<p>输出对应的划分：</p>\r\n<pre>\r\nsillysnoopy[n] isnot[v] big[a] table[n].\r\nbaleine[n] kick[v] snoopy[n] silly[a] cry[v].\r\n</pre>\r\n<p>如果用下面的划分：</p>\r\n<pre>\r\nsilly[a] snoopy[n] isnot[v] big[a] table[n].\r\nbaleine[n] kick[v] snoopy[n] silly[a] cry[v].\r\n</pre>\r\n<p>则划分的句子数仍为2个，但单词数却多了1个，为10个，显然应该按前者而不是后者划分。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(297, '算符破译', 'equation', '<p>考古学发现，几千年前古梅文明时期的数学非常的发达，他们懂得多位数的加法和乘法，其表达式和运算规则等都与现在通常所用的方式完全相同（如整数是 十进制，左边是高位，最高位不能为零；表达式为中缀运算，先乘后加等），唯一的区别是其符号的写法与现在不同。有充分的证据表明，古梅文明的数学文字一共 有13个符号，与 0,1,2,3,4,5,6,7,8,9,+,*,= 这13个数字和符号（称为现代算符）一一对应。为了便于标记，我们用13个小写英文字母a,b,&hellip;m代替这些符号（称为古梅算符）。但是，还没有人知道这 些古梅算符和现代算符之间的具体对应关系。 在一个石壁上，考古学家发现了一组用古梅算符表示的等式，根据推断，每行有且仅有一个等号，等号左右两边为运算表达式（只含有数字和符号），并且等号两边 的计算结果相等。</p>\r\n<p>假设这组等式是成立的，请编程序破译古梅算符和现代算符之间的对应关系。</p>\r\n<p>[输入文件]</p>\r\n<ul>\r\n    <li>输入文件的第一行为等式的个数N（1&lt;=N&lt;=1000），以下N行每行为一个等式。</li>\r\n    <li>每个等式的长度为5个字符到11个字符。</li>\r\n</ul>\r\n<p>[输出文件]</p>\r\n<ul>\r\n    <li>如果不存在对应关系能够满足这组等式，输出&ldquo;noway&rdquo;和一个换行/回车符。</li>\r\n    <li>如果有对应关系能够满足这组等式，输出所有能够确定的古梅算符和现代算符的对应关系。每一行有两个字符，其中第一个字符是古梅算符，第二个字符是对应的现代算符。输出按照字典顺序排序。</li>\r\n</ul>\r\n<p>[输入输出文件样例]</p>\r\n<p>Input</p>\r\n<pre>\r\n2\r\nabcdec\r\ncdefe\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\na6\r\nb*\r\nd=\r\nf+\r\n</pre>\r\n<p>[样例说明]</p>\r\n<p>在上例中，可能对应的现代表达式为{6*2=12，2=1+1}，{6*4=24，4=2+2}，{6*8=48，8=4+4}。可见，能 够确定的对应关系只有a对应6，b对应*，d对应=，f对应+，应该输出；而{c,e}虽然能够找到对应的现代算符使得等式成立，但没有唯一的对应关系， 不能输出。其他古梅算符{g,h&hellip;m}完全不能确定，也不能输出。</p>', 6000, 128, 10, 0, '2012-04-05 16:23:21'),
(298, '食物链', 'eat', '<p>动物王国中有三类动物A,B,C，这三类动物的食物链构成了有趣的环形。A吃B， B吃C，C吃A。</p>\r\n<p>现有N个动物，以1－N编号。每个动物都是A,B,C中的一种，但是我们并不知道它到底是哪一种。</p>\r\n<p>有人用两种说法对这N个动物所构成的食物链关系进行描述：</p>\r\n<ul>\r\n    <li>第一种说法是&ldquo;1 X Y&rdquo;，表示X和Y是同类。</li>\r\n    <li>第二种说法是&ldquo;2 X Y&rdquo;，表示X吃Y。</li>\r\n</ul>\r\n<p>此人对N个动物，用上述两种说法，一句接一句地说出K句话，这K句话有的是真的，有的是假的。当一句话满足下列三条之一时，这句话就是假话，否则就是真话。</p>\r\n<ol>\r\n    <li>当前的话与前面的某些真的话冲突，就是假话；</li>\r\n    <li>当前的话中X或Y比N大，就是假话；</li>\r\n    <li>当前的话表示X吃X，就是假话。</li>\r\n</ol>\r\n<p>你的任务是根据给定的N（1&lt;=N&lt;=50,000）和K句话（0&lt;=K&lt;=100,000），输出假话的总数。</p>\r\n<p>输入文件</p>\r\n<p>第一行是两个整数N和K，以一个空格分隔。</p>\r\n<p>以下K行每行是三个正整数 D，X，Y，两数之间用一个空格隔开，其中D表示说法的种类。</p>\r\n<ul>\r\n    <li>若D=1，则表示X和Y是同类。</li>\r\n    <li>若D=2，则表示X吃Y。</li>\r\n</ul>\r\n<p>输出文件</p>\r\n<p>只有一个整数，表示假话的数目。</p>\r\n<p>输入样例</p>\r\n<p>输入文件</p>\r\n<pre>\r\n100 7\r\n1 101 1\r\n2 1 2\r\n2 2 3\r\n2 3 3\r\n1 1 3\r\n2 3 1\r\n1 5 5\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n3\r\n</pre>\r\n<p>样例说明</p>\r\n<p>对7句话的分析</p>\r\n<ul>\r\n    <li>1 101 1   	假话</li>\r\n    <li>2 1 2     	真话</li>\r\n    <li>2 2 3     	真话</li>\r\n    <li>2 3 3     	假话</li>\r\n    <li>1 1 3     	假话</li>\r\n    <li>2 3 1     	真话</li>\r\n    <li>1 5 5     	真话</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(299, '聪明的打字员', 'clever', '<p>阿兰是某机密部门的打字员，她现在接到一个任务：需要在一天之内输入几百个长度固定为6的密码。当然，她希望输入的过程中敲击键盘的总次数越少越好。</p>\r\n<p>不幸的是，出于保密的需要，该部门用于输入密码的键盘是特殊设计的，键盘上没有数字键，而只有以下六个键：Swap0, Swap1, Up, Down, Left, Right，为了说明这6个键的作用，我们先定义录入区的6个位置的编号，从左至右依次为1，2，3，4，5，6。下面列出每个键的作用：</p>\r\n<ul>\r\n    <li>Swap0：按Swap0，光标位置不变，将光标所在位置的数字与录入区的1号位置的数字（左起第一个数字）交换。如果光标已经处在录入区的1号位置，则按Swap0键之后，录入区的数字不变；</li>\r\n    <li>Swap1：按Swap1，光标位置不变，将光标所在位置的数字与录入区的6号位置的数字（左起第六个数字）交换。如果光标已经处在录入区的6号位置，则按Swap1键之后，录入区的数字不变；</li>\r\n    <li>Up：按Up，光标位置不变，将光标所在位置的数字加1（除非该数字是9）。例如，如果光标所在位置的数字为2，按Up之后，该处的数字变为3；如果该处数字为9，则按Up之后，数字不变，光标位置也不变；</li>\r\n    <li>Down：按Down，光标位置不变，将光标所在位置的数字减1（除非该数字是0），如果该处数字为0，则按Down之后，数字不变，光标位置也不变；</li>\r\n    <li>Left：按Left，光标左移一个位置，如果光标已经在录入区的1号位置（左起第一个位置）上，则光标不动；</li>\r\n    <li>Right：按Right，光标右移一个位置，如果光标已经在录入区的6号位置（左起第六个位置）上，则光标不动。</li>\r\n</ul>\r\n<p>当然，为了使这样的键盘发挥作用，每次录入密码之前，录入区总会随机出现一个长度为6的初始密码，而且光标固定出现在1号位置上。当巧妙地使用上述六个特殊键之后，可以得到目标密码，这时光标允许停在任何一个位置。 现在，阿兰需要你的帮助，编写一个程序，求出录入一个密码需要的最少的击键次数。</p>\r\n<p>输入文件</p>\r\n<p>文件仅一行，含有两个长度为6的数，前者为初始密码，后者为目标密码，两个密码之间用一个空格隔开。</p>\r\n<p>输出文件</p>\r\n<p>文件仅一行，含有一个正整数，为最少需要的击键次数。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n123456 654321\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n11\r\n</pre>\r\n<p>样例说明：</p>\r\n<p>初始密码是123456，光标停在数字1上。对应上述最少击键次数的击键序列为：</p>\r\n<p><a title="Image:Clever.gif" class="image" href="../../../../wiki/Image:Clever.gif"><img height="501" border="0" width="308" longdesc="http://192.168.1.253/wiki/Image:Clever.gif" alt="Image:Clever.gif" src="../../../../mw/images/f/fc/Clever.gif" /></a></p>\r\n<p>最少的击键次数为11。</p>', 3000, 128, 10, 0, '2012-04-05 16:23:21'),
(300, '陨石的秘密', 'secret', '<p>公元11380年，一颗巨大的陨石坠落在南极。于是，灾难降临了，地球上出现了一系列反常的现象。当人们焦急万分的时候，一支中国科学家组成的南极考察队赶到了出事地点。经过一番侦察，科学家们发现陨石上刻有若干行密文，每一行都包含5个整数：</p>\r\n<pre>\r\n1 1 1 1 6\r\n0 0 6 3 57\r\n8 0 11 3 2845\r\n</pre>\r\n<p>著名的科学家SS发现，这些密文实际上是一种复杂运算的结果。为了便于大家理解这种运算，他定义了一种SS表达式：</p>\r\n<ol>\r\n    <li>SS表达式是仅由&lsquo;{&rsquo;，&lsquo;}&rsquo;，&lsquo;[&rsquo;，&lsquo;]&rsquo;，&lsquo;（&rsquo;，&lsquo;）&rsquo;组成的字符串。</li>\r\n    <li>一个空串是SS表达式。</li>\r\n    <li>如果A是SS表达式，且A中不含字符&lsquo;{&rsquo;，&lsquo;}&rsquo;，&lsquo;[&rsquo;，&lsquo;]&rsquo;，则(A)是SS表达式。</li>\r\n    <li>如果A是SS表达式，且A中不含字符&lsquo;{&rsquo;，&lsquo;}&rsquo;，则[A]是SS表达式。</li>\r\n    <li>如果A是SS表达式，则{A}是SS表达式。</li>\r\n    <li>如果A和B都是SS表达式，则AB也是SS表达式。</li>\r\n</ol>\r\n<p>例如</p>\r\n<ul>\r\n    <li>()(())[]</li>\r\n    <li>{()[()]}</li>\r\n    <li>{{[[(())]]}}</li>\r\n</ul>\r\n<p>都是SS表达式。</p>\r\n<p>而</p>\r\n<ul>\r\n    <li>()([])()</li>\r\n    <li>[()</li>\r\n</ul>\r\n<p>不是SS表达式。</p>\r\n<p>一个SS表达式E的深度D(E)定义如下：</p>\r\n<p>例如(){()}[]的深度为2。</p>\r\n<p>密文中的复杂运算是这样进行的：</p>\r\n<p>设密文中每行前4个数依次为L1，L2，L3，D，求出所有深度为D，含有L1对{}，L2对[]，L3对()的SS串的个数，并用这个数对当前的年份11380求余数，这个余数就是密文中每行的第5个数，我们称之为&ldquo;神秘数&rdquo;。</p>\r\n<p>密文中某些行的第五个数已经模糊不清，而这些数字正是揭开陨石秘密的钥匙。现在科学家们聘请你来计算这个神秘数。</p>\r\n<p>输入文件</p>\r\n<p>共一行，4个整数L1，L2，L3，D。相邻两个数之间用一个空格分隔。（0&le;L1&le;10，0&le;L2&le;10，0&le;L3&le;10，0&le;D&le;30）</p>\r\n<p>输出文件</p>\r\n<p>共一行，包含一个整数，即神秘数。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n1 1 1 2\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n8\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:21'),
(301, '炮兵阵地', 'cannon', '<p>司令部的将军们打算在N*M的网格地图上部署他们的炮兵部队。一个N*M的地图由N行M列组成，地图的每一格可能是山地（用&ldquo;H&rdquo; 表示），也可能是平原（用&ldquo;P&rdquo;表示），如下图。在每一格平原地形上最多可以布置一支炮兵部队（山地上不能够部署炮兵部队）；一支炮兵部队在地图上的攻击 范围如图中黑色区域所示：</p>\r\n<p>如果在地图中的灰色所标识的平原上部署一支炮兵部队，则图中的黑色的网格表示它能够攻击到的区域：沿横向左右各两格，沿纵向上下各两格。图上其它白色网格均攻击不到。从图上可见炮兵的攻击范围不受地形的影响。</p>\r\n<p>现在，将军们规划如何部署炮兵部队，在防止误伤的前提下（保证任何两支炮兵部队之间不能互相攻击，即任何一支炮兵部队都不在其他支炮兵部队的攻击范围内），在整个地图区域内最多能够摆放多少我军的炮兵部队。</p>\r\n<p><span class="image"><img width="257" height="184" border="0" src="../../../../mw/images/0/08/Cannon.gif" alt="Image:Cannon.gif" longdesc="http://192.168.1.253/wiki/Image:Cannon.gif" /></span></p>\r\n<p>输入文件</p>\r\n<p>文件的第一行包含两个由空格分割开的正整数，分别表示N和M；</p>\r\n<p>接下来的N行，每一行含有连续的M个字符（&lsquo;P&rsquo;或者&lsquo;H&rsquo;），中间没有空格。按顺序表示地图中每一行的数据。N&le;100；M&le;10。</p>\r\n<p>输出文件</p>\r\n<p>文件仅在第一行包含一个整数K，表示最多能摆放的炮兵部队的数量。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n5 4\r\nPHPP\r\nPPHH\r\nPPPP\r\nPHPP\r\nPHHP\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n6\r\n</pre>', 500, 128, 10, 0, '2012-04-05 16:23:22'),
(302, '硬币购物', 'coin', '<p><b>【问题描述】</b></p>\r\n<p>一共有 4 种硬币,面值分别为 c1,c2,c3,c4 。阿Q带着一些硬币去商店买东西，他带了d1枚第一种硬币,d2枚第二种硬币,d3枚第三种硬币,d4枚第四种硬币,若想买一个价值为s的东西,问阿Q有多少种付coins的方法。</p>\r\n<p>比如 c={1,2,5,10},d={3,2,3,1},s=10,一共有4种方法:<br />\r\n10=1+1+1+2+5<br />\r\n10=1+2+2+5<br />\r\n10=5+5<br />\r\n10=10</p>\r\n<p>注意,阿Q可能会去很多次商店,每次带的硬币数量和要买的东西价值可能不一样,你需要对每次都求出方法总数.</p>\r\n<p><b>【数据输入】</b></p>\r\n<p align="left">输入文件的第一行是5个整数, c1,c2,c3,c4,tot 分别表示4种硬币的面值和阿Q去商店的次数,下面 tot 行 ,每行5个非负整数,d1,d2,d3,d4,s</p>\r\n<p><b>【数据输出】</b></p>\r\n<p>输出有tot行,表示第i次付coins的方法总数,保证答案在int64/long long范围内</p>\r\n<p><b>【输入样例】</b><br />\r\n1 2 5 10 2<br />\r\n3 2 3 1 10<br />\r\n1000 2 2 2 900<br />\r\n<br />\r\n<b>【输出样例】</b><br />\r\n4<br />\r\n27</p>\r\n<p><b>【数据范围】</b></p>\r\n<p>（1）100%的数据,d1,d2,d3,d4,s&lt;=1,00,000</p>\r\n<p>（2）30%的数据,tot&lt;=50</p>\r\n<p>（3）100%的数据,tot&lt;=1000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:22'),
(303, '反正切函数的应用', 'arctan', '<p><span class="image"><img height="670" border="0" width="568" src="../../../../mw/images/8/85/Arctan.gif" alt="Image:Arctan.gif" longdesc="http://192.168.1.253/wiki/Image:Arctan.gif" /></span></p>\r\n<p>输入文件</p>\r\n<p>输入文件中只有一个正整数a ，其中1&lt;=a&lt;=60000 。</p>\r\n<p>输出文件</p>\r\n<p>输出文件中只有一个整数，为b + c的值。</p>\r\n<p><br />\r\n输入样例</p>\r\n<pre>\r\n1\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n5\r\n</pre>', 100, 128, 10, 0, '2012-04-05 16:23:22');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(304, '方程的解数', 'equation1', '<p>问题描述</p>\r\n<p>已知一个n元高次方程：</p>\r\n<p><span class="image"><img height="41" alt="Image:Equation1.gif" width="308" border="0" src="../../../../mw/images/f/fb/Equation1.gif" /></span></p>\r\n<p>其中：x1, x2, &hellip;,xn是未知数，k1,k2,&hellip;,kn是系数，p1,p2,&hellip;pn是指数。且方程中的所有数均为整数。</p>\r\n<p>假设未知数1&le; xi &le;M, i=1,,,n，求这个方程的整数解的个数。</p>\r\n<p>输入文件</p>\r\n<p>文件的第1行包含一个整数n。第2行包含一个整数M。第3行到第n+2行，每行包含两个整数，分别表示ki和pi。两个整数之间用一个空格隔开。第3行的数据对应i=1，第n+2行的数据对应i=n。</p>\r\n<p><br />\r\n输出文件</p>\r\n<p>文件仅一行，包含一个整数，表示方程的整数解的个数。</p>\r\n<p>输入样例</p>\r\n<pre>\r\n3\r\n150\r\n1 2\r\n-1 2\r\n1 2\r\n</pre>\r\n<p>输出样例</p>\r\n<pre>\r\n178\r\n</pre>\r\n<p><br />\r\n约束条件</p>\r\n<p>1&lt;=n&lt;=6；1&lt;=M&lt;=150；</p>\r\n<p><span class="image"><img height="36" alt="Image:Equation2.gif" width="300" border="0" src="../../../../mw/images/4/4a/Equation2.gif" /></span></p>\r\n<p>方程的整数解的个数小于2^31。</p>\r\n<p>★本题中，指数Pi(i=1,2,&hellip;&hellip;,n)均为正整数。</p>', 3000, 64, 10, 0, '2012-04-05 16:23:22'),
(305, '木棍分割', 'stick', '<p><strong>【问题描述】 </strong></p>\r\n<p align="left">&nbsp;&nbsp;&nbsp;&nbsp; 有n根木棍，第i根木棍的长度为Li，n根木棍依次连结在一起，总共有n-1个连接处．现在允许你最多砍断m个连接处，砍完后n根木棍被分成了很多段，要求满足总长度最大的一段长度最小，并且输出有多少种砍木棍的方法使得总长度最大的一段长度最小．</p>\r\n<p align="left">【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件第一行有2个数n，m<br />\r\n接下来n行每行一个正整数Li，表示第i根木棍的长度．</p>\r\n<p align="left">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输出有2个数，第一个数是总长度最大的一段的长度最小值，第二个数是有多少种砍的方法使得满足条件．</p>\r\n<p>【输入样例】 <br />\r\n<br />\r\n3 2 <br />\r\n1<br />\r\n1<br />\r\n10</p>\r\n<p><br />\r\n【输出样例】 <br />\r\n10 2</p>\r\n<p>样例说明：两种砍的方法：(1)(1)(10)和(11)(10)</p>\r\n<p>【数据范围】</p>\r\n<p>n&lt;=50000,0&lt;=m&lt;=min(n-1,1000)<br />\r\n1&lt;=Li&lt;=1000</p>', 3000, 64, 10, 0, '2012-04-05 16:23:22'),
(306, '糊涂的记者', 'sign', '<p><strong>【问题描述】</strong></p>\r\n<p align="left" class="MsoNormal">　　    在如今的信息社会中，时间 - 就是生命，对于记者们来说，如何以最快的速度传递消息就显得十分重要了，而为了尽快记录消息内容，速记也是必不可少的。速记就是用一些简单且特殊的符号表示一定的含义，具体如何对应依个人习惯而定，没有一种固定的表示方法。 <br />\r\nTom 是一名报社的新闻记者，常常马不停蹄的跟着新闻跑，有时只能随手记下采访的内容，让人送回报社，而自己又奔赴下一个现场。不过 Tom 是一个糊涂的记者，有时忙中出错，把用自己的速记符号写的内容直接传回报社。因为一时联系不上 Tom ，但这条新闻又十分重要，要赶着在当天的报纸排版前整理出来，于是 Tom 的同事们只好来猜测 Tom 的速记符号的意思。幸运的是 Tom 的同事们与他共事的时间也不短了，对于 Tom 的一些用词情况有一定的了解，经过讨论，他们列出了一张可能性表来表示每一个速记符号可能与哪些单词相对应，并列出了对应的可能性有多大。 <br />\r\n你的任务是：根据 Tom 的同事们提供的可能性表，找出一种可能性最大的速记符号与单词的对应方法（可能性应该相乘来计算）。 <br />\r\n<strong>　　注意 </strong>： <strong>每一个速记符号有且只有一个单词与其对应，每一个单词有不超过一个速记符号与其对应（可能没有速记符号与之对应）。 </strong></p>\r\n<p class="MsoNormal">【输入格式】</p>\r\n<p class="MsoNormal">　　    文件的第一行有两个整数，分别为速记符号的个数 n(1&lt;=n&lt;=100) 和单词总 m (1&lt;=m&lt;=500) 。 <br />\r\n从第 1 行到第 n+1 行为每个速记符号可能对应的单词及其可能性。 <br />\r\n第 i+1(1&lt;=i&lt;=n) 行的第一个数 Ci 表示第 i 个速记符号可能与 Ci 个单词相对应，后面有 Ci 个数对 (Nik ， Rik)(1&lt;=k&lt;=Ci) ，表示第 i 个速记符号与第 Nik 个单词相对应的可能性为 Rik （ Rik 为大于 0 小于 1 的实数）。</p>\r\n<p class="MsoNormal">【输出格式】</p>\r\n<p class="MsoNormal">　　    输出文件仅包含一行，若有解则输出一个实数即最大的可能性，保留四位有效数字（四舍五入），若无解则输出 &quot;NO ANSWER&quot; 。 <br />\r\n（当可能性大于 1e-12 时才被视为有解）</p>\r\n<p class="MsoNormal">【输入输出样例】</p>\r\n<p class="MsoNormal">输入文件</p>\r\n<p class="MsoNormal">3 3</p>\r\n<p class="MsoNormal">2 1 0.4 3 0.2</p>\r\n<p class="MsoNormal">1 3 0.8</p>\r\n<p class="MsoNormal">3 1 0.1 2 0.9 3 0.2</p>\r\n<p class="MsoNormal"><br />\r\n输出文件</p>\r\n<p>0.2880</p>', 1000, 128, 10, 0, '2012-04-05 16:23:22'),
(307, '均分数据', 'data', '<p><strong>【问题描述】 </strong></p>\r\n<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;已知N个正整数：A1，A2，&hellip;&hellip;，An。今要将它们分成M组，使得各组数据的数值和最平均，即各组的均方差最小。均方差公式如下：</p>\r\n<p align="left">&nbsp;</p>\r\n<div id="file" class="fullImageLink"><img border="0" alt="Image:Data1.gif" width="135" height="55" src="http://www.ruvtex.cn/mw/images/8/8e/Data1.gif" /> <img border="0" alt="Image:Data2.gif" width="77" height="49" src="http://www.ruvtex.cn/mw/images/d/d4/Data2.gif" /></div>\r\n<p align="left">&nbsp;</p>\r\n<p align="left">其中第一个公式是均方差，第二个公式是各组数据和的平均值，xi为第i组数据的数值和。</p>\r\n<p align="left">【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行是两个整数，表示N，M的值（N是整数个数，M是要分成的组数）。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第二行有N个整数，表示A1，A2，&hellip;&hellip;，An。整数的范围是1--50。</p>\r\n<p align="left">（同一行的整数间用空格分开）</p>\r\n<p align="left">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输出文件只有一行，包括一个数 ，表示最小均方差的值（保留小数点后两位数字）。</p>\r\n<p>【输入样例】 <br />\r\n6 3 <br />\r\n1 2 3 4 5 6</p>\r\n<p>【输出样例】</p>\r\n<p>0.00</p>\r\n<p>(1和6，2和5，3和4分别为一组)</p>\r\n<p>【数据范围】</p>\r\n<p>对于40%的数据，保证有M&lt;=N&lt;=10,2&lt;=M&lt;=6<br />\r\n对于100%的数据，保证有M&lt;=N&lt;=20,2&lt;=M&lt;=6</p>', 1000, 128, 10, 0, '2012-04-05 16:23:22'),
(308, '理想的正方形', 'square', '<p><b>【问题描述】</b></p>\r\n<p>有一个a*b的整数组成的矩阵，现请你从中找出一个n*n的正方形区域，使得该区域所有数中的最大值和最小值的差最小。</p>\r\n<p><b>【输入】</b>:</p>\r\n<p>第一行为3个整数，分别表示a,b,n的值<br />\r\n第二行至第a+1行每行为b个非负整数，表示矩阵中相应位置上的数。每行相邻两数之间用一空格分隔。</p>\r\n<p><b>【输出】</b>:</p>\r\n<p>仅一个整数，为a*b矩阵中所有&ldquo;n*n正方形区域中的最大整数和最小整数的差值&rdquo;的最小值。</p>\r\n<p><b>【输入样例】</b><br />\r\n5 4 2<br />\r\n1 2 5 6<br />\r\n0 17 16 0<br />\r\n16 17 2 1<br />\r\n2 10 2 1<br />\r\n1 2 2 2<br />\r\n<br />\r\n<b>【输出样例】</b><br />\r\n1</p>\r\n<p><b>【数据范围】</b></p>\r\n<p>（1）矩阵中的所有数都不超过1,000,000,000</p>\r\n<p>&nbsp;</p>\r\n<p>（2）20%的数据2&lt;=a,b&lt;=100,n&lt;=a,n&lt;=b,n&lt;=10</p>\r\n<p>&nbsp;</p>\r\n<p>（3）100%的数据2&lt;=a,b&lt;=1000,n&lt;=a,n&lt;=b,n&lt;=100</p>', 2000, 128, 10, 0, '2012-04-05 16:23:22'),
(309, '香甜的黄油', 'butter', '<h2><span class="mw-headline">描述</span></h2>\r\n<p>农夫John发现做出全威斯康辛州最甜的黄油的方法：糖。把糖放在一片牧场上，他知道N（1&lt;=N&lt;=500）只奶牛会过来舔它，这样就能做出能卖好价钱的超甜黄油。当然，他将付出额外的费用在奶牛上。</p>\r\n<p>农夫John很狡猾。像以前的Pavlov，他知道他可以训练这些奶牛，让它们在听到铃声时去一个特定的牧场。他打算将糖放在那里然后下午发出铃声，以至他可以在晚上挤奶。</p>\r\n<p>农夫John知道每只奶牛都在各自喜欢的牧场（一个牧场不一定只有一头牛）。给出各头牛在的牧场和牧场间的路线，找出使所有牛到达的路程和最短的牧场（他将把糖放在那）</p>\r\n<h2><span class="mw-headline">格式</span><b><br />\r\n</b></h2>\r\n<p><b>INPUT FORMAT</b>:</p>\r\n<p>第一行: 三个数：奶牛数N，牧场数P（2&lt;=P&lt;=800），牧场间道路数C(1&lt;=C&lt;=1450)</p>\r\n<p>第二行到第N+1行: 1到N头奶牛所在的牧场号</p>\r\n<p>第N+2行到第N+C+1行： 每行有三个数：相连的牧场A、B，两牧场间距离D（1&lt;=D&lt;=255），当然,连接是双向的</p>\r\n<p><b>OUTPUT FORMAT</b>:</p>\r\n<p>一行  输出奶牛必须行走的最小的距离和</p>\r\n<h2><span class="mw-headline">SAMPLE INPUT </span></h2>\r\n<pre>\r\n3 4 5\r\n2\r\n3\r\n4\r\n1 2 1\r\n1 3 5\r\n2 3 7\r\n2 4 3\r\n3 4 5\r\n</pre>\r\n<p><b>样例图形</b></p>\r\n<pre>\r\n         P2  \r\nP1 @--1--@ C1\r\n    \\    |\\\r\n     \\   | \\\r\n      5  7  3\r\n       \\ |   \\\r\n        \\|    \\ C3\r\n      C2 @--5--@\r\n         P3    P4\r\n</pre>\r\n<h2><span class="mw-headline"> SAMPLE OUTPUT </span></h2>\r\n<p>8</p>\r\n<p>{说明： 放在4号牧场最优 }</p>', 1000, 128, 10, 0, '2012-04-05 16:23:22'),
(310, 'Out of Hay', 'outofhay', '<p class="pst">Description</p>\r\n<div lang="en-US" class="ptx">The cows have run out of hay, a horrible event that must be remedied immediately. Bessie intends to visit the other farms to survey their hay situation. There are N (2 &lt;= N &lt;= 2,000) farms (numbered 1..N); Bessie starts at Farm 1. She''ll traverse some or all of the M (1 &lt;= M &lt;= 10,000) two-way roads whose length does not exceed 1,000,000,000 that connect the farms. Some farms may be multiply connected with different length roads. All farms are connected one way or another to Farm 1. <br />\r\n<br />\r\nBessie is trying to decide how large a waterskin she will need. She knows that she needs one ounce of water for each unit of length of a road. Since she can get more water at each farm, she''s only concerned about the length of the longest road. Of course, she plans her route between farms such that she minimizes the amount of water she must carry. <br />\r\n<br />\r\nHelp Bessie know the largest amount of water she will ever have to carry: what is the length of longest road she''ll have to travel between any two farms, presuming she chooses routes that minimize that number? This means, of course, that she might backtrack over a road in order to minimize the length of the longest road she''ll have to traverse.</div>\r\n<p class="pst">Input</p>\r\n<div lang="en-US" class="ptx">* Line 1: Two space-separated integers, N and M. <br />\r\n<br />\r\n* Lines 2..1+M: Line i+1 contains three space-separated integers, A_i, B_i, and L_i, describing a road from A_i to B_i of length L_i.</div>\r\n<p class="pst">Output</p>\r\n<div lang="en-US" class="ptx">* Line 1: A single integer that is the length of the longest road required to be traversed.</div>\r\n<p class="pst">Sample Input</p>\r\n<pre class="sio">\r\n3 3\r\n1 2 23\r\n2 3 1000\r\n1 3 43</pre>\r\n<p class="pst">Sample Output</p>\r\n<pre class="sio">\r\n43</pre>\r\n<p class="pst">Hint</p>\r\n<div lang="en-US" class="ptx">OUTPUT DETAILS: <br />\r\n<br />\r\nIn order to reach farm 2, Bessie travels along a road of length 23. To reach farm 3, Bessie travels along a road of length 43. With capacity 43, she can travel along these roads provided that she refills her tank to maximum capacity before she starts down a road.</div>', 1000, 128, 11, 0, '2012-04-05 16:23:22'),
(311, 'Redundant Paths', 'rpaths', '<p class="pst">Description</p>\r\n<div lang="en-US" class="ptx">In order to get from one of the F (1 &lt;= F &lt;= 5,000) grazing fields (which are numbered 1..F) to another field, Bessie and the rest of the herd are forced to cross near the Tree of Rotten Apples. The cows are now tired of often being forced to take a particular path and want to build some new paths so that they will always have a choice of at least two separate routes between any pair of fields. They currently have at least one route between each pair of fields and want to have at least two. Of course, they can only travel on Official Paths when they move from one field to another. <br />\r\n<br />\r\nGiven a description of the current set of R (F-1 &lt;= R &lt;= 10,000) paths that each connect exactly two different fields, determine the minimum number of new paths (each of which connects exactly two fields) that must be built so that there are at least two separate routes between any pair of fields. Routes are considered separate if they use none of the same paths, even if they visit the same intermediate field along the way. <br />\r\n<br />\r\nThere might already be more than one paths between the same pair of fields, and you may also build a new path that connects the same fields as some other path.</div>\r\n<p class="pst">Input</p>\r\n<div lang="en-US" class="ptx">Line 1: Two space-separated integers: F and R <br />\r\n<br />\r\nLines 2..R+1: Each line contains two space-separated integers which are the fields at the endpoints of some path.</div>\r\n<p class="pst">Output</p>\r\n<div lang="en-US" class="ptx">Line 1: A single integer that is the number of new paths that must be built.</div>\r\n<p class="pst">Sample Input</p>\r\n<pre class="sio">\r\n7 7\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n4 5\r\n5 6\r\n5 7</pre>\r\n<p class="pst">Sample Output</p>\r\n<pre class="sio">\r\n2</pre>\r\n<p class="pst">Hint</p>\r\n<div lang="en-US" class="ptx">Explanation of the sample: <br />\r\n<br />\r\nOne visualization of the paths is: <br />\r\n<pre>\r\n   1   2   3\r\n   +---+---+  \r\n       |   |\r\n       |   |\r\n 6 +---+---+ 4\r\n      / 5\r\n     / \r\n    / \r\n 7 +</pre>\r\nBuilding new paths from 1 to 6 and from 4 to 7 satisfies the conditions. <br />\r\n<pre>\r\n   1   2   3\r\n   +---+---+  \r\n   :   |   |\r\n   :   |   |\r\n 6 +---+---+ 4\r\n      / 5  :\r\n     /     :\r\n    /      :\r\n 7 + - - - - </pre>\r\nCheck some of the routes: <br />\r\n<span lang="en-us">1 &ndash; 2:  1 &ndash;&gt; 2 and 1 &ndash;&gt; 6 &ndash;&gt; 5 &ndash;&gt; 2 <br />\r\n1 &ndash; 4:  1 &ndash;&gt; 2 &ndash;&gt; 3 &ndash;&gt; 4 and 1 &ndash;&gt; 6 &ndash;&gt; 5 &ndash;&gt; 4 <br />\r\n3 &ndash; 7:  3 &ndash;&gt; 4 &ndash;&gt; 7 and 3 &ndash;&gt; 2 &ndash;&gt; 5 &ndash;&gt; 7</span> <br />\r\nEvery pair of fields is, in fact, connected by two routes. <br />\r\n<br />\r\nIt''s possible that adding some other path will also solve the problem (like one from 6 to 7). Adding two paths, however, is the minimum.</div>', 1000, 128, 11, 0, '2012-04-05 16:23:23'),
(312, '上升序列', 'lis', '<p><strong>【问题描述】 </strong></p>\r\n<p align="left">&nbsp;对于一个给定的S={a<sub>1</sub>,a<sub>2</sub>,a<sub>3</sub>,&hellip;,a<sub>n</sub>},若有P={a<sub>x1</sub>,a<sub>x2</sub>,a<sub>x3</sub>,&hellip;,a<sub>xm</sub>},满足(x<sub>1</sub>&lt;x<sub>2</sub>&lt;&hellip;&lt;x<sub>m</sub>)且（a<sub>x1</sub>&lt;a<sub>x2</sub>&lt;&hellip;&lt;a<sub>xm</sub>)。那么就称P为S的一个上升序列。如果有多个P满足条件，那么我们想求字典序最小的那个。 任务 给出S序列，给出若干询问。对于第i个询问，求出长度为Li的上升序列，如有多个，求出字典序最小的那个（即首先x<sub>1</sub>最小，如果不唯一，再看x<sub>2</sub>最小&hellip;&hellip;），如果不存在长度为Li的上升序列，则打印Impossible.</p>\r\n<p align="left">【输入格式】 <br />\r\n&nbsp; 第一行一个N，表示序列一共有N个元素</p>\r\n<p align="left">第二行N个数，为a<sub>1</sub>,a<sub>2</sub>,&hellip;,a<sub>n</sub></p>\r\n<p align="left">第三行一个M，表示询问次数。下面接M行每行一个数L，表示要询问长度为L的上升序列。</p>\r\n<p align="left">【输出格式】 <br />\r\n对于每个询问，如果对应的序列存在，则输出，否则打印Impossible.</p>\r\n<p>【输入样例】 <br />\r\n6<br />\r\n3 4 1 2 3 6<br />\r\n3<br />\r\n6<br />\r\n4<br />\r\n5</p>\r\n<p><br />\r\n【输出样例】 <br />\r\nImpossible<br />\r\n1 2 3 6<br />\r\nImpossible</p>\r\n<p>【数据范围】</p>\r\n<p>N&lt;=10000 M&lt;=1000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:23'),
(313, '和平委员会', 'spo', '<p>根据宪法，Byteland民主共和国的公众和平委员会应该在国会中通过立法程序来创立。 不幸的是，由于某些党派代表之间的不和睦而使得这件事存在障碍。</p>\r\n<p>此委员会必须满足下列条件：</p>\r\n<ul>\r\n    <li>每个党派都在委员会中恰有1个代表，</li>\r\n    <li>如果2个代表彼此厌恶，则他们不能都属于委员会。</li>\r\n</ul>\r\n<p>每个党在议会中有2个代表。代表从1编号到2n。 编号为2i-1和2i的代表属于第I个党派。</p>\r\n<p>任务</p>\r\n<p>写一程序：</p>\r\n<ul>\r\n    <li>从文本文件读入党派的数量和关系不友好的代表对，</li>\r\n    <li>计算决定建立和平委员会是否可能，若行，则列出委员会的成员表，</li>\r\n    <li>结果写入文本文件。</li>\r\n</ul>\r\n<p>输入</p>\r\n<p>在文本文件的第一个行有2非负整数n和m。 他们各自表示：党派的数量n，1 &lt; =n &lt; =8000和不友好的代表对m，0 &lt;=m &lt;=20000。 在下面m行的每行为一对整数a,b，1&lt;=a &lt;b&lt;=2n，中间用单个空格隔开。 它们表示代表a,b互相厌恶。</p>\r\n<p>输出</p>\r\n<p>如果委员会不能创立，文本文件中应该包括单词NIE。若能够成立，文本文件SPO.OUT中应该包括n个从区间1到2n选出的整数，按升序写出，每行一个，这些数字为委员会中代表的编号。如果委员会能以多种方法形成，程序可以只写他们的某一个。</p>\r\n<p>样品输入</p>\r\n<pre>\r\n3 2\r\n1 3\r\n2 4\r\n</pre>\r\n<p>样品输出</p>\r\n<pre>\r\n1\r\n4\r\n5\r\n</pre>', 1000, 128, 14, 0, '2012-04-05 16:23:23'),
(314, '郁闷的出纳员', 'cashier', '<p>【问题描述】</p>\r\n<p>OIER公司是一家大型专业化软件公司，有着数以万计的员工。作为一名出纳员，我的任务之一便是统计每位员工的工资。这本来是一份不错的工 作，但是令人郁闷的是，我们的老板反复无常，经常调整员工的工资。如果他心情好，就可能把每位员工的工资加上一个相同的量。反之，如果心情不好，就可能把 他们的工资扣除一个相同的量。我真不知道除了调工资他还做什么其它事情。</p>\r\n<p>工资的频繁调整很让员工反感，尤其是集体扣除工资的时候，一旦某位员工发现自己的工资已经低于了合同规定的工资下界，他就会立刻气愤地离 开公司，并且再也不会回来了。每位员工的工资下界都是统一规定的。每当一个人离开公司，我就要从电脑中把他的工资档案删去，同样，每当公司招聘了一位新员 工，我就得为他新建一个工资档案。</p>\r\n<p>老板经常到我这边来询问工资情况，他并不问具体某位员工的工资情况，而是问现在工资第k多的员工拿多少工资。每当这时，我就不得不对数万个员工进行一次漫长的排序，然后告诉他答案。</p>\r\n<p>好了，现在你已经对我的工作了解不少了。正如你猜的那样，我想请你编一个工资统计程序。怎么样，不是很困难吧？</p>\r\n<p>【输入文件】</p>\r\n<p>第一行有两个非负整数n和min。n表示下面有多少条命令，min表示工资下界。接下来的n行，每行表示一条命令。命令可以是以下四种之一：</p>\r\n<ul>\r\n    <li>名称	格式	作用</li>\r\n    <li>I命令	I_k	新建一个工资档案，初始工资为k。如果某员工的初始工资低于工资下界，他将立刻离开公司。</li>\r\n    <li>A命令	A_k	把每位员工的工资加上k</li>\r\n    <li>S命令	S_k	把每位员工的工资扣除k</li>\r\n    <li>F命令	F_k	查询第k多的工资</li>\r\n</ul>\r\n<p>_（下划线）表示一个空格，I命令、A命令、S命令中的k是一个非负整数，F命令中的k是一个正整数。 在初始时，可以认为公司里一个员工也没有。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件的行数为F命令的条数加一。</p>\r\n<p>对于每条F命令，你的程序要输出一行，仅包含一个整数，为当前工资第k多的员工所拿的工资数，如果k大于目前员工的数目，则输出-1。</p>\r\n<p>输出文件的最后一行包含一个整数，为离开公司的员工的总数。</p>\r\n<p><br />\r\n【样例输入】</p>\r\n<pre>\r\n9 10\r\nI 60\r\nI 70\r\nS 50\r\nF 2\r\nI 30\r\nS 15\r\nA 5\r\nF 1\r\nF 2\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n10\r\n20\r\n-1\r\n2\r\n</pre>\r\n<p>【约定】</p>\r\n<ul>\r\n    <li>I命令的条数不超过100000</li>\r\n    <li>A命令和S命令的总条数不超过100</li>\r\n    <li>F命令的条数不超过100000</li>\r\n    <li>每次工资调整的调整量不超过1000</li>\r\n    <li>新员工的工资不超过100000</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:23:23'),
(315, 'Roadblocks', 'block', '<p class="pst">Description</p>\r\n<div lang="en-US" class="ptx">\r\n<p>Bessie has moved to a small farm and sometimes enjoys returning to visit one of her best friends. She does not want to get to her old home too quickly, because she likes the scenery along the way. She has decided to take the second-shortest rather than the shortest path. She knows there must be some second-shortest path.</p>\r\n<p>The countryside consists of <i>R</i> (1 &le; <i>R</i> &le; 100,000) bidirectional roads, each linking two of the N (1 &le; <i>N</i> &le; 5000) intersections, conveniently numbered 1..<i>N</i>. Bessie starts at intersection 1, and her friend (the destination) is at intersection <i>N</i>.</p>\r\n<p>The second-shortest path may share roads with any of the shortest paths, and it may backtrack i.e., use the same road or intersection more than once. The second-shortest path is the shortest path whose length is longer than the shortest path(s) (i.e., if two or more shortest paths exist, the second-shortest path is the one whose length is longer than those but no longer than any other path).</p>\r\n</div>\r\n<p class="pst">Input</p>\r\n<div lang="en-US" class="ptx">Line 1: Two space-separated integers: <i>N</i> and <i>R</i> <br />\r\nLines 2..<i>R</i>+1: Each line contains three space-separated integers: <i>A</i>, <i>B</i>, and <i>D</i> that describe a road that connects intersections <i>A</i> and <i>B</i> and has length <i>D</i> (1 &le; <i>D</i> &le; 5000)</div>\r\n<p class="pst">Output</p>\r\n<div lang="en-US" class="ptx">Line 1: The length of the second shortest path between node 1 and node <i>N</i></div>\r\n<p class="pst">Sample Input</p>\r\n<pre class="sio">\r\n4 4\r\n1 2 100\r\n2 4 200\r\n2 3 250\r\n3 4 100</pre>\r\n<p class="pst">Sample Output</p>\r\n<pre class="sio">\r\n450</pre>\r\n<p class="pst">Hint</p>\r\n<div lang="en-US" class="ptx">Two routes: 1 -&gt; 2 -&gt; 4 (length 100+200=300) and 1 -&gt; 2 -&gt; 3 -&gt; 4 (length 100+250+100=450)</div>', 1000, 128, 10, 0, '2012-04-05 16:23:23'),
(316, '穿越磁场', 'cross', '<p>探险机器人在Samuel星球上寻找一块奇特的矿石，然而此时它陷入了一片神秘的磁场区域，动弹不得。</p>\r\n<p>探险空间站立刻扫描了这片区域，绘制出该区域的磁场分布平面图。这片区域中分布了N个磁场，每个磁场呈正方形，且边与坐标轴平行。</p>\r\n<p>例如下图中，存在3个磁场，白点表示机器人的位置，黑点表示矿石的位置：</p>\r\n<p><span class="image"><img height="192" width="355" longdesc="http://192.168.1.253/wiki/Image:Cross_1.gif" alt="Image:Cross 1.gif" src="../../../../mw/images/e/ea/Cross_1.gif" /></span></p>\r\n<p>科学家们分析平面图，进一步发现：这些磁场为大小不一的正方形，可能相交，甚至覆盖，但是它们的边缘不会重合，顶点也不会重合。</p>\r\n<p>例如下面的两种情形是不会出现的：</p>\r\n<p><img height="122" width="375" longdesc="/wiki/Image:Cross_2.gif" alt="Image:Cross 2.gif" src="../../../../mw/images/c/ca/Cross_2.gif" /></p>\r\n<p>科学家们给探险机器人启动了磁力罩，这样它就可以在磁场中自由穿越了。</p>\r\n<p>初始时，探险机器人和所有矿石都不在任何磁场的边缘。由于技术限制，在穿越过程中机器人只能够水平或垂直移动，且不能够沿着磁场的边缘行动。</p>\r\n<p>由于磁力罩的能量有限，科学家们希望探险机器人穿越尽量少的磁场边缘采集到这块矿石。例如上图中，探险机器人最少需要穿越两次磁场边缘。</p>\r\n<p>现在小联请你编写程序，帮助科学家们设计探险机器人的路线，统计探险机器人最少需要穿越多少次磁场边缘。</p>\r\n<p><br />\r\n输入：第一行有一个整数N，表示有N个磁场（1 &lt; N &lt; 100）。随后有N行，每行有三个整数X、Y、C（0 &lt; X ,Y ,C &lt; 10000），表示一个磁场左下角坐标为（X,Y），边长为C。接下来有一行，共有四个整数SX, SY, TX, TY，表示机器人初始坐标为（SX, SY），矿石坐标为（TX，TY）（其中，1 &lt; SX, SY, TX, TY &lt; 10000）。</p>\r\n<p><br />\r\n输出：单行输出一个整数，表示机器人最少需要穿越多少次磁场边缘。</p>\r\n<p><br />\r\n样例：</p>\r\n<p>输入：</p>\r\n<pre>\r\n2\r\n1 3 3\r\n2 1 4\r\n0 0 3 4\r\n</pre>\r\n<p><br />\r\n输出：</p>\r\n<pre>\r\n2\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:23'),
(317, '玩具取名', 'name', '<p>[题目描述]</p>\r\n<p>某人有一套玩具，并想法给玩具命名。首先他选择WING四个字母中的任意一个字母作为玩具的基本名字。然后他会根据自己的喜好，将名字中任意一个字母用&ldquo;WING&rdquo;中任意两个字母代替，使得自己的名字能够扩充得很长。</p>\r\n<p>现在，他想请你猜猜某一个很长的名字，最初可能是由哪几个字母变形过来的。</p>\r\n<p>[输入]</p>\r\n<ul>\r\n    <li>第一行四个整数W、I、N、G。表示每一个字母能由几种两个字母所替代。</li>\r\n    <li>接下来W行，每行两个字母,表示W可以用这两个字母替代。</li>\r\n    <li>接下来I行，每行两个字母,表示I可以用这两个字母替代。</li>\r\n    <li>接下来N行，每行两个字母,表示N可以用这两个字母替代。</li>\r\n    <li>接下来G行，每行两个字母,表示G可以用这两个字母替代。</li>\r\n    <li>最后一行一个长度不超过Len的字符串。表示这个玩具的名字。</li>\r\n</ul>\r\n<p>[输出]</p>\r\n<ul>\r\n    <li>一行字符串，该名字可能由哪些字母变形而得到。（按照WING的顺序输出）</li>\r\n    <li>如果给的名字不能由任何一个字母变形而得到则输出&ldquo;The name is wrong!&rdquo;</li>\r\n</ul>\r\n<p>[样例]</p>\r\n<p>Input</p>\r\n<pre>\r\n1 1 1 1\r\nII\r\nWW\r\nWW\r\nIG\r\nIIII\r\n</pre>\r\n<p>Output</p>\r\n<pre>\r\nIN\r\n</pre>\r\n<p>[样例解释]</p>\r\n<ul>\r\n    <li>W可以变成II所以IIII可以缩成WW</li>\r\n    <li>IN均能变成WW所以WW又可以缩成I或者N</li>\r\n    <li>所以最终答案应该按照&ldquo;WING&rdquo;的顺序输出IN</li>\r\n</ul>\r\n<p>[数据范围]</p>\r\n<ul>\r\n    <li>30%数据满足Len&lt;=20，W、I、N、G&lt;=6</li>\r\n    <li>100%数据满足Len&lt;=200，W、I、N、G&lt;=16</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:23:23'),
(318, '劣质编码', 'codez', '<div><strong>题目背景： </strong></div>\r\n<div>一个编码方案把每个字符对应到一个01 串。例如{1,1010,01,10101}就是一个编码方案，它把四个字符（假设它们为a,b,c,d）分别对应到串1、1010，01，10101。字符串的编码为各字符编码的连接。例如，在刚才的编码方案中，字符串cac的编码为01101，dcb的编码为10101011010。<br />\r\n进一步分析发现，刚才的编码是相当劣质的，因为字符串ba, acc 和d 的编码都是10101。对于一个编码方案，你的任务是找出三个不同的字符串，使得它们的编码全相同。换句话说，找一个01 编码串，使得它至少有三种解码方式。<br />\r\n如果有多组解，这个编码串应当尽量短。<br />\r\n【输入】<br />\r\n第一行包含一个整数n，即符号的个数。以下n 行每行为一个长度不超过50的01串（可能为空串），即各符号的编码。<br />\r\n【输出】<br />\r\n仅一行，包含一个整数，即最短编码的长度。如果无解，输出-1。<br />\r\n【样例】</div>\r\n<table border="1" width="200">\r\n    <tbody>\r\n        <tr>\r\n            <td>输入</td>\r\n            <td>输出</td>\r\n        </tr>\r\n        <tr>\r\n            <td>4<br />\r\n            1<br />\r\n            1010<br />\r\n            01<br />\r\n            10101</td>\r\n            <td>5</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2<br />\r\n            0<br />\r\n            1</td>\r\n            <td>-1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>7<br />\r\n            00011011<br />\r\n            000110<br />\r\n            11<br />\r\n            0001<br />\r\n            1011<br />\r\n            00<br />\r\n            011011</td>\r\n            <td>8</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>【数据规模】<br />\r\n2 &lt;= n &lt;= 30<br />\r\n&nbsp;</div>', 1000, 128, 20, 0, '2012-04-05 16:23:23'),
(319, '洞窟探索', 'hole', '<div><strong>题目背景： </strong></div>\r\n<div>LSZ小朋友组织了一支天文爱好队，他们这次要去探索一个洞窟（天文爱好者怎么探索洞窟？！？），因为据说那里是一个神秘的地方，是地球上最容易捕捉到来自宇宙信息的场所。小朋友带领他的天文爱好队以及许多先进设备来到了洞窟&hellip;&hellip;</div>\r\n<div><strong>题目描述： </strong></div>\r\n<div>洞窟由许许多多的洞穴和通道组成，且任意两个洞穴间有且只有一条路经，每条路经的长度不一定相同。从入口可以进入 1号洞穴，且1号洞穴是唯一与入口相连的洞穴。由于设备有限，小朋友只能在某些洞穴设置他的设备（一个洞穴设一个就足够了）。为了防止迷路，天文爱好队的成员一致决定，每到一个洞窟，就在这里设置一个设备，并留一人看守。</div>\r\n<div>这些设备工作时，任意两个设备间需要通信。通信耗费的时间与这两个洞穴之间的距离有关（指通过通道连接的距离，非两点间距离）。如果有 m个设备，那么共有m*(m-1)/2条路经连接任意两个不同的设备，现在小朋友想知道，选择哪些洞穴，可以使得这些路径的平均长度最小。</div>\r\n<div>平均长度即&sum; dist(i,j)/sum,dist(i,j)与dist(j,i)两者只算其中一者（即每两点间的路径长只算一遍）,sum:=m*(m-1)/2。</div>\r\n<div>注意：为了使问题简化，我们假设任何一个洞穴最多与另外三个洞穴直接有通道相连。 1号洞穴最多只与两个洞穴直接有通道相连。</div>\r\n<div><strong>输入： </strong></div>\r\n<div>第一行两个整数 n和m，表示洞穴总数和设备数。</div>\r\n<div>以下 n-1行,每行3个整数x y 和 l，表示一条连接x 和 y 洞穴的通道，长度为l。</div>\r\n<div><strong>输出： </strong></div>\r\n<div>仅一行，一个数：表示最小的平均长度。（保留到小数点后 2位）</div>\r\n<div><strong>输入样例： </strong></div>\r\n<div>4 3</div>\r\n<div>1 2 1</div>\r\n<div>1 3 2</div>\r\n<div>2 4 1</div>\r\n<div><strong>输出样例： </strong></div>\r\n<div>1.33</div>\r\n<div><strong>数据规模： </strong></div>\r\n<div>n&lt;=1500,m&lt;=1000，m&lt;=n</div>\r\n<div>保证每条通道的长度为正，且运算过程中不会有超过 longint的情况（在算法正确时）</div>\r\n<div><strong>样例解释： </strong></div>\r\n<div>选择 1、2、4号洞穴，总路径长1+1+2=4，平均长度：4/3=1.33</div>', 1000, 128, 10, 0, '2012-04-05 16:23:24'),
(320, '上学路线', 'routez', '<div>可可和卡卡家住HF市的东郊，每天上学他们都要转车多次才能到达市区西端的学校。直到有一天他们两人参加了学校的信息学奥林匹克竞赛小组才发现每天上学的乘车路线不一定是最优的。</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;可可：&ldquo;很可能我们在上学的路途上浪费了大量的时间，让我们写一个程序来计算上学需要的最少时间吧！&rdquo;</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;HF市一共设有 <em>N </em>个公交车站，不妨将它们编号为 1&hellip; <em>N </em>的自然数，并认为可可和卡卡家住在 1 号汽车站附近，而他们学校在 <em>N </em>号汽车站。市内有 <em>M </em>条直达汽车路线，执行第 <em>i </em>条路线的公交车 <strong>往返于 </strong>站点 <em>p </em>i 和 <em>q </em>i 之间，从起点到终点需要花费的时间为 <em>t i </em>。 (1&lt;= <em>i </em>&lt;= <em>M </em>, 1&lt;= <em>p i </em>, <em>q i </em>&lt;= <em>N </em>)</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;两个人坐在电脑前，根据上面的信息很快就编程算出了最优的乘车方案。然而可可忽然有了一个鬼点子，他想趁卡卡不备，在卡卡的输入数据中删去一些路线，从而让卡卡的程序得出的答案大于实际的最短时间。而对于每一条路线 <em>i </em>事实上都有一个代价 <em>c i </em>：删去路线的 <em>c i </em>越大卡卡就越容易发现这个玩笑，可可想知道什么样的删除方案可以达到他的目的而让被删除的公交车路线 <em>c i </em>之和最小。</div>\r\n<div><b><font size="4">[ 任务 ] </font></b></div>\r\n<div>编写一个程序：</div>\r\n<div>&bull;&nbsp; 从输入文件中读取HF市公交路线的信息；</div>\r\n<div>&bull;&nbsp; 计算出实际上可可和卡卡上学需要花费的最少时间；</div>\r\n<div>&bull;&nbsp; 帮助可可设计一个方案，删除输入信息中的一些公交路线，使得删除后从家到学校需要的最少时间变大，而被删除路线的 <em>c i </em>和最小；</div>\r\n<div>&bull;&nbsp; 向输出文件输出答案。</div>\r\n<div><b><font size="4">[ 输入格式 ] </font></b></div>\r\n<div>输入文件中第一行有两个正整数 <em>N </em>和 <em>M </em>，分别表示HF市公交车站和公交汽车路线的个数。以下 <em>M </em>行，每行（第 <em>i </em>行，总第 ( <em>i </em>+1) 行）用四个正整数描述第 <em>i </em>条路线： <em>p i </em>, <em>q i </em>, <em>t i </em>, <em>c i </em>；具体含义见上文描述。</div>\r\n<div><b><font size="4">[ 输出格式 ] </font></b></div>\r\n<div>输出文件最多有两行。</div>\r\n<div>第一行中仅有一个整数，表示从可可和卡卡家到学校需要的最短时间。</div>\r\n<div>第二行描述你为可可制定的方案，首先有两个整数 <em>K </em>和 <em>C </em>，表示总共需要删除 <em>K </em>条路线，它们的 <em>c i </em>之和为 <em>C </em>最小；</div>\r\n<div>接着有 <em>K </em>行，每行1个 1&hellip; <em>N </em>的正整数： <em>d </em>1 , <em>d </em>2 , &hellip;, <em>d K </em>，表示需要删除的路线编号，即输入文件中顺数的编号。<b>如果有多解，输出任意一个。</b></div>\r\n<div><b><font size="4">[ 输入样例 ] </font></b></div>\r\n<div>6 7 <br />\r\n1 2 1 3 <br />\r\n2 6 1 5 <br />\r\n1 3 1 1 <br />\r\n3 4 1 1 <br />\r\n4 6 1 1 <br />\r\n5 6 1 2 <br />\r\n1 5 1 4</div>\r\n<div><b><font size="4">[ 输出样例 ] </font></b></div>\r\n<div>2 <br />\r\n2 5</div>\r\n<div>1</div>\r\n<div>6</div>\r\n<div><b><font size="4">[ 数据约束 ] </font></b></div>\r\n<div>2&lt;= <em>N </em>&lt;=500, 1&lt;= <em>M </em>&lt;=124 750, 1&lt;= <em>t i </em>, <em>c i </em>&lt;=10 000</div>\r\n<div>HF市的公交网络十分发达，你可以认为任意两个车站间都可以通过直达或转车互相到达，当然如果在你提供的删除方案中，家和学校无法互相到达，那么则认为上学需要的最短为正无穷大：这显然是一个合法的方案。</div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:24'),
(321, '着色方案', 'color', '<p class="MsoNormal"><strong>题目背景： </strong></p>\r\n<p>有n个木块排成一行，从左到右依次编号为1~n。你有k种颜色的油漆，其中第i 种颜色的油漆足够涂ci 个木块。所有油漆刚好足够涂满所有木块，即  c1+c2+...+ck=n。相邻两个木块涂相同色显得很难看，所以你希望统计任意两个相邻木块颜色不同的着色方案。<br />\r\n【输入】<br />\r\n第一行为一个正整数k，第二行包含k个整数c1,  c2, ... , ck。<br />\r\n【输出】<br />\r\n输出一个整数，即方案总数模1,000,000,007的结果。<br />\r\n【样例】</p>\r\n<table border="1" width="371">\r\n    <tbody>\r\n        <tr>\r\n            <td width="193">输入</td>\r\n            <td width="162">输出</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3<br />\r\n            1 2 3</td>\r\n            <td>10</td>\r\n        </tr>\r\n        <tr>\r\n            <td>5<br />\r\n            2 2 2 2 2</td>\r\n            <td>39480</td>\r\n        </tr>\r\n        <tr>\r\n            <td>10<br />\r\n            1 1 2 2 3 3 4 4 5 5</td>\r\n            <td>85937576</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>【数据规模】<br />\r\n50%的数据满足：1 &lt;= k &lt;= 5, 1 &lt;= ci &lt;= 3<br />\r\n100%的数据满足：1 &lt;=  k &lt;= 15, 1 &lt;= ci &lt;= 5</p>', 1000, 16, 10, 0, '2012-04-05 16:23:24');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(322, '可可的文本编辑器', 'editor', '<p class="MsoNormal">这些日子，可可不和卡卡一起玩了，原来可可正废寝忘食的想做一个简单而高效的文本编辑器。你能帮助他吗？</p>\r\n<p>为了明确任务目标，可可对&ldquo;文本编辑器&rdquo;做了一个抽象的定义：</p>\r\n<p><strong>文本： </strong>由 0 个或多个字符构成的序列。这些字符的 ASCII 码在闭区间 [32, 126]  内，也就是说，这些字符均为可见字符或空格。</p>\r\n<p><strong>光标： </strong>在一段文本中用于指示位置的标记，可以位于文本的第一个字符之前，文本的最后一个字符之后或文本的某两个相邻字符之间。</p>\r\n<p><strong>文本编辑器：  </strong>为一个可以对一段文本和该文本中的一个光标进行如下七条操作的程序。如果这段文本为空，我们就说这个文本编辑器是空的。</p>\r\n<p>&nbsp;</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p align="center">操作名称</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p align="center">输入文件中的格式</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p align="center">功能</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>MOVE(k)</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Move k</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>将光标移动到第 <em>k </em>个字符之后，如果 <em>k </em>=0 ，将光标移到文本第一个字符之前</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>INSERT(n, s)</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Insert n ?</p>\r\n            <p>S</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>在光标后插入长度为 <em>n </em>的字符串 <em>s </em>，光标位置不变， <em>n </em>3 1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>DELETE(n)</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Delete n</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>删除光标后的 <em>n </em>个字符，光标位置不变， <em>n </em>3 1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>ROTATE(n)</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Rotate n</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>反转光标后的 <em>n </em>个字符，光标位置不变， <em>n </em>3 1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>GET ()</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Get</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>输出光标后的一个字符，光标位置不变</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>PREV()</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Prev</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>光标前移一个字符</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>NEXT()</p>\r\n            </td>\r\n            <td width="96" valign="top">\r\n            <p>Next</p>\r\n            </td>\r\n            <td width="372" valign="top">\r\n            <p>光标后移一个字符</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>比如从一个空的文本编辑器开始，依次执行下表中操作，可以有对应的结果：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p align="center">操作</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p align="center">操作前的文本</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p align="center">操作后的结果</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>INSERT(13, &ldquo;Balanced□ eert &rdquo;)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p><strong>| </strong></p>\r\n            <p>（只有光标，文本为空）</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p><strong>| </strong>Balanced□ee rt</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>MOVE(2)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p><strong>| </strong>Balanced□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Ba <strong>| </strong>lanced□ee rt</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>DELETE(5)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Ba <strong>| </strong>lanced□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Ba <strong>| </strong>d□eert</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>NEXT()</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Ba <strong>| </strong>d□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Bad <strong>| </strong>□eert</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>INSERT(7, &ldquo;□editor&rdquo;) ，</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Bad <strong>| </strong>□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Bad <strong>| </strong>□editor□eert</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>MOVE(0)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Bad <strong>| </strong>□editor□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p><strong>| </strong>Bad□editor□eert</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>GET ()</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p><strong>| </strong>Bad□editor□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>输出&ldquo; B&rdquo;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>MOVE(11)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p><strong>| </strong>Bad□editor□eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Bad□editor□ <strong>| </strong>eert</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>ROTATE(4)</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Bad□editor□ <strong>| </strong>eert</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>Bad□editor□ <strong>| </strong>tree</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="108" valign="top">\r\n            <p>GET()</p>\r\n            </td>\r\n            <td width="228" valign="top">\r\n            <p>Bad□editor□ <strong>| </strong>tree</p>\r\n            </td>\r\n            <td width="240" valign="top">\r\n            <p>输出&ldquo; t &rdquo;</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>上表中，&ldquo; <strong>| </strong>&rdquo;表示光标，&ldquo; □ &rdquo;表示空格。</p>\r\n<h3>[ 任务 ]</h3>\r\n<p>编写一个程序：</p>\r\n<p>&bull;&nbsp; 建立一个空的文本编辑器。</p>\r\n<p>&bull;&nbsp; 从输入文件中读入一些操作指令并执行。</p>\r\n<p>&bull;&nbsp; 对所有执行过的 GET 操作，将指定的内容写入输出文件。</p>\r\n<h3>[ 输入格式 ]</h3>\r\n<p>输入文件中第一行是指令条数 N ，以下是需要执行的 N 个操作。</p>\r\n<p>除了回车符之外，输入文件的所有字符的 ASCII 码都在闭区间 [32, 126] 内。且行尾没有空格。</p>\r\n<h3>[ 输出格式 ]</h3>\r\n<p>输出文件 editor.out 的每行依次对应输入文件中每条 GET 指令的输出， <strong>不得有任何多余的字符 </strong>。</p>\r\n<h3>[ 输入样例 ]</h3>\r\n<p>10 <br />\r\nInsert 13 <br />\r\nBalanced eert <br />\r\nMove 2 <br />\r\nDelete 5 <br />\r\nNext  <br />\r\nInsert 7 <br />\r\neditor <br />\r\nMove 0 <br />\r\nGet <br />\r\nMove 11 <br />\r\nRotate 4 <br />\r\nGet</p>\r\n<h3>[ 输出样例 ]</h3>\r\n<p>B <br />\r\nt</p>\r\n<h3>[ 数据约束和评分方法 ]</h3>\r\n<p>对输入数据我们有如下假定：</p>\r\n<p>&bull;&nbsp; MOVE 操作不超过 50 000 个， INSERT 、 DELETE 和 ROTATE 操作作的总个数不超过 6 000 ， GET 操作不超过  20 000 个， PREV 和 NEXT 操作的总个数不超过 20 000 。</p>\r\n<p>&bull;&nbsp; 所有 INSERT 插入的字符数之和不超过 2M （ 1M =1 024*1 024 ）。</p>\r\n<p>&bull;&nbsp; DELETE 操作、 ROTATE 操作和 GET 操作执行时光标后必然有足够的字符。 MOVE 、 PREV 、 NEXT  操作不会把光标移动到非法位置。</p>\r\n<p>&bull;&nbsp; 输入文件没有错误。</p>\r\n<p>&nbsp;</p>\r\n<p><strong>对 </strong><strong>C++ </strong><strong>选手的提示：经测试，对最大的测试数据使用  </strong><strong>fstream </strong><strong>进行输入有可能会比使用 </strong><strong>stdio  </strong><strong>慢很多，因此建议在可以的情况下使用后者。 </strong></p>\r\n<p><strong>&nbsp;  </strong></p>\r\n<p><strong>本题不设部分分，对于每个测试点只有当你的程序的输出和我们的标准输出完全一致时才可以得到相应的分数。 </strong></p>', 1000, 128, 10, 0, '2012-04-05 16:23:24'),
(323, '棋盘上的问题', 'board', '<p class="MsoNormal">可可和卡卡画了一张巨大的 <em>N </em>* <em>N </em>的棋盘，他们想在这个棋盘上放尽量多的国际象棋的&ldquo;車&rdquo;，使得它们互相不能攻击到对方（車可以沿着棋盘的横向和纵向攻击）。但这个答案显然就是棋盘的宽度 <em>N </em>，于是可可在棋盘上规定了只有在有限的 <em>M </em>个位置上才能放棋子。（其他位置不能放棋子，而車却可以穿过这个位置去攻击其他的棋子）然而这样也不会难倒两个聪明的小家伙，他们很快算出来这个答案是 <em>K </em>。于是卡卡又提出来一个问题：如果我们在这 <em>M </em>个可以放棋子的位置中再去掉一个位置，而仍然保证最多能放下 <em>K </em>个車，可行的方案又有多少种呢？</p>\r\n<h3>[ 任务 ]</h3>\r\n<p>编写一个程序：</p>\r\n<p>&bull;&nbsp; 从输入文件中读入棋盘的大小和棋盘上可以放棋子的位置信息；</p>\r\n<p>&bull;&nbsp; 计算出如题卡卡所说的可行方案的数目；</p>\r\n<p>&bull;&nbsp; 向输出文件打印你得到的答案。</p>\r\n<h3>[ 输入格式 ]</h3>\r\n<p>输入文件的第一行有两个正整数 <em>N </em>和 <em>M </em>，分别表示棋盘的大小和可以放棋子的位置数目。</p>\r\n<p>以下 <em>M </em>行，每行用 <em>x i </em>和 <em>y i </em>两个整数描述一个位置，表示这个位置是棋盘的第 <em>x i </em>行第 <em>y i </em>列 (1&lt;= <em>i </em>&lt;= <em>M </em>, 1&lt;= <em>x i </em>, <em>y i </em>&lt;= <em>N </em>) 。同样的一个位置不会被描述两次。</p>\r\n<h3>[ 输出格式 ]</h3>\r\n<p>输出文件中只有一个整数，表示可行方案的数目。</p>\r\n<h3>[ 输入样例 ]</h3>\r\n<p>3 4 <br />\r\n1 2 <br />\r\n1 3 <br />\r\n2 2 <br />\r\n2 1</p>\r\n<h3>[ 输出样例 ]</h3>\r\n<p>4</p>\r\n<h3>[ 数据约束和评分方法 ]</h3>\r\n<p>30% 的测试数据中， 1&lt;= <em>N </em>&lt;=1 000, 1&lt;= <em>M </em>&lt;=20 000</p>\r\n<p>100% 的测试数据中， 1&lt;= <em>N </em>&lt;=200 000, 1&lt;= <em>M </em>&lt;=600 000</p>\r\n<p>&nbsp;</p>\r\n<p><strong>对 </strong><strong>C++ </strong><strong>选手的提示：经测试，对最大的测试数据使用 </strong><strong>fstream </strong><strong>进行输入有可能会比使用 </strong><strong>stdio </strong><strong>慢很多，因此建议在可以的情况下使用后者。 </strong></p>\r\n<p><strong>本题不设部分分，对于每个测试点只有当你的程序的输出和我们的标准输出完全一致时才可以得到相应的分数。 </strong></p>', 1000, 128, 10, 0, '2012-04-05 16:23:24'),
(324, '诸侯安置', 'empire', '<p class="MsoNormal"><strong>题目描述</strong></p>\r\n<p>很久以前，有一个强大的帝国，它的国土成正方形状，如图 2 2 所示。</p>\r\n<p align="center"><img height="195" width="171" alt="" src="http://www.ruvtex.cn/mw/images/d/d6/Empire1.jpg" /></p>\r\n<p>这个国家有若干诸侯。由于这些诸侯都曾立下赫赫战功，国王准备给他们每人一块封地</p>\r\n<p>( 正方形中的一格 ) 。但是，这些诸侯又非常好战，当两个诸侯位于同一行或同一列时，他们就会开战。如下图 2-3 为 n=3  时的国土，阴影部分表示诸侯所处的位置。前两幅图中的诸侯</p>\r\n<p>可以互相攻击，第三幅则不可以。</p>\r\n<p><img height="221" width="522" alt="" src="http://www.ruvtex.cn/mw/images/thumb/f/f2/Xxx3.JPG/800px-Xxx3.JPG" /></p>\r\n<p>国王自然不愿意看到他的诸侯们互相开战，致使国家动荡不安。因此，他希望通过合理的安排诸侯所处的位置，使他们两两之间都不能攻击。</p>\r\n<p>现在，给出正方形的边长 n ，以及需要封地的诸侯数量 k ，要求你求出所有可能的安置方案数。 (n &le; 100 ， k &le; 2n 2 -2n+1)</p>\r\n<p>由于方案数可能很多，你只需要输出方案数除以 504 的余数即可。</p>\r\n<p>【输入】</p>\r\n<p>仅一行，两个整数 n 和 k ，中间用一空格隔开</p>\r\n<p>【输出】</p>\r\n<p>一个整数，表示方案数除以 504 的余数。</p>\r\n<p>【样例】</p>\r\n<p>empire.in</p>\r\n<p>2 2</p>\r\n<p>empire.out</p>\r\n<p>4</p>\r\n<p>【样例说明】</p>\r\n<p>四种安置方案如图 2-4 所示。注意：镜面和旋转的情况属于不同的方案。</p>\r\n<p align="center"><img height="179" width="499" alt="" src="http://www.ruvtex.cn/mw/images/b/b3/Empire2.jpg" /></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:24'),
(325, '公路修建', 'roadz', '<p class="MsoNormal">【问题描述】</p>\r\n<p>某国有 n 个城市，它们互相之间没有公路相通，因此交通十分不便。为解决这一&ldquo;行路难&rdquo;的问题，政府决定修建公路。修建公路的任务由各城市共同完成。</p>\r\n<p>修建工程分若干轮完成。在每一轮中，每个城市选择一个与它最近的城市，申请修建通往该城市的公路。政府负责审批这些申请以决定是否同意修建。</p>\r\n<p>政府审批的规则如下：</p>\r\n<p>(1) 如果两个或以上城市申请修建同一条公路，则让它们共同修建；</p>\r\n<p>(2) 如果三个或以上的城市申请修建的公路成环。如下图， A 申请修建公路 AB ， B 申请修建公路 BC ， C 申请修建公路 CA 。则政府将否决其中最短的一条公路的修建申请；</p>\r\n<p align="center"><img height="167" width="227" alt="" src="http://192.168.1.253/mw/images/f/f9/Road1.jpg" /></p>\r\n<p>(3) 其他情况的申请一律同意。</p>\r\n<p>一轮修建结束后，可能会有若干城市可以通过公路直接或间接相连。这些可以互相连通的城市即组成&ldquo;城市联盟&rdquo;。在下一轮修建中，每个&ldquo;城市联盟&rdquo;将被看作一个城市，发挥一个城市的作用。</p>\r\n<p>当所有城市被组合成一个&ldquo;城市联盟&rdquo;时，修建工程也就完成了。</p>\r\n<p>你的任务是根据城市的分布和前面讲到的规则，计算出将要修建的公路总长度。</p>\r\n<p>【输入】</p>\r\n<p>第一行一个整数 n ，表示城市的数量。 (n &le; 5000)</p>\r\n<p>以下 n 行，每行两个整数 x 和 y ，表示一个城市的坐标。 (-1000 000 &le; x ， y &le; 1 000 000)</p>\r\n<p>【输出】</p>\r\n<p>一个实数，四舍五入保留两位小数，表示公路总长。 ( 保证有惟一解 )</p>\r\n<p>【样例】</p>\r\n<p>roadz.in</p>\r\n<p>4 <br />\r\n0 0 <br />\r\n1 2 <br />\r\n-1 2 <br />\r\n0 4</p>\r\n<p>roadz.out</p>\r\n<p>6.47</p>\r\n<p>修建的公路如图 5 &mdash; 4 所示：</p>\r\n<h2><img height="281" width="266" alt="" src="http://192.168.1.253/mw/images/f/fa/Road2.jpg" /></h2>', 1000, 16, 10, 0, '2012-04-05 16:23:24'),
(326, '医院设置', 'hospital', '<p class="MsoNormal">&nbsp;</p>\r\n<p>【问题描述】</p>\r\n<p>设有一棵二叉树，如图 5-1 ：</p>\r\n<p align="center"><img height="202" width="263" alt="" src="http://192.168.1.253/mw/images/1/18/Hospital.jpg" /></p>\r\n<p>其中，圈中的数字表示结点中居民的人口。圈边上数字表示结点编号，现在要求在某个结点上建立一个医院，使所有居民所走的路程之和为最小，同时约定，相邻接点之间的距离为 1 。</p>\r\n<p>如上图中，若医院建在：</p>\r\n<p>1 处，则距离和 =4+12+2*20+2*40=136</p>\r\n<p>3 处，则距离和 =4*2+13+20+40=81</p>\r\n<p>【输入】</p>\r\n<p>第一行一个整数 n ，表示树的结点数。 (n &le; 100)</p>\r\n<p>接下来的 n 行每行描述了一个结点的状况，包含三个整数，整数之间用空格 ( 一个或多个 ) 分隔，其中：第一个数为居民人口数；第二个数为左链接，为 0 表示无链接；第三个数为右链接。</p>\r\n<p>【输出】</p>\r\n<p>一个整数，表示最小距离和。</p>\r\n<p>【样例】</p>\r\n<p>hospital.in</p>\r\n<p>5 <br />\r\n13 2 3 <br />\r\n4 0 0 <br />\r\n12 4 5 <br />\r\n20 0 0 <br />\r\n40 0 0</p>\r\n<p>hospital.out</p>\r\n<p>81</p>', 1000, 128, 5, 0, '2012-04-05 16:23:24'),
(327, '排序集合 ', 'sort', '<p class="MsoNormal"><strong>题目描述</strong></p>\r\n<p>对于集合 N={1 ， 2 ，&hellip;， n} 的子集，定义一个称之为&ldquo;小于&rdquo;的关系：</p>\r\n<p>设 S 1 ={X 1 ， X 2 ，&hellip;， X i } ， (x 1 &lt;x 2 &lt; &hellip; &lt;X i ) ， S 2 ={Y 1 ， Y 2  ，&hellip;， Y j } ， (Y 1 &lt;Y 2 &lt; &hellip; &lt;Y i ) ，如果存在一个 k ， (O &le; k &le; min{i ， j)) ，使得 X  1 =Y 1 ，&hellip;， X k =Y k ，且 k=i 或 X (k+1) &lt;Y (k+1) ，则称 S 1 &ldquo;小于&rdquo; S 2 。</p>\r\n<p>你的任务是，对于任意的 n(n &le; 31) 及 k(k&lt;2^n ) ，求出第 k 小的子集。</p>\r\n<p>【输入】</p>\r\n<p>输入文件仅一行，包含两个用空格隔开的自然数， n 和 k 。</p>\r\n<p>【输出】</p>\r\n<p>输出文件仅一行，是该子集的元素，由小到大排列。空集输出 0 。</p>\r\n<p>【样例】</p>\r\n<p>sort.in</p>\r\n<p>3 4</p>\r\n<p>sort.out</p>\r\n<p>1 2 3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:25'),
(328, '服务器储存信息问题 ', 'servers', '<p class="MsoNormal">【问题描述】</p>\r\n<p>Byteland 王国准备在各服务器间建立大型网络并提供多种服务。</p>\r\n<p>网络由 n 台服务器组成，用双向的线连接。两台服务器之间最多只能有一条线直接连接，同时，每台服务器最多只能和 10 台服务器直接连接，但是任意两台服务器间必然存在一条路径将它们连接在一起。每条传输线都有一个固定传输的速度。&delta; (v ， w) 表示服务器 v 和 w 之间的最短路径长度，且对任意的 V 有&delta; (V ， V)=0 。</p>\r\n<p>有些服务器比别的服务器提供更多的服务，它们的重要程度要高一些。我们用 r(v) 表示服务器 V 的重要程度 (rank) 。 rank 越高的服务器越重要。</p>\r\n<p>每台服务器都会存储它附近的服务器的信息。当然，不是所有服务器的信息都存，只有感兴趣的服务器信息才会被存储。服务器 V 对服务器 w 感兴趣是指，不存在服务器 U 满足， r(U)&gt;r(W) 且&delta; (V ， U)&lt;= &delta; (V ，W) 。</p>\r\n<p>举个例子来说，所有具有最高 rank 的服务器都会被别的服务器感兴趣。如果 V 是一台具有最高 rank 的服务器，由于&delta; (V ， V) =0 ，所以 V 只对具有最高 rank 的服务器感兴趣。我们定义 B(V) 为 V 感兴趣的服务器的集合。</p>\r\n<p>我们希望计算所有服务器储存的信息量，即所有服务器的｜ B(V) ｜之和。 Byteland 王国并不希望存储大量的数据，所以所有服务器存储的数据量 ( ｜ B(V) ｜之和 ) 不会超过 30n 。</p>\r\n<p>你的任务是写一个程序，读入 Byteland 王国的网络分布，计算所有服务器存储的数据量。</p>\r\n<p>【输入】</p>\r\n<p>第一行两个整数 n 和 m ， (1 &le; n &le; 30 000 ， 1 &le; m &le; 5n) 。 n 表示服务器的数量， m 表示</p>\r\n<p>传输线的数量。</p>\r\n<p>接下来 n 行，每行一个整数，第 i 行的整数为 r(i)(1 &le; r(i) &le; 10) ，表示第 i 台服务器的</p>\r\n<p>rank 。</p>\r\n<p>接下来 m 行，每行表示各条传输线的信息，包含三个整数 a ， b ， t(1 &le; t &le; 1000 ， l &le; a ， b &le; n ， a &ne; b) 。 a 和 b 是传输线所连接的两台服务器的编号， t 是传输线的长度。</p>\r\n<p>【输出】</p>\r\n<p>一个整数，表示所有服务器存储的数据总量，即｜ B(V) ｜之和。</p>\r\n<p>【样例】</p>\r\n<p>Servers.in</p>\r\n<p>4 3 <br />\r\n2 <br />\r\n3 <br />\r\n1 <br />\r\n1 <br />\r\n1 4 30 <br />\r\n2 3 20 <br />\r\n3 4 20</p>\r\n<p>servers ． out</p>\r\n<p>9</p>\r\n<p>注： B(1)={1 ， 2} ， B(2)={2} ， B(3)={2 ， 3} ， B(4)={1 ， 2 ， 3 ， 4} 。</p>', 1000, 128, 4, 0, '2012-04-05 16:23:25'),
(329, 'K- 联赛', 'kleague', '<p class="MsoNormal">【问题描述】</p>\r\n<p>K- 联赛职业足球俱乐部的球迷们都是有组织的训练有素的啦啦队员，就像红魔啦啦队一样 (2002 年韩日世界杯上韩国队的啦啦队 ) 。这个赛季，经过很多场比赛以后，球迷们希望知道他们支持的球队是否还有机会赢得最后的联赛冠军。换句话说，球队是否可以通过某种特定的比赛结果最终取得最高的积分 ( 获胜场次最多 ) 。 ( 允许出现多支队并列第一的情况。 )</p>\r\n<p>现在，给出每个队的胜负场数， w i 和 d j ，分别表示 team i 的胜场和负场 (1 &le; i &le; n) 。还给出 a i,j ，表示 team i 和 team j 之间还剩多少场比赛要进行 (1 &le; i ， j &le; n) 。这里， n 表示参加联赛的队数，所有的队分别用 l ， 2 ，&hellip;， n 来编号。你的任务是找出所有还有可能获得冠军的球队。</p>\r\n<p>所有队参加的比赛数是相同的，并且为了简化问题，你可以认为不存在平局 ( 比赛结果只有胜或负两种 ) 。</p>\r\n<p>【输入】</p>\r\n<p>第一行一个整数 n (1 &le; n &le; 25) ，表示联赛中的队数。</p>\r\n<p>第二行 2n 个数， w 1 ， d 1 ， w 2 ， d 2 ，&hellip;， w n ， d n ，所有的数都不超过 100 。</p>\r\n<p>第三行 n^2 个数， a 1,1 ， a 1,2 ，&hellip;， a 1,n ， a 2,1 ， a 2,2 , &hellip;， a 2,n ，&hellip;， a n,1 ， a n,2 ，&hellip;， a n,m , 所有的数都不超过 10 。 a i,j =a j,i ，如果 i=j ，则 a i,j =0 。</p>\r\n<p>【输出】</p>\r\n<p>仅一行，输出所有可能获得冠军的球队，按其编号升序输出，中间用空格分隔。</p>\r\n<p>【样例 1】</p>\r\n<p>kleague.in</p>\r\n<p>3</p>\r\n<p>2 0 1 1 0 2</p>\r\n<p>0 2 2 2 0 2 2 2 0</p>\r\n<p>kleague.out</p>\r\n<p>1 2 3</p>\r\n<p>【样例 2】</p>\r\n<p>kleague.in</p>\r\n<p>3</p>\r\n<p>4 0 2 2 0 4</p>\r\n<p>0 1 1 1 0 1 1 1 0</p>\r\n<p>kleague.out</p>\r\n<p>1 2</p>\r\n<p>【样例 3 】</p>\r\n<p>kleague.in</p>\r\n<p>4</p>\r\n<p>0 3 3 1 1 3 3 0</p>\r\n<p>0 0 0 2 0 0 1 0 0 1 0 0 2 0 0 0</p>\r\n<p>kleague.out</p>\r\n<p>2 4</p>', 1000, 32, 10, 0, '2012-04-05 16:23:25'),
(330, '文本编辑器', 'editor2003', '<p>【问题描述】</p>\r\n<p>很久很久以前，DOS3.x的程序员们开始对EDLIN感到厌倦。于是，人们开始纷纷改用自己写的文本编辑器&hellip;&hellip;</p>\r\n<p>多年之后，出于偶然的机会，小明找到了当时的一个编辑软件。进行了一些简单的测试后，小明惊奇地发现：那个软件每秒能够进行上万次编辑操作（当然，你不能手工进行这样的测试）！于是，小明废寝忘食地想做一个同样的东西出来。你能帮助他吗？ &nbsp; 为了明确任务目标，小明对&ldquo;文本编辑器&rdquo;做了一个抽象的定义：</p>\r\n<p>文本：由0个或多个字符构成的序列。这些字符的ASCII码在闭区间[32, 126]内，也就是说，这些字符均为可见字符或空格。</p>\r\n<p>光标：在一段文本中用于指示位置的标记，可以位于文本的第一个字符之前，文本的最后一个字符之后或文本的某两个相邻字符之间。</p>\r\n<p>文本编辑器：为一个可以对一段文本和该文本中的一个光标进行如下六条操作的程序。如果这段文本为空，我们就说这个文本编辑器是空的。</p>\r\n<table width="577" cellspacing="0" cellpadding="7" border="1">\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">操作名称</p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">输入文件中的格式</p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">功能</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">MOVE(k)</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">Move 			k</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">将光标移动到第<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>k</i></font></span></font>个字符之后，如果<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>k</i></font><font face="宋体, SimSun">=0</font></span></font>，将光标移到文本第一个字符之前</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">INSERT(n, 			s)</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="margin-bottom: 0.07cm; widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Insert 			n</font><font face="Symbol, serif">&iquest;</font></span></font></p>\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">S</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">在光标后插入长度为<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font></span></font>的字符串<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>s</i></font></span></font>，光标位置不变，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font><font face="宋体, SimSun"> 			</font><font face="Symbol, serif">&sup3;</font><font face="宋体, SimSun"> 			1</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">DELETE(n)</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">Delete 			n</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">删除光标后的<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font></span></font>个字符，光标位置不变，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font><font face="宋体, SimSun"> 			</font><font face="Symbol, serif">&sup3;</font><font face="宋体, SimSun"> 			1</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">GET(n)</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">Get 			n</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">输出光标后的<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font></span></font>个字符，光标位置不变，<font face="Times New Roman, serif"><span lang="en-US"><font face="宋体, SimSun"><i>n</i></font><font face="宋体, SimSun"> 			</font><font face="Symbol, serif">&sup3;</font><font face="宋体, SimSun"> 			1</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">PREV()</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">Prev</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">光标前移一个字符</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="93">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">NEXT()</span></font></p>\r\n            </td>\r\n            <td width="82">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">Next</span></font></p>\r\n            </td>\r\n            <td width="358">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">光标后移一个字符</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>比如从一个空的文本编辑器开始，依次执行操作INSERT(13, &ldquo;Balanced□tree&rdquo;)，MOVE(2)，DELETE(5)，NEXT()，INSERT(7, &ldquo;□editor&rdquo;)，MOVE(0)，GET(15)后，会输出&ldquo;Bad□editor□tree&rdquo;，如下表所示：</p>\r\n<table width="577" cellspacing="0" cellpadding="7" border="1">\r\n    <tbody>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">操作</p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">操作前的文本</p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="center" style="widows: 2; orphans: 2;" class="cjk">操作后的结果</p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">INSERT(13, 			&ldquo;Balanced□tree&rdquo;)</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="margin-bottom: 0.49cm; widows: 2; orphans: 2;" class="cjk"><font face="Courier New, monospace"><span lang="en-US"><b>|</b></span></font></p>\r\n            <p align="left" style="margin-top: 0.49cm; widows: 2; orphans: 2;" class="cjk">（只有光标，文本为空）</p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Courier New, monospace"><b>|</b></font><font face="Courier New, monospace">Balanced□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">MOVE(2)</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">Balanced□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Courier New, monospace">Ba</font><font face="Courier New, monospace"><b>|</b></font><font face="Courier New, monospace">lanced□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">DELETE(5)</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Ba</font><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">lanced□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Courier New, monospace">Ba</font><font face="Courier New, monospace"><b>|</b></font><font face="Courier New, monospace">d□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">NEXT()</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Ba</font><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">d□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Courier New, monospace">Bad</font><font face="Courier New, monospace"><b>|</b></font><font face="Courier New, monospace">□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">INSERT(7, 			&ldquo;□editor&rdquo;)</span></font>，</p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Bad</font><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Bad</font><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">□editor□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">MOVE(0)</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif">Bad</font><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">□editor□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">Bad□editor□tree</font></span></font></p>\r\n            </td>\r\n        </tr>\r\n        <tr valign="top">\r\n            <td width="104">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Arial, sans-serif"><span lang="en-US">GET(15)</span></font></p>\r\n            </td>\r\n            <td width="208">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk"><font face="Times New Roman, serif"><span lang="en-US"><font face="Arial, sans-serif"><b>|</b></font><font face="Arial, sans-serif">Bad□editor□tree</font></span></font></p>\r\n            </td>\r\n            <td width="220">\r\n            <p align="left" style="widows: 2; orphans: 2;" class="cjk">输出&ldquo;<font face="Arial, sans-serif"><span lang="en-US">Bad□editor□tree&rdquo;</span></font></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>上表中，&ldquo;|&rdquo;表示光标，&ldquo;□&rdquo;表示空格。 &nbsp; 你的任务是：</p>\r\n<ul>\r\n    <li>建立一个空的文本编辑器。</li>\r\n    <li>从输入文件中读入一些操作指令并执行。</li>\r\n    <li>对所有执行过的GET操作，将指定的内容写入输出文件。</li>\r\n</ul>\r\n<p>【输入文件】</p>\r\n<p>输入文件的第一行是指令条数t，以下是需要执行的t个操作。其中：</p>\r\n<p>为了使输入文件便于阅读，Insert操作的字符串中可能会插入一些回车符，请忽略掉它们（如果难以理解这句话，可以参考样例）。</p>\r\n<p>除了回车符之外，输入文件的所有字符的ASCII码都在闭区间[32, 126]内。且行尾没有空格。 &nbsp; 这里我们有如下假定：</p>\r\n<ul>\r\n    <li>MOVE操作不超过50000个，INSERT和DELETE操作的总个数不超过4000，PREV和NEXT操作的总个数不超过200000。</li>\r\n    <li>所有INSERT插入的字符数之和不超过2M（1M=1024*1024），正确的输出文件长度不超过3M字节。</li>\r\n    <li>DELETE操作和GET操作执行时光标后必然有足够的字符。MOVE、PREV、NEXT操作不会把光标移动到非法位置。</li>\r\n    <li>输入文件没有错误。</li>\r\n</ul>\r\n<p>&nbsp; 对C++选手的提示：经测试，对最大的测试数据使用fstream进行输入有可能会比使用stdio慢约1秒，因此建议在可以的情况下使用后者。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件的每行依次对应输入文件中每条GET指令的输出。</p>\r\n<p>【样例输入】</p>\r\n<pre>\r\n15\r\nInsert 26\r\nabcdefghijklmnop\r\nqrstuv wxy\r\nMove 15\r\nDelete 11\r\nMove 5\r\nInsert 1\r\n^\r\nNext\r\nInsert 1\r\n_\r\nNext\r\nNext\r\nInsert 4\r\n.\\/.\r\nGet 4\r\nPrev\r\nInsert 1\r\n^\r\nMove 0\r\nGet 22\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n.\\/.\r\nabcde^_^f.\\/.ghijklmno\r\n</pre>', 2000, 128, 10, 0, '2012-04-05 16:23:25'),
(331, '贪吃的九头龙', 'dragon', '<p>【问题描述】</p>\r\n<p>传说中的九头龙是一种特别贪吃的动物。虽然名字叫&ldquo;九头龙&rdquo;，但这只是说它出生的时候有九个头，而在成长的过程中，它有时会长出很多的新头，头的总数会远大于九，当然也会有旧头因衰老而自己脱落。</p>\r\n<p>有一天，有M个脑袋的九头龙看到一棵长有N个果子的果树，喜出望外，恨不得一口把它全部吃掉。可是必须照顾到每个头，因此它需要把N个果子分成M组，每组至少有一个果子，让每个头吃一组。</p>\r\n<p>这M个脑袋中有一个最大，称为&ldquo;大头&rdquo;，是众头之首，它要吃掉恰好K个果子，而且K个果子中理所当然地应该包括唯一的一个最大的果子。果子由N-1根树枝连接起来，由于果树是一个整体，因此可以从任意一个果子出发沿着树枝&ldquo;走到&rdquo;任何一个其他的果子。</p>\r\n<p>对于每段树枝，如果它所连接的两个果子需要由不同的头来吃掉，那么两个头会共同把树枝弄断而把果子分开；如果这两个果子是由同一个头来吃 掉，那么这个头会懒得把它弄断而直接把果子连同树枝一起吃掉。当然，吃树枝并不是很舒服的，因此每段树枝都有一个吃下去的&ldquo;难受值&rdquo;，而九头龙的难受值就 是所有头吃掉的树枝的&ldquo;难受值&rdquo;之和。</p>\r\n<p>九头龙希望它的&ldquo;难受值&rdquo;尽量小，你能帮它算算吗？</p>\r\n<p>例如图1所示的例子中，果树包含8个果子，7段树枝，各段树枝的&ldquo;难受值&rdquo;标记在了树枝的旁边。九头龙有两个脑袋，大头需要吃掉4个果子，其中必须包含最大的果子。即N=8，M=2，K=4：</p>\r\n<p>大头吃4个果子，用实心点标识；</p>\r\n<p>小头吃4个果子，用空心点标识；</p>\r\n<p>九头龙的难受值为4，因为图中用细边标记的树枝被大头吃掉了。</p>\r\n<p><span class="image"><img width="328" height="138" src="../../../../mw/images/c/c7/Dragon.png" alt="Image:Dragon.png" longdesc="http://www.ruvtex.cn/wiki/Image:Dragon.png" /></span></p>\r\n<p>图一描述了果树的形态，图二描述了最优策略。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件的第1行包含三个整数N (1&lt;=N&lt;=300)，M (2&lt;=M&lt;=N)，K (1&lt;=K&lt;=N)。 N个果子依次编号1,2,...,N，且最大的果子的编号总是1。第2行到第N行描述了果树的形态，每行包含三个整数a (1&lt;=a&lt;=N)，b (1&lt;=b&lt;=N)，c (0&lt;=c&lt;=105)，表示存在一段难受值为c的树枝连接果子a和果子b。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件仅有一行，包含一个整数，表示在满足&ldquo;大头&rdquo;的要求的前提下，九头龙的难受值的最小值。如果无法满足要求，输出-1。</p>\r\n<p>【样例输入】</p>\r\n<pre>\r\n8 2 4\r\n1 2 20\r\n1 3 4\r\n1 4 13\r\n2 5 10\r\n2 6 12\r\n3 7 15\r\n3 8 5\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n4\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>该样例对应于题目描述中的例子。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:25'),
(332, '机器人M号', 'robot', '<p>【问题描述】</p>\r\n<p>3030年，Macsy正在火星部署一批机器人。</p>\r\n<p>第1秒，他把机器人1号运到了火星，机器人1号可以制造其他的机器人。</p>\r\n<p>第2秒，机器人1号造出了第一个机器人&mdash;&mdash;机器人2号。</p>\r\n<p>第3秒，机器人1号造出了另一个机器人&mdash;&mdash;机器人3号。</p>\r\n<p>之后每一秒，机器人1号都可以造出一个新的机器人。第m秒造出的机器人编号为m。我们可以称它为机器人m号，或者m号机器人。</p>\r\n<p><br />\r\n机器人造出来后，马上开始工作。m号机器人，每m秒会休息一次。比如3号机器人，会在第6，9，12，&hellip;&hellip;秒休息，而其它时间都在工作。</p>\r\n<p>机器人休息时，它的记忆将会被移植到当时出生的机器人的脑中。比如6号机器人出生时，2，3号机器人正在休息，因此，6号机器人会收到第2，3号机器人的记忆副本。我们称第2，3号机器人是6号机器人的老师。</p>\r\n<p>如果两个机器人没有师徒关系，且没有共同的老师，则称这两个机器人的知识是互相独立的。注意：1号机器人与其他所有机器人的知识独立（因为只有1号才会造机器人），它也不是任何机器人的老师。</p>\r\n<p><br />\r\n一个机器人的独立数，是指所有编号比它小且与它知识互相独立的机器人的个数。比如1号机器人的独立数为0，2号机器人的独立数为1（1号机器人与它知识互 相独立），6号机器人的独立数为2（1，5号机器人与它知识互相独立，2，3号机器人都是它的老师，而4号机器人与它有共同的老师&mdash;&mdash;2号机器人）。</p>\r\n<p>新造出来的机器人有3种不同的职业。对于编号为m的机器人，如果能把m分解成偶数个不同奇素数的积，则它是政客，例如编号15；否则，如 果m本身就是奇素数或者能把m分解成奇数个不同奇素数的积，则它是军人，例如编号 3, 编号165。其它编号的机器人都是学者，例如编号2, 编号6, 编号9。</p>\r\n<p><br />\r\n第m秒诞生的机器人m号，想知道它和它的老师中，所有政客的独立数之和，所有军人的独立数之和，以及所有学者的独立数之和。可机器人m号忙于工作没时间计算，你能够帮助它吗？</p>\r\n<p>为了方便你的计算，Macsy已经帮你做了m的素因子分解。为了输出方便，只要求输出总和除以10000的余数。</p>\r\n<p><br />\r\n【输入文件】</p>\r\n<p>输入文件的第一行是一个正整数k(1&lt;=k&lt;=1000)，k是m的不同的素因子个数。</p>\r\n<p>以下k行，每行两个整数，pi, ei,表示m的第i个素因子和它的指数(i = 1, 2, &hellip;, k)。p1, p2, &hellip;, pk是不同的素数，m=p1^e1 * p2^e2 * ... * pk^ek。所有素因子按照从小到大排列，即p1&lt;p2&lt;&hellip;&lt;pk。输入文件中，2&lt;=pi&lt;10,000, 1&lt;=ei&lt;=1,000,000。</p>\r\n<p><br />\r\n【输出文件】</p>\r\n<p>输出文件包括三行。</p>\r\n<p>第一行是机器人m号和它的老师中，所有政客的独立数之和除以10000的余数。</p>\r\n<p>第二行是机器人m号和它的老师中，所有军人的独立数之和除以10000的余数。</p>\r\n<p>第三行是机器人m号和它的老师中，所有学者的独立数之和除以10000的余数。</p>\r\n<p><br />\r\n【样例输入】</p>\r\n<pre>\r\n3\r\n2 1\r\n3 2\r\n5 1\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n8\r\n6\r\n75\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>m=2*3*3*5=90。90号机器人有10个老师，加上它自己共11个。其中政客只有15号；军人有3号和5号；学者有8个，它们的编号分别是：2,6,9,10,18,30,45,90。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:25');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(333, '荒岛野人', 'savage', '<p>【问题描述】</p>\r\n<p>克里特岛以野人群居而著称。岛上有排列成环行的M个山洞。这些山洞顺时针编号为1,2,&hellip;,M。岛上住着N个野人，一开始依次住在山洞 C1,C2,&hellip;,CN中，以后每年，第i个野人会沿顺时针向前走Pi个洞住下来。每个野人i有一个寿命值Li，即生存的年数。下面四幅图描述了一个有6个 山洞，住有三个野人的岛上前四年的情况。三个野人初始的洞穴编号依次为1，2，3；每年要走过的洞穴数依次为3，7，2；寿命值依次为4，3，1。</p>\r\n<p><span class="image"><img width="246" height="138" longdesc="http://www.ruvtex.cn/wiki/Image:Savage1.gif" alt="Image:Savage1.gif" src="../../../../mw/images/8/87/Savage1.gif" /></span> <img width="238" height="103" longdesc="/wiki/Image:Savage2.gif" alt="Image:Savage2.gif" src="../../../../mw/images/e/e8/Savage2.gif" /></p>\r\n<p><img width="230" height="131" longdesc="/wiki/Image:Savage3.gif" alt="Image:Savage3.gif" src="../../../../mw/images/4/45/Savage3.gif" /> <img width="238" height="110" longdesc="/wiki/Image:Savage4.gif" alt="Image:Savage4.gif" src="../../../../mw/images/2/21/Savage4.gif" /></p>\r\n<p>奇怪的是，虽然野人有很多，但没有任何两个野人在有生之年处在同一个山洞中，使得小岛一直保持和平与宁静，这让科学家们很是惊奇。他们想知道，至少有多少个山洞，才能维持岛上的和平呢？</p>\r\n<p><br />\r\n【输入文件】</p>\r\n<p>输入文件的第1行为一个整数N(1&lt;=N&lt;=15)，即野人的数目。第2行到第N+1每行为三个整数Ci, Pi, Li (1&lt;=Ci,Pi&lt;=100, 0&lt;=Li&lt;=10<sup>6</sup> )，表示每个野人所住的初始洞穴编号，每年走过的洞穴数及寿命值。</p>\r\n<p><br />\r\n【输出文件】</p>\r\n<p>输出文件仅包含一个数M，即最少可能的山洞数。输入数据保证有解，且M不大于10<sup>6</sup>。</p>\r\n<p><br />\r\n【样例输入】</p>\r\n<pre>\r\n3\r\n1 3 4\r\n2 7 3\r\n3 2 1\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n6\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>该样例对应于题目描述中的例子。</p>', 2000, 128, 10, 0, '2012-04-05 16:23:25'),
(334, '木棒游戏', 'stickgame', '<p>【问题描述】</p>\r\n<p>这是一个很古老的游戏。用木棒在桌上拼出一个不成立的等式，移动且只移动一根木棒使得等式成立。现在轮到你了。</p>\r\n<p><img height="122" width="556" longdesc="/wiki/Image:Stickgame1.gif" alt="Image:Stickgame1.gif" src="../../../../mw/images/d/d9/Stickgame1.gif" /></p>\r\n<p>【任务】</p>\r\n<p>从文件读入一个式子（该式子肯定是一个不成立的等式）。</p>\r\n<p>如果移动一根木棒可以使等式成立，则输出新的等式，否则输出No。</p>\r\n<p>【说明和限制】</p>\r\n<ol>\r\n    <li>式子中的数可能是正数或负数，运算符号只会出现加号和减号，并且有且仅有一个等号，不会出现括号、乘号或除号，也不会有++,--,+-或-+出现。</li>\r\n    <li>式子中不会出现8个或8个以上的连续数字（数的绝对值小于等于9999999）。</li>\r\n    <li>你只能移动用来构成数字的木棒，不能移动构成运算符（+、-、=）的木棒，所以加号、减号、等号是不会改变的。移动前后，木棒构成的数字必须严格与图2中的0~9相符。</li>\r\n    <li>从文件读入的式子中的数不会以0开头，但允许修改后等式中的数以数字0开头。</li>\r\n</ol>\r\n<p><img height="122" width="556" longdesc="/wiki/Image:Stickgame2.gif" alt="Image:Stickgame2.gif" src="../../../../mw/images/a/a5/Stickgame2.gif" /></p>\r\n<p>【输入数据】</p>\r\n<p>从文件中读入一行字符串。该串中包括一个以&ldquo;#&rdquo;字符结尾的式子（ASCII码35)，式子中没有空格或其他分隔符。输入数据严格符合逻辑。字符串的长度小于等于1000。</p>\r\n<p>注意：&ldquo;#&rdquo;字符后面可能会有一些与题目无关的字符。</p>\r\n<p>【输出数据】</p>\r\n<p>将输出结果存入文件，输出仅一行。</p>\r\n<p>如果有解，则输出正确的等式，格式与输入的格式相同（以&ldquo;#&rdquo;结尾，中间不能有分隔符，也不要加入多余字符）。此时输入数据保证解是唯一的。</p>\r\n<p>如果无解，则输出&ldquo;No&rdquo;（N大写，o小写）。</p>\r\n<p>【输入样例1】</p>\r\n<p>1+1=3#</p>\r\n<p>【输出样例1】</p>\r\n<p>1+1=2#</p>\r\n<p>【输入样例2】</p>\r\n<p>1+1=3+5#</p>\r\n<p>【输出样例2】</p>\r\n<p>No</p>\r\n<p>【输入样例3】</p>\r\n<p>11+77=34#</p>\r\n<p>【输出样例3】</p>\r\n<p>17+17=34#</p>', 1000, 128, 10, 0, '2012-04-05 16:23:25'),
(335, '数据生成器', 'jerrygen', '<p>【题目背景】</p>\r\n<p>小明在做NOI2003练习赛的《幸福的老鼠》时觉得题目太简单了，于是对原题做了一些扩展：</p>\r\n<ul>\r\n    <li>将原题的N从20扩展到200000。</li>\r\n    <li>将原题经过一条街道需要的时间改为Ti（1 &lt;= Ti &lt;= 1000000000）分钟（i为街道的编号）。</li>\r\n    <li>增加了一个条件：小狗家Y离老鼠家X的距离小于等于大狗家Z离老鼠家X的距离。</li>\r\n</ul>\r\n<p>即使这样，他仍然很快地做了出来。于是，小明打算做一些输入文件来测试他的程序。现在他已经生成了一些符合题意的图，不过为了增大测试数据的难度，他希望你能帮他选取一组X、Y、Z，使老鼠拿到礼物的时间尽可能地大。</p>\r\n<p>【小明扩展的题目（注意，你并不需要解决此题）】</p>\r\n<p>幸福的老鼠Jerry要过生日了，小狗大狗分别送了它一份生日礼物。现在Jerry打算从自己家X出发，先到小狗家Y（因为小狗家Y离老鼠家X的距离小于等于大狗家Z离老鼠家X的距离），再到大狗家Z，将两份礼物取回。 卡通城由N（3 &lt;= N &lt;= 200000）个居住点和N-1条连接居住点的双向街道组成，经过第i条街道需花费Ti（1 &lt;= Ti &lt;= 1000000000）分钟的时间。可以保证，任两个居住点间都存在通路。</p>\r\n<p>不妨设Jerry家在点X，小狗家在点Y，大狗家在点Z。现在，请你计算，Jerry最快需要耗费多长时间才能拿到生日礼物？</p>\r\n<p>【任务描述】</p>\r\n<p>定义：令|AB|表示卡通城中从A点走到B点需要的最少时间。</p>\r\n<p>给出卡通城的地图，找到一组X、Y、Z，使得：</p>\r\n<ul>\r\n    <li>|XY|&le;|XZ|</li>\r\n    <li>|XY|+|YZ|最大。</li>\r\n</ul>\r\n<p>并求出此时|XY|+|YZ|的值。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件第一行是两个整数N（3 &pound; N &pound; 200000）和M（M=N-1），分别表示居住点总数和街道总数。从第2行开始到第N行，每行给出一条街道的信息。第i+1行包含整数Ui、Vi、 Ti（1&pound;Ui, Vi &pound; N，1 &pound; Ti &pound; 1000000000），表示街道i连接居住点Ui和Vi，并且经过街道i需花费Ti分钟。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件仅包含一个整数T，即|XY|+|YZ|的最大值。</p>\r\n<p>【样例输入】</p>\r\n<pre>\r\n4 3\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n4\r\n</pre>', 1000, 128, 8, 0, '2012-04-05 16:23:25'),
(336, '智破连环阵', 'zplhz', '<p>【问题描述】</p>\r\n<p>B国在耗资百亿元之后终于研制出了新式武器&mdash;&mdash;连环阵（Zenith Protected Linked Hybrid Zone），并声称这是一种无敌的自发性智能武器。但A国经侦察发现，连环阵其实是由M个独立武器组成的。这M个武器编号为1，2，&hellip;，M。每件武器有两 种状态：无敌自卫状态和攻击状态。最初，1号武器处于攻击状态，其他武器都处在无敌自卫状态。以后，一旦第i（1 &lt;= i&lt;M）号武器被消灭，1秒钟以后第i+1号武器就自动从无敌自卫状态变成攻击状态。当第M号武器被消灭以后，这个造价昂贵的连环阵就被彻底摧毁 了。</p>\r\n<p>为了打败B国，A国军事部长打算用最廉价的武器&mdash;&mdash;炸弹来消灭连环阵。经过长时间的精密探测，A国的军事家们掌握了连环阵中M个武器的平 面坐标，然后依此选择了n个点，并在这些点上安放了特殊的定时炸弹。这n个炸弹编号为1，2，&hellip;，n。每个炸弹的作用半径均为k，且会持续爆炸5分钟。在 这5分钟内，每枚炸弹都可以在瞬间消灭离它直线距离不超过k的、处在攻击状态的B国武器。和连环阵类似，最初a1号炸弹持续引爆5分钟时间，然后a2号炸 弹持续引爆5分钟时间，接着a3号炸弹引爆&hellip;&hellip;以此类推，直到连环阵被摧毁。在每个炸弹爆炸的时候，其它尚未引爆的炸弹都处于地下隐蔽处，不会被己方的炸 弹摧毁。</p>\r\n<p>显然，选好a1、a2、a3...十分重要。好的序列可以在仅使用较少炸弹的情况下就能将连环阵摧毁；坏的序列可能在使用完所有炸弹后仍无法将连环阵摧毁。现在，请你决定一个序列a1、a2、a3&hellip;使得在第ax号炸弹引爆的时间内连环阵被摧毁。这里的x应当尽量小。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件第一行包含三个整数：M、n和k（1 &lt;= M, n&lt;= 100，1&lt;= k&lt;= 1000），分别表示B国连环阵由M个武器组成，A国有n个炸弹可以使用，炸弹攻击范围为k。以下M行，每行由一对整数xi，yi（0&lt;= xi，yi &lt;= 10000）组成，表示第i（1&lt;= i&lt;= M）号武器的平面坐标。再接下来n行，每行由一对整数ui，vi(0 &lt;= ui，vi&lt;= 10000)组成，表示第i（1&lt;= i&lt;= n）号炸弹的平面坐标。输入数据保证无误和有解。</p>\r\n<p>测试数据中的xi、yi、ui、vi是随机生成的。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件的第一行包含一个整数x，表示实际使用的炸弹数。第二行包括x个整数，依次表示a1，a2，&hellip;，ax。</p>\r\n<p>【样例输入1】</p>\r\n<pre>\r\n4 3 6\r\n0 6\r\n6 6\r\n6 0\r\n0 0\r\n1 5\r\n0 3\r\n1 1\r\n\r\n</pre>\r\n<p>【样例输出1】</p>\r\n<pre>\r\n2\r\n1 3\r\n</pre>\r\n<p>【样例输入2】</p>\r\n<pre>\r\n10 10 45\r\n41 67\r\n34 0\r\n69 24\r\n78 58\r\n62 64\r\n5 45\r\n81 27\r\n61 91\r\n95 42\r\n27 36\r\n91 4\r\n2 53\r\n92 82\r\n21 16\r\n18 95\r\n47 26\r\n71 38\r\n69 12\r\n67 99\r\n35 94\r\n</pre>\r\n<p>【样例输出2】</p>\r\n<pre>\r\n5\r\n6 2 1 3 4\r\n</pre>', 6000, 128, 10, 0, '2012-04-05 16:23:26'),
(337, '曼哈顿', 'manhattan', '<p>【问题描述】</p>\r\n<p>P城是M国的著名旅游城市。在市长G先生的治理下，人民安居乐业，城市欣欣向荣。然而，G市长并没有被自己的政绩冲昏头脑，他清醒地意识到城市的治理还存在着一些问题，其中之一就是交通问题。</p>\r\n<p>P城有m条横向街道和n条纵向街道，横向街道横贯东西，纵向街道纵穿南北，构成了P城整齐的交通网络（如图1所示）。</p>\r\n<p><img height="387" width="564" longdesc="/wiki/Image:Manhattan.gif" alt="Image:Manhattan.gif" src="../../../../mw/images/4/43/Manhattan.gif" /></p>\r\n<p>图1</p>\r\n<p>由于街道狭窄，每条街道都只允许单向行驶，单向行驶的方向是事先设定好了的。一条横向街道的行驶方向只能是向东或者向西，一条纵向街道的行驶方向只能是向南或者向北，逆向行驶是绝对禁止的。</p>\r\n<p>这项限制给交通带来了巨大的不便。如图1，很多游人希望从宾馆前往购物中心，但限于街道的行驶方向，他们不得不绕一个大圈才能够到达。</p>\r\n<p>这个问题一直困扰着G市长，每天他都会收到不少游人的来信，抱怨P城不合理的交通设计。但由于街道数目过多，他和他的部下始终不能解决这个问题&hellip;&hellip;</p>\r\n<p>令人高兴的是这个问题不久就可能得以解决。因为最近他们以重金聘请了著名的交通规划大师B先生，请他对P城的交通进行有效合理的改造。</p>\r\n<p>B先生知道不能通过拓宽街道的方法解决问题，因为这样势必影响到街道两旁的旅游景点，这是大家都不希望看到的。于是他准备重新设计街道的行驶方向（整条街道的行驶方向），使之尽可能满足大家的要求。</p>\r\n<p>B先生先把P城的街道编号，横向街道由北向南编号为1，2，&hellip;&hellip;，m，纵向街道由西向东编号为1，2，&hellip;&hellip;，n。这样任何一个十字路口的位 置都可以用一对正整数来表示，第一个数是该路口所在的横向街道的编号，第二个数是它所在的纵向街道的编号，这对整数被称为该十字路口的坐标。比如图1中宾 馆所在的十字路口的坐标是(2,3)。</p>\r\n<p>经过长期调查，他整理出了游人们提得相对集中的一些要求。每条要求都可以写成如下的形式：从一个十字路口到另一个十字路口的最短路径的长 度必须等于它们之间的曼哈顿距离。所谓曼哈顿距离是指两个十字路口在东西方向上的距离加上在南北方向上的距离，坐标分别为(x1,y1)和(x2,y2) 的两个十字路口之间的曼哈顿距离为|x1-x2|+|y1-y2|。</p>\r\n<p>好了，B先生已经知道了P城目前所有街道的行驶方向和游人们提得相对集中的要求，他能不能重新设计街道的行驶方向，使之满足所有要求呢？</p>\r\n<p>另外，改变每条街道的行驶方向都有一定的工作量，工作量的大小因道路而异。B先生不仅想找到一个可行的改造计划，而且还希望这个计划的总工作量尽可能小。你能帮帮他吗？</p>\r\n<p><br />\r\n【输入文件】</p>\r\n<p>输入文件的第一行有两个正整数m和n，分别表示横向街道和纵向街道的数目。</p>\r\n<p>第二行是一个长度为m的字符串，由北向南列出了m条横向街道改造前的行驶方向。E表示向东，W表示向西。</p>\r\n<p>第三行是一个长度为n的字符串，由西向东列出了n条纵向街道改造前的行驶方向。S表示向南，N表示向北。</p>\r\n<p>第四行有m个非负整数，由北向南列出了改变每条横向街道的行驶方向的工作量。</p>\r\n<p>第五行有n个非负整数，由西向东列出了改变每条纵向街道的行驶方向的工作量。</p>\r\n<p>第六行是一个正整数k，表示游人们提得相对集中的要求的数目。</p>\r\n<p>接下来的k行，每行有四个正整数x1，y1，x2，y2，表示一条要求。这条要求的内容是希望从坐标为(x1,y1)的十字路口到坐标为(x2,y2)的十字路口的最短路径的长度等于这两个路口之间的曼哈顿距离。</p>\r\n<p><br />\r\n【输出文件】</p>\r\n<p>第一行是一个字符串，&ldquo;possible&rdquo;或者&ldquo;impossible&rdquo;（引号不输出）。输出&ldquo;possible&rdquo;表示可以通过改变街道的行驶方向满足输入数据中的所有要求，输出&ldquo;impossible&rdquo;表示无论怎么设计都不可能满足输入数据中的所有要求。</p>\r\n<p>如果在第一行输出的是&ldquo;possible&rdquo;的话，在第二行输出一个整数，表示最小的总工作量，在第三行输出一个长度为m的字符串，由北向南 列出改造后的m条横向街道的行驶方向，E表示向东，W表示向西，在第四行输出一个长度为n的字符串，由西向东列出改造后的n条纵向街道的行驶方向， S表示向南，N表示向北。</p>\r\n<p><br />\r\n【约定】</p>\r\n<ul>\r\n    <li>M&lt;=10</li>\r\n    <li>N&lt;=100</li>\r\n    <li>K&lt;=100</li>\r\n    <li>改变一条街道的行驶方向的工作量不超过10000</li>\r\n</ul>\r\n<p><br />\r\n【样例输入】</p>\r\n<pre>\r\n2 3\r\nWE\r\nNNS\r\n3 9\r\n1 4 2\r\n2\r\n1 3 2 1\r\n2 3 2 2\r\n</pre>\r\n<p><br />\r\n【样例输出】</p>\r\n<pre>\r\npossible\r\n9\r\nWW\r\nNNS\r\n \r\n</pre>\r\n<p>【评分方法】</p>\r\n<ul>\r\n    <li>如果你的输出文件的第一行是&ldquo;impossible&rdquo;，</li>\r\n    <li>如果确实无解，则该测试点满分。</li>\r\n    <li>如果实际有解，则该测试点0分。</li>\r\n    <li>如果你的输出文件的第一行是&ldquo;possible&rdquo;，</li>\r\n    <li>如果你的程序输出的方案不可行，则该测试点0分。</li>\r\n    <li>如果你的程序输出的总工作量与实际总工作量不一致，则该测试点0分。</li>\r\n    <li>如果你的程序输出的方案可行，且总工作量最小，则该测试点满分。</li>\r\n</ul>', 2000, 128, 10, 0, '2012-04-05 16:23:26'),
(338, '降雨量', 'rainfall', '<p>【问题描述】</p>\r\n<p>M国是个多雨的国家，尤其是P城，频繁的降雨给人们的出行带来了不少麻烦。为了方便行人雨天过马路，有关部门在每处人行横道的上空都安装了一种名为&ldquo;自动伞&rdquo;的装置。（如图1所示）</p>\r\n<p><img width="456" height="301" longdesc="/wiki/Image:Rainfall1.gif" alt="Image:Rainfall1.gif" src="../../../../mw/images/0/03/Rainfall1.gif" /></p>\r\n<p>图1</p>\r\n<p>每把自动伞都可以近似地看作一块长方形的板，厚度不计。这种伞有相当出色的吸水能力，落到上面的雨水都会完全被伞顶的小孔吸入，并通过管道 运走。不下雨时，这些伞闲置着。一旦下雨，它们便立刻开始作匀速率直线往返运动：从马路的一边以固定的速率移动到另一边，再从另一边以相同的速率返回，如 此往复，直到雨停为止。任何时刻自动伞都不会越过马路的边界。有了自动伞，下雨天没带伞的行人只要躲在伞下行走，就不会被雨淋着了。</p>\r\n<p>由于自动伞的大小有限，当需要使用自动伞过马路的人比较多时，一把自动伞显然是不够的，所以有关部门在几处主要的人行横道上空安装了多把自动伞。每把自动伞的宽度都等于人行横道的宽度，高度各不相同，长度不一定相同，移动速率也不一定相同。</p>\r\n<p>现在已知一处人行横道的详细情况，请你计算从开始下雨到T秒钟后的这段时间内，一共有多少体积的雨水降落到人行横道上。</p>\r\n<p><br />\r\n【输入文件】</p>\r\n<p>第一行有四个整数N，W，T，V。N表示自动伞的数目，W表示马路的宽度，T表示需要统计从开始下雨到多长时间后的降雨情况，V表示单位面积单位时间内的降雨体积。</p>\r\n<p>为了描述方便，我们画出了一个如图2所示的天空中五把伞的剖面图，取马路左边界为原点，取向右为x轴正方向，取向上为y轴正方向，建立平面直角坐标系。这样，每把自动伞都可以看作平面上的一条线段。</p>\r\n<p>右边界</p>\r\n<p><img width="480" height="239" longdesc="/wiki/Image:Rainfall2.gif" alt="Image:Rainfall2.gif" src="../../../../mw/images/4/48/Rainfall2.gif" /></p>\r\n<p>图2</p>\r\n<p>接下来的N行，每行用三个整数描述一把自动伞。第一个数x是伞的初始位置，用它左端点的横坐标表示。第二个数l是伞的长度，即x方向上的尺 寸。第三个数v是伞的速度，v的大小表示移动的速率。如果v&gt;0，表示开始时伞向右移动；如果v&lt;0，表示开始时伞向左移动；如果v=0，表 示伞不动。</p>\r\n<p><br />\r\n【输出文件】</p>\r\n<p>输出文件只包含一个实数，表示从开始下雨到T秒钟后，一共有多少体积的水降落到人行横道上。输出结果精确到小数点后第二位。</p>\r\n<p><br />\r\n【约定】</p>\r\n<ul>\r\n    <li>雨点均匀地匀速竖直下落</li>\r\n    <li>自动伞和马路两者都是水平的</li>\r\n    <li>自动伞的宽度和人行横道的宽度相等，都等于1</li>\r\n    <li>所有自动伞的往返次数之和不超过250，一来一回算一个往返。</li>\r\n</ul>\r\n<p><br />\r\n【样例输入】</p>\r\n<pre>\r\n2 4 3 10\r\n0 1 1\r\n3 1 -1\r\n</pre>\r\n<p><br />\r\n【样例输出】</p>\r\n<pre>\r\n65.00\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:26'),
(339, '维护数列', 'seq2005', '<p><span class="Apple-style-span" style="font-size: 13px; line-height: 19px; "> </span></p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【问题描述】</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">请写一个程序，要求维护一个数列，支持以下 6 种操作：（请注意，格式栏 中的下划线&lsquo; _ &rsquo;表示实际输入文件中的空格）</p>\r\n<table border="1" cellpadding="0" cellspacing="0" style="font-size: 13px; color: black; background-color: white; ">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">操作编号</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">输入文件中的格式</p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p align="center" style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">说明</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">1. &nbsp;插入</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">INSERT_<em>posi</em>_<em>tot</em>_<em>c</em>1_<em>c</em>2_..._<em>c</em></span><em><span lang="EN-US">tot</span></em></p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">在当前数列的第&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">个数字后插入&nbsp;</span><em><span lang="EN-US">tot</span></em></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">个数字：</span><em><span lang="EN-US">c</span></em><span lang="EN-US">1,&nbsp;<em>c</em>2, &hellip;,&nbsp;<em>c</em></span><em><span lang="EN-US">tot</span></em><span lang="EN-US">；若在数列首插</span></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">入，则&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">为 0</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">2. &nbsp;删除</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">DELETE_<em>posi</em>_<em>tot</em></p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">从当前数列的第&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">个数字开始连续</span></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">删除&nbsp;</span><em><span lang="EN-US">tot&nbsp;</span></em><span lang="EN-US">个数字</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">3. &nbsp;修改</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">MAKE-SAME_<em>posi</em>_<em>tot</em>_<em>c</em></p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">将当前数列的第&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">个数字开始的连</span></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">续&nbsp;</span><em><span lang="EN-US">tot&nbsp;</span></em><span lang="EN-US">个数字统一修改为&nbsp;</span><em><span lang="EN-US">c</span></em></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">4. &nbsp;翻转</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">REVERSE_<em>posi</em>_<em>tot</em></p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">取出从当前数列的第&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">个数字开始</span></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">的&nbsp;</span><em><span lang="EN-US">tot&nbsp;</span></em><span lang="EN-US">个数字，翻转后放入原来的位置</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">5. &nbsp;求和</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">GET-SUM_<em>posi</em>_<em>tot</em></p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">计算从当前数列开始的第&nbsp;</span><em><span lang="EN-US">posi&nbsp;</span></em><span lang="EN-US">个数字</span></p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; "><span lang="EN-US">开始的&nbsp;</span><em><span lang="EN-US">tot&nbsp;</span></em><span lang="EN-US">个数字的和并输出</span></p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="91">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">6. &nbsp;求和最</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">大的子列</p>\r\n            </td>\r\n            <td valign="top" width="217">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">&nbsp;</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">MAX-SUM</p>\r\n            </td>\r\n            <td valign="top" width="276">\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">求出当前数列中和最大的一段子列，</p>\r\n            <p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">并输出最大和</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【输入格式】</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">输入文件的第 1 行包含两个数 N 和 M，N 表示初始时数列中数的个数，M表示要进行的操作数目。</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">第 2 行包含 N 个数字，描述初始时的数列。</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">以下 M 行，每行一条命令，格式参见问题描述中的表格。</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【输出格式】</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">对于输入数据中的 GET-SUM 和 MAX-SUM 操作，向输出文件依次打印结果，每个答案（数字）占一行。</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【输入样例】</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n9 8\r\n2 -6 3 5 1 -5 -3 6 3\r\nGET-SUM 5 4\r\nMAX-SUM INSERT 8 3 -5 7 2\r\nDELETE 12 1\r\nMAKE-SAME 3 3 2\r\nREVERSE 3 6\r\nGET-SUM 5 4\r\nMAX-SUM\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【输出样例】</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n-1\r\n10\r\n1\r\n10\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【样例说明】</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">初始时，我们拥有数列 2 -6 3 5 1 -5 -3 6 3</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 GET-SUM 5 4，表示求出数列中从第 5 个数开始连续 4 个数字之和，1+(-5)+(-3)+6 = -1：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2     -6     3      5      1     -5    -3     6      3\r\n\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 MAX-SUM，表示要求求出当前数列中最大的一段和，应为 3+5+1+(-5)+(-3)+6+3 = 10：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2     -6     3      5      1     -5    -3     6      3\r\n\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 INSERT 8 3 -5 7 2，即在数列中第 8 个数字后插入-5 7 2，</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2     -6     3      5      1     -5    -3     6     -5     7      2      3\r\n\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 DELETE 12 1，表示删除第 12 个数字，即最后一个：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2     -6     3      5      1     -5    -3     6     -5     7      2\r\n\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 MAKE-SAME 3 3 2，表示从第 3 个数开始的 3 个数字，统一修改为 2：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2	-6	3	5	1	-5	-3	6	-5	7	2\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">改为</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2	-6	2	2	2	-5	-3	6	-5	7	2\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">执行操作 REVERSE 3 6，表示取出数列中从第 3 个数开始的连续 6 个数：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2           -6            2             2             2           -5            -3            6            -5            7            2\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">如上所示的灰色部分 2 2 2 -5 -3 6，翻转后得到 6 -3 -5 2 2 2，并放回原来位置：</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2     -6     6     -3     -5     2      2      2     -5     7      2\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">最后执行 GET-SUM 5 4 和 MAX-SUM，不难得到答案 1 和 10。</p>\r\n<pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); color: black; background-color: rgb(249, 249, 249); line-height: 1.1em; ">\r\n2            -6            6            -3            -5           2             2            2             -5           7             2\r\n</pre>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【评分方法】</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">本题设有部分分，对于每一个测试点：</p>\r\n<ul style="line-height: 1.5em; list-style-type: square; margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; list-style-image: url(http://www.ruvtex.cn/mw/skins/monobook/bullet.gif); ">\r\n    <li style="margin-bottom: 0.1em; ">如果你的程序能在输出文件正确的位置上打印 GET-SUM 操作的答案，你可以得到该测试点 60%的分数；</li>\r\n    <li style="margin-bottom: 0.1em; ">如果你的程序能在输出文件正确的位置上打印 MAX-SUM 操作的答案，你可以得到该测试点 40%的分数；</li>\r\n    <li style="margin-bottom: 0.1em; ">以上两条的分数可以叠加，即如果你的程序正确输出所有 GET-SUM 和MAX-SUM 操作的答案，你可以得到该测试点 100%的分数。</li>\r\n</ul>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">请注意：如果你的程序只能正确处理某一种操作，请确定在输出文件正确的位置上打印结果，即必须为另一种操作留下对应的行，否则我们不保证可以正确评分。</p>\r\n<p style="margin-top: 0.4em; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; line-height: 1.5em; ">【数据规模和约定】</p>\r\n<ul style="line-height: 1.5em; list-style-type: square; margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; list-style-image: url(http://www.ruvtex.cn/mw/skins/monobook/bullet.gif); ">\r\n    <li style="margin-bottom: 0.1em; ">你可以认为在任何时刻，数列中至少有 1 个数。</li>\r\n    <li style="margin-bottom: 0.1em; ">输入数据一定是正确的，即指定位置的数在数列中一定存在。</li>\r\n</ul>\r\n<ul style="line-height: 1.5em; list-style-type: square; margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; list-style-image: url(http://www.ruvtex.cn/mw/skins/monobook/bullet.gif); ">\r\n    <li style="margin-bottom: 0.1em; ">50%的数据中，任何时刻数列中最多含有 30 000 个数；</li>\r\n    <li style="margin-bottom: 0.1em; ">100%的数据中，任何时刻数列中最多含有 500 000 个数。</li>\r\n</ul>\r\n<ul style="line-height: 1.5em; list-style-type: square; margin-top: 0.3em; margin-right: 0px; margin-bottom: 0px; margin-left: 1.5em; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; list-style-image: url(http://www.ruvtex.cn/mw/skins/monobook/bullet.gif); ">\r\n    <li style="margin-bottom: 0.1em; ">100%的数据中，任何时刻数列中任何一个数字均在[-1 000, 1 000]内。</li>\r\n    <li style="margin-bottom: 0.1em; ">100%的数据中，M &le;20 000，插入的数字总数不超过 4 000 000 个，输入文件大小不超过 20MBytes。</li>\r\n</ul>\r\n<p>&nbsp;</p>', 3000, 256, 10, 0, '2012-04-05 16:23:26'),
(340, '瑰丽华尔兹', 'adv1900', '<p>【任务描述】</p>\r\n<p>你跳过华尔兹吗？当音乐响起，当你随着旋律滑动舞步，是不是有一种漫步仙境的惬意？众所周知，跳华尔兹时，最重要的是有好的音乐。但是很少有几个人知道，世界上最伟大的钢琴家一生都漂泊在大海上，他的名字叫丹尼?布德曼?T.D.?柠檬?1900，朋友们都叫他1900。</p>\r\n<p>1900出生于20世纪的第一年出生在往返于欧美的邮轮弗吉尼亚号上，然后就被抛弃了。1900刚出生就成了孤儿，孤独的成长在弗吉尼亚号上，从未离开过这个摇晃的世界；也许是对他命运的补偿，上帝派可爱的小天使艾米丽照顾他。</p>\r\n<p>可能是天使的点化，1900拥有不可思议的钢琴天赋，从未有人教，从没看过乐谱，但他却能凭着自己的感觉弹出最沁人心脾的旋律。当1900的音乐获得邮轮上所有人的欢迎时，他才8岁，而此时他已经乘着海轮往返欧美50多次了。</p>\r\n<p>虽说是钢琴奇才，但1900还是个8岁的孩子，他有着和一般男孩一样的好奇的调皮，不过可能更有一层浪漫的色彩罢了：</p>\r\n<p>这是一个风雨交加的夜晚，海风卷起层层巨浪拍打着弗吉尼亚号，邮轮随着巨浪剧烈的摇摆。船上的新萨克斯手迈克斯?托尼晕船了，1900将他 邀请到舞厅，然后&mdash;&mdash;，然后松开了固定钢琴的闸，于是，钢琴随着海轮的倾斜滑动起来。准确的说，我们的主角1900、钢琴、邮轮随着1900的旋律一起跳 起了华尔兹，所有的事物好像都化为一体，随着&ldquo;强弱弱&rdquo;的节奏，托尼的晕船症也奇迹般地一点一点恢复。正如托尼在回忆录上这样写道：</p>\r\n<pre>\r\n大海摇晃着我们\r\n使我们转来转去\r\n快速的掠过灯和家具\r\n我意识到我们正在和大海一起跳舞\r\n真是完美而疯狂的舞者\r\n</pre>\r\n<p>晚上在金色的地板上快乐的跳着华尔兹是不是很惬意呢？也许，我们忘记了一个人，那就是艾米丽，她可没闲着：她必须在适当的时候施魔法帮助1900，不让钢琴碰上舞厅里的家具。而艾米丽还小，她无法施展魔法改变钢琴的运动方向或速度，而只能让钢琴停一下。</p>\r\n<p>不妨认为舞厅是一个N行M列的矩阵，矩阵中的某些方格上堆放了一些家具，其他的则是空地。钢琴可以在空地上滑动，但不能撞上家具或滑出舞厅，否则会损坏钢琴和家具，引来难缠的船长。</p>\r\n<p>每个时刻，钢琴都会随着船体倾斜的方向向相邻的方格滑动一格，其中相邻的方格可以是向东、向西、向南或向北的。而艾米丽可以选择施魔法或不施魔法，如果不施魔法，则钢琴会滑动，而如果施魔法，则钢琴会原地不动。 艾米丽是个天使，她知道每段时间的船体的倾斜情况。她想使钢琴尽量长时间在舞厅里滑行，这样1900会非常高兴，同时也有利于治疗托尼的晕船。但艾米丽还太小，不会算，所以希望你能帮助她。</p>\r\n<p>【输入格式】</p>\r\n<p>输入文件的第一行包含5个数N, M, x, y和K。N和M描述舞厅的大小，x和y为在第1时刻初钢琴的位置（x行y列）；我们对船体倾斜情况是按时间的区间来描述的，比如&ldquo;在[1, 3]时间里向东倾斜，[4, 5]时间里向北倾斜&rdquo;，因此这里的K表示区间的数目。</p>\r\n<p>以下N行，每行M个字符，描述舞厅里的家具。第i行第j列的字符若为&lsquo; . ''，则表示该位置是空地；若为&lsquo; x ''，则表示有家具。</p>\r\n<p>以下K行，顺序描述K个时间区间，格式为：si ti di(1 &le; i &le; K)。表示在时间区间[si, ti]内，船体都是向di方向倾斜的。di为1, 2, 3, 4中的一个，依次表示北、南、西、东（分别对应矩阵中的上、下、左、右）。输入保证区间是连续的，即</p>\r\n<ul>\r\n    <li>s1 = 1</li>\r\n    <li>ti = si-1 + 1 (1 &lt; i &le; K)</li>\r\n    <li>tK = T</li>\r\n</ul>\r\n<p>【输出格式】</p>\r\n<p>输出文件仅有1行，包含一个整数，表示钢琴滑行的最长距离(即格子数)。</p>\r\n<p>【输入样例】</p>\r\n<pre>\r\n4 5 4 1 3\r\n..xx.\r\n.....\r\n...x.\r\n.....\r\n1 3 4\r\n4 5 1\r\n6 7 3</pre>\r\n<p>【输出样例】</p>\r\n<pre>\r\n6\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>钢琴的滑行路线：</p>\r\n<p><img height="202" alt="Image:Adv1900.png" width="251" longdesc="/wiki/Image:Adv1900.png" src="../../../../mw/images/c/c5/Adv1900.png" /></p>\r\n<p>钢琴在&ldquo;&times;位置上时天使使用一次魔法，因此滑动总长度为6。</p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和我们的答案完全一致才能获得满分，否则不得分。</p>\r\n<p>【数据范围】</p>\r\n<ul>\r\n    <li>50%的数据中，1&le;N, M&le;200，T&le;200；</li>\r\n    <li>100%的数据中，1&le;N, M&le;200，K&le;200，T&le;40000。</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:23:26');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(341, '聪聪与可可', 'cchkk', '<p>【问题描述】</p>\r\n<p>在一个魔法森林里，住着一只聪明的小猫聪聪和一只可爱的小老鼠可可。虽然灰姑娘非常喜欢她们俩，但是，聪聪终究是一只猫，而可可终究是一只老鼠，同样不变的是，聪聪成天想着要吃掉可可。</p>\r\n<p>一天，聪聪意外得到了一台非常有用的机器，据说是叫GPS，对可可能准确的定位。有了这台机器，聪聪要吃可可就易如反掌了。于是，聪聪准备 马上出发，去找可可。而可怜的可可还不知道大难即将临头，仍在森林里无忧无虑的玩耍。小兔子乖乖听到这件事，马上向灰姑娘报告。灰姑娘决定尽快阻止聪聪， 拯救可可，可她不知道还有没有足够的时间。</p>\r\n<p>整个森林可以认为是一个无向图，图中有N个美丽的景点，景点从1至N编号。小动物们都只在景点休息、玩耍。在景点之间有一些路连接。</p>\r\n<p>当聪聪得到GPS时，可可正在景点M(M&le;N)处。以后的每个时间单位，可可都会选择去相邻的景点(可能有多个)中的一个或停留在原景点不 动。而去这些地方所发生的概率是相等的。假设有P个景点与景点M相邻，它们分别是景点R、景点S，&hellip;&hellip;景点Q，在时刻T可可处在景点M，则在(T＋1)时 刻，可可有1/(P+1)的可能在景点R，有1/(P+1)的可能在景点S，&hellip;&hellip;，有1/(P+1)的可能在景点Q，还有1/(P+1)的可能停在景点 M。</p>\r\n<p>我们知道，聪聪是很聪明的，所以，当她在景点C时，她会选一个更靠近可可的景点，如果这样的景点有多个，她会选一个标号最小的景点。由于聪聪太想吃掉可可了，如果走完第一步以后仍然没吃到可可，她还可以在本段时间内再向可可走近一步。</p>\r\n<p>在每个时间单位，假设聪聪先走，可可后走。在某一时刻，若聪聪和可可位于同一个景点，则可怜的可可就被吃掉了。灰姑娘想知道，平均情况下，聪聪几步就可能吃到可可。而你需要帮助灰姑娘尽快的找到答案。</p>\r\n<p>【输入文件】</p>\r\n<ul>\r\n    <li>从文件中读入数据。</li>\r\n    <li>数据的第1行为两个整数N和E，以空格分隔，分别表示森林中的景点数和连接相邻景点的路的条数。</li>\r\n    <li>第2行包含两个整数C和M，以空格分隔，分别表示初始时聪聪和可可所在的景点的编号。</li>\r\n    <li>接下来E行，每行两个整数，第i+2行的两个整数Ai和Bi表示景点Ai和景点Bi之间有一条路。</li>\r\n    <li>所有的路都是无向的，即：如果能从A走到B，就可以从B走到A。</li>\r\n    <li>输入保证任何两个景点之间不会有多于一条路直接相连，且聪聪和可可之间必有路直接或间接的相连。</li>\r\n</ul>\r\n<p>【输出文件】</p>\r\n<ul>\r\n    <li>输出到文件中。</li>\r\n    <li>输出1个实数，四舍五入保留三位小数，表示平均多少个时间单位后聪聪会把可可吃掉。</li>\r\n</ul>\r\n<p>【样例输入1】</p>\r\n<pre>\r\n4 3\r\n1 4\r\n1 2\r\n2 3\r\n3 4\r\n</pre>\r\n<p>【样例输出1】</p>\r\n<pre>\r\n1.500\r\n</pre>\r\n<p>【样例说明1】</p>\r\n<p>开始时，聪聪和可可分别在景点1和景点4。</p>\r\n<p>第一个时刻，聪聪先走，她向更靠近可可(景点4)的景点走动，走到景点2，然后走到景点3；假定忽略走路所花时间。</p>\r\n<p>可可后走，有两种可能：</p>\r\n<p>第一种是走到景点3，这样聪聪和可可到达同一个景点，可可被吃掉，步数为1，概率为 0.5。 第二种是停在景点4，不被吃掉。概率为 0.5。</p>\r\n<p>到第二个时刻，聪聪向更靠近可可(景点4)的景点走动，只需要走一步即和可可在同一景点。因此这种情况下聪聪会在两步吃掉可可。</p>\r\n<p>所以平均的步数是1* 0.5+2* 0.5=1.5步。</p>\r\n<p>【样例输入2】</p>\r\n<pre>\r\n9 9\r\n9 3\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n3 6\r\n4 6\r\n4 7\r\n7 8\r\n8 9\r\n</pre>\r\n<p>【样例输出2】</p>\r\n<pre>\r\n2.167\r\n</pre>\r\n<p>【样例说明2】</p>\r\n<p>森林如下图所示：</p>\r\n<p><img width="325" height="195" src="../../../../mw/images/7/71/Cchkk.gif" alt="Image:Cchkk.gif" longdesc="/wiki/Image:Cchkk.gif" /></p>\r\n<p>【数据范围】</p>\r\n<ul>\r\n    <li>对于所有的数据，1&le;N,E&le;1000。</li>\r\n    <li>对于50%的数据，1&le;N&le;50。</li>\r\n</ul>', 1000, 16, 10, 0, '2012-04-05 16:23:26'),
(342, '网络收费', 'networkcost', '<p>【问题描述】</p>\r\n<p>网络已经成为当今世界不可或缺的一部分。每天都有数以亿计的人使用网络进行学习、科研、娱乐等活动。然而，不可忽视的一点就是网络本身有着 庞大的运行费用。所以，向使用网络的人进行适当的收费是必须的，也是合理的。 MY 市NS 中学就有着这样一个教育网络。网络中的用户一共有2^N 个，编号依次为1, 2, 3, &hellip;, 2^N。这些用户之间是用路由点和网线组成的。用户、路由点与网线共同构成一个满二叉树结构。树中的每一个叶子结点都是一个用户，每一个非叶子结点（灰 色）都是一个路由点，而每一条边都是一条网线（见下图，用户结点中的数字为其编号）。</p>\r\n<p><img height="304" alt="Image:Networkcost1.png" width="533" longdesc="/wiki/Image:Networkcost1.png" src="../../../../mw/images/4/47/Networkcost1.png" /></p>\r\n<p>MY 网络公司的网络收费方式比较奇特，称为&ldquo; 配对收费 &rdquo;。即对于每两个用户i, j (1&le;i &lt; j &le;2^N ) 进行收费。由于用户可以自行选择两种付费方式A、B中的一种，所以网络公司向学校收取的费用与每一位用户的付费方式有关。该费用等于每两位不同用户配对产 生费用之和。</p>\r\n<p>为了描述方便，首先定义这棵网络树上的一些概念：</p>\r\n<ul>\r\n    <li>祖先：根结点没有祖先，非根结点的祖先包括它的父亲以及它的父亲的祖先；</li>\r\n    <li>管辖叶结点：叶结点本身不管辖任何叶结点，非叶结点管辖它的左儿子所管辖的叶结点与它的右儿子所管辖的叶结点；</li>\r\n    <li>距离：在树上连接两个点之间的用边最少的路径所含的边数。</li>\r\n</ul>\r\n<p>对于任两个用户i, j (1&le;i&lt;j&le;2^N )，首先在树上找到与它们距离最近的公共祖先：路由点P，然后观察P 所管辖的叶结点（即用户）中选择付费方式A 与B的人数，分别记为nA 与nB，接着按照网络管理条例第X 章第Y 条第Z 款进行收费（如下表），其中Fi, j 为i 和j 之间的流量，且为已知量。</p>\r\n<p><img height="237" alt="Image:Networkcost2.png" width="628" longdesc="/wiki/Image:Networkcost2.png" src="../../../../mw/images/0/02/Networkcost2.png" /></p>\r\n<p>由于最终所付费用与付费方式有关，所以NS 中学的用户希望能够自行改变自己的付费方式以减少总付费。然而，由于网络公司已经将每个用户注册时所选择的付费方式记录在案，所以对于用户i，如果他/她 想改变付费方式（由A 改为B 或由B 改为A），就必须支付Ci 元给网络公司以修改档案（修改付费方式记录）。</p>\r\n<p>现在的问题是，给定每个用户注册时所选择的付费方式以及Ci，试求这些用户应该如何选择自己的付费方式以使得NS 中学支付给网络公司的总费用最少（更改付费方式费用+配对收费的费用）。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件中第一行有一个正整数N。</p>\r\n<p>第二行有2^N 个整数，依次表示1 号，2 号，&hellip;，2^N 号用户注册时的付费方式，每一个数字若为0，则表示对应用户的初始付费方式为A，否则该数字为1，表示付费方式为B。</p>\r\n<p>第三行有2^N 个整数，表示每一个用户修改付费方式需要支付的费用，依次为C1, C2, &hellip;,CM 。( M=2^N )</p>\r\n<p>以下2^N-1 行描述给定的两两用户之间的流量表F，总第(i + 3)行第j 列的整数为F[i, j+i] 。（1&le;i&lt;2^N，1&le;j&le;2^N &ndash; i） 所有变量的含义可以参见题目描述。</p>\r\n<p>【输出文件】</p>\r\n<p>你的程序只需要向输出文件输出一个整数，表示NS 中学支付给网络公司的最小总费用。（单位：元）</p>\r\n<p>【样例输入】</p>\r\n<pre>\r\n2\r\n1 0 1 0\r\n2 2 10 9\r\n10 1 2\r\n2 1\r\n3\r\n</pre>\r\n<p>【样例输出】</p>\r\n<pre>\r\n8\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>将1 号用户的付费方式由B 改为A，NS 中学支付给网络公司的费用达到最小。</p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和我们的答案完全一致才能获得满分，否则不得分。</p>\r\n<p>【数据规模和约定】</p>\r\n<ul>\r\n    <li>40%的数据中N&le;4；</li>\r\n    <li>80%的数据中N&le;7；</li>\r\n    <li>100%的数据中N&le;10，0&le;F[i, j]&le;500，0&le;Ci&le;500 000。</li>\r\n</ul>', 3000, 128, 10, 0, '2012-04-05 16:23:26'),
(343, '千年虫', 'worm', '<p>【任务描述】</p>\r\n<p>千年虫是远古时代的生物，时隔几千万年，千年虫早已从地球上销声匿迹，人们对其知之甚少。考古生物学家最近开始对其有了兴趣，因为一批珍贵的千年虫化石被发现，这些化石保留了千年虫近乎完整的形态。</p>\r\n<p>理论科学家们根据这些化石归纳出了千年虫的一般形态特征模型，并且据此判定出千年虫就是蜈蚣的祖先！但科学家J 发现了实际与理论的一些出入，他仔细的研究了上百个千年虫化石，发现其中大部分千年虫的形态都不完全符合理论模型，这到底是什么因素造成的呢？理论科学家 K 敏锐的指出，千年虫的形态保存在化石中很有可能发生各种变化，即便最细微的变化也能导致它不符合模型。</p>\r\n<p>于是，摆在科学家面前的新问题诞生了：判断一个化石中的千年虫与理论模型的差距有多大？具体来说，就是根据一个千年虫化石的形态A，找到 一个符合理论模型的形态B，使 得B 是最有可能在形成化石时变成形态A。理论学家提出的&ldquo;千年虫形态特征模型&rdquo;如下（如右图所示）：躯体由头、尾、躯干、足四大部分构成。</p>\r\n<p><img width="297" height="296" longdesc="/wiki/Image:Worm1.jpg" alt="Image:Worm1.jpg" src="../../../../mw/images/b/bf/Worm1.jpg" /></p>\r\n<ol>\r\n    <li>头，尾用一对平行线段表示。称平行于头、尾的方向为x 方向；垂直于x 的方向为y方向；</li>\r\n    <li>在头尾之间有两条互不相交的折线段相连，他们与头、尾两条线段一起围成的区域称为躯干，两条折线段都满足以下条件：拐角均为钝角或者平角，且包含奇数条线段，从上往下数的奇数条垂直于x 方向。</li>\r\n    <li>每条折线段从上往下数的第偶数条线段的躯干的另一侧长出一条足，即一个上、下底平行于x 方向的梯形或矩形，且其中远离躯干一侧的边垂直于x 方向。</li>\r\n</ol>\r\n<p>注意：足不能退化成三角形（即底边的长度均大于零），躯干两侧足的数目可以不一样。（如上图，左边有4 条足，右边有5 条足）</p>\r\n<p>可见，x-y 直角坐标系内，躯干和所有足组成的实心区域的边界均平行或垂直于坐标轴。为了方便，我们假设所有这些边界的长度均为正整数。因此可以认为每个千年虫的躯体 都由一些单位方格拼成。每个单位方格都由坐标(x,y)唯一确定。设头尾之间的距离为n，则我们可以用2&times;n 个整数来描述一条千年虫B（如右图）：将B 沿平行x 轴方向剖分成n 条宽度为1 的横条，每个横条最左边一格的x 坐标设为Li，最右一格的的x 坐标设为Ri。则 (n,L1,L2,..,Ln,R1,R2,..Rn)就确定了一条千年虫。</p>\r\n<p>由于岁月的侵蚀，在实际发现的化石中，千年虫的形状并不满足上面理论模型的规则，一些格子中的躯体已经被某些矿物质溶解腐蚀了。地质、物理、生物学家共同研究得出：</p>\r\n<ol>\r\n    <li>腐蚀是以格子为单位的，只能一整格被腐蚀；</li>\r\n    <li>腐蚀是分步进行的，每一步只有一格被腐蚀；</li>\r\n    <li>如果去掉一个格子后躯体不连通了，那么这个格子当前不会被腐蚀；</li>\r\n    <li>如果一个格子的左边邻格和右边邻格都还没被腐蚀，那么这个格子当前不会被腐蚀；</li>\r\n    <li>与头相邻的格子不能全部被腐蚀，与尾相邻的格子不能全部被腐蚀；</li>\r\n</ol>\r\n<p>倘若满足上面五条，我们仍然可以用(n,L''1,L''2,..,L''n,R''1,R''2,..R''n)来描述一个化石里头的千年虫的形态。其中L''i&le;R''i。</p>\r\n<p><img width="205" height="173" longdesc="/wiki/Image:Worm2.jpg" alt="Image:Worm2.jpg" src="../../../../mw/images/d/d5/Worm2.jpg" /></p>\r\n<p>例如下图：</p>\r\n<p><img width="480" height="177" longdesc="/wiki/Image:Worm3.jpg" alt="Image:Worm3.jpg" src="../../../../mw/images/a/af/Worm3.jpg" /></p>\r\n<p>现在你的任务是，输入一个化石里的千年虫的描述A&lt;n,L&rsquo;,R&rsquo;&gt;，找一个满足理论模型的千年虫的描述B&lt;n,L,R&gt;，使得B 可以通过腐蚀过程得以变为A，且由B 转化为A 的代价(须被腐蚀的格子数)最少。输出此最小代价。</p>\r\n<p>【输入格式】</p>\r\n<p>第一行为一个整数n；</p>\r\n<p>以下n 行，每行两个整数，其中第i 行为两个整数L''i,R''i，用一个空格分开；保证输入数据合法。</p>\r\n<p>【输出格式】</p>\r\n<p>仅一行，为一个整数，表示最少代价。</p>\r\n<p>【输入样例】</p>\r\n<pre>\r\n7\r\n4 4\r\n3 4\r\n3 5\r\n1 3\r\n2 2\r\n2 4\r\n3 3\r\n</pre>\r\n<p>【输出样例】</p>\r\n<pre>\r\n3\r\n</pre>\r\n<p>【样例说明】</p>\r\n<p>如图</p>\r\n<p><img width="163" height="172" longdesc="/wiki/Image:Worm4.jpg" alt="Image:Worm4.jpg" src="../../../../mw/images/d/d0/Worm4.jpg" /></p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和我们的答案完全一致才能获得满分，否则不得分。</p>\r\n<p>【数据范围】</p>\r\n<ul>\r\n    <li>30%的数据 n&le;100, 0&le;L''i&le;R''i&le;100</li>\r\n    <li>50%的数据 n&le;1000, 0&le;L''i&le;R''i&le;1000</li>\r\n    <li>70%的数据 n&le;100000, 0&le;L''i&le;R''i&le;1000</li>\r\n    <li>100%的数据 n&le;1000000, 0&le;L''i&le;R''i&le;1000000</li>\r\n</ul>', 2000, 128, 10, 0, '2012-04-05 16:23:26'),
(344, '神奇口袋', 'bag', '<p>【任务描述】</p>\r\n<p>P&ograve;lya 获得了一个奇妙的口袋，上面写着人类难以理解的符号。P&ograve;lya 看得入了迷，冥思苦想，发现了一个神奇的模型（被后人称为P&ograve;lya 模型)。为了生动地讲授这个神奇的模型，他带着学生们做了一个虚拟游戏：</p>\r\n<p>游戏开始时，袋中装入a1 个颜色为1 的球，a2 个颜色为2 的球，&hellip;，at个颜色为t 的球，其中ai&isin;Z+ (1&le;i &le;t) 。</p>\r\n<p>游戏开始后，每次严格进行如下的操作：</p>\r\n<p>从袋中随机的抽出一个小球（袋中所有小球被抽中的概率相等），P&ograve;lya 独自观察这个小球的颜色后将其放回，然后再把d 个与其颜色相同的小球放到口袋中。</p>\r\n<p>设ci 表示第i 次抽出的小球的颜色(1&le; ci &le;t) ，一个游戏过程将会产生一个颜色序列(c1,c2,&hellip;,cn,&hellip;)。</p>\r\n<p>P&ograve;lya 把游戏开始时t 种颜色的小球每一种的个数a1,a2,&hellip;,at 告诉了所有学生。然后他问学生：一次游戏过程产生的颜色序列满足下列条件的概率有多大？</p>\r\n<p>cx1=y1,cx2=y2,L,cxi=yi,,L,cxn=yn</p>\r\n<p>其中0&lt;x1&lt;x2&lt;&hellip;&lt;xn ， 1&le;yi&le;t 。换句话说，已知(t,n,d,a1,a2,&hellip;,at,x1,y1,x2,y2,...,xn,yn)，你要回答有多大的可能性会发生下面的事件：&ldquo;对所 有 k,1&le;k&le;n，第xk 次抽出的球的颜色为yk&rdquo;。</p>\r\n<p>【输入格式】</p>\r\n<p>第一行有三个正整数t，n，d；第二行有t 个正整数a1,a2,&hellip;,at，表示游戏开始时口袋里t 种颜色的球，每种球的个数。</p>\r\n<p>以下n 行，每行有两个正整数xi,yi，表示第xi 次抽出颜色为的yi 球。</p>\r\n<p>【输出格式】</p>\r\n<p>要求用分数形式输出（显然此概率为有理数）。输出文件包含一行，格式为：</p>\r\n<p>分子/分母。同时要求输出最简形式（分子分母互质）。特别的，概率为0 应输出0/1，概率为1 应输出1/1。</p>\r\n<p>【输入样例】</p>\r\n<p>样例1 的输入</p>\r\n<pre>\r\n2 3 1\r\n1 1\r\n1 1\r\n2 2\r\n3 1\r\n</pre>\r\n<p>样例1 的输出</p>\r\n<pre>\r\n1/12\r\n</pre>\r\n<p>样例2 的输入</p>\r\n<pre>\r\n3 1 2\r\n1 1 1\r\n5 1\r\n</pre>\r\n<p>样例2 的输出</p>\r\n<pre>\r\n1/3\r\n</pre>\r\n<p>【样例1 说明】</p>\r\n<p>初始时，两种颜色球数分别为(1, 1)，取出色号为1 的球的概率为1/2；第二次取球之前，两种颜色球数分别为(2, 1)，取出色号为2 的球的概率为1/3；第三次取球之前，两种颜色球数分别为(2, 2)，取出色号为1 的球的概率为1/2，所以三次取球的总概率为1/12。</p>\r\n<p>【评分方法】</p>\r\n<p>本题没有部分分，你的程序的输出只有和我们的答案完全一致才能获得满分，否则不得分。</p>\r\n<p>【数据范围】</p>\r\n<p>1&le;t,n&le;1000, 1&le;ak ,d&le;10, 1&le;x1&lt;x2&lt;&hellip;&lt;xn&le;10000, 1&le;yk&le;t</p>', 1000, 128, 10, 0, '2012-04-05 16:23:27'),
(345, '共荣圈', 'sphere', '<h3><span class="mw-headline">问题描述</span></h3>\r\n<p>某岛国地形狭长，中部多山，东西海岸线上各有N/2个城市，有M条高速公路连接东西部的城市。为促进经济共同繁荣，该国政府决定建立一些&ldquo;经济共荣 圈&rdquo;。已知一个&ldquo;共荣圈&rdquo;由东西部各一个城市组成。每个城市要么不属于任何一个&ldquo;共荣圈&rdquo;，要么只属于一个&ldquo;共荣圈&rdquo;。&ldquo;共荣圈&rdquo;中的两个城市之间必须有 高速公路直接相连。该岛国政府经过分析，发现最多能够建立W个&ldquo;共荣圈&rdquo;。</p>\r\n<p>A国认为&ldquo;共荣圈&rdquo;的建立不利于世界和平，决定出面干涉该岛国&ldquo;共荣圈&rdquo;的建立。通过各种手段，A国购买了一条高速公路，并禁止这条高速 公路的通行。被禁止通行这条高速公路的两端的两个城市之间如果没有其他道路相连接，将不能建立&ldquo;共荣圈&rdquo;。为尽可能得阻止&ldquo;共荣圈&rdquo;的建立，A国购买的这 条道路的选择很重要。A国想知道它有多少种购买选择，可以使该岛国无法建成W个&ldquo;共荣圈&rdquo;。</p>\r\n<h3><span class="mw-headline">输入格式</span></h3>\r\n<p>第一行，两个整数N,M，表示一共的城市个数和道路数。 接下来M行，每行两个整数A,B，表示西部城市A与东部城市B之间有一条高速公路直接连接，其中1&lt;=A&lt;=N/2，N/2+1&lt;=B&lt;=N。</p>\r\n<h3><span class="mw-headline">输出格式</span></h3>\r\n<p>一个整数，表示A国购买的这一条道路的可行选择数目。</p>\r\n<h3><span class="mw-headline">样例输入</span></h3>\r\n<pre>\r\n8 5\r\n1 5\r\n1 6\r\n2 7\r\n3 7\r\n4 8\r\n</pre>\r\n<h3><span class="mw-headline">样例输出</span></h3>\r\n<pre>\r\n1\r\n</pre>\r\n<h3><span class="mw-headline">样例说明</span></h3>\r\n<p>该国最多能建立的&ldquo;共荣圈&rdquo;数量为3，购买并封锁(4,8)这条道路后，最多能建立的&ldquo;共荣圈&rdquo;数量减少为2。</p>\r\n<h3><span class="mw-headline">数据规模</span></h3>\r\n<ul>\r\n    <li>对于40%的数据\r\n    <ul>\r\n        <li>2&lt;=N&lt;=200</li>\r\n        <li>1&lt;=M&lt;=1000</li>\r\n    </ul>\r\n    </li>\r\n    <li>对于100%的数据\r\n    <ul>\r\n        <li>2&lt;=N&lt;=100000</li>\r\n        <li>1&lt;=M&lt;=100000</li>\r\n    </ul>\r\n    </li>\r\n    <li>保证N为偶数</li>\r\n</ul>\r\n<p>&nbsp;</p>', 2000, 128, 10, 0, '2012-04-05 16:23:27'),
(346, '链接', 'links', '<p>网站管理员Kirk要给学校的网站改版。网站内有大量的网页，而且内容都很好，但是他注意到这些页面都没有被真确的链接。事实上，每个页面都包含一个确切的链接，链接到站内的其他页面。</p>\r\n<p><br />\r\n这是一个不好的设计----从主页开始，访问者不得不在访问了很多页面之后才能找到他感兴趣的页面，而且有些页面可能从主页开始都访问不到。第一步，他想要加上几个链接使得所有页面都能够很快的从主页开始被访问到。新连接可以再站内的任意位置添加。 站点的N个页面被从1到N标记起来，主页被标记为1. 当然也有N个链接， 每个页面包含一个链接指向其他某个页面。<br />\r\n对于一个整数K，如果这个站点的每个页面（除了主页）从主页开始访问至多K个连接就能被访问到，就说这个站点是K可达的。<br />\r\n写一个程序，给出了网站的描述和一个整数K，找出使网站K可达所需要添加的链接的最少数目。</p>\r\n<p><br />\r\n输入数据第一行包含两个整数N和K(2&lt;=N&lt;=500000 ,1&lt;=K&lt;=20 000) ，分别表示网页数和目标被连接的最大连接数。<br />\r\n接下来N行每行两个不同的整数A和B（1&lt;=A,B&lt;=N），表示链接从页面A链接到页面B。</p>\r\n<p><br />\r\n输出只有一行，一个整数，表示使网站K可达所需额外添加的最少页面数。<br />\r\n<br />\r\n样例输入1:</p>\r\n<p>8 3<br />\r\n1 2<br />\r\n2 3<br />\r\n3 5<br />\r\n4 5<br />\r\n5 6<br />\r\n6 7<br />\r\n7 8<br />\r\n8 5<br />\r\n样例输出1:<br />\r\n2<br />\r\n<br />\r\n样例输入2:</p>\r\n<p>14 4<br />\r\n1 2<br />\r\n2 3<br />\r\n3 4<br />\r\n4 5<br />\r\n7 5<br />\r\n5 6<br />\r\n6 3<br />\r\n8 10<br />\r\n10 9<br />\r\n9 8<br />\r\n14 13<br />\r\n13 12<br />\r\n12 11<br />\r\n11 14<br />\r\n<br />\r\n样例输出2:<br />\r\n3</p>', 1000, 256, 25, 0, '2012-04-05 16:23:27'),
(347, '地震', 'equake', '<h3><span class="mw-headline">问题描述</span></h3>\r\n<p>某国地形狭长，中部有一列山脉，由于多发地震，山脉在不断变化中。地震发生时，山脉有可能发生如下变化：局部海拔升高或降低，板块运动产生地裂而出现一段新的山脉，或板块挤压迫使一段山脉消失。</p>\r\n<p>该国的科学考察队已经预测出了近期内将要发生的一次地震的全过程，他们得到的山脉变化的信息数据格式如下。</p>\r\n<pre>\r\nR a b c\r\n</pre>\r\n<p>a,b,c为三个整数，表示[a,b]这段山脉的海拔升高了c（或降低了-c）。</p>\r\n<pre>\r\nI a k t1 t2 ... tk\r\n</pre>\r\n<p>a,k,t1,t2,...,tk为整数，在第a个位置之后出现了一段新的山脉，长度为k，各处海拔依次为t1,t2,...,tk。</p>\r\n<pre>\r\nM a b\r\n</pre>\r\n<p>a,b为两个整数，表示[a,b]这段山脉消失，后面的山脉会移动过来。</p>\r\n<p>查询请求格式为</p>\r\n<pre>\r\nQ a b\r\n</pre>\r\n<p>a,b为两个整数，查询[a,b]这段山脉的最高峰的海拔。</p>\r\n<p>现在他们想知道这次地震中任意时刻任意一段山脉的最高峰的海拔，请你设计程序帮助他们。</p>\r\n<h3><span class="mw-headline">输入格式</span></h3>\r\n<p>第一行，两个整数N,Q，表示地震前山脉的长度为N，地震中有Q个事件。 第二行，N个整数，表示初始时山脉各处的海拔。 接下来Q行，每行为一个山脉变化信息或查询请求，格式如上。</p>\r\n<h3><span class="mw-headline">输出格式</span></h3>\r\n<p>对于每一个查询请求，输出一行，为该查询请求的结果。</p>\r\n<h3><span class="mw-headline">样例输入</span></h3>\r\n<pre>\r\n10 7\r\n1 3 4 6 3 5 9 1 4 5\r\nR 1 4 2\r\nQ 3 7\r\nI 1 2 2 3\r\nM 6 9\r\nQ 2 5\r\nR 1 6 -4\r\nQ 1 3\r\n</pre>\r\n<h3><span class="mw-headline">样例输出</span></h3>\r\n<pre>\r\n9\r\n6\r\n-1\r\n</pre>\r\n<h3><span class="mw-headline">样例说明</span></h3>\r\n<p>初始时刻，山脉各处海拔为</p>\r\n<pre>\r\n1 3 4 6 3 5 9 1 4 5\r\n</pre>\r\n<p>经过 R 1 4 2，山脉各处海拔为</p>\r\n<pre>\r\n3 5 6 8 3 5 9 1 4 5\r\n</pre>\r\n<p>查询Q 3 7，结果为9</p>\r\n<p>I 1 2 2 3，在1第个位置后插入了长度为2的山脉2 3，之后山脉各处海拔为</p>\r\n<pre>\r\n3 2 3 5 6 8 3 5 9 1 4 5\r\n</pre>\r\n<p>M 6 9后，山脉各处海拔为</p>\r\n<pre>\r\n3 2 3 5 6 1 4 5\r\n</pre>\r\n<p>查询Q 2 5，结果为6</p>\r\n<p>经过 R 1 6 -4，山脉各处海拔为</p>\r\n<pre>\r\n-1 -2 -1 1 2 -3 4 5\r\n</pre>\r\n<p>查询Q 1 3，结果为-1</p>\r\n<h3><span class="mw-headline">数据规模</span></h3>\r\n<ul>\r\n    <li>对于40%的数据，Q&lt;=10000。</li>\r\n    <li>对于70%的数据，1&lt;=Q&lt;=100000。</li>\r\n    <li>对于100%的数据，1&lt;=Q&lt;=300000。</li>\r\n</ul>\r\n<p>在任何时刻，山脉的长度在[1,100000]之内，山脉各处海拔在[-2^31,2^31]之内。初始山脉长度连同插入的山脉的总长度不超过1000000。在所有请求中，插入山脉(I)、压入地下(M)、查询(Q)、升降(R)、的比例约为2:3:3:4。</p>', 4000, 128, 10, 0, '2012-04-05 16:23:27'),
(348, '免费航班', 'freeline', '<h3><span class="mw-headline">问题描述</span></h3>\r\n<p>小Z在MOI比赛中获得了大奖，奖品是一张特殊的机票。使用这张机票，可以在任意一个国家内的任意城市之间的免费飞行，只有跨国飞行时才会有额外的费用。小Z获得了一张地图，地图上有城市之间的飞机航班和费用。已知从每个城市出发能到达所有城市，两个城市之间可能有不止一个航班。一个国家内的每两个城市之间一定有不止一条飞行路线，而两个国家的城市之间只有一条飞行路线。小Z想知道，从每个城市出发到额外费用最大的城市，以便估算出出行的费用，请你帮助他。当然，你不能通过乘坐多次一个航班增加额外费用，也就是必须沿费用最少的路线飞行。</p>\r\n<h3><span class="mw-headline">输入格式</span></h3>\r\n<p>第一行，两个整数N,M，表示地图上有N个城市，M条航线。</p>\r\n<p>接下来M行，每行三个整数a,b,c，表示城市a,b之间有一条费用为c的航线。</p>\r\n<h3><span class="mw-headline">输出格式</span></h3>\r\n<p>共N行，第i行为从城市i出发到达每个城市额外费用的最大值。</p>\r\n<h3><span class="mw-headline">样例输入</span></h3>\r\n<pre>\r\n6 6\r\n1 4 2\r\n1 2 6\r\n2 5 3\r\n2 3 7\r\n6 3 4\r\n3 1 8\r\n</pre>\r\n<h3><span class="mw-headline">样例输出</span></h3>\r\n<pre>\r\n4\r\n4\r\n4\r\n6\r\n7\r\n7\r\n</pre>\r\n<h3><span class="mw-headline">样例说明</span></h3>\r\n<p>有四个国家，包含的城市分别为 {1,2,3},{4},{5},{6}。从城市1出发到达城市6，乘坐(1,3)(3,6)两个航班费用最大，(1,3)在国内为免费航班，(3,6)的费用为4，所以从1出发的最大费用为4。</p>\r\n<h3><span class="mw-headline">数据规模</span></h3>\r\n<ul>\r\n    <li>对于30%的数据 1&lt;=N&lt;=1000,1&lt;=M&lt;=1000</li>\r\n    <li>对于100%的数据 1&lt;=N&lt;=20000,1&lt;=M&lt;=200000</li>\r\n</ul>', 1000, 128, 10, 0, '2012-04-05 16:23:27'),
(349, '小白逛街', 'white', '<div>【背景】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;小白在一个由n条横街，m条纵街的地方逛街。现在他饿了，想去买小吃。已知小吃街在第n条横街上，且每个街区有ai家小吃店。小白站在这个地方的左上角，为了早点买到小吃，他只向下和向右走。</div>\r\n<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;在这n*m的地方，从左上角，只向下和向右走到第n行的某一段的ai中任意一点，求有多少种不同的方案。同一家店不同路线 和 同一路线不同店均视为不同的方案。</div>\r\n<div>【输入文件】</div>\r\n<div>第一行有二个整数n,m表示n行m列。<br />\r\n接下来m-1行，每行一个数ai表示第n行的每个街区的小吃店数量。</div>\r\n<div>【输出文件】</div>\r\n<div>方案总数。</div>\r\n<div>&nbsp;</div>\r\n<div>【输入样例】</div>\r\n<div align="left">&nbsp;</div>\r\n<div>4 5<br />\r\n2<br />\r\n1<br />\r\n0<br />\r\n1</div>\r\n<div>&nbsp;</div>\r\n<div>【输出样例】</div>\r\n<div>26</div>\r\n<p>小白\r\n<table width="200" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<p>&nbsp;&nbsp;2 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</p>\r\n<div>26= 2*1 + 1*4 + 0*10 + 1*20</div>\r\n<div><strong>【数据范围】 </strong></div>\r\n<div>对于 30%数据, 0&lt;=n,m&lt;=10;ai=1<br />\r\n对于100%数据, 0&lt;=n,m&lt;=1,000<br />\r\n对于 100%数据，0&lt;=ai&lt;=1000</div>', 1000, 128, 10, 0, '2012-04-05 16:23:27'),
(350, '小吃店', 'food', '<p><font color="#0000ff">小吃店</font></p>\r\n<div><span>【背景】</span></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;小白终于决定了去小吃店的方案。来到小吃店的小白被琳琅满目的小吃看得直流口水。他对自己说：我一定要把钱全部用来买小吃！！但是小白最近在减肥，所以他不希望吃太多，他给自己又定了一个量，他希望正好达到这个量，不能多也不能少。假设每种最多买一份。</div>\r\n<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;给出n个数对（ai，bi），每个数对都满足ai&gt;=bi。要求在这n个数对中选出k对，使得ai1+ai2+ai3+&hellip;&hellip;+aik=m且bi1+bi2+bi3+&hellip;&hellip;+bik=w，k为任意数，有几种方案。</div>\r\n<div>【输入文件】</div>\r\n<div>第一行有三个整数n,m,w。<br />\r\n接下来n行每行二个整数ai,bi。</div>\r\n<div>【输出文件】</div>\r\n<div>方案总数。</div>\r\n<div>【输入输出样例】</div>\r\n<div>food.in</div>\r\n<div>4 3 2<br />\r\n2 1<br />\r\n3 2<br />\r\n1 1<br />\r\n2 1</div>\r\n<p>food.out</p>\r\n<div>3</div>\r\n<div>样例解释<br />\r\n{1,3}、{2}和{3，4} （这里的数字表示第几对）</div>\r\n<div><strong>【数据范围】 </strong></div>\r\n<div>对于 30%数据, 0&lt;=n&lt;=10; 0&lt;=m,w&lt;=100<br />\r\n对于100%数据, 0&lt;=n&lt;=50; 0&lt;=m,w&lt;=2,500<br />\r\n对于 100%数据，0&lt;=ai,bi&lt;=100<br />\r\n保证运算和输出不会超过maxlongint</div>', 1000, 256, 10, 0, '2012-04-05 16:23:27'),
(351, '小白的智商', 'iq', '<p><span><font color="#0000ff">小白的智商</font></span></p>\r\n<div><span>【背景】</span></div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;小白是我们敬爱的数学课代表，所以智商是很高的，吃饱后的小白，智商更是不可估量。因此我们有难题都是找他解决的。他听说了我们的网球老师有欺负学生的倾向，对此他一直想为我们打抱不平。现在，他在无趣地逛街，但满脑子都在想对策。</div>\r\n<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;我们的网球老师，假设他现在要测试我们的来回正反手，即一部分球扔向左边，另一部分球扔向右边，我们的任务就是把这些球尽量都打回去。但他现在有一筐网球，而且他扔球的速度很快，测试的同学来回跑也是很累的，所以到后面同学会因为太累而来不及跑到击球点把球打回去。他还要求，同学每次打球前要先回到中点。同学刚开始就站在中点。<br />\r\n现在用一个整数来表示老师扔球的位置，规定0点为中点，老师不会把球扔在中点。<br />\r\n每一个时刻老师都会扔出一个球，直到测试结束，共计n个时刻。同学的体力为m，每跑一个单位距离就会消耗体力1，同学的移动速度最快达到v，如果这个时刻的球打完没有体力回到中点，或不能及时跑到扔球点，那么同学就会选择在中点休息，每少打一个球同学的体力就会恢复k，现在询问这位同学会有多少个球打不到。<br />\r\n开始时刻是0，第一个球扔到是时刻1。只有正好在这个时刻整，且正好在扔球的位置，才能打到球。消耗体力只与移动距离有关。体力不会超过最初体力。最后一次打完球也要回到中点。</div>\r\n<div>【输入文件】</div>\r\n<div>第一行一个整数n,m,v,k，意思同上描述。<br />\r\n接下来n行每行一个数ai，表示这个时刻的扔球点。</div>\r\n<div>【输出文件】</div>\r\n<div>打不到的球的数量。</div>\r\n<div>【输入输出样例】</div>\r\n<div align="left">iq.in</div>\r\n<div>5 5 2 2<br />\r\n1<br />\r\n1<br />\r\n-2<br />\r\n1<br />\r\n1</div>\r\n<div>iq.out<br />\r\n2</div>\r\n<p>【数据范围】</p>\r\n<div>对于 30%数据, 0&lt;=n&lt;=100<br />\r\n对于100%数据, 0&lt;=n&lt;=10,000<br />\r\n对于 100%数据，0&lt;=ai,v,k&lt;=100;0&lt;=m&lt;=maxlongint</div>', 1000, 128, 10, 0, '2012-04-05 16:23:27'),
(352, '数字游戏', 'ggame', '<p><span>【背景】</span></p>\r\n<div align="left">不知不觉小白已经到家了。他打开自己的草稿本，开始了自己新的研究。<br />\r\n&nbsp;</div>\r\n<div>【问题描述】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;按顺序给出n个数的数列，现在需要从中求出连续几个数的和的最大，连续的数的个数要在s和t之间。</div>\r\n<div>【输入文件】</div>\r\n<div>第一行有三个正整数n、s和t ，同上描述。<br />\r\n接下来有n行，每行一个整数ai，组成数列，数列的顺序不可以变换。</div>\r\n<div>【输出文件】</div>\r\n<div>输出长度在s和t之间连续的数列数的和的最大值。</div>\r\n<div>【输入输出样例】</div>\r\n<div align="left">ggame.in</div>\r\n<div>5 2 3<br />\r\n1<br />\r\n-2<br />\r\n3<br />\r\n-4<br />\r\n5</div>\r\n<div>ggame.out<br />\r\n4</div>\r\n<p>【数据范围】</p>\r\n<div>对于30%数据,1&lt;=s&lt;=t&lt;=n&lt;=100<br />\r\n对于100%数据,1&lt;=s&lt;=t&lt;=n&lt;=100,000<br />\r\n对于 100%数据，｜ai｜&lt;=10000</div>', 1000, 128, 10, 0, '2012-04-05 16:23:28'),
(353, 'Blue Mary的战役地图', 'campaign', '<p>题目描述：</p>\r\n<div>Blue Mary最近迷上了玩Starcraft(星际争霸) 的RPG游戏。她正在设法寻找更多的战役地图以进一步提高自己的水平。<br />\r\n由于Blue Mary的技术已经达到了一定的高度,因此，对于用同一种打法能够通过的战役地图，她只需要玩一张，她就能了解这一类战役的打法，然后她就没有兴趣再玩儿这一类地图了。而网上流传的地图有很多都是属于同一种打法，因此Blue Mary需要你写一个程序，来帮助她判断哪些地图是属于同一类的。<br />\r\n具体来说，Blue Mary已经将战役地图编码为n*n的矩阵，矩阵的每个格子里面是一个32位（有符号）正整数。对于两个矩阵，他们的相似程度定义为他们的最大公共正方形矩阵的边长。两个矩阵的相似程度越大，这两张战役地图就越有可能是属于同一类的。</div>\r\n<div>输入格式：</div>\r\n<div>输入文件的第一行包含一个正整数n。<br />\r\n以下n行，每行包含n个正整数，表示第一张战役地图的代表矩阵。<br />\r\n再以下n行，每行包含n个正整数，表示第二张战役地图的代表矩阵。</div>\r\n<div>输出格式：</div>\r\n<div>输出文件仅包含一行。这一行仅有一个正整数，表示这两个矩阵的相似程度。</div>\r\n<div>输入样例：<br />\r\n3<br />\r\n1 2 3<br />\r\n4 5 6<br />\r\n7 8 9<br />\r\n5 6 7<br />\r\n8 9 1<br />\r\n2 3 4</div>\r\n<div>输出样例：<br />\r\n2</div>\r\n<div>样例解释：<br />\r\n子矩阵：<br />\r\n5 6<br />\r\n8 9<br />\r\n为两个地图的最大公共矩阵</div>\r\n<div>约定：<br />\r\nn&lt;=50<br />\r\n&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:28'),
(354, 'Blue Mary的职员分配', 'employment', '<p>题目描述：</p>\r\n<p>由于Blue Mary呕心沥血的管理，Blue Mary的网络公司蒸蒸日上。现在一共拥有了n名职员，可惜没有任何的金钱和声誉。平均每名每天职员都可以给公司带来x单位金钱或者y单位声誉（名利不能双全）。并且可以花费z单位的金钱在人才交易市场发布广告招聘职员，每次发布广告三天以后就会招聘到一名职员，并且必须在发布广告并且招聘到职员的那一天才能发布下一次广告。<br />\r\nBlue Mary计划以最快的时间获得至少A单位金钱和至少B单位声誉，请你计算一下他至少需要多少时间才能达到他的目标。<br />\r\n<br />\r\n输入格式：</p>\r\n<p>输入有且仅有一行，包含六个整数n,x,y,z,A和B，意义如题目描述所述。</p>\r\n<p>输出格式：</p>\r\n<p>要求输出一行，包含一个整数，表示Blue Mary至少需要多少时间才能达到他的目标。</p>\r\n<p>输入样例：<br />\r\n1 2 3 4 5 6</p>\r\n<p>输出样例：<br />\r\n5</p>\r\n<p>约定：<br />\r\n1&lt;=n,x,y,z,A,B&lt;=20</p>\r\n<p>说明：<br />\r\n规定每天先去人才市场，然后再去赚钱（或名誉）。</p>\r\n<p>补充样例<br />\r\n输入样例：<br />\r\n3 2 3 2 19 18<br />\r\n输出样例：<br />\r\n6<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:28'),
(355, 'Blue Mary的旅行', 'btravel', '<div>题目描述：</div>\r\n<div>在一段时间之后，网络公司终于有了一定的知名度，也开始收到一些订单，其中最大的一宗来自B市。Blue Mary决定亲自去签下这份订单。<br />\r\n为了节省旅行经费，他的某个金融顾问建议只购买U航空公司的机票。U航空公司的所有航班每天都只有一班，并且都是上午出发当天下午到达的，所以他们每人每天只能坐一班飞机。经过调查，他们得到了U航空公司经营的所有航班的详细信息，这包括每一航班的出发地，目的地以及最多能买到的某一天出发的票数。(注意: 对于一个确定的航班，无论是哪一天，他们最多能买到的那一天出发的票数都是相同的。)<br />\r\nBlue Mary注意到他们一定可以只乘坐U航空公司的航班就从A市到达B市，但是，由于每一航班能买到的票的数量的限制，他们所有人可能不能在同一天到达B市。所以现在Blue Mary需要你的帮助，设计一个旅行方案使得最后到达B市的人的到达时间最早。</div>\r\n<div>输入格式：</div>\r\n<div>第一行包含3个正整数N，M和T。题目中会出现的所有城市分别编号为1,2,&hellip;,N，其中城市A编号一定为1，城市B编号一定为N. U公司一共有M条（单向）航班。而连Blue Mary在内，公司一共有T个人要从A市前往B市。<br />\r\n以下M行，每行包含3个正整数X,Y,Z, 表示U公司的每一条航班的出发地，目的地以及Blue Mary最多能够买到的这一航班某一天出发的票数。(即：无论是哪一天，Blue Mary最多只能买到Z张U航空公司的从城市X出发到城市Y的机票。)<br />\r\n输入保证从一个城市到另一个城市的单向航班最多只有一个。</div>\r\n<div>输出格式：</div>\r\n<div>仅有一行，包含一个正整数，表示最后到达B市的人的最早到达时间。假设他们第一次乘飞机的那一天是第一天。</div>\r\n<div>输入样例：<br />\r\n3 3 5<br />\r\n1 2 1<br />\r\n2 3 5<br />\r\n3 1 4</div>\r\n<div>输出样例：<br />\r\n6</div>\r\n<div>约定：<br />\r\n2 &lt;= N &lt;= 50<br />\r\n1 &lt;= M &lt;= 2450<br />\r\n1 &lt;= T &lt;= 50<br />\r\n1 &lt;= X，Y &lt;= N<br />\r\nX != Y<br />\r\n1 &lt;= Z &lt;= 50<br />\r\n&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:28'),
(356, '单词选择', 'sword', '<p>问题描述</p>\r\n<p>我们都知道，学习英语单词最好的方法就是在相应的句子和语言环境中学习。小w最近定下了一个学习单词的计划，他要背n个单词，但他想通过背一篇文章中的一段来记住这单词。<br />\r\n假定现在小w手中有一篇包含m个单词的文章，他想在文章中找出连续的一段，其中包含最多的他所要背的单词(重复的只算一个)，并且使这段连续的单词长度最短。这样他就可以用尽量短的时问学习尽可能多的单词了。</p>\r\n<p>输入格式<br />\r\n第1行一个数n(1&le;n&le;1000)<br />\r\n接下来n行每行是一个长度不超过10的字符串，表示一个要背的单词。<br />\r\n接着是一个数m(1&le;m&le;100000)<br />\r\n然后是m行长度不超过10的字符串，每个表示文章中的一个单词。</p>\r\n<p>输出格式<br />\r\n输出文件共2行。第1行为文章中最多包含的要背的单词数，第2行表示在文章中包含最多要背单词的最短的连续段的长度。</p>\r\n<p>输入输出样例<br />\r\nsword.in<br />\r\n3<br />\r\nhot<br />\r\ndog<br />\r\nmilk<br />\r\n5<br />\r\nhot<br />\r\ndog<br />\r\ndog<br />\r\nmilk<br />\r\nhot</p>\r\n<p>sword.out<br />\r\n3<br />\r\n3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:28'),
(357, '速配游戏', 'match', '<p>题目描述：</p>\r\n<p>有一个速配电视节目。N位男士和Ⅳ位女士要在摄像机前选出他们合适的伴侣。每位女士按照其对每位男士作为配偶的偏爱程度给每位男士排名次，每位男士也按照其对每位女士作为配偶的偏爱程度给每位女士排名次。这些名次不允许并列。然后每位男士将向心仪的对象求婚，经过&ldquo;残酷&rdquo;的竞争之后各自找到适合的伴侣。<br />\r\n最开始的时候每位男士都没有被任何一位女士拒绝。求婚环节会经过很多轮进行，每一轮：<br />\r\n(1)每位男士从还没有拒绝过自己的女士中选出自己认为最理想的一个，并向她求女皆。<br />\r\n(2)每位女士在所有这一轮中从向她求婚的男士中选出自己认为最理想的一个，并不答应，也不拒绝。她把其余向她求婚的男士都婉言拒绝掉。</p>\r\n<p>经过若干轮求婚之后，在某一轮，幸运的事情发生了：所有的女士都恰好有一个求婚者，所有的男士都找到一个心仪的对象。主持人将继续指出这个配对方式的神奇之处：没有任意的两个配对，例如男士A和女士a配对，男士B和女士b配对，使得在A心目中b较a更理想，而且在b心目中A较B更理想(这样A和b就会&ldquo;私奔&rdquo;)。因此，主持人总结说，这个配对是非常合理的。(他知道，这种情况是一定会发生的。)<br />\r\n主持人在节目之前已经知道男士和女士之间的偏爱情况，他想预先知道最后的匹配结果是怎么样的，你能帮帮他吗?</p>\r\n<p>输入格式:<br />\r\n第1行包括一个数字N(1&le;N&le;1000)<br />\r\n以下N&times;2行，每行有N个数字。第i+1行(1&le;i&le;N)表示编号为f的男士对女士们的排序(从最喜欢的到最不喜欢的)。第N+j+l行(1&le;j&le;N)表示编号为j的女士对男士们的排序(同样从最喜欢的到最不喜欢的)。</p>\r\n<p>输出格式:<br />\r\nN行，每行包括一个数字。第i行的数字表示与编号为i的男士匹配的女士的编号。</p>\r\n<p>输入输出样例<br />\r\nmatch.in<br />\r\n3<br />\r\n1 2 3<br />\r\n2 3 1<br />\r\n2 1 3<br />\r\n3 2 1<br />\r\n2 3 1<br />\r\n2 3 1<br />\r\nmatch.out<br />\r\n3<br />\r\n2<br />\r\n1</p>', 1000, 128, 10, 0, '2012-04-05 16:23:28');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(358, '高性能计算机', 'hpc', '<p>【问题描述】</p>\r\n<p>　　现在有一项时间紧迫的工程计算任务要交给你国家高性能并行计算机的主管工程师 &mdash;&mdash; 来完成。为了尽可能充分发挥并行计算机的优势，我们的计算任务应当划分成若干个小的子任务。</p>\r\n<p>　　这项大型计算任务包括 A 和 B 两个互不相关的较小的计算任务。为了充分发挥并行计算机的运算能力，这些任务需要进行分解。研究发现， A 和 B 都可以各自划分成很多较小的子任务，所有的 A 类子任务的工作量都是一样的，所有的 B 类子任务也是如此（ A 和 B 类的子任务的工作量不一定相同）。 A 和 B 两个计算任务之间，以及各子任务之间都没有执行顺序上的要求。</p>\r\n<p>　　这台超级计算机拥有 p 个计算节点，每个节点都包括一个串行处理器、本地主存和高速 cache 。然而由于常年使用和不连贯的升级，各个计算节点的计算能力并不对称。一个节点的计算能力包括如下几个方面：</p>\r\n<p>1. 就本任务来说，每个节点都有三种工作状态：待机、 A 类和 B 类。其中， A 类状态下执行 A 类任务； B 类状态下执行 B 类任务；待机状态下不执行计算。所有的处理器在开始工作之前都处于待机状态，而从其它的状态转入 A 或 B 的工作状态（包括 A 和 B 之间相互转换），都要花费一定的启动时间。对于不同的处理节点，这个时间不一定同。用两个正整数 <img height="25" alt="" width="17" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image001.gif" />和 <img height="25" alt="" width="17" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image002.gif" />( <img height="21" alt="" width="77" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image003.gif" />) 分别表示节点 i 转入工作状态 A 和工作状态 B 的启动时间（单位： ns ）。</p>\r\n<p>2. 一个节点在连续处理同一类任务的时候，执行时间 ( 不含状态转换的时间 ) 随任务量（这一类子任务的数目）的平方增长，即： <br />\r\n若节点 i 连续处理 x 个 A 类子任务，则对应的执行时间为 <br />\r\n<img height="25" alt="" width="56" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image004.gif" /><br />\r\n类似的，若节点 i 连续处理 x 个 B 类子任务，对应的执行时间为： <br />\r\n<img height="25" alt="" width="56" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image005.gif" /><br />\r\n　　 其中， <img height="25" alt="" width="20" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image006.gif" />和 <img height="25" alt="" width="20" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image007.gif" />是系数，单位是 ns 。 <img height="21" alt="" width="77" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image003_0000.gif" />。</p>\r\n<p>　　任务分配必须在所有计算开始之前完成，所谓任务分配，即给每个计算节点设置一个任务队列，队列由一串 A 类和 B 类子任务组成。两类子任务可以交错排列。</p>\r\n<p>　　计算开始后，各计算节点分别从各自的子任务队列中顺序读取计算任务并执行，队列中连续的同类子任务将由该计算节点一次性读出，队列中一串连续的同类子任务不能被分成两部分执行。</p>\r\n<p>【编程任务】</p>\r\n<p>　　现在需要你编写程序，给这 p 个节点安排计算任务，使得这个工程计算任务能够尽早完成。假定任务安排好后不再变动，而且所有的节点都同时开始运行，任务安排的目标是使最后结束计算的节点的完成时间尽可能早。</p>\r\n<p>【输入输出】</p>\r\n<p>　　输入文件名是 hpc.in 。</p>\r\n<p>　　文件的第一行是对计算任务的描述，包括两个正整数 <img height="22" alt="" width="18" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image008.gif" />和 <img height="22" alt="" width="18" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image009.gif" />，分别是 A 类和 B 类子任务的数目，两个整数之间由一个空格隔开。</p>\r\n<p>　　文件的后面部分是对此计算机的描述：</p>\r\n<p>　　文件第二行是一个整数 p ，即计算节点的数目。</p>\r\n<p>　　随后连续的 p 行按顺序分别描述各个节点的信息，第 i 个节点由第 i+2 行描述，该行包括下述四个正整数（相邻两个整数之间有一个空格）：</p>\r\n<p><img height="25" alt="" width="17" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image001_0000.gif" /><img height="25" alt="" width="17" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image002_0000.gif" /><img height="25" alt="" width="20" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image006_0000.gif" /><img height="25" alt="" width="20" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image007_0000.gif" /></p>\r\n<p>　　输出文件名是 hpc.out 。其中只有一行，包含有一个正整数，即从各节点开始计算到任务完成所用的时间。</p>\r\n<p>【样例】</p>\r\n<p>　　设输入文件hpc.in为<br />\r\n5 5<br />\r\n3<br />\r\n15 10 6 4<br />\r\n70 100 7 2<br />\r\n30 70 1 6<br />\r\n&nbsp;</p>\r\n<p>　　对应的输出文件 hpc.out 为</p>\r\n<p>93</p>\r\n<p>【数据说明】</p>\r\n<p><img height="22" alt="" width="73" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image010.gif" />， <img height="22" alt="" width="73" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image011.gif" /></p>\r\n<p><img height="21" alt="" width="68" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image012.gif" /></p>\r\n<p><img height="22" alt="" width="84" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image013.gif" />， <img height="22" alt="" width="84" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image014.gif" />， <img height="22" alt="" width="72" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image015.gif" />， <img height="22" alt="" width="72" src="http://192.168.1.252/os/times/2009/09sj/A/12/hpc_clip_image016.gif" /></p>\r\n<h3>&nbsp;</h3>', 1000, 128, 6, 0, '2012-04-05 16:23:28'),
(359, '树的分割', 'tree', '<p>有一棵树，每个结点有一个权值，边表示连接关系。去掉 k-1 条边，就可以把这棵树分成 k 棵树。求如何分割使得你的分割方案中权和最小的那棵树的权和最大。</p>\r\n<p><strong>输入文件： tree.in </strong></p>\r\n<p>第一行为两个整数 <em>n </em>、 <em>k 。 n </em>表示结点总数， <em>k </em>为分割的数目。 (0&lt;k&lt;=n&lt;=500)</p>\r\n<p>第二行为 n 个整数，依次表示每个 结点 的权值（ 1 到 1000 之间的整数）。</p>\r\n<p>接下来的 n-1 行每行两个整数 <em>p </em>和 <em>q </em>，表示第 <em>p </em>个结点 和第 <em>q </em>个结点 相连接（保证是树状结构）。</p>\r\n<p><strong>输出文件： tree.out </strong></p>\r\n<p>一个整数，表示你的分割方案中使得权和最小的那部分权和尽量大的值。</p>\r\n<p>&nbsp;</p>\r\n<p>【样例输入】 tree.in</p>\r\n<p>3 2<br />\r\n15 10 4<br />\r\n1 2<br />\r\n2 3<br />\r\n&nbsp;</p>\r\n<p>【样例输出】 tree.out</p>\r\n<p>14</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(360, '双面棋盘', 'dface', '<p>【问题描述】</p>\r\n<p>佳佳有一个 <em>n </em>行 <em>n </em>列的黑白棋盘，每个格子都有两面，一面白色，一面黑色。佳佳把棋盘平放在桌子上，因此每个格子恰好一面朝上，如下图所示：</p>\r\n<p>&nbsp;</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>我们把每行从上到下编号为 1 ， 2 ， 3 ，&hellip;&hellip;， <em>n </em>，各列从左到右编号为 1 ， 2 ， 3 ，&hellip;&hellip;， <em>n </em>，则每个格子可以用棋盘坐标 ( <em>x </em>, <em>y </em>) 表示。在上图中，有 8 个格子黑色朝上，另外 17 个格子白色朝上。</p>\r\n<p>如果两个同色格子有一条公共边，我们称这两个同色格子属于同一个连通块。上图共有 5 个黑色连通块和 3 个白色连通块。</p>\r\n<p>佳佳可以每分钟将一个格子翻转（即白色变成黑色，黑色变成白色），然后计算当前有多少个黑色连通块和白色连通块，你能算得更快吗？</p>\r\n<p>&nbsp;</p>\r\n<p>【 输入文件 】 dface.in</p>\r\n<p>输入文件的第一行包含一个正整数 <em>n </em>，为格子的边长。以下 <em>n </em>行每行 <em>n </em>个整数，非 0 即 1 ，表示初始状态。 0 表示白色， 1 表示黑色。下一行包含一个整数 <em>m </em>，表示操作的数目。以下 <em>m </em>行每行两个整数 <em>x </em>, <em>y </em>(1 &le; <em>x </em>, <em>y </em>&le; <em>n </em>) ，表示把坐标为 ( <em>x </em>, <em>y </em>) 的格子翻转。</p>\r\n<p>&nbsp;</p>\r\n<p>【 输出文件 】 dface.out</p>\r\n<p>输出文件包含 <em>m </em>行，每行对应一个操作。该行包括两个整数 <em>b </em>, <em>w </em>，表示黑色区域和白色区域数目。</p>\r\n<p>&nbsp;</p>\r\n<p>【 约定 】</p>\r\n<p>&bull;&nbsp; 1 &le; <em>n </em>&le; 200</p>\r\n<p>&bull;&nbsp; 1 &le; <em>m </em>&le; 10,000</p>\r\n<p>&nbsp;</p>\r\n<p>【 样例输入 】 dface.in</p>\r\n<p>5<br />\r\n0 1 0 0 0<br />\r\n0 1 1 1 0<br />\r\n1 0 0 0 1<br />\r\n0 0 1 0 0<br />\r\n1 0 0 0 0<br />\r\n2<br />\r\n3 2<br />\r\n2 3<br />\r\n&nbsp;</p>\r\n<p>【 样例输出 】 dface.out</p>\r\n<p>4 3<br />\r\n5 2<br />\r\n&nbsp;</p>\r\n<p>【 样例说明 】</p>\r\n<p>翻转 (3, 2) 之后，棋盘变为：</p>\r\n<p>&nbsp;</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>有 4 个黑色区域和 3 个白色区域</p>\r\n<p>翻转 (2, 3) 之后，棋盘变为：</p>\r\n<p>&nbsp;</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="21">\r\n            <p align="center">1</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n            <td valign="top" width="21">\r\n            <p align="center">&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>有 5 个黑色区域和 2 个白色区域</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(361, '飞 弹 ', 'rak', '<h3>问题描述</h3>\r\n<p>一场战争在 U 国与 A 国之间爆发了。 U 国的负责情报的长官得知， A 国在边界上已经事先布置了 N 个坚实的地堡，这些地堡组成的防御体系将对 U 国的士兵构成极大的威胁！ U 国国防部不得不在进攻之前先摧毁这些地堡！</p>\r\n<p>为了出奇制胜， U 国国防部决定：布置在边界的每一个飞弹发射点负责消灭一个地堡。为了给敌人一个措手不及， N 个飞弹发射点将同时发射飞弹，每个飞弹均以直线全速前进，争取在短时间内给地堡群造成毁灭性的打击。</p>\r\n<p>但是，由于这些飞弹是地对地电子制导型的，两颗飞弹的飞行路线如果相交，电子信号将会互相干扰，从而偏离预定目标。</p>\r\n<p>作为军事顾问，国防部需要你来设计一个作战方案，事先确定每个飞弹点负责哪一个地堡，并且在所设计的方案中，飞弹的飞行线路不相交。</p>\r\n<p>情报部门已经将飞弹发射点和地堡的位置明确标在地图上，并保证这 2N 个坐标点不存在三点共线。</p>\r\n<p>&nbsp;</p>\r\n<p>输入文件</p>\r\n<p>输入文件名： rak.in</p>\r\n<p>第一行是一个数 N （ 1&lt;=N&lt;=10000 ），表示飞弹发射点的个数，也是敌方地堡的个数。</p>\r\n<p>以下 N 行，每行两个整数 x 和 y （在 [-10000,10000] 内），第 i+1 行表示第 i 个飞弹发射点的坐标，。</p>\r\n<p>再下面 N 行，每行两个整数 x 和 y （在 [-10000,10000] 内），第 N+i+1 行表示第 i 个地堡的坐标。</p>\r\n<p>&nbsp;</p>\r\n<p>输出文件</p>\r\n<p>输出文件名： rak.out</p>\r\n<p>输出文件有 N 行，每行为一个整数。第 i 行的整数 P i 表示，第 i 个飞弹发射点负责消灭第 P i 个地堡。</p>\r\n<p>&nbsp;</p>\r\n<p>样例输入<br />\r\n4<br />\r\n0 0<br />\r\n1 5<br />\r\n4 2<br />\r\n2 6<br />\r\n1 2<br />\r\n5 4<br />\r\n4 5<br />\r\n3 1</p>\r\n<p>样例输出<br />\r\n2<br />\r\n1<br />\r\n4<br />\r\n3</p>', 1000, 128, 1, 0, '2012-04-05 16:23:29'),
(362, '锯木场选址', 'two', '<p>从山顶上到山底下沿着一条直线种植了n棵老树。当地的政府决定把他们砍下来。为了不浪费任何一棵木材，树被砍倒后要运送到锯木厂。<br />\r\n木材只能按照一个方向运输：朝山下运。山脚下有一个锯木厂。另外两个锯木厂将新修建在山路上。你必须决定在哪里修建两个锯木厂，使得传输的费用总和最小。假定运输每公斤木材每米需要一分钱。</p>\r\n<p>输入</p>\r\n<p>输入的第一行为一个正整数n&mdash;&mdash;树的个数（2&le;n&le;20 000）。树从山顶到山脚按照1，2&hellip;&hellip;n标号。接下来n行，每行有两个正整数（用空格分开）。第i+1行含有：wi&mdash;&mdash;第i棵树的重量（公斤为单位）和 di&mdash;&mdash;第i棵树和第i+1棵树之间的距离，1&le;wi &le;10 000，0&le;di&le;10 000。最后一个数dn，表示第n棵树到山脚的锯木厂的距离。保证所有树运到山脚的锯木厂所需要的费用小于2000 000 000分。</p>\r\n<p>输出</p>\r\n<p>输出只有一行一个数：最小的运输费用。</p>\r\n<p>样例</p>\r\n<p>输入</p>\r\n<p>9<br />\r\n1 2<br />\r\n2 1<br />\r\n3 3<br />\r\n1 1<br />\r\n3 2<br />\r\n1 6<br />\r\n2 1<br />\r\n1 2<br />\r\n1 1</p>\r\n<p>输出</p>\r\n<p>26<br />\r\n&nbsp;</p>', 100, 32, 13, 0, '2012-04-05 16:23:29'),
(363, '土地购买', 'acquire', '<p>农夫John准备扩大他的农场,他正在考虑N (1 &lt;= N &lt;= 50,000) 块长方形的土地. 每块土地的长宽满足(1 &lt;= 宽 &lt;= 1,000,000; 1 &lt;= 长 &lt;= 1,000,000).</p>\r\n<p>每块土地的价格是它的面积,但FJ可以同时购买多快土地. 这些土地的价格是它们最大的长乘以它们最大的宽, 但是土地的长宽不能交换. 如果FJ买一块3x5的地和一块5x3的地,则他需要付5x5=25.</p>\r\n<p>FJ希望买下所有的土地,但是他发现分组来买这些土地可以节省经费. 他需要你帮助他找到最小的经费.</p>\r\n<p>输入格式:</p>\r\n<ul>\r\n    <li>第1行: 一个数: N</li>\r\n</ul>\r\n<ul>\r\n    <li>第2..N+1行: 第i+1行包含两个数,分别为第i块土地的长和宽</li>\r\n</ul>\r\n<p>样例输入</p>\r\n<pre>\r\n4\r\n100 1\r\n15 15\r\n20 5\r\n1 100\r\n</pre>\r\n<p>输入解释:</p>\r\n<p>共有4块土地.</p>\r\n<p>输出格式:</p>\r\n<ul>\r\n    <li>第一行: 最小的可行费用.</li>\r\n</ul>\r\n<p>样例输出</p>\r\n<pre>\r\n500\r\n</pre>\r\n<p>输出解释:</p>\r\n<p>FJ分3组买这些土地: 第一组:100x1, 第二组1x100, 第三组20x5 和 15x15 plot. 每组的价格分别为100,100,300, 总共500.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(364, '奇怪的电梯', 'lift', '<p align="left"><strong>问题描述</strong></p>\r\n<p>呵呵，有一天我做了一个梦，梦见了一种很奇怪的电梯。大楼的每一层楼都可以停电梯，而且第 i 层楼 (1&lt;=i&lt;=N) 上有一个数字 Ki(0&lt;=Ki&lt;=N) 。电梯只有四个按钮：开，关，上，下。上下的层数等于当前楼层上的那个数字。当然，如果不能满足要求，相应的按钮就会失灵。例如： 3 3 1 2 5 代表了 Ki(K1=3,K2=3,&hellip;&hellip;) ，从一楼开始。在一楼，按 &ldquo; 上 &rdquo; 可以到 4 楼，按 &ldquo; 下 &rdquo; 是不起作用的，因为没有 -2 楼。那么，从 A 楼到 B 楼至少要按几次按钮呢？</p>\r\n<p><strong>输入 </strong></p>\r\n<p>输入文件共有二行，第一行为三个用空格隔开的正整数，表示 N,A,B(1&le;N&le;200, 1&le;A,B&le;N) ，第二行为 N 个用空格隔开的正整数，表示 Ki 。</p>\r\n<p><strong>输出 </strong></p>\r\n<p>输出文件仅一行，即最少按键次数 , 若无法到达，则输出 -1 。</p>\r\n<p><strong>样例 </strong></p>\r\n<p>lift.in</p>\r\n<p>5 1 5</p>\r\n<p>3 3 1 2 5</p>\r\n<p>&nbsp;</p>\r\n<p>lift.out</p>\r\n<p>3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(365, '轰炸', 'bomb', '<p><strong>问题描述 </strong></p>\r\n<p>&ldquo;我该怎么办？&rdquo;飞行员 klux 向你求助。</p>\r\n<p>事实上， klux 面对的是一个很简单的问题，但是他实在太菜了。</p>\r\n<p>klux 要想轰炸某个区域内的一些地方，它们是位于平面上的一些点，但是（显然地） klux 遇到了抵抗，所以 klux 只能飞一次，而且由于飞机比较破，一点起飞就只能沿直线飞行，无法转弯。现在他想一次轰炸最多的地方。</p>\r\n<p><strong>输入： </strong></p>\r\n<p>输入数据由 n 对整数组成 (1&lt;n&lt;700) ，每对整数表示一个点的坐标。没有一个点会出现两次。</p>\r\n<p><strong>输出： </strong></p>\r\n<p>一个整数，表示一条直线能覆盖的最多的点数。</p>\r\n<p><strong>样例： </strong></p>\r\n<p>bomb.in</p>\r\n<p>5</p>\r\n<p>1 1 <br />\r\n2 2 <br />\r\n3 3 <br />\r\n9 10 <br />\r\n10 11</p>\r\n<p>bomb.out</p>\r\n<p>3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(366, '相似基因', 'gene', '<p align="left"><strong>问题描述</strong></p>\r\n<p>大家都知道，基因可以看作一个碱基对序列。它包含了 4 种核苷酸，简记作 A,C,G,T 。生物学家正致力于寻找人类基因的功能，以利用于诊断疾病和发明药物。</p>\r\n<p>在一个人类基因工作组的任务中，生物学家研究的是：两个基因的相似程度。因为这个研究对疾病的治疗有着非同寻常的作用。两个基因的相似度的计算方法如下：</p>\r\n<p>对于两个已知基因，例如 AGTGATG 和 GTTAG ，将它们的碱基互相对应。当然，中间可以加入一些空碱基 - ，例如：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>这样 , 两个基因之间的相似度就可以用碱基之间相似度的总和来描述，碱基之间的相似度如下表所示：</p>\r\n<p align="center"><img height="165" alt="" width="229" src="http://192.168.1.252/os/times/2009/09sj/A/13/gene_clip_image001_0000.gif" /></p>\r\n<p>那么相似度就是： (-3)+5+5+(-2)+(-3)+5+(-3)+5=9 。因为两个基因的对应方法不唯一，例如又有：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>T</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>-</p>\r\n            </td>\r\n            <td valign="top" width="19">\r\n            <p>G</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>相似度为： (-3)+5+5+(-2)+5+(-1)+5=14 。规定两个基因的相似度为所有对应方法中，相似度最大的那个。</p>\r\n<p><strong>输入 </strong></p>\r\n<p>共两行。每行首先是一个整数，表示基因的长度；隔一个空格后是一个基因序列，序列中只含 A,C,G,T 四个字母。 1&lt;= 序列的长度 &lt;=100 。</p>\r\n<p><strong>输出 </strong></p>\r\n<p>仅一行，即输入基因的相似度。</p>\r\n<p><strong>样例 </strong></p>\r\n<p>gene.in</p>\r\n<p>7 AGTGATG <br />\r\n5 GTTAG</p>\r\n<p>gene.out</p>\r\n<p>14</p>', 1000, 128, 10, 0, '2012-04-05 16:23:29'),
(367, '仓库建设', 'storage', '<p>L公司有N个工厂，由高到底分布在一座山上。如图所示，工厂1在山顶，工厂N在山脚。</p>\r\n<p>由于这座山处于高原内陆地区（干燥少雨），L公司一般把产品直接堆放在露天，以节省费用。突然有一天，L公司的总裁L先生接到气象部门的电话，被告知三天之后将有一场暴雨，于是L先生决定紧急在某些工厂建立一些仓库以免产品被淋坏。<br />\r\n由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第i个工厂目前已有成品Pi件，在第i个工厂位置建立仓库的费用是Ci。对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于L公司产品的对外销售处设置在山脚的工厂N，故产品只能往山下运（即只能运往编号更大的工厂的仓库），当然运送产品也是需要费用的，假设一件产品运送1个单位距离的费用是1。假设建立的仓库容量都都是足够大的，可以容下所有的产品。</p>\r\n<p>你将得到以下数据：<br />\r\n*工厂i距离工厂1的距离Xi（其中X1=0）;<br />\r\n*工厂i目前已有成品数量Pi;<br />\r\n*在工厂i建立仓库的费用 Ci;</p>\r\n<p>[输入]</p>\r\n<p><br />\r\n请你帮助L公司寻找一个仓库建设的方案，使得总的费用（建造费用+运输费用）最小。<br />\r\n输入文件第一行包含一个整数N，表示工厂的个数。接下来N行每行包含两个整数Xi, Pi, Ci, 意义如题中所述。</p>\r\n<p>[输出]</p>\r\n<p>输出文件仅包含一个整数，为可以找到最优方案的费用。</p>\r\n<p>[输入样例]<br />\r\n3<br />\r\n0 5 10<br />\r\n5 3 100<br />\r\n9 6 10</p>\r\n<p>[输出样例]<br />\r\n32</p>\r\n<p>[样例说明]</p>\r\n<p>在工厂1和工厂3建立仓库，建立费用为10+10=20，运输费用为(9-5)*3 = 12，总费用32。<br />\r\n如果仅在工厂3建立仓库，建立费用为10，运输费用为(9-0)*5+(9-5)*3=57，总费用67，不如前者优。</p>\r\n<p>[数据范围]</p>\r\n<p>对于20%的数据， N &le;500；<br />\r\n对于40%的数据， N &le;10000；<br />\r\n对于100%的数据， N &le;1000000。 <br />\r\n所有的Xi, Pi, Ci均在32位带符号整数以内，保证中间计算结果不超过64位带符号整数。<br />\r\n&nbsp;</p>', 3000, 64, 10, 0, '2012-04-05 16:23:29'),
(368, '水仙花数', 'daff', '<div align="left"><span style="font-size: 12pt">假设一个三位数</span><span style="font-size: 12pt">x</span><span style="font-size: 12pt">的百位、十位、个位上的数字分别为</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">、</span><span style="font-size: 12pt">b</span><span style="font-size: 12pt">、</span><span style="font-size: 12pt">c</span><span style="font-size: 12pt">，如果</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">+b</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">+c</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">恰好等于</span><span style="font-size: 12pt">x</span><span style="font-size: 12pt">，则称</span><span style="font-size: 12pt">x</span><span style="font-size: 12pt">为水仙花数，如：</span><span style="font-size: 12pt">153</span><span style="font-size: 12pt">就是一个水仙花数，</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">+5</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">+3</span><span style="font-size: 12pt; position: relative; top: -3pt">3</span><span style="font-size: 12pt">&nbsp;=1+27+125=153</span><span style="font-size: 12pt">。请编写程序判断一个三位正整数是否是水仙花数。</span></div>\r\n<div><span style="font-size: 12pt">【输入格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输入文件</span><span style="font-size: 12pt">(daff.in)</span><span style="font-size: 12pt">只有一行，为一个三位整数。</span></div>\r\n<div><span style="font-size: 12pt">【输出格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输出文件</span><span style="font-size: 12pt">(daff.out)</span><span style="font-size: 12pt">只有一行，为判断结果，</span><span style="font-size: 12pt">TRUE</span><span style="font-size: 12pt">或者</span><span style="font-size: 12pt">FALSE</span></div>\r\n<div><span style="font-size: 12pt">【输入输出样例】</span></div>\r\n<div style="text-indent: 21pt">输入文件名：daff.in</div>\r\n<div style="text-indent: 21pt">153</div>\r\n<div style="text-indent: 21pt">输出文件名<span style="font-size: 12pt">：</span><span style="font-size: 12pt">daff.out</span></div>\r\n<div align="left"><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; TRUE</span></div>\r\n<div align="left">&nbsp;</div>\r\n<div style="margin: 0cm 0cm 0pt 24pt; text-indent: -24pt">&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(369, '数列求和', 'fblqsum', '<div><span style="font-size: 12pt">已知：菲波拉契数列的前几个数为</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">2</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">3</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">5, 8, 13, 21</span><span style="font-size: 12pt">&hellip;，即第</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">项</span><span style="font-size: 12pt">A<sub>n</sub>=A<sub>n-2</sub>+A<sub>n-1</sub> ,</span><span style="font-size: 12pt">其中</span><span style="font-size: 12pt">A<sub>1</sub>=1</span><span style="font-size: 12pt">，试编程序求该数列的前</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">项的和。</span></div>\r\n<div><span style="font-size: 12pt">【输入格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输入文件</span><span style="font-size: 12pt">(fblqsum.in)</span><span style="font-size: 12pt">只有一行，即一个正整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">，其中</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">&le;</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">&le;</span><span style="font-size: 12pt">40</span><span style="font-size: 12pt">。</span></div>\r\n<div><span style="font-size: 12pt">【输出格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输出文件</span><span style="font-size: 12pt">(fblqsum.out)</span><span style="font-size: 12pt">只有一行，为该数列前</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">项和。</span></div>\r\n<div><span style="font-size: 12pt">【输入输出样例】</span></div>\r\n<div style="text-indent: 21pt">输入文件名：fblqsum.in</div>\r\n<div style="text-indent: 21pt">6</div>\r\n<div style="text-indent: 21pt">输出文件名<span style="font-size: 12pt">：fblqsum</span><span style="font-size: 12pt">.out</span></div>\r\n<div align="left"><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; 20</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(370, '数字频率', 'freq', '<div align="left"><span style="font-size: 12pt">输入文件（freq.in）中有n个1至30的数字，统计并输出其中每个数字出现的频率，并输出到输出文件（freq.out）中，注意数字和百分比之间由冒号隔开，百分比精确到小数点后一位。</span></div>\r\n<div><span style="font-size: 12pt">【输入格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输入文件</span><span style="font-size: 12pt">(freq.in)</span><span style="font-size: 12pt">有若干行组成，第一行为一个整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">&le;</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">&le;</span><span style="font-size: 12pt">300000</span><span style="font-size: 12pt">；接下来有</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">行，每一行有一个大于等于</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">小于等于</span><span style="font-size: 12pt">30</span><span style="font-size: 12pt">的整数。</span></div>\r\n<div><span style="font-size: 12pt">【输出格式】</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输出文件</span><span style="font-size: 12pt">(freq.out)</span><span style="font-size: 12pt">有</span><span style="font-size: 12pt">30</span><span style="font-size: 12pt">行，分别为</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">到</span><span style="font-size: 12pt">30</span><span style="font-size: 12pt">这</span><span style="font-size: 12pt">30</span><span style="font-size: 12pt">个数出现的频率。</span></div>\r\n<div><span style="font-size: 12pt">【输入输出样例】</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">输入文件名：</span><span style="font-size: 12pt">freq.in</span></div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">5</span></div>\r\n<div style="text-indent: 21pt">1</div>\r\n<div style="text-indent: 21pt">20</div>\r\n<div style="text-indent: 21pt">8</div>\r\n<div style="text-indent: 21pt">26</div>\r\n<div style="text-indent: 21pt">20</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">输出文件名<span style="font-size: 12pt">：</span><span style="font-size: 12pt">freq.out</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">1:20.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">2:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">3:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">4:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">5:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">6:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">7:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">8:20.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">9:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">10:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">11:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">12:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">13:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">14:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">15:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">16:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">17:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">18:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">19:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">20:40.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">21:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">22:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">23:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">24:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">25:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">26:20.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">27:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">28:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">29:0.0%</span></div>\r\n<div style="text-indent: 18pt" align="left"><span style="font-size: 12pt">30:0.0%</span></div>\r\n<div style="text-indent: 15.75pt">&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(371, '亲和数 ( Amicable Number ) ', 'amicable', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;某一天， tenshi 看了一本趣味数学书，上面提到了亲和数：定义数对 (x,y) 为亲和数对当且仅当 x 、 y 为不同正整数，且 x 、 y 各自的所有非自身正因子之和等于另一个数。例如 (220,284) 和 (280,224) 都是亲和数对，因为：</p>\r\n<p>220 的所有非自身正因子之和为： 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284</p>\r\n<p>284 的所有非自身正因子之和为： 1 + 2 + 4 + 71 + 142 = 220</p>\r\n<p>数对 (x,y ) 跟 (y,x) 被认为是同一数对，所以我们只考虑 x&lt;y 的情况。</p>\r\n<p><strong>任　务　： </strong>tenshi 对某个范围内的亲和数对的数量非常感兴趣，所以希望你能帮她编写一个程序计算给定范围内的亲和数对的数量。给定一个范围 A 到 B ， <em>如果 </em><em>A &le; x &le; B ，则我们称 (x,y) 在范围 [A,B] 内。 </em></p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;从文件的第一行分别读入正整数 A 和 B ，其中 A <em>、 B </em>满足</p>\r\n<p><em>1 &le; A &le; B &le; 10^8 </em>且 <em>B-A &le; 10^5 </em></p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件只有一行，就是 [A,B] 内亲和数对的数量</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\namicable.in<br />\r\n200 1200</p>\r\n<p>输出：<br />\r\namicable.out<br />\r\n2</p>\r\n<p><strong>注： </strong>[200,1200] 内的数对只有两个，分别是 (220,284) 和 (1184 1210)</p>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(372, '表达式的转换', 'express', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 平常我们书写的表达式称为中缀表达式，因为它将运算符放在两个操作数中间，许多情况下为了确定运算顺序，括号是不可少的，而后缀表达式就不必用括号了。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;后缀标记法：书写表达式时采用运算符紧跟在两个操作数之后，从而实现了无括号处理和优先级处理，使计算机的处理规则简化为：从左到右顺序完成计算，并用结果取而代之。</p>\r\n<p>例如： 8&ndash;(3+2*6)/5+4 可以写为：<br />\r\n8 3 2 6 * + 5 / &ndash; 4 + <br />\r\n其计算步骤为：<br />\r\n8 3 2 6 * + 5 / &ndash; 4 + <br />\r\n8 3 12 + 5 / &ndash; 4 + <br />\r\n8 15 5 / &ndash; 4 + <br />\r\n8 3 &ndash; 4 + <br />\r\n5 4 + <br />\r\n9 <br />\r\n编写一个程序，完成这个转换，要求输出的每一个数据间都留一个空格。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;就一行，是一个中缀表达式。输入的符号中只有这些基本符号&ldquo; 0123456789+-*/^() &rdquo;，并且不会出现形如 2*-3 的格式。表达式中的基本数字也都是一位的，不会出现形如 12 形式的数字。所输入的字符串不要判错。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;若干个后缀表达式，第 I+1 行比第 I 行少一个运算符和一个操作数，最后一行只有一个数字，表示运算结果。运算的结果可能为负数，&ldquo; / &rdquo;以整除运算。并且中间每一步都不会超过 2^31 。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nexpress.in<br />\r\n8&ndash;(3+2*6)/5+4</p>\r\n<p>输出：<br />\r\nexpress .out<br />\r\n8 3 2 6 * + 5 / &ndash; 4 + <br />\r\n8 3 12 + 5 / &ndash; 4 + <br />\r\n8 15 5 / &ndash; 4 + <br />\r\n8 3 &ndash; 4 + <br />\r\n5 4 + <br />\r\n9</p>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(373, '多项式 ( Polynomial ) ', 'poly', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;一个 n (1 <em>&le; </em>n <em>&le; </em>100) 次整系数多项式　 <img alt="" width="212" height="36" src="file://192.168.1.252/c$/Inetpub/os/times/2005/05mn/mn05a/mn0510a_clip_image002.gif" />，已知它的 n 个非正整数根，求方程的系数。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;从文件 poly.in 读入数据。文件第一行有一个正整数 n 。第二行有 n 个非正整数，分别为方程的根 <img alt="" width="147" height="34" src="file://192.168.1.252/c$/Inetpub/os/times/2005/05mn/mn05a/mn0510a_clip_image002_0000.gif" />，这些数不小于 -100 。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出到文件 poly.out ，第 i 行为 <img alt="" width="23" height="34" src="file://192.168.1.252/c$/Inetpub/os/times/2005/05mn/mn05a/mn0510a_clip_image002_0001.gif" />。结果保证不超过 <img alt="" width="43" height="31" src="file://192.168.1.252/c$/Inetpub/os/times/2005/05mn/mn05a/mn0510a_clip_image004.gif" /> <br />\r\n&nbsp;</p>\r\n<p>【输入输出样例1】&nbsp;<b><br />\r\n</b>输入:<br />\r\npoly.in<br />\r\n2 <br />\r\n-3 -2</p>\r\n<p>输出:<br />\r\npoly.out<br />\r\n5<br />\r\n6</p>\r\n<p>【输入输出样例2】&nbsp;<b><br />\r\n</b>输入:<br />\r\npoly.in<br />\r\n4<br />\r\n0 -1 -2 -3</p>\r\n<p>输出:<br />\r\npoly.out<br />\r\n6<br />\r\n11<br />\r\n6<br />\r\n0</p>', 1000, 128, 10, 0, '2012-04-05 16:23:30');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(374, '单词游戏', 'words', '<p>【问题描述】</p>\r\n<p>慧慧和南南在玩一个单词游戏。</p>\r\n<p>他们轮流说出一个仅包含元音字母的单词，并且后一个单词的第一个字母必须与前一个单词的最后一个字母一致。</p>\r\n<p>游戏可以从任何一个单词开始。</p>\r\n<p>任何单词禁止说两遍，游戏中只能使用给定词典中含有的单词。</p>\r\n<p>游戏的复杂度定义为游戏中所使用的单词长度总和。</p>\r\n<p>编写程序，求出使用一本给定的词典来玩这个游戏所能达到的游戏最大可能复杂度。</p>\r\n<p>【输入】</p>\r\n<p>输入文件的第一行，表示一个自然数N（1&le;N&le;16），N表示一本字典中包含的单词数量。以下的每一行包含字典中的一个单词，每一个单词是由字母A，E，I，O和U组成的一个字符串，每个单词的长度将小于等于100，所有的单词是不一样的。</p>\r\n<p>【输出】</p>\r\n<p>输出文件仅一行，表示该游戏的最大可能复杂度。</p>\r\n<p>【样例】</p>\r\n<p>words.in</p>\r\n<p>5<br />\r\nIOO<br />\r\nIUUO<br />\r\nAI<br />\r\nOIOOI<br />\r\nAOOI</p>\r\n<p>words.out</p>\r\n<p>16</p>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(375, '字符串的距离', 'blast', '<div style="text-indent: 21pt">设有字符串<span>X，我们称在X的头尾及中间插入任意多个空格后构成的新字符串为X的扩展串，如字符串X为&ldquo;abcbcd&rdquo;，则字符串&ldquo;abcb□cd&rdquo;，&ldquo;□a□bcbcd□&rdquo;和&ldquo;abcb□cd□&rdquo;都是X的扩展串，这里&ldquo;□&rdquo;代表空格字符。</span></div>\r\n<div style="text-indent: 21pt">如果<span>A<sub>1</sub>是字符串A的扩展串，B<sub>1</sub>是字符串B的扩展串，A<sub>1</sub>与B<sub>1</sub>具有相同的长度，那么我们定义字符串A<sub>1</sub>与B<sub>1</sub>的距离为相应位置上的字符的距离总和，而两个非空格字符的距离定义为它们的ASCII码的差的绝对值，而空格字符与其它任意字符之间的距离为已知的定值K，空格字符与空格字符的距离为O。在字符串A、B的所有扩展串中，必定存在两个等长的扩展串A<sub>1</sub>、B<sub>1</sub>，使得A<sub>1</sub>与B<sub>1</sub>之间的距离达到最小，我们将这一距离定义为字符串A、B的距离。</span></div>\r\n<div style="text-indent: 21pt">请你写一个程序，求出字符串<span>A、B的距离。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输入</b></div>\r\n<div style="text-indent: 21pt">输入文件第一行为字符串<span>A，第二行为字符串B，A、B均由小写字母组成且长度均不超过2000，第三行为一个整数K，1&le;K&le;100，表示空格与其它字符的距离。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输出</b></div>\r\n<div style="text-indent: 21pt">输出文件仅一行包含一个整数，表示要求的字符串<span>A、B的距离。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输入样例</b></div>\r\n<div>&nbsp;</div>\r\n<div align="left"><span style="font-size: 10pt">cmc</span></div>\r\n<div align="left"><span style="font-size: 10pt">snmn</span></div>\r\n<div><span style="font-size: 10pt">2</span></div>\r\n<div>&nbsp;</div>\r\n<div>\r\n<div><b>输出样例</b></div>\r\n</div>\r\n<div><span style="font-size: 10pt">10</span></div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(376, '任务安排', 'batch', '<div style="text-indent: 21pt">N个任务排成一个序列在一台机器上等待完成（顺序不得改变），这<span>N个任务被分成若干批，每批包含相邻的若干任务。从时刻0开始，这些任务被分批加工，第i个任务单独完成所需的时间是T<sub>i</sub>。在每批任务开始前，机器需要启动时间S，而完成这批任务所需的时间是各个任务需要时间的总和（同一批任务将在同一时刻完成）。每个任务的费用是它的完成时刻乘以一个费用系数F<sub>i</sub>。请确定一个分组方案，使得总费用最小。</span></div>\r\n<div style="text-indent: 21pt">例如：<span>S=1；T={1,3,4,2,1}；F={3,2,3,3,4}。如果分组方案是{1,2}、{3}、{4,5}，则完成时间分别为{5,5,10,14,14}，费用C={15,10,30,42,56}，总费用就是153。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输入</b></div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>第一行是<span>N(1&lt;=N&lt;=5000)。</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>第二行是<span>S(0&lt;=S&lt;=50)。</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>下面<span>N行每行有一对数，分别为T<sub>i</sub>和F<sub>i</sub>，均为不大于100的正整数，表示第i个任务单独完成所需的时间是T<sub>i</sub>及其费用系数F<sub>i</sub>。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输出</b></div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>一个数，最小的总费用。</div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b>输入样例</b></div>\r\n<div>5<br />\r\n1<br />\r\n1 3<br />\r\n3 2<br />\r\n4 3<br />\r\n2 3<br />\r\n1 4</div>\r\n<div><br />\r\n<strong>输出样例</strong></div>\r\n<div>153<br />\r\n<br />\r\n&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(377, '护卫队', 'convoy', '<div style="text-indent: 21.75pt">护卫车队在一条单行的街道前排成一队，前面河上是一座单行的桥。因为街道是一条单行道，所以任何车辆都不能超车。桥能承受一个给定的最大承载量。为了控制桥上的交通，桥两边各站一个指挥员。护卫车队被分成几个组，每组中的车辆都能同时通过该桥。当一组车队到达了桥的另一端，该端的指挥员就用电话通知另一端的指挥员，这样下一组车队才能开始通过该桥。每辆车的重量是已知的。任何一组车队的重量之和不能超过桥的最大承重量。被分在同一组的每一辆车都以其最快的速度通过该桥。一组车队通过该桥的时间是用该车队中速度最慢的车通过该桥所需的时间来表示的。问题要求计算出全部护卫车队通过该桥所需的最短时间值。</div>\r\n<div>&nbsp;</div>\r\n<div><b>输入</b></div>\r\n<div style="text-indent: 21.75pt">输入文件第一行包含三个正整数<span>(用空格隔开)，第一个整数表示该桥所能承受的最大载重量(用吨表示)；第二个整数表示该桥的长度(用千米表示)；第三个整数表示该护卫队中车辆的总数(n&lt;1000)。接下来的几行中，每行包含两个正整数W和S(用空格隔开)，W表示该车的重量(用吨表示)，S表示该车过桥能达到的最快速度(用千米/小时表示)。车子的重量和速度是按车子排队等候时的顺序给出的。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b>输出</b></div>\r\n<div style="text-indent: 21.75pt">输出文件应该是一个实数，四舍五入精确到小数点后<span>1位，表示整个护卫车队通过该桥所需的最短时间(用分钟表示)。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b>输入样例</b></div>\r\n<div>&nbsp;</div>\r\n<div>100 5 10</div>\r\n<div>40 25</div>\r\n<div>50 20</div>\r\n<div>50 20</div>\r\n<div>70 10</div>\r\n<div>12 50</div>\r\n<div>9 70</div>\r\n<div>49 30</div>\r\n<div>38 25</div>\r\n<div>27 50</div>\r\n<div>19 70</div>\r\n<div>&nbsp;</div>\r\n<div><strong>输出样例</strong></div>\r\n<div>75.0</div>', 1000, 128, 10, 0, '2012-04-05 16:23:30'),
(378, '逻辑表达式', 'expressa', '<p><b>【问题描述】</b><br />\r\n由英文字母和符号～、 *、＋、（）组成逻辑表达式，英文字母表示变量，变量有两种可能的取值，False或True；～、*、＋、括号（）可改变表达式的运算次序，且可以嵌套。</p>\r\n<p align="left">逻辑 &ldquo;非&rdquo;运算的公式如下表：</p>\r\n<div align="left">\r\n<table border="1" cellspacing="0" cellpadding="0" width="121">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" bordercolor="#000000" width="58">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="57">\r\n            <p>～ A</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" bordercolor="#000000" width="58">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="57">\r\n            <p>FALSE</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" bordercolor="#000000" width="58">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="57">\r\n            <p>TRUE</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n<p align="left">逻辑 &ldquo;与&rdquo;和逻辑&ldquo;或&rdquo;的运算公式如下表：</p>\r\n<div align="left">\r\n<table border="1" cellspacing="0" cellpadding="0" width="252">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="59">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="61">\r\n            <p>B</p>\r\n            </td>\r\n            <td valign="top" width="62">\r\n            <p>A*B</p>\r\n            </td>\r\n            <td valign="top" width="60">\r\n            <p>A+B</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="59">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="61">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="62">\r\n            <p>FLASE</p>\r\n            </td>\r\n            <td valign="top" width="60">\r\n            <p>FLASE</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="59">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="61">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="62">\r\n            <p>FLASE</p>\r\n            </td>\r\n            <td valign="top" width="60">\r\n            <p>TRUE</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="59">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="61">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="62">\r\n            <p>FALSE</p>\r\n            </td>\r\n            <td valign="top" width="60">\r\n            <p>TRUE</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="59">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="61">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="62">\r\n            <p>TRUE</p>\r\n            </td>\r\n            <td valign="top" width="60">\r\n            <p>TRUE</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n<p align="left">两个逻辑表达式等价，当且仅当两个公式中相同名字的变量取任何一种值时两个公式的值都相同。如：</p>\r\n<p align="left">A*(B+C) 与 A*B+A*C 等价 <br />\r\nA*(～A+B) 与 A*B 等价 <br />\r\n(～A+A)*B+C 与 B+C 等价 <br />\r\nA*B+A*～B 与 A 等价 <br />\r\n而：</p>\r\n<p align="left">A+B 与 A*B 不等价 <br />\r\nA*B+～C 与 A*E+～F 不等价</p>\r\n<p align="left">现要求你编程解决下列问题：</p>\r\n<p align="left">任务 1 :读取一个逻辑表达式，判断这个表达式的合法性；</p>\r\n<p>【输入格式1】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件只有一行，一个字符串s,s的长度不超过255。</p>\r\n<p>【输出格式1】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件只有一个单词，yes或no。 表达式合法时输出yes，不合法时输出no。<br />\r\n【输入输出样例1】&nbsp;<b><br />\r\n</b>输入:<br />\r\nexpressa.in<br />\r\n(A+B)*(A-B)</p>\r\n<p>输出:<br />\r\nexpressa.out<br />\r\nno</p>\r\n<p>(注：逻辑运算中没有&quot;-&quot;运算)</p>\r\n<p><strong>任务2：</strong></p>\r\n<p align="left">将读入的表达式化简，化简的表达式为 <br />\r\na1*a2*&hellip;*aN+b1**b2*&hellip;*bM+&hellip;+x1*x2*&hellip;*xL <br />\r\n其中 ai、bj、&hellip;xk(i=1,2,&hellip;n; j=1,2,&hellip;m; k=1,2,&hellip;L)表示一个变量或一个变量的逻辑非；</p>\r\n<p>【输入输出样例2】&nbsp;<b><br />\r\n</b>输入:<br />\r\nexpressb.in <br />\r\n（A+B)*C</p>\r\n<p>输出:<br />\r\nexpressb.out<br />\r\nA*C+B*C</p>', 1000, 128, 5, 0, '2012-04-05 16:23:31'),
(379, '背诵单词', 'letter', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;小小在背单词，她发现当背诵了单词 beauty 以后 ，再接着背诵单词 beautiful 就会觉得容易许多。由于有很多单词要背，她希望找到一种好的背诵顺序。单词 A 和它的前驱 B 的最大公共前缀的长度称为背诵单词 A 的便利值 ( 例如： B= '' beauty '' ,A= '' beautiful '' , 则 A 的便利值是 len({A,B})=len( '' beaut '' )=5), 我们认为一个背诵单词 A 的花费是它的长度 ( 例如 : '' beautiful ''的长度 len( &lsquo; beautiful '' )=9) 与它的便利值之差（对于上述例子背诵 A 的花费为 9-5=4 ）。请你求一个背诵顺序，使得背诵这些单词的花费总和最小。假设一开始你什么单词都不记得。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;给定一个单词表：第一行 N （ N &lt; 100 ）表示单词总数。接下来 N 行，每行一个单词。每个单词的长度不超过 20 ，均为小写字母组成。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;按照背诵顺序输出每个单词，每个单词占一行，不能有多余的字符。(若有多组,输出字典序最小的一组)</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nletter.in<br />\r\n5<br />\r\nbeauty<br />\r\nbeautiful<br />\r\nflower<br />\r\nman<br />\r\ndog</p>\r\n<p>输出：<br />\r\nletter.out<br />\r\nbeautiful<br />\r\nbeauty<br />\r\ndog<br />\r\nflower<br />\r\nman</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(380, '硬币翻转', 'coinn', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;在桌面上有一排硬币，共 N 枚，每一枚硬币均为正面朝上。现在要把所有的硬币翻转成反面朝上，规则是每次可翻转任意 N-1 枚硬币（正面向上的被翻转为反面向上，反之亦然）。求一个最短的操作序列（将每次翻转 N-1 枚硬币成为一次操作）。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入只有一行，包含一个自然数 N （ N 为不大于100 的偶数）。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输出文件的第一行包含一个整数 S ，表示最少需要的操作次数。接下来的 S 行每行分别表示每次操作后桌上硬币的状态（一行包含 N 个整数（ 0 或 1 ），表示每个硬币的状态： 0 &mdash;&mdash;正面向上，和 1 &mdash;&mdash;反面向上，不允许出现多余空格）。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;对于有多种操作方案的情况，则只需输出一种。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\ncoinn.in<br />\r\n4</p>\r\n<p>输出：<br />\r\ncoinn.out<br />\r\n4<br />\r\n0111<br />\r\n1100<br />\r\n0001<br />\r\n1111</p>', 1000, 128, 5, 0, '2012-04-05 16:23:31'),
(381, '跳远', 'jump', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 在水平面上整齐的放着n个正三角形，相邻两个三角形的底边之间无空隙，如下图所示。一个小孩子想站在某个三角形i的顶端，跳到三角形j的顶端上(i&lt;j)。他总是朝着斜向45度的方向起跳，且初始水平速度v不超过一个给定值v0。在跳跃过程中，由于受到重力作用（忽略空气阻力），小孩子将沿着抛物线行进，水平运动方程为x = x0 + vt，竖直运动方程为y = y0 + vt &ndash; 0.5gt^2，运动轨迹是一条上凸的抛物线。取g=10.0，(x0， y0)是起跳点坐标。请编程求出他从每个位置起跳能到达的最远三角形的编号。注意：跳跃过程中不许碰到非起点和终点的其他三角形。<br />\r\n<br />\r\n&nbsp;</p>\r\n<p align="center"><img alt="" width="288" height="104" src="http://192.168.1.252/os/times/2009/09noipmn/090927/jump/mn0410d_clip_image002.gif" /></p>\r\n<p><br />\r\n&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件第一行为两个正整数 n ， v0 (3 &le; n &le; 10 ， 1 &le; v 0 &le; 100) ，表示三角形的个数和最大水平初速度。 第二行有 n 个正整数 li (1 &le; li &le; 20) ，表示从左到右各个三角形的边长。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出文件仅一行，包括 n-1 个数， n-1 个数之间用一个空格隔开，表示从三角形 1 ， 2 ， 3&hellip;n-1 的顶点出发能到达的最右的三角形编号。如果从某三角形出发无法达到任何三角形，相应的数为 0 。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入<br />\r\njump.in<br />\r\n3 5<br />\r\n6 4 2<br />\r\n输出<br />\r\njump.out<br />\r\n2 3<br />\r\n&nbsp;</p>', 1000, 128, 6, 0, '2012-04-05 16:23:31'),
(382, '排序工作量', 'sortt', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; Sort公司是一个专门为人们提供排序服务的公司，该公司的宗旨是：&ldquo;顺序是最美丽的&rdquo;。他们的工作是通过一系列移动，将某些物品按顺序摆好。他们的服务是通过工作量来计算的，即移动东西的次数。所以，在工作前必须先考察工作量，以便向用户提出收费数目。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 用户并不需要知道精确的移动次数，实质上，大多数人都是凭感觉来认定这一列物品的混乱程度，根据Sort公司的经验，人们一般是根据&ldquo;逆序对&rdquo;的数目多少来称呼这一序列的混乱程度。假设我们将序列中第I件物品的参数定义为A[I]，那么，排序就是指将A数组从小到大排序。所谓&ldquo;逆序对&rdquo;是指目前A[1..N]中元素各不相同，若I&lt;J且A[I]&gt;A[j]，则[I,J]就为一个&ldquo;逆序对&rdquo;。<br />\r\n例如，数组&lt;3,1,4,5,2&gt;的&ldquo;逆序对&rdquo;有&lt;3,1&gt;,&lt;3,2&gt;,&lt;4,2&gt;,&lt;5,2&gt;，共4个(如图所示)。<br />\r\n&nbsp;</p>\r\n<p align="center"><img height="121" alt="" width="340" src="http://192.168.1.252/os/times/2009/09noipmn/090927/sort/mn0410d_clip_image002.jpg" /></p>\r\n<p><br />\r\n&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;请你为 <strong>Sort </strong>公司做一个程序，在尽量短的时间内，统计出&ldquo;逆序对&rdquo;的数目。</p>\r\n<p>【输入格式】&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件的第一行为一个整数N（1&lt;=N&lt;=10000）。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;文件的第二行为N个实数。</p>\r\n<p>【输出格式】&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;文件共一行，为&ldquo;逆序对&rdquo;的数目。</p>\r\n<p>&nbsp;</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nsortt.in<br />\r\n5<br />\r\n3 1 4 5 2</p>\r\n<p>输入：<br />\r\nsortt.out<br />\r\n4</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(383, '单向双轨道', 'track', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;如图，某火车站有B，C两个调度站，左边入口A处有n辆火车等待进站(从左到右 以a、b、c、d编号)，右边是出口D，规定在这一段，火车从A进入经过B、C只能从左向右单向 开，并且B、C调度站不限定所能停放的车辆数。</p>\r\n<p align="center"><img alt="" width="521" height="217" src="http://192.168.1.252/os/times/2009/09noipmn/090927/track/mn0410d3.jpg" /></p>\r\n<p><br />\r\n&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;从文件输入n及n个小写字母的一个排列，该排列表示火车在出口D处形成的从左到右 的火车编号序列。输出为一系列操作过程，每一行形如&ldquo;h L R&rdquo;的字母序列，其中h为火车编 号，L为h车原先所在位置(位置都以A、B、C、D表示)，R为新位置。或者输出&lsquo;NO&rsquo;表示不 能完成这样的调度。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;一个数n(1&lt;n&lt;27)及由n个小写字母组成的字符串。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;可以调度则输出最短的调度序列，不可以调度时则输出&lsquo;NO&rsquo;。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\ntrack.in<br />\r\n3<br />\r\ncba</p>\r\n<p>输出：<br />\r\ntrack.out<br />\r\nc A B<br />\r\nb A C<br />\r\na A D<br />\r\nb C D<br />\r\nc B D<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(384, '筷子', 'chop', '<p>A先生有很多双筷子。确切的说应该是很多根，因为筷子的长度不一，很难判断出哪两根是一双的。这天，A先生家里来了K个客人，A先生留下他们吃晚饭。加上A先生，A夫人和他们的孩子小A，共K+3个人。每人需要用一双筷子。A先生只好清理了一下筷子，共N根，长度为T1,T2,T3,&hellip;&hellip;,TN.现在他想用这些筷子组合成K+3双，使每双的筷子长度差的平方和最小。(怎么不是和最小？？这要去问A先生了，呵呵)</p>\r\n<p><strong>输入 </strong></p>\r\n<p>输入文件共有两行，第一行为两个用空格隔开的整数，表示 N,K(1&le;N&le;100, 0&lt;K&lt;50)，第二行共有N个用空格隔开的整数，为Ti.每个整数为1～50之间的数。</p>\r\n<p><strong>输出 </strong></p>\r\n<p>输出文件仅一行。如果凑不齐 K+3双，输出-1，否则输出长度差平方和的最小值。</p>\r\n<p><strong>样例 </strong></p>\r\n<p>chop.in</p>\r\n<p>10 1</p>\r\n<p>1 1 2 3 3 3 4 6 10 20</p>\r\n<p>&nbsp;</p>\r\n<p>chop.out</p>\r\n<p>5</p>\r\n<p><strong>说明 </strong></p>\r\n<p>第一双 1 1</p>\r\n<p>第二双 2 3</p>\r\n<p>第三双 3 3</p>\r\n<p>第四双 4 6</p>\r\n<p>(1-1)^2+(2-3)^2+(3-3)^2+(4-6)^2=5</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(385, '货物搬运', 'move', '<p>天地无情人有情，一方有难八方支援！目前灾区最紧缺的就是救灾帐篷，全国各地支援的帐篷正紧急向灾区运送。假设围绕汶川县有环行排列的 n 个救灾帐篷的存储点，每个存储点存有帐篷数量分别是 M1 ， M2 ，&hellip;， Mn ，且 S=M1+M2+ &hellip; +Mn 必为 n 的倍数。可以在任意一个存储点中任取任意数量的帐篷搬运到相邻的存储点。</p>\r\n<p>现在需要找到一种搬运方法，搬运最少的帐篷使得每个存储点中的帐篷数目相同。</p>\r\n<p>例如： n=5 ，每个存储点帐篷的数量分别为 17 ， 9 ， 14 ， 16 ， 4 。我们进行如下搬运：</p>\r\n<p>（1） 存储点①向存储点②搬运 1 个帐篷；</p>\r\n<p>（2） 存储点①向存储点⑤搬运 4 个帐篷；</p>\r\n<p>（3） 存储点③向存储点②搬运 2 个帐篷；</p>\r\n<p>（4） 存储点④向存储点⑤搬运 4 个帐篷。</p>\r\n<p>搬运帐篷的总数量是 1+4+2+4=11 ，并且可以证明这样的搬运方法是最佳搬运方法。</p>\r\n<p>&nbsp;</p>\r\n<p>【 输入文件 】</p>\r\n<p>&nbsp;</p>\r\n<p>第一 行一个整数 n （ n &le; 10000 ），表示有 n</p>\r\n<p>储存点；第二行 n 个整数（ integer 范围）</p>\r\n<p>表示 n 个存储点中帐篷数量。</p>\r\n<p>【 输出文件 】</p>\r\n<p>一个整数，表示最少搬运的帐篷数量。</p>\r\n<p>【 样例输入 】</p>\r\n<p>5</p>\r\n<p>17 9 14 16 4</p>\r\n<p>【 样例输出 】</p>\r\n<p>11</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(386, '电话网络', 'phone', '<p>由于地震使得连接汶川县城的电话线全部损坏，假如你是负责将电话线接到震中汶川县城的负责人，汶川县城周围分布着 N （ 1 &le; N &le; 1000 ）根按 1..N 顺次编号的废弃的电话线杆去，任意两根电话线杆间都没有电话线相连。一共 P(1 &le; P &le; 10000) 对电话线杆间可以拉电话线，其余的由于地震使得无法被连接。</p>\r\n<p>第 i 对电话线杆的两个端点分别为 Ai ， Bi ，它们间的距离为 Li （ 1 &le; Li &le; 1000000 ）。数据保证每对（ Ai,Bi ）最多只出现 1 次。编号为 1 的电话线杆已经接入了全国的电话网络，整个县城的电话线全都连到了编号为 N 的电话线杆上。也就是说，你的任务仅仅是找一条将 1 号和 N 号电话线杆连起来的路径，其余电话线杆并不一定要连入电话网络。</p>\r\n<p>电信公司决定支援灾区免费为汶川县城连接 K （ 0 &le; K ＜ N ）对由你指定的电话线杆。对于此外的那些电话线，需要为它们付费，总费用等于其中最长的电话线的长度（每根电话线仅连接一对电话线杆）。如果需要连接的电话线杆不超过 K 对，那么总支出为 0 。</p>\r\n<p>请你计算一下，将电话线引到震中汶川县城最少需要在电话线上花多少钱？</p>\r\n<p>[ 输入格式 ]</p>\r\n<p>输入文件的第一行包含三个用空格隔开的整数： N,P 和 K 。</p>\r\n<p>第二行到第 P+1 行：每行分别都为三个用空格隔开的整数： Ai,Bi 和 Li 。</p>\r\n<p>[ 输出格式 ]</p>\r\n<p>输出文件中仅包含一个整数，表示在这项工程上的最小支出。如果任务不可能完成，则输出－ 1 。</p>\r\n<p>[ 输入样例 ]</p>\r\n<p>5 7 1<br />\r\n1 2 5<br />\r\n3 1 4<br />\r\n2 4 8<br />\r\n3 2 3<br />\r\n5 2 9<br />\r\n3 4 7<br />\r\n4 5 6</p>\r\n<p>[ 输出样例 ]</p>\r\n<p>4</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(387, '抗震救灾', 'savez', '<p>这场灾难发生后，国家决定设立研究所研究灾后重建工作，由全国各地派技术人员来参加。因为每个地区所派的技术人员数目不同，由于节约经费的问题，所以目前还没有决定到底要灾哪个地区设置研究所进行研究。假设所有地区都在一条直线上，现在只知道每个地区与汶川的距离和该地派出技术人员的数目（假设汶川在最左端）。请你编程帮助他们确定在哪个地区建立研究所可以使所有技术人员集中到该地区的费用总和最小。</p>\r\n<p>[ 输入文件 ]</p>\r\n<p>输入文件的每一行描述一个地区的信息（地区数&le; 5000 ）</p>\r\n<p>对于每一行，首先是该地区派出的技术人员数目，紧跟着的是这个地区相对于汶川的距离，最后是该地区的名称。（ 0 ＜技术人员数&le; 100 ， 0 &le;地区相对距离&le; 10^31 ，地区名称长度&le; 20, 数据保证于唯一解。）</p>\r\n<p>[ 输出文件 ]</p>\r\n<p>输入文件只需要一行，即研究所设定的地区名称。</p>\r\n<p>[ 输入样例 ]</p>\r\n<p>7 9289 shengyan <br />\r\n5 8523 beijing <br />\r\n3 5184 guilin <br />\r\n8 2213 chongqing <br />\r\n10 0 wuhan</p>\r\n<p>&nbsp;</p>\r\n<p>[ 输出样例 ]</p>\r\n<p>chongqing</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(388, '抢修道路', 'roady', '<p>2008 年 5 月 12 日 14 时 28 分，国难时刻， 8.0 级地震灾难突降四川。条条道路被震裂或被巨石和泥石流斩断，座座桥梁被震裂或震垮，座座隧道被撕裂震坏。交通完全瘫痪了，灾区同胞在生死呼唤，生命之路啊，告急！告急！告急！</p>\r\n<p>要想救援物资尽快运送，必须先第一时间修好通往汶川的道路，因此，在地震发生后，有关部门便展开大力抢修。假设修好后的路面高度应当单调上升或单调下降（也就是说，高度上升与高度下降的路段不能同时出现在修好的路中），这样的道路车辆通过的速度将是无穷大（接近光速），货物将在最短的时间内运到灾区。</p>\r\n<p>然而整条路被地震震成了 N 段， N 个整数 A1,&hellip;,A N （ 1 &le; N &le; 2000 ）依次描述了每一段路的高度（ 0 &le; Ai &le; 1000000000 ）。希望找到一个恰好含 N 个元素的不上升或不下降序列 B1,&hellip;,Bn, 作为修过的路中每个路段的高度。</p>\r\n<p>由于将每一段路垫高或挖低一个单位的花费相同，修路的总支出可以表示为：</p>\r\n<p>|A1-B1|+|A2-B2|+ &hellip; +|An-Bn|</p>\r\n<p>请你计算一下，要修好这段路，在这项工程上的最小支出是多少？总支出不会超过 2^31-1 。</p>\r\n<p>[ 输入格式 ]</p>\r\n<p>输入文件的第一行为一个整数 N ，以下 n 行每行一个整数 Ai ，表示路面的高度。</p>\r\n<p>[ 输出格式 ]</p>\r\n<p>输出文件仅有一个整数，表示如果把路修成高度不上升或高度不下降的最小花费。</p>\r\n<p>[ 输入样例 ]</p>\r\n<p>7 <br />\r\n1 <br />\r\n3 <br />\r\n2 <br />\r\n4 <br />\r\n5 <br />\r\n3 <br />\r\n9</p>\r\n<p>[ 输出样例 ]</p>\r\n<p>3</p>\r\n<p>[ 输出说明 ]</p>\r\n<p>将第一个高度为 3 的路段的高度减少为 2 ，将第二个高度为 3 的路段高度增加到 5 ，总花费为 |2-3|+|5-3|=3 ，并且各路段的高度为一个不下降序列 1 ， 2 ， 2 ， 4 ， 5 ， 5 ， 9 。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:31'),
(389, '中考分数', 'mark', '<p>中考分数刚刚公布。共有 n 人参加考试，为了便于填报志愿，教育局把所有考生的成绩平均分为 m 档。保证 n 是 m 的倍数。考试成绩名次在 (k-1)*(n/m)+1 名到 k*(n/m) 名的考生被分在第 k 档 (k=1,2,3,&hellip;,m) 。并列第 i 名的所有考生都算第 i 名。小 Y 刚参加完中考，迫切想知道自己被分在第几档，你能帮助他吗？</p>\r\n<p>输入格式：</p>\r\n<p>第一行两个整数 n, m &le; 1000 ，保证 n 是 m 的倍数。</p>\r\n<p>接下来 n 行，每行一个整数 A i ，表示第 i 个考生的成绩。</p>\r\n<p>最后一行，一个整数 x ， 1 &le; x &le; n ，表示询问第 x 个考生被分在哪一档。</p>\r\n<p>输出格式：</p>\r\n<p>一行一个数，表示他被分在哪一档。</p>\r\n<p>输入样例：</p>\r\n<pre>\r\n3 3\r\n632\r\n651\r\n624\r\n3</pre>\r\n<p>输出样例：</p>\r\n<pre>3</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(390, 'simulator', 'simulator', '<p>小 Y 太失败了，他虽然在化学实验课上拿来了很多溶液，但是还是没有办法配成想要的溶液，万一倒错了就没有办法挽回了，小 Y 迟迟不敢下手。</p>\r\n<p>于是小 Y 到网上下载了一个溶液配置模拟器。溶液配置模拟器是这样的程序：模拟器在电脑中构造一种虚拟溶液，然后你可以虚拟地向当前虚拟溶液中加入一定浓度一定质量的这种溶液，模拟器会快速地算出倒入后虚拟溶液的浓度和质量。当然，计算机最可爱的地方就是当你倒错了可以撤销。</p>\r\n<p>模拟器的使用步骤是这样的：</p>\r\n<p>1. 为模拟器设置一个初始质量和浓度 V0 ， C0% （ 0 &le; C0&le;100 ）。</p>\r\n<p>2. 进行一系列操作，模拟器支持两种操作：</p>\r\n<p>P(v,c) 操作：表示向当前的虚拟溶液中加入质量为 v 浓度为 c 的溶液；</p>\r\n<p>Z 操作：撤销上一步 P 操作。</p>\r\n<p>但是，小 Y 不小心把模拟器弄丢了&hellip;&hellip;，眼看考试迫在眉睫，小 Y 只能依靠你了。</p>\r\n<p>输入格式：</p>\r\n<p>第一行，两个整数 V0 ， C0 。</p>\r\n<p>第二行，一个整数 n ，表示操作数（ n &le; 10000 ）。</p>\r\n<p>接下来 n 行，每行一条操作，格式为：</p>\r\n<p>P v c 或 Z 。</p>\r\n<p>之间用一个空格隔开，当只剩初始溶液的时候，再撤销就没有用了。</p>\r\n<p>任意时刻质量不会超过 2 31 -1 。</p>\r\n<p>输出格式：</p>\r\n<p>n 行，每行两个数 V i ， C i , 其中 V i 为整数， C i 为实数（保留 5 位小数），之间用一个空格隔开。其中，第 i 行表示第 i 次操作以后的溶液质量和浓度。</p>\r\n<p>输入样例：</p>\r\n<p>100 100</p>\r\n<p>2</p>\r\n<p>P 100 0</p>\r\n<p>Z</p>\r\n<p>输出样例：</p>\r\n<p>200 50.00000</p>\r\n<p>100 100.00000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(391, '复原几何图形', 'resume', '<p>小 Y 是个几何迷。有一天，他画了一个 n 边形，并且将 n 个顶点用 1 ， 2 ，&hellip;， n 这 n 个连续自然数随手编了一下号。然后他又画了一些不相交的对角线。如下图：</p>\r\n<p align="center"><img height="175" alt="" width="217" src="http://192.168.1.252/os/times/2008/noizk/2008p-1/resume/2008p1-1.jpg" /></p>\r\n<p align="center">顶点旁的数字是小 Y 随手编的号</p>\r\n<p>他把所有的边和对角线都写在一张纸上。对于上图，他写了： (1,3),(3,2),(2,4),(4,5),(5,1),(1,4),(3,4) 。</p>\r\n<p>过了几个星期，他无意中发现了这张写着字的纸，可是怎么也找不着那个几何图形了。他很想把 n 边形的编号复原，可是试了一天也没弄出来。你能帮助他吗？</p>\r\n<p>输入格式：</p>\r\n<p>第一行 n （ n &le; 50 ）。</p>\r\n<p>下面的若干行，每行两个数 a ， b ，表示纸上写着（ a,b ）。</p>\r\n<p>输出格式：</p>\r\n<p>仅一行，按顺序依次输出顶点的编号。对于上面的例子，你的输出应该是 1 3 2 4 5 。</p>\r\n<p>1 5 4 2 3 也是符合题目要求的。两者区别只是逆时针和顺时针而已。</p>\r\n<p>但是，你的输出只能是 1 3 2 4 5 ！也就是说你必须把两个符合要求的输出比较大小（先比较第一位；第一位相等就比较第二位；&hellip;&hellip;，以此类推），你的输出应该是较小者！</p>\r\n<p>输入样例：</p>\r\n<p>5</p>\r\n<p>1 3</p>\r\n<p>3 2</p>\r\n<p>2 4</p>\r\n<p>4 5</p>\r\n<p>5 1</p>\r\n<p>1 4</p>\r\n<p>3 4</p>\r\n<p>输出样例：</p>\r\n<p>1 3 2 4 5</p>', 1000, 128, 5, 0, '2012-04-05 16:23:32'),
(392, 'wordsa', 'wordsa', '<p>英语考试临近了，小 Y 却发现他已经把以前学的单词几乎忘光了。好在现在离考试还有一段时间，小 Y 决定从现在开始夜以继日地背单词。也就是说小 Y 废寝忘食，一天 24 小时地背单词。</p>\r\n<p>今天的日期（时间）是 yyyy 年 mm 月 dd 日 hh 时 mm 分，考试时间是 yyyy'' 年 mm'' 月 dd'' 日 hh'' 时 mm'' 分。这之间的所有时间小 Y 都用来背单词了，那么考试之前他最多能背多少个单词呢？</p>\r\n<p>时间紧张，小 Y 只管数量不管质量。当然有的单词长一些，有的单词短一些。长的单词难背一些，短的单词好背一些。根据小 Y 的经验，他能一眼看出背某个单词需要的时间，以分钟记。</p>\r\n<p>现在给你一个字典，请你挑出最多的单词使小 Y 能在考试前背出来。</p>\r\n<p>输入格式：</p>\r\n<p>第一行一个整数 N ，表示字典中的单词数， N &le; 5000 。</p>\r\n<p>接下来 N 行，每行一个整数表示背这个单词需要用的时间，以分钟记，小于等于 10000. （这个单词本身是什么并不重要，不是吗？当前小 Y 已经认识的单词数为 0 个）。</p>\r\n<p>接下来两行依次是当前时间和考试时间。时间给出格式是： yyyy-mm-dd-hh:mm ，例如： 2009-05-23 -02 ： 00 ，采用 24 小时制，每天从 00:00~23:59 ，年份从 0000 到 9999 。</p>\r\n<p>输出格式：</p>\r\n<p>一行一个数，表示考试前小 Y 最多能被出的单词数。</p>\r\n<p>输入样例：</p>\r\n<p>2</p>\r\n<p>1</p>\r\n<p>1</p>\r\n<p>2009-05-23 -11:59</p>\r\n<p>2009-05-23 -12:00</p>\r\n<p>样例输出：</p>\r\n<p>1</p>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(393, '牛棚回声', 'echo', '<p>奶牛们灰常享受在牛栏中哞叫，因为她们可以听到她们哞声的回音。虽然有时候并不能完全听到<br />\r\n完整的回音。Bessie曾经是一个出色的秘书，所以她精确地纪录了所有的哞叫声及其回声。她<br />\r\n很好奇到底两个声音的重复部份有多长。</p>\r\n<p>输入两个字符串（长度为1到80个字母），表示两个哞叫声。你要确定最长的重复部份的长度。<br />\r\n两个字符串的重复部份指的是同时是一个字符串的前缀和另一个字符串的后缀的字符串。</p>\r\n<p>我们通过一个例子来理解题目。考虑下面的两个哞声：</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; moyooyoxyzooo<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; yzoooqyasdfljkamo</p>\r\n<p>第一个串的最后的部份&quot;yzooo&quot;跟第二个串的第一部份重复。第二个串的最后的部份&quot;mo&quot;跟第一<br />\r\n个串的第一部份重复。所以&quot;yzooo&quot;跟&quot;mo&quot;都是这2个串的重复部份。其中，&quot;yzooo&quot;比较长，<br />\r\n所以最长的重复部份的长度就是5。</p>\r\n<p>&nbsp;</p>\r\n<p>题目名称: echo</p>\r\n<p>输入格式:</p>\r\n<p>* 前两行: 每一行是1个字符串表示奶牛的哞声或它的回声。</p>\r\n<p>样例输入 (文件 echo.in):</p>\r\n<p>abcxxxxabcxabcd<br />\r\nabcdxabcxxxxabcx</p>\r\n<p>输出格式:</p>\r\n<p>* 第一行: 包含一个单独的整数表示输入的2个字符串中，一个字符串的前缀和另一个字符串的后<br />\r\n&nbsp;&nbsp;&nbsp; 缀的最长的重复部份的长度。</p>\r\n<p>样例输出 (文件 echo.out):</p>\r\n<p>11</p>\r\n<p>输出细节:</p>\r\n<p>&quot;abcxxxxabcx&quot;是第一个字符串的前缀和第二个字符串的后缀。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(394, '乳草的入侵', 'milkweed', '<p>Farmer John一直努力让他的草地充满鲜美多汁的而又健康的牧草。可惜天不从人愿，他在植<br />\r\n物大战人类中败下阵来。邪恶的乳草已经在他的农场的西北部份占领了一片立足之地。</p>\r\n<p>草地像往常一样，被分割成一个高度为Y(1 &lt;= y &lt;= 100), 宽度为X(1 &lt;= x &lt;= 100)的<br />\r\n直角网格。(1,1)是左下角的格（也就是说坐标排布跟一般的X,Y坐标相同）。乳草一开始占<br />\r\n领了格(Mx,My)。每个星期，乳草传播到已被乳草占领的格子四面八方的每一个没有很多石头<br />\r\n的格（包括垂直与水平相邻的和对角线上相邻的格）。1周之后，这些新占领的格又可以把乳草<br />\r\n传播到更多的格里面了。</p>\r\n<p>Bessie想要在草地被乳草完全占领之前尽可能的享用所有的牧草。她很好奇到底乳草要多久才<br />\r\n能占领整个草地。如果乳草在0时刻处於格(Mx,My)，那麼还在那个时刻它们可以完全占领入侵<br />\r\n整片草地呢（对给定的数据总是会发生）？</p>\r\n<p>草地由一个图片表示。&quot;.&quot;表示草，而&quot;*&quot;表示大石。比如这个X=4, Y=3的例子。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; ....<br />\r\n..*.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; .**.</p>\r\n<p>如果乳草一开始在左下角（第1排，第1列），那麼草地的地图将会以如下态势发展：</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .... .... MMM. MMMM MMMM<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..*. MM*. MM*. MM*M MM*M<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; M**. M**. M**. M**. M**M<br />\r\n星期数 0&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp;&nbsp; 4</p>\r\n<p>乳草会在4星期后占领整片土地。</p>\r\n<p>题目名称: milkweed</p>\r\n<p>输入格式:</p>\r\n<p>* 第一行: 四个由空格隔开的整数: X, Y, Mx, My</p>\r\n<p>* 第2到第Y+1行: 数据的第y+1行由X个字符（&quot;.&quot;表示草地，&quot;*&quot;表示大石），描述草地的<br />\r\n&nbsp;&nbsp;&nbsp; 第(Y+2-y)行。</p>\r\n<p>样例输入 (文件 milkweed.in):</p>\r\n<p>4 3 1 1<br />\r\n....<br />\r\n..*.<br />\r\n.**.</p>\r\n<p>输出格式:</p>\r\n<p>* 第一行: 一个单独的整数表示最后一个不是大石块的格子被乳草占领的星期数。如果这永远<br />\r\n&nbsp;&nbsp;&nbsp; 不发生，输出-1.</p>\r\n<p>样例输出 (文件 milkweed.out):</p>\r\n<p>4<br />\r\n&nbsp;</p>', 1000, 128, 11, 0, '2012-04-05 16:23:32'),
(395, 'Bessie的体重问题', 'diet', '<p>Bessie像她的诸多姊妹一样，因为从Farmer John的草地吃了太多美味的草而长出了太多的<br />\r\n赘肉。所以FJ将她置於一个及其严格的节食计画之中。她每天不能吃多过H (5 &lt;= H &lt;=<br />\r\n45,000)公斤的乾草。</p>\r\n<p>Bessie只能吃一整捆乾草；当她开始吃一捆乾草的之后就再也停不下来了。她有一个完整的<br />\r\nN (1 &lt;= N &lt;= 500)捆可以给她当作晚餐的乾草的清单。她自然想要尽量吃到更多的乾草。<br />\r\n很自然地，每捆乾草只能被吃一次（即使在列表中相同的重量可能出现2次，但是这表示的是<br />\r\n两捆乾草，其中每捆乾草最多只能被吃掉一次）。</p>\r\n<p>给定一个列表表示每捆乾草的重量S_i (1 &lt;= S_i &lt;= H), 求Bessie不超过节食的限制的</p>\r\n<p>样例输入 (文件 diet.in):</p>\r\n<p>56 4<br />\r\n15<br />\r\n19<br />\r\n20<br />\r\n21</p>\r\n<p>输入细节:</p>\r\n<p>有四捆草，重量分别是15, 19, 20和21。Bessie在56公斤的限制范围内想要吃多少就可<br />\r\n以吃多少。</p>\r\n<p>输出格式:</p>\r\n<p>* 第一行: 一个单独的整数表示Bessie在限制范围内最多可以吃多少公斤的乾草。</p>\r\n<p>样例输出 (文件 diet.out):</p>\r\n<p>56</p>\r\n<p>输出细节:</p>\r\n<p>Bessie可以吃3捆乾草（重量分别为15, 20, 21）。恰好达到她的56公斤的限制。<br />\r\n&nbsp;</p>', 1000, 128, 11, 0, '2012-04-05 16:23:32'),
(396, '魔术球问题', 'balla', '<p>问题描述： <br />\r\n假设有n根柱子，现要按下述规则在这n根柱子中依次放入编号为 1，2，3，4......的球。 <br />\r\n（1）每次只能在某根柱子的最上面放球。 <br />\r\n（2）在同一根柱子中，任何2个相邻球的编号之和为完全平方数。 <br />\r\n试设计一个算法，计算出在n根柱子上最多能放多少个球。例如，在4 根柱子上最多可<br />\r\n放11个球。 <br />\r\n&acute;编程任务： <br />\r\n对于给定的n，计算在 n根柱子上最多能放多少个球。</p>\r\n<p>&acute;数据输入： <br />\r\n文件第1 行有 1个正整数n，表示柱子数。 <br />\r\n&acute;结果输出: <br />\r\n文件的第一行是球数。<br />\r\n&nbsp;</p>\r\n<p>数据规模</p>\r\n<p>n&lt;=60&nbsp; 保证答案小于1600</p>\r\n<p>输入文件示例</p>\r\n<p>4&nbsp;</p>\r\n<p>输出文件示例</p>\r\n<p>11</p>\r\n<p>方案如下</p>\r\n<p>1 8&nbsp; <br />\r\n2 7 9&nbsp; <br />\r\n3 6 10&nbsp; <br />\r\n4 5 11</p>\r\n<p>每一行表示一个柱子上的球</p>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(397, '热浪', 'heatwvx', '<p>德克萨斯纯朴的民众们这个夏天正在遭受巨大的热浪！！！他们的德克萨斯长角牛吃起来不错，<br />\r\n可是他们并不是很擅长生产富含奶油的乳制品。Farmer John此时以先天下之忧而忧，后天下<br />\r\n之乐而乐的精神，身先士卒地承担起向德克萨斯运送大量的营养冰凉的牛奶的重任，以减轻德<br />\r\n克萨斯人忍受酷暑的痛苦。</p>\r\n<p>FJ已经研究过可以把牛奶从威斯康星运送到德克萨斯州的路线。这些路线包括起始点和终点先<br />\r\n一共经过T (1 &lt;= T &lt;= 2,500)个城镇，方便地标号为1到T。除了起点和终点外地每个城镇<br />\r\n由两条双向道路连向至少两个其它地城镇。每条道路有一个通过费用（包括油费，过路费等等）。<br />\r\n考虑这个有7个城镇的地图。城镇5是奶源，城镇4是终点（括号内的数字是道路的通过费用）。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [1]----1---[3]-<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [3]---6---[4]---3--[3]--4<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /|<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --[3]-- --[2]- |<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [5]---7---[2]--2---[3]---<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [1]------</p>\r\n<p>经过路线5-6-3-4总共需要花费3 (5-&gt;6) + 4 (6-&gt;3) + 3 (3-&gt;4) = 10的费用。</p>\r\n<p>给定一个地图，包含C (1 &lt;= C &lt;= 6,200)条直接连接2个城镇的道路。每条道路由道路的<br />\r\n起点Rs，终点Re (1 &lt;= Rs &lt;= T; 1 &lt;= Re &lt;= T)，和花费(1 &lt;= Ci &lt;= 1,000)组<br />\r\n成。求从起始的城镇Ts (1 &lt;= Ts &lt;= T)到终点的城镇Te(1 &lt;= Te &lt;= T)最小的总费用。</p>\r\n<p><br />\r\n题目名称: heatwvx</p>\r\n<p>输入格式:</p>\r\n<p>* 第一行: 4个由空格隔开的整数: T, C, Ts, Te</p>\r\n<p>* 第2到第C+1行: 第i+1行描述第i条道路。有3个由空格隔开的整数: Rs, Re和Ci</p>\r\n<p>样例输入 (文件 heatwvx.in):</p>\r\n<p>7 11 5 4<br />\r\n2 4 2<br />\r\n1 4 3<br />\r\n7 2 2<br />\r\n3 4 3<br />\r\n5 7 5<br />\r\n7 3 3<br />\r\n6 1 1<br />\r\n6 3 4<br />\r\n2 4 3<br />\r\n5 6 3<br />\r\n7 2 1</p>\r\n<p>输入细节:</p>\r\n<p>跟题目描述的地图一致。</p>\r\n<p>输出格式:</p>\r\n<p>* 第一行: 一个单独的整数表示Ts到Te的最短路的长度。（不是费用麼？怎麼突然变直白了<br />\r\n&nbsp;&nbsp;&nbsp; &mdash;&mdash;译者注）数据保证至少存在一条道路。</p>\r\n<p>样例输出 (文件 heatwvx.out):</p>\r\n<p>7</p>\r\n<p>输出细节:</p>\r\n<p>5-&gt;6-&gt;1-&gt;4 (3 + 1 + 3)</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:32'),
(398, '股票收益', 'stock', '<p>小Y最近一直在研究某一股票，为了能够得到最大收益，他收集了这只股票近N天的走势情况。小Y手上有一笔钱，他想知道两个问题：<br />\r\n第一个，如果他在这N天投资一次股票，最多能获利多少钱?就是说他只买进和卖出各一次。<br />\r\n第二个，如果他在任意一天把资金全部灭入，之后任意一天把手上的股票伞部卖出，挣钱的概率足多少?挣钱是指获利大于()。当然买人当天是不允许卖的。<br />\r\n由于小Y这个人比较&ldquo;特别&rdquo;，他看中的股票也如此，没有涨停跌停的概念，爱怎么走怎么走(买这种股才够挑战)。这1、『天总是不会一直足熊市，否则小Y干吗在这时候投资。</p>\r\n<p>输入格式<br />\r\n第一行，一个整数N(N&le;l000)。<br />\r\n第二行，N个空格隔开的实数，表示每天该股每一股的市值。</p>\r\n<p>第三行，一个整数M，表示小Y手上持有的资金。</p>\r\n<p>输出格式<br />\r\n第一行，一个实数，表示最大获利，保留3位小数。<br />\r\n第二行，一个实数，表示挣钱的概率，保留3位小数。</p>\r\n<p>输入样例<br />\r\n10<br />\r\n5 7 6 8 5 1 2 3 4 5<br />\r\n100</p>\r\n<p>输出样例<br />\r\n400.000<br />\r\n0.333</p>', 1000, 128, 10, 0, '2012-04-05 16:23:33');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(399, '查字典', 'scanword', '<p>全国英语四级考试就这样如期来了，可是小 y 依然没有做好充分准备。为了能够大学毕业可怜的小 y 决定作弊。</p>\r\n<p>小 y 费尽心机，在考试的时候夹带了一本字典进考场，但是现在的问题是，考试的时候可能有很多的单词要查，小 y 能不能来得及呢？</p>\r\n<p>输入格式：</p>\r\n<p>第一行一个整数 N ，表示字典中一共有多少个单词（ N&lt;=10000 ）。</p>\r\n<p>接下来每两行表示一个单词，其中：</p>\r\n<p>第一行是一个长度 &lt;=100 的字符串，表示这个单词，全部小写字母，单词不会重复。</p>\r\n<p>第二行是一个整数，表示这个单词在字典中的页码。</p>\r\n<p>接下来是一个整数 M ，表示要查的单词数 (M&lt;=10000) 。</p>\r\n<p>接下来 M 行，每行一个字符串，表示要查的单词，保证在字典中存在。</p>\r\n<p>输出格式：</p>\r\n<p>M 行，每行一个整数，表示第 I 个单词在字典中的页数。</p>\r\n<p>输入样例：</p>\r\n<p>2</p>\r\n<p>scan</p>\r\n<p>10</p>\r\n<p>word</p>\r\n<p>15</p>\r\n<p>2</p>\r\n<p>scan</p>\r\n<p>word</p>\r\n<p>输出样例</p>\r\n<p>10</p>\r\n<p>15</p>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(400, '编码问题', 'code', '<div><b>【问题描述</b>】</div>\r\n<div>&nbsp;&nbsp;&nbsp;&nbsp;设有一个数组 A ： ARRAY[0..N-1] OF INTEGER ；数组中存储的元素为 0-N-1 之间的整数，且 A[I] &ne; A[J] ( 当 I &ne; J) 时。</div>\r\n<div>例如： N=6 时，有：（ 4 ， 3 ， 0 ， 5 ， 1 ， 2 ）</div>\r\n<div>此时，数组 A 的编码定义如下：</div>\r\n<div>A[0] 的编码为 0 ：</div>\r\n<div>A[I] 的编码为：在 A[0] ， A[1] ，&hellip;&hellip; A[I-1] 中比 A[I] 的值小的元素的个数（ I=1 ， 2 ，&hellip;&hellip; N-1 ）</div>\r\n<div>所以上面数组 A 的编码为 :B=(0,0,0,3,1,2)</div>\r\n<div>程序要求解决以下问题</div>\r\n<div>① 给出数组 A 后，求出其编码；</div>\r\n<p>② 给出数组 A 的编码后，求出 A 的原数据。</p>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 输入由若干行组成：</span></div>\r\n<div>第一行有两个整数，m，n（1&le;n,m&le;100）；n表示数组长度，m表示问题个数。</div>\r\n<div>下面有2*m行,每两行是一个问题,每个问题的第一行是一个数字s,s=1时表示根据数据求编码,s=2时表示根据编码求数据,第二行是n个数，中间用空格隔开。</div>\r\n<div>【输出格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 输出数据有m行，每行表示一个问题的答案。</span></div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名：<span>code.in</span></div>\r\n<div>2 6 <br />\r\n1<br />\r\n4 3 0 5 1 2<br />\r\n2<br />\r\n0 0 0 3 1 2</div>\r\n<div>输出文件名：<span>code.out</span></div>\r\n<div>0 0 0 3 1 2 <br />\r\n4 3 0 5 1 2 <br />\r\n&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(401, '可合并堆', 'uheap', '<p><span style="font-size: small">【问题描述】</span></p>\r\n<p><span style="font-size: small">用链表实现的可合并堆一个可合并堆支持这样几种操作：MAKEHEAP(创建一个空的可合并堆)，INSERT,MINIMUM,EXTRACTMIN和UNION。说明在下列每一情况中，如何用链表实现可合并堆.尽量使每种操作高效. 为使输入输出方便,作如下指令编号约定: 1号操作:MAKEHEAP 创建一个空的可合并堆 1 4 表示执行1号建堆指令,创建一个堆,该堆编号为4,即4号堆 2号操作:INSERT 堆插入操作 2 4 56 表示执行2号插入指令,向4号堆插入整数56(如果4号堆不存在则输出&quot;insert error!&quot;) 3号操作:EXTRACTMIN 删除堆最小值,并输出 3 4 表示执行3号删除指令,删除4号堆最小值,并输出(如果4号堆不存在或4号堆为空则输出&quot;extract error!&quot;) 4号操作:UNION 合并堆 4 2 4 表示执行2号合并指令将2号堆,4号堆合并,该合并将两个堆合并至2号堆,合并4号堆为空堆(若2号堆或4号堆不存在则输出&quot;union error!&quot;) </span></p>\r\n<p><span style="font-size: small">【输入格式】 </span></p>\r\n<p><span style="font-size: small">输入文件第一行，一个整数n,表示指令的条数；下面第2--n+1行,每行一条指令,每行若干个用一个空格隔开的整数,第1个整数表示指令编号,其余参数含义如题描述. </span></p>\r\n<p><span style="font-size: small">【输出格式】 输出有n行，每行表示一个指令的执行结果,如果该指令没有任何输出则显示0,如果有则按指令要求输出信息。 </span></p>\r\n<p><span style="font-size: small">【输入输出样例】 </span></p>\r\n<p><span style="font-size: small">输入文件名：uheap.in 9 1 1 1 2 1 3 2 1 6 2 1 5 2 1 4 2 3 3 4 1 3 3 1 </span></p>\r\n<p><span style="font-size: small">输出文件名：uheap.out 0 0 0 0 0 0 0 0 3</span></p>', 1000, 128, 5, 0, '2012-04-05 16:23:33'),
(402, '线性表', 'linet', '<div><b>问题描述</b><br />\r\n学校有部分学生成绩需存储处理，请你设计一个程序，具备存储、查找、插入、删除数据的功能。（为提高程序效率，程序处理中不允许批量移动数据。）</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 输入由若干行组成：</span></div>\r\n<div>第一行有一个整数，n（1&le;n&le;2000）；n表示开始时学生人数。第2--n+1行是n个学生的信息，每行两个整数，p<span>（1&le;p&le;n）、q（1&le;q&le;200）；p表示学生学号，q表示学生成绩。</span></div>\r\n<div>第n+2行是一个整数，m（1&le;n&le;10）；m表示要进行操作的数量。接下来第n+3--n+3+m行是每种操作的信息，每行若干个整数，第1个整数表示操作类型，1表示查找操作，2表示插入操作，3表示删除操作。</div>\r\n<div>对于查找操作：该行第二个整数表示查找类型，1表示单个查找，即查找个人信息，后边有第三个整数，表示要查找人的学号；0表示全部查找，本行只有两个整数。如果没有要查找的信息，查找结果为no。</div>\r\n<div>对于插入操作：该行第二个整数x表示插入类型，x=1表示单个插入，后边有三个整数a,b,c，a表示信息插入的位置（插入到第a个节点之后），b,c表示插入信息（学生学号和学生成绩）；x&gt;1表示多个插入，并且x表示要插入信息的数量，后边有x组整数（每组3个整数），表示x组插入信息。如果线性表已满，显示out，如果信息重复，显示dup，并且不插入重复信息。</div>\r\n<div>对于删除操作：该行第二个整数y表示删除数量，后边有y个整数，表示y组删除信息（每组仅有学生的学号）。如果线性表中无相应信息，则输出error。</div>\r\n<div>【输出格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; 根据不同的操作，输出不同的操作信息。</span></div>\r\n<div>插入和删除操作如无操作错误（学号重复、人数超限等），无输出信息。</div>\r\n<div>查找操作中如是单个查找，只输出单个学生信息（输出一行，两个整数）。如果是全部查找，第一行输出线性表中学生信息数n，接下来n行输出学生信息（每行两个整数）</div>\r\n<div>【输入输出样例】</div>\r\n<div>输入文件名：<span>linet.in</span></div>\r\n<div>4<br />\r\n1 98<br />\r\n2 78<br />\r\n3 88<br />\r\n4 99<br />\r\n2<br />\r\n3 1 2<br />\r\n1 0</div>\r\n<div>输出文件名：<span>linet.out</span></div>\r\n<div>3<br />\r\n1 98<br />\r\n3 88<br />\r\n4 99</div>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(403, '大灾变', 'cataclysm', '<h1><a name="_Toc241035975"><span style="font-family: 宋体">问题描述</span></a></h1>\r\n<p class="MsoNormal"><span style="font-family: 宋体">艾泽拉斯世界经历一场亘古未有的地震过后，大地和海洋被完全撕裂，旧大陆残缺不全。联盟和部落各种族的居民们被迫离开了世代居住的家园，来寻找新的生存空间。原本平坦的陆地上现在隆起了一座座山峰，暴风城的人类开始在<u>艾尔文山脉</u>重建家园。他们决定在山脉之中建造一座<u>瞭望塔</u>和一个魔法<u>浮空岛</u>，以便于在<u>瞭望塔</u>和<u>浮空岛</u>上可以俯视<u>艾尔文山脉</u>的全貌。</span></p>\r\n<p class="MsoNormal"><u><span style="font-family: 宋体">艾尔文山脉</span></u><span style="font-family: 宋体">被描述为一个折线，给定每个点的坐标（横纵坐标均不小于</span><span lang="EN-US">0</span><span style="font-family: 宋体">），按照横坐标从小到大顺次连接起来就是就是山脉的折线。折线上所有点的横坐标均不相同。如果一个位置与山脉任何一点的连线均不被挡住（但可以与地面相切），那么就说这一点可以望到整个<u>艾尔文山脉</u>。<u>瞭望塔</u>的塔身不会挡住视线，而且<u>瞭望塔</u>和<u>浮空岛</u>可以建造在同一位置。为节省建筑材料，<u>瞭望塔</u>塔身的高度必须尽量小，即从塔顶到塔底的距离尽量小，瞭望塔可以建在山坡上。由于气候因素，<u>浮空岛</u>应建立在海拔尽量低的位置（甚至可以建在地面上），海平面高度为</span><span lang="EN-US">0</span><span style="font-family: 宋体">。如果有多个位置均满足条件，则选择横坐标最小的那个。<u>瞭望塔</u>和<u>浮空岛</u>横坐标范围应在<u>艾尔文山脉</u>横坐标范围之内。给定<u>艾尔文山脉</u>，请你求出<u>瞭望塔</u>和<u>浮空岛</u>的位置。</span></p>\r\n<h1><span style="font-family: 宋体">输入文件</span></h1>\r\n<p class="MsoNormal"><span style="font-family: 宋体">文件名</span><span lang="EN-US">cataclysm.in</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体">第</span><span lang="EN-US">1</span><span style="font-family: 宋体">行，一个整数</span><span lang="EN-US">N</span><span style="font-family: 宋体">，表示描述<u>艾尔文山脉</u>的折线的顶点数。</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体">第</span><span lang="EN-US">2-N+1</span><span style="font-family: 宋体">行，每行两个整数，</span><span lang="EN-US">xi</span><span style="font-family: 宋体">，</span><span lang="EN-US">yi</span><span style="font-family: 宋体">表示折线上点的坐标。</span></p>\r\n<h1><span style="font-family: 宋体">输出文件</span></h1>\r\n<p class="MsoNormal"><span style="font-family: 宋体">文件名</span><span lang="EN-US">cataclysm.out</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体">第</span><span lang="EN-US">1</span><span style="font-family: 宋体">行，两个保留</span><span lang="EN-US">3</span><span style="font-family: 宋体">位小数的浮点数</span><span lang="EN-US">x1,y1</span><span style="font-family: 宋体">，表示<u>瞭望塔</u>顶端的坐标。</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体">第</span><span lang="EN-US">2</span><span style="font-family: 宋体">行，两个保留</span><span lang="EN-US">3</span><span style="font-family: 宋体">位小数的浮点数</span><span lang="EN-US">x2,y2</span><span style="font-family: 宋体">，表示<u>浮空岛</u>的坐标。</span></p>\r\n<h1><span style="font-family: 宋体">输入样例</span></h1>\r\n<p class="MsoNormal"><span lang="EN-US">6</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">2 2</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">6 1</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">8 6</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">10 3</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">16 5</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">20 2</span></p>\r\n<h1><span style="font-family: 宋体">输出样例</span></h1>\r\n<p class="MsoNormal"><span lang="EN-US">8.00 11.00</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">9.54 9.85</span></p>\r\n<h1><span style="font-family: 宋体">样例说明</span></h1>\r\n<p class="MsoNormal"><span style="font-family: 宋体">样例中描述的<u>艾尔文山脉</u>各个顶点，按照横坐标顺序顺次连接后的折线如下图所示：</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体"><img height="173" alt="" width="601" src="/images/cataclysm1.png" /></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><br />\r\n</span></p>\r\n<p class="MsoNormal"><u><span style="font-family: 宋体">瞭望塔</span></u><span style="font-family: 宋体">应建造在山峰</span><span lang="EN-US">(8,6)</span><span style="font-family: 宋体">处，塔顶端为</span><span lang="EN-US">(8,11)</span><span style="font-family: 宋体">，高度为</span><span lang="EN-US">5</span><span style="font-family: 宋体">，此时<u>瞭望塔</u>的高度最小。</span></p>\r\n<p class="MsoNormal"><span style="font-family: 宋体"><img height="248" alt="" width="601" src="/images/cataclysm2.png" /></span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><br />\r\n</span></p>\r\n<p class="MsoNormal"><u><span style="font-family: 宋体">浮空岛</span></u><span style="font-family: 宋体">建立在</span><span lang="EN-US">(9.54,9.85)</span><span style="font-family: 宋体">处，海拔高度最低。</span></p>\r\n<p class="MsoNormal"><span lang="EN-US"><img height="232" alt="" width="601" src="/images/cataclysm3.png" /><br />\r\n</span></p>\r\n<h1><span style="font-family: 宋体">问题限制</span></h1>\r\n<p class="MsoNormal"><b><span style="font-family: 宋体">数据规模</span></b></p>\r\n<p class="MsoNormal"><span lang="EN-US">40%</span><span style="font-family: 宋体">的数据</span><span lang="EN-US">2&lt;=N&lt;=10</span></p>\r\n<p class="MsoNormal"><span lang="EN-US">100%</span><span style="font-family: 宋体">的数据</span><span lang="EN-US">2&lt;=N&lt;=1 000 000</span><span style="font-family: 宋体">；</span><span lang="EN-US">0&lt;=xi,yi&lt;=5 000 000</span></p>', 4000, 128, 40, 0, '2012-04-05 16:23:33'),
(404, '潜伏者', 'spy', '<p><br />\r\n【问题描述】 <br />\r\nR 国和 S国正陷入战火之中，双方都互派间谍，潜入对方内部，伺机行动。 <br />\r\n历尽艰险后，潜伏于 S国的 R 国间谍小 C 终于摸清了 S国军用密码的编码规则： <br />\r\n1． S 国军方内部欲发送的原信息经过加密后在网络上发送，原信息的内容与加密后所<br />\r\n得的内容均由大写字母&lsquo;A&rsquo;-&lsquo;Z&rsquo;构成（无空格等其他字符） 。 <br />\r\n2． S国对于每个字母规定了对应的&ldquo;密字&rdquo; 。加密的过程就是将原信息中的所有字母替<br />\r\n换为其对应的&ldquo;密字&rdquo; 。 <br />\r\n3． 每个字母只对应一个唯一的&ldquo;密字&rdquo; ，不同的字母对应不同的&ldquo;密字&rdquo; 。 &ldquo;密字&rdquo;可以<br />\r\n和原字母相同。 <br />\r\n例如，若规定&lsquo;A&rsquo;的密字为&lsquo;A&rsquo; ， &lsquo;B&rsquo;的密字为&lsquo;C&rsquo; （其他字母及密字略） ，则原信<br />\r\n息&ldquo;ABA&rdquo;被加密为&ldquo;ACA&rdquo; 。 <br />\r\n现在，小 C 通过内线掌握了 S 国网络上发送的一条加密信息及其对应的原信息。小 C<br />\r\n希望能通过这条信息，破译 S 国的军用密码。小 C 的破译过程是这样的：扫描原信息，对<br />\r\n于原信息中的字母 x（代表任一大写字母） ，找到其在加密信息中的对应大写字母 y，并认为<br />\r\n在密码里 y是 x 的密字。如此进行下去直到停止于如下的某个状态：&nbsp; <br />\r\n1． 所有信息扫描完毕， &lsquo;A&rsquo;-&lsquo;Z&rsquo;&nbsp; 所有 26 个字母在原信息中均出现过并获得了相应<br />\r\n的&ldquo;密字&rdquo; 。 <br />\r\n2． 所有信息扫描完毕，但发现存在某个（或某些）字母在原信息中没有出现。 <br />\r\n3． 扫描中发现掌握的信息里有明显的自相矛盾或错误（违反 S国密码的编码规则） 。例<br />\r\n如某条信息&ldquo;XYZ&rdquo;被翻译为&ldquo;ABA&rdquo;就违反了&ldquo;不同字母对应不同密字&rdquo;的规则。&nbsp; <br />\r\n在小 C 忙得头昏脑涨之际，R 国司令部又发来电报，要求他翻译另外一条从 S 国刚刚<br />\r\n截取到的加密信息。现在请你帮助小 C：通过内线掌握的信息，尝试破译密码。然后利用破<br />\r\n译的密码，翻译电报中的加密信息。 <br />\r\n&nbsp;<br />\r\n【输入】 <br />\r\n输入文件名为 spy.in，共 3 行，每行为一个长度在 1 到100 之间的字符串。 <br />\r\n第 1 行为小C 掌握的一条加密信息。 <br />\r\n第 2 行为第1 行的加密信息所对应的原信息。 <br />\r\n第 3 行为R国司令部要求小 C 翻译的加密信息。 <br />\r\n输入数据保证所有字符串仅由大写字母&lsquo;A&rsquo;-&lsquo;Z&rsquo;构成，且第 1 行长度与第 2 行相等。&nbsp; <br />\r\n【输出】 <br />\r\n输出文件 spy.out 共1 行。 <br />\r\n若破译密码停止时出现 2，3 两种情况，请你输出&ldquo;Failed&rdquo; （不含引号，注意首字母大<br />\r\n写，其它小写） 。 <br />\r\n否则请输出利用密码翻译电报中加密信息后得到的原信息。&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n<p>【输入输出样例 1】 <br />\r\nspy.in</p>\r\n<p>AA <br />\r\nAB<br />\r\nEOWIE</p>\r\n<p>spy.out <br />\r\n<br />\r\nFailed</p>\r\n<p>&nbsp;【输入输出样例 1 说明】 <br />\r\n原信息中的字母&lsquo;A&rsquo;和&lsquo;B&rsquo;对应相同的密字，输出&ldquo;Failed&rdquo; 。&nbsp;<br />\r\n&nbsp;</p>\r\n<p><br />\r\n【输入输出样例 2】 <br />\r\nspy.in</p>\r\n<p>QWERTYUIOPLKJHGFDSAZXCVBN <br />\r\nABCDEFGHIJKLMNOPQRSTUVWXY <br />\r\nDSLIEWO</p>\r\n<p>spy.out <br />\r\n<br />\r\nFailed</p>\r\n<p><br />\r\n【输入输出样例 2 说明】 <br />\r\n字母&lsquo;Z&rsquo;在原信息中没有出现，输出&ldquo;Failed&rdquo; 。 <br />\r\n&nbsp;<br />\r\n【输入输出样例 3】 <br />\r\nspy.in</p>\r\n<p>MSRTZCJKPFLQYVAWBINXUEDGHOOILSMIJFRCOPPQCEUNYDUMPP<br />\r\nYIZSDWAHLNOVFUCERKJXQMGTBPPKOIYKANZWPLLVWMQJFGQYLL<br />\r\nFLSO</p>\r\n<p>spy.out <br />\r\n<br />\r\nNOIP&nbsp;<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(405, 'Hankson的趣味题', 'son', '<p>【问题描述】 <br />\r\nHanks 博士是 BT (Bio-Tech，生物技术)&nbsp; 领域的知名专家，他的儿子名叫 Hankson。现<br />\r\n在，刚刚放学回家的 Hankson 正在思考一个有趣的问题。 <br />\r\n今天在课堂上，老师讲解了如何求两个正整数 c1和 c2 的最大公约数和最小公倍数。现<br />\r\n在 Hankson 认为自己已经熟练地掌握了这些知识，他开始思考一个&ldquo;求公约数&rdquo;和&ldquo;求公<br />\r\n倍数&rdquo;之类问题的&ldquo;逆问题&rdquo; ，这个问题是这样的：已知正整数 a0,a1,b0,b1，设某未知正整<br />\r\n数 x 满足： <br />\r\n1． x 和 a0 的最大公约数是 a1； <br />\r\n2． x 和b0 的最小公倍数是 b1。 <br />\r\nHankson 的&ldquo;逆问题&rdquo;就是求出满足条件的正整数 x。但稍加思索之后，他发现这样的<br />\r\nx 并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的 x 的个数。请你帮<br />\r\n助他编程求解这个问题。 <br />\r\n&nbsp;<br />\r\n【输入】 <br />\r\n输入文件名为 son.in。第一行为一个正整数 n，表示有 n 组输入数据。接下来的 n 行每<br />\r\n行一组输入数据，为四个正整数 a0，a1，b0，b1，每两个整数之间用一个空格隔开。输入<br />\r\n数据保证 a0能被 a1 整除，b1 能被 b0整除。 <br />\r\n&nbsp;<br />\r\n【输出】 <br />\r\n输出文件 son.out 共n 行。每组输入数据的输出结果占一行，为一个整数。 <br />\r\n对于每组数据：若不存在这样的 x，请输出 0； 若存在这样的 x，请输出满足条件的 x 的个数； 【输入输出样例】 <br />\r\n&nbsp;</p>\r\n<p>【输入输出样例】</p>\r\n<p>son.in</p>\r\n<p>2 <br />\r\n41 1 96 288 <br />\r\n95 1 37 1776</p>\r\n<p>son.out <br />\r\n<br />\r\n6 <br />\r\n2 <br />\r\n&nbsp;</p>\r\n<p>【说明】 <br />\r\n第一组输入数据，x 可以是 9、18、36、72、144、288，共有6个。 <br />\r\n第二组输入数据，x 可以是 48、1776，共有 2 个。 <br />\r\n&nbsp;<br />\r\n【数据范围】 <br />\r\n对于 50%的数据，保证有 1&le;a0，a1，b0，b1&le;10000且 n&le;100。 <br />\r\n对于 100%的数据，保证有 1&le;a0，a1，b0，b1&le;2,000,000,000且 n&le;2000。&nbsp;</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(406, '最优贸易', 'trade', '<p>【问题描述】 <br />\r\nC 国有 n 个大城市和 m 条道路，每条道路连接这 n 个城市中的某两个城市。任意两个<br />\r\n城市之间最多只有一条道路直接相连。这 m 条道路中有一部分为单向通行的道路，一部分<br />\r\n为双向通行的道路，双向通行的道路在统计条数时也计为 1 条。 <br />\r\nC 国幅员辽阔，各地的资源分布情况各不相同，这就导致了同一种商品在不同城市的价<br />\r\n格不一定相同。但是，同一种商品在同一个城市的买入价和卖出价始终是相同的。 <br />\r\n商人阿龙来到 C 国旅游。当他得知同一种商品在不同城市的价格可能会不同这一信息<br />\r\n之后，便决定在旅游的同时，利用商品在不同城市中的差价赚回一点旅费。设 C 国 n 个城<br />\r\n市的标号从 1~ n，阿龙决定从 1 号城市出发，并最终在 n 号城市结束自己的旅行。在旅游的<br />\r\n过程中，任何城市可以重复经过多次，但不要求经过所有 n 个城市。阿龙通过这样的贸易方<br />\r\n式赚取旅费：他会选择一个经过的城市买入他最喜欢的商品&mdash;&mdash;水晶球，并在之后经过的另<br />\r\n一个城市卖出这个水晶球，用赚取的差价当做旅费。由于阿龙主要是来 C 国旅游，他决定<br />\r\n这个贸易只进行最多一次，当然，在赚不到差价的情况下他就无需进行贸易。 <br />\r\n假设 C 国有 5 个大城市，城市的编号和道路连接情况如下图，单向箭头表示这条道路<br />\r\n为单向通行，双向箭头表示这条道路为双向通行。&nbsp;</p>\r\n<p><img height="136" width="237" alt="" src="/images/trade1.bmp" /><br />\r\n&nbsp;<br />\r\n假设 1~n 号城市的水晶球价格分别为 4，3，5，6，1。 <br />\r\n阿龙可以选择如下一条线路：1-&gt;2-&gt;3-&gt;5，并在 2 号城市以 3 的价格买入水晶球，在 3<br />\r\n号城市以 5的价格卖出水晶球，赚取的旅费数为 2。 <br />\r\n阿龙也可以选择如下一条线路 1-&gt;4-&gt;5-&gt;4-&gt;5，并在第 1 次到达 5 号城市时以 1 的价格<br />\r\n买入水晶球，在第 2 次到达 4 号城市时以 6 的价格卖出水晶球，赚取的旅费数为 5。 现在给出 n个城市的水晶球价格，m条道路的信息（每条道路所连接的两个城市的编号<br />\r\n以及该条道路的通行情况） 。请你告诉阿龙，他最多能赚取多少旅费。 <br />\r\n&nbsp;<br />\r\n【输入】 <br />\r\n输入文件名为 trade.in。 <br />\r\n第一行包含 2 个正整数 n 和 m，中间用一个空格隔开，分别表示城市的数目和道路的<br />\r\n数目。 <br />\r\n第二行 n 个正整数，每两个整数之间用一个空格隔开，按标号顺序分别表示这 n 个城<br />\r\n市的商品价格。 <br />\r\n接下来 m行， 每行有 3 个正整数， x， y， z， 每两个整数之间用一个空格隔开。 如果 z=1，<br />\r\n表示这条道路是城市 x到城市 y之间的单向道路；如果 z=2，表示这条道路为城市 x 和城市<br />\r\ny之间的双向道路。 <br />\r\n&nbsp;<br />\r\n【输出】 <br />\r\n输出文件 trade.out 共1 行， 包含 1 个整数， 表示最多能赚取的旅费。 如果没有进行贸易，<br />\r\n则输出 0。&nbsp;<br />\r\n&nbsp; <br />\r\n【输入输出样例】 <br />\r\ntrade.in</p>\r\n<p>5 5 <br />\r\n4 3 5 6 1 <br />\r\n1 2 1 <br />\r\n1 4 1 <br />\r\n2 3 2 <br />\r\n3 5 1 <br />\r\n4 5 2</p>\r\n<p>trade.out <br />\r\n<br />\r\n5 <br />\r\n&nbsp;<br />\r\n【数据范围】 <br />\r\n输入数据保证 1 号城市可以到达 n号城市。 <br />\r\n对于 10%的数据，1&le;n&le;6。 <br />\r\n对于 30%的数据，1&le;n&le;100。 <br />\r\n对于 50%的数据，不存在一条旅游路线，可以从一个城市出发，再回到这个城市。 <br />\r\n对于 100%的数据，1&le;n&le;100000，1&le;m&le;500000，1&le;x，y&le;n，1&le;z&le;2，1&le;各城市<br />\r\n水晶球价格&le;100。&nbsp;<br />\r\n&nbsp;</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:33'),
(407, '靶形数独', 'sudoku', '<p>【问题描述】 <br />\r\n小城和小华都是热爱数学的好学生，最近，他们不约而同地迷上了数独游戏，好胜的他<br />\r\n们想用数独来一比高低。但普通的数独对他们来说都过于简单了，于是他们向 Z博士请教，<br />\r\nZ 博士拿出了他最近发明的&ldquo;靶形数独&rdquo; ，作为这两个孩子比试的题目。 <br />\r\n靶形数独的方格同普通数独一样，在 9 格宽&times;9 格高的大九宫格中有 9 个 3 格宽&times;3 格<br />\r\n高的小九宫格（用粗黑色线隔开的） 。在这个大九宫格中，有一些数字是已知的，根据<br />\r\n这些数字，利用逻辑推理，在其他的空格上填入 1到 9 的数字。每个数字在每个小九宫格内不能<br />\r\n重复出现，每个数字在每行、每列也不能重复出现。但靶形数独有一点和普通数独不同，即<br />\r\n每一个方格都有一个分值，而且如同一个靶子一样，离中心越近则分值越高。 （如图）&nbsp;</p>\r\n<p><img height="391" alt="" width="562" src="/images/sudoku1.bmp" /><br />\r\n上图具体的分值分布是：最里面一格（黄色区域）为 10 分，黄色区域外面的一圈（红<br />\r\n色区域）每个格子为 9 分，再外面一圈（蓝色区域）每个格子为 8分，蓝色区域外面一圈（棕<br />\r\n色区域）每个格子为 7分，最外面一圈（白色区域）每个格子为 6 分，如上图所示。比赛的<br />\r\n要求是：每个人必须完成一个给定的数独（每个给定数独可能有不同的填法） ，而且要争取<br />\r\n更高的总分数。而这个总分数即每个方格上的分值和完成这个数独时填在相应格上的数字<br />\r\n的乘积的总和。如图，在以下的这个已经填完数字的靶形数独游戏中，总分数为 2829。游<br />\r\n戏规定，将以总分数的高低决出胜负。&nbsp;</p>\r\n<p><img height="400" alt="" width="415" src="/images/sudoku2.bmp" /><br />\r\n由于求胜心切，小城找到了善于编程的你，让你帮他求出，对于给定的靶形数独，能<br />\r\n够得到的最高分数。</p>\r\n<p>&nbsp;【输入】 <br />\r\n输入文件名为 sudoku.in。 <br />\r\n一共 9 行。每行 9 个整数（每个数都在 0&mdash;9 的范围内） ，表示一个尚未填满的数独方<br />\r\n格，未填的空格用&ldquo;0&rdquo;表示。每两个数字之间用一个空格隔开。 <br />\r\n&nbsp;<br />\r\n【输出】 <br />\r\n输出文件 sudoku.out共 1行。 <br />\r\n输出可以得到的靶形数独的最高分数。如果这个数独无解，则输出整数-1。 <br />\r\n&nbsp;<br />\r\n【输入输出样例 1】 <br />\r\nsudoku.in</p>\r\n<p>7 0 0 9 0 0 0 0 1 <br />\r\n1 0 0 0 0 5 9 0 0 <br />\r\n0 0 0 2 0 0 0 8 0 <br />\r\n0 0 5 0 2 0 0 0 3 <br />\r\n0 0 0 0 0 0 6 4 8 <br />\r\n4 1 3 0 0 0 0 0 0 <br />\r\n0 0 7 0 0 2 0 9 0 <br />\r\n2 0 1 0 6 0 8 0 4 <br />\r\n0 8 0 5 0 4 0 1 2</p>\r\n<p>sudoku.out <br />\r\n<br />\r\n2829&nbsp;<br />\r\n&nbsp;</p>\r\n<p>&nbsp; <br />\r\n【输入输出样例 2】 <br />\r\nsudoku.in</p>\r\n<p>0 0 0 7 0 2 4 5 3 <br />\r\n9 0 0 0 0 8 0 0 0 <br />\r\n7 4 0 0 0 5 0 1 0 <br />\r\n1 9 5 0 8 0 0 0 0 <br />\r\n0 7 0 0 0 0 0 2 5 <br />\r\n0 3 0 5 7 9 1 0 8 <br />\r\n0 0 0 6 0 1 0 0 0 <br />\r\n0 6 0 9 0 0 0 0 1 <br />\r\n0 0 0 0 0 0 0 0 6</p>\r\n<p>sudoku.out <br />\r\n<br />\r\n2852&nbsp;<br />\r\n&nbsp;<br />\r\n【数据范围】 <br />\r\n40%的数据，数独中非 0数的个数不少于 30。 <br />\r\n80%的数据，数独中非 0数的个数不少于 26。 <br />\r\n100%的数据，数独中非 0 数的个数不少于 24。</p>', 2000, 128, 20, 0, '2012-04-05 16:23:33'),
(408, '二叉查找树', 'treapmod', '<div><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【问题描述】</span></font></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">已知一棵特殊的二叉查找树。根据定义，该二叉查找树中每个结点的<b><u>数据值</u></b>都比它左<span style="color: blue">子树</span>结点的<b><u>数据值</u></b>大，而比它右<span style="color: blue">子树</span>结点的<b><u>数据值</u></b>小。</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">另一方面，这棵查找树中每个结点都有一个<b><u>权值</u></b>，每个结点的<b><u>权值</u></b>都比它的儿子结点的<b><u>权值</u></b>要小。</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">已知树中所有结点的<b><u>数据值</u></b>各不相同；所有结点的<b><u>权值</u></b>也各不相同。这时可得出这样一个有趣的结论：如果能够确定树中每个结点的<b><u>数据值</u></b>和<b><u>权值</u></b>，那么树的形态便可以唯一确定。因为这样的一棵树可以看成是按照<b><u>权值</u></b>从小到大顺序插入结点所得到的、按照<b><u>数据值</u></b>排序的二叉查找树。</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">一个结点在树中的<b><u>深度</u></b>定义为它到树根的距离加</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">。因此树的根结点的深度为</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">每个结点除了<b><u>数据值</u></b>和<b><u>权值</u></b>以外，还有一个<b><u>访问频度</u></b>。我们定义一个结点<b><u>在树中的访问代价</u></b>为它的<b><u>访问频度</u></b>乘以它在树中的<b><u>深度</u></b>。<b><u>整棵树的访问代价</u></b>定义为所有结点<b><u>在树中的访问代价</u></b>之和。</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">现在给定每个结点的<b><u>数据值</u>、<u>权值</u></b>和<b><u>访问频度</u>，</b>你可以根据需要修改某些结点的<b><u>权值</u></b>，但每次修改你会付出</span><i><span style="font-size: 12pt">K</span></i><span style="font-size: 12pt">的<b><u>额外修改代价</u></b>。你可以把结点的<b><u>权值</u></b>改为任何实数，但是修改后所有结点的<b><u>权值</u></b>必须仍保持互不相同。现在你要解决的问题是，<b><u>整棵树的访问代价</u></b>与<b><u>额外修改代价</u></b>的和最小是多少？</span></div>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【输入文件】</span></font></b></div>\r\n<div style="text-indent: 23.25pt"><span style="font-size: 12pt">输入文件名为</span><span style="font-size: 12pt">treapmod.in</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 23.25pt"><span style="font-size: 12pt">输入文件第一行包含两个正整数</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">和</span><i><span style="font-size: 12pt">K</span></i><span style="font-size: 12pt">。</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">为结点的个数，</span><i><span style="font-size: 12pt">K</span></i><span style="font-size: 12pt">为每次修改所需的<b><u>额外修改代价</u></b>。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">接下来一行包含</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个非负整数，是每个结点的<b><u>数据值</u></b>。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">再接下来一行包含</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个非负整数，是每个结点的<b><u>权值</u></b>。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">再接下来一行包含</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个非负整数，是每个结点的<b><u>访问频度</u></b>。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">所有的数据值、权值、访问频度均不超过</span><span style="font-size: 12pt">400000</span><span style="font-size: 12pt">。每两个数之间都有一个空格分隔，且行尾没有空格。</span></div>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【输出文件】</span></font></b></div>\r\n<div style="text-indent: 21.75pt"><span style="font-size: 12pt">输出文件名为</span><span style="font-size: 12pt">treapmod.out</span><span style="font-size: 12pt">。输出文件只有一个数字，即你所能得到的<b><u>整棵树的访问代价</u></b>与<b><u>额外修改代价</u></b>之和的最小值。</span></div>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【输入样例】</span></font></b></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">4 10</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1 2 3 4</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1 2 3 4</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1 2 3 4</span></div>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【输出样例】</span></font></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">29</span></div>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【样例说明】</span></font></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">输入的原图是左图，它的<b><u>访问代价</u></b>是</span><span style="font-size: 12pt">1&times;1+2&times;2+3&times;3+4&times;4=30</span><span style="font-size: 12pt">。最佳的修改方案是把输入中的第</span><span style="font-size: 12pt">3</span><span style="font-size: 12pt">个结点的权值改成</span><span style="font-size: 12pt">0</span><span style="font-size: 12pt">，得到右图，<b><u>访问代价</u></b>是</span><span style="font-size: 12pt">1&times;2+2&times;3+3&times;1+4&times;2=19</span><span style="font-size: 12pt">，加上<b><u>额外修改代价</u></b></span><span style="font-size: 12pt">10</span><span style="font-size: 12pt">，一共是</span><span style="font-size: 12pt">29</span><span style="font-size: 12pt">。</span></div>\r\n<p><img height="263" alt="" width="501" src="/images/treapmod1.bmp" /></p>\r\n<div style="margin: 13pt 0cm"><b><font size="5"><span style="font-weight: normal; font-size: 12pt; line-height: 173%">【数据规模】</span></font></b></div>\r\n<div style="text-indent: 21.75pt"><span style="font-size: 12pt">40%</span><span style="font-size: 12pt">的数据满足</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt"> &le; 30;</span></div>\r\n<div style="text-indent: 21.75pt"><span style="font-size: 12pt">70%</span><span style="font-size: 12pt">的数据满足</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt"> &le; 50;</span></div>\r\n<div style="text-indent: 21.75pt"><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据满足</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt"> &le; 70, 1 &le; <i>K </i>&le; 30000000</span><span style="font-size: 12pt">。</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:34'),
(409, '变换序列', 'transform', '<p>&nbsp;<b><font size="5"><span style="font-weight: normal; font-size: 12pt">【问题描述】</span></font></b></p>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">对于</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个整数</span><span style="font-size: 12pt">0, 1, &hellip;&hellip;, <i>N</i>-1</span><span style="font-size: 12pt">，一个变换序列</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">可以将</span><i><span style="font-size: 12pt">i</span></i><span style="font-size: 12pt">变成</span><i><span style="font-size: 12pt">T<sub>i</sub></span></i><span style="font-size: 12pt">，其中<img height="32" alt="" width="387" src="/images/transform1(1).bmp" /></span><span style="font-size: 12pt"><img height="31" alt="" width="180" src="/images/transform2.bmp" /></span></div>\r\n<div><span style="font-size: 12pt"><span style="font-size: 12pt">定义</span><i><span style="font-size: 12pt">x</span></i><span style="font-size: 12pt">和</span><i><span style="font-size: 12pt">y</span></i><span style="font-size: 12pt">之间的距离<img height="31" alt="" width="237" src="/images/transform3.bmp" /></span></span><span style="font-size: 12pt">。给定每个</span><i><span style="font-size: 12pt">i</span></i><span style="font-size: 12pt">和</span><i><span style="font-size: 12pt">T<sub>i</sub></span></i><span style="font-size: 12pt">之间的距离</span><i><span style="font-size: 12pt">D</span></i><span style="font-size: 12pt">(<i>i</i>,<i>T<sub>i</sub></i>)</span><span style="font-size: 12pt">，</span></div>\r\n<div><span style="font-size: 12pt">你需要求出一个满足要求的变换序列</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">。如果有多个满足条件的序列，输出其中字典序最小的一个。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b><u><span style="font-size: 12pt">说明</span></u></b><span style="font-size: 12pt">：对于两个变换序列</span><i><span style="font-size: 12pt">S</span></i><span style="font-size: 12pt">和</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">，如果存在</span><i><span style="font-size: 12pt">p</span></i><span style="font-size: 12pt">&lt;<i>N</i></span><span style="font-size: 12pt">，满足对于</span><i><span style="font-size: 12pt">i</span></i><span style="font-size: 12pt">=0,1,&hellip;&hellip;<i>p</i>-1</span><span style="font-size: 12pt">，</span><i><span style="font-size: 12pt">S<sub>i</sub></span></i><span style="font-size: 12pt">=<i>T<sub>i</sub></i></span><span style="font-size: 12pt">且</span><i><span style="font-size: 12pt">S<sub>p</sub></span></i><span style="font-size: 12pt">&lt;<i>T<sub>p</sub></i></span><span style="font-size: 12pt">，我们称</span><i><span style="font-size: 12pt">S</span></i><span style="font-size: 12pt">比</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">字典序小。</span></div>\r\n<div style="margin: 13pt 0cm; line-height: normal"><b><font size="5"><span style="font-weight: normal; font-size: 12pt">【输入文件】</span></font></b></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输入文件</span><span style="font-size: 12pt">transform.in</span><span style="font-size: 12pt">的第一行包含一个整数</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">，表示序列的长度。接下来的一行包含</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个整数</span><i><span style="font-size: 12pt">D<sub>i</sub></span></i><span style="font-size: 12pt">，其中</span><i><span style="font-size: 12pt">D<sub>i</sub></span></i><span style="font-size: 12pt">表示</span><i><span style="font-size: 12pt">i</span></i><span style="font-size: 12pt">和</span><i><span style="font-size: 12pt">T<sub>i</sub></span></i><span style="font-size: 12pt">之间的距离。</span></div>\r\n<div style="margin: 13pt 0cm; line-height: normal"><b><font size="5"><span style="font-weight: normal; font-size: 12pt">【输出文件】</span></font></b></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">输出文件为</span><span style="font-size: 12pt">transform.out</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">如果至少存在一个满足要求的变换序列</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">，则输出文件中包含一行</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">个整数，表示你计算得到的字典序最小的</span><i><span style="font-size: 12pt">T</span></i><span style="font-size: 12pt">；否则输出</span><span style="font-size: 12pt">&rdquo;No Answer&rdquo;</span><span style="font-size: 12pt">（不含引号）。<u>注意：输出文件中相邻两个数之间用一个空格分开，行末不包含多余空格。</u></span></div>\r\n<div style="margin: 13pt 0cm; line-height: normal"><b><font size="5"><span style="font-weight: normal; font-size: 12pt">【输入样例】</span></font></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">5</span></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">1 1 2 2 1</span></div>\r\n<div style="margin: 13pt 0cm; line-height: normal"><b><font size="5"><span style="font-weight: normal; font-size: 12pt">【输出样例】</span></font></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">1 2 4 0 3</span></div>\r\n<div style="margin: 13pt 0cm; line-height: normal"><b><font size="5"><span style="font-weight: normal; font-size: 12pt">【</span><span style="font-weight: normal; font-size: 12pt">数据规模和约定</span><span style="font-weight: normal; font-size: 12pt">】</span></font></b></div>\r\n<div style="layout-grid-mode: char; text-indent: 20.5pt"><span style="font-size: 12pt; color: blue">20</span><span style="font-size: 12pt">%</span><span style="font-size: 12pt">的数据中</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">&le;50</span><span style="font-size: 12pt">；</span></div>\r\n<div style="layout-grid-mode: char; text-indent: 20.5pt"><span style="font-size: 12pt">60%</span><span style="font-size: 12pt">的数据中</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">&le;500</span><span style="font-size: 12pt">；</span></div>\r\n<div style="text-indent: 20.5pt"><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据中</span><i><span style="font-size: 12pt">N</span></i><span style="font-size: 12pt">&le;10000</span><span style="font-size: 12pt">。</span></div>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:34');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(410, '植物大战僵尸', 'pvz', '<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【问题描述】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants vs. Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">（</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">PVZ</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">）是最近十分风靡的一款小游戏。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">（植物）和</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">（僵尸）是游戏的主角，其中</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">防守，而</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">进攻。该款游戏包含多种不同的挑战系列，比如</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Protect Your Brain</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">、</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Bowling</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">等等。其中最为经典的，莫过于玩家通过控制</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">来防守</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的进攻，或者相反地由玩家通过控制</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">对</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">发起进攻。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">现在，我们将要考虑的问题是游戏中</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">对</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的进攻，请注意，<b style="mso-bidi-font-weight: normal"><u>本题中规则与实际游戏有所不同</u></b>。游戏中有两种角色，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">和</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，每个</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">有一个攻击位置集合，它可以对这些位置进行保护；而</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">进攻植物的方式是走到植物所在的位置上并将其吃掉。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">游戏的地图可以抽象为一个</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">N</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">M</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">列的矩阵，行从上到下用</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">0</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">到</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">N</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">&ndash;1</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">编号，列从左到右用</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">0</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">到</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">M</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">&ndash;1</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">编号；在地图的每个位置上都放有一个</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，为简单起见，我们把位于第</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">r</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行第</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">c</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">列的植物记为</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">分很多种，有攻击类、防守类和经济类等等。为了简单的描述每个</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，定义</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Score</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">和</span><b style="mso-bidi-font-weight: normal"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Attack</font></span></i></b><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">如下：</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<table class="MsoNormalTable" style="border-collapse: collapse; mso-table-layout-alt: fixed; mso-yfti-tbllook: 1184; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt" cellspacing="0" cellpadding="0" border="0">\r\n    <tbody>\r\n        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">\r\n            <td style="border-right: #ece9d8; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 4cm; padding-top: 0cm; border-bottom: #ece9d8; background-color: transparent" valign="top" width="151">\r\n            <p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Score</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]<o:p></o:p></span></font></p>\r\n            </td>\r\n            <td style="border-right: #ece9d8; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 312.7pt; padding-top: 0cm; border-bottom: #ece9d8; background-color: transparent" valign="top" width="417">\r\n            <p class="MsoNormal" style="margin: 6pt 0cm 0pt; mso-para-margin-top: .5gd"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">击溃植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">可获得的能源。若</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Score</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">为非负整数，则表示击溃植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">可获得能源</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Score</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，若为负数表示击溃</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">需要付出能源</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman"> -<i style="mso-bidi-font-style: normal">Score</i>[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n            </td>\r\n        </tr>\r\n        <tr style="mso-yfti-irow: 1; mso-yfti-lastrow: yes">\r\n            <td style="border-right: #ece9d8; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 4cm; padding-top: 0cm; border-bottom: #ece9d8; background-color: transparent" valign="top" width="151">\r\n            <p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24.1pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><font face="Times New Roman"><b style="mso-bidi-font-weight: normal"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Attack</span></i></b><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]<o:p></o:p></span></font></p>\r\n            </td>\r\n            <td style="border-right: #ece9d8; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 312.7pt; padding-top: 0cm; border-bottom: #ece9d8; background-color: transparent" valign="top" width="417">\r\n            <p class="MsoNormal" style="margin: 6pt 0cm 0pt; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">能够对</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">进行攻击的位置集合。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">必须<b style="mso-bidi-font-weight: normal"><u>从地图的右侧进入</u></b>，且只能<b style="mso-bidi-font-weight: normal"><u>沿着水平方向进行移动</u></b>。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">攻击植物的唯一方式就是<b style="mso-bidi-font-weight: normal"><u>走到该植物所在的位置</u></b>并将植物吃掉。因此</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的进攻总是从地图的右侧开始。也就是说，对于第</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">r</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行的进攻，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">必须首先攻击</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">M</i>-1</span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">；若需要对</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">（</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">0&le;<i style="mso-bidi-font-style: normal">c</i>&lt;<i style="mso-bidi-font-style: normal">M</i>-1</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">）攻击，必须将</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">,<i style="mso-bidi-font-style: normal">M</i>-1</span></sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">M</i>-2</sub> &hellip; <i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i>+1</sub></span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">先击溃，并移动到位置</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">(<i style="mso-bidi-font-style: normal">r</i>, <i style="mso-bidi-font-style: normal">c</i>)</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">才可进行攻击。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">在本题的设定中，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的攻击力是无穷大的，一旦</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">进入某个</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的攻击位置，该</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">会被瞬间消灭，<b style="mso-bidi-font-weight: normal"><u>而该</u></b></span><b style="mso-bidi-font-weight: normal"><u><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span></u></b><b style="mso-bidi-font-weight: normal"><u><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">没有时间进行任何攻击操作</span></u></b><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。因此，即便</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">进入了一个</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">所在的位置，但该位置属于其他植物的攻击位置集合，则</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombie</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">会被瞬间消灭而所在位置的植物则安然无恙（在我们的设定中，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plant</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的攻击位置不包含自身所在位置，否则你就不可能击溃它了）。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的目标是对</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Plants</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的阵地发起进攻并获得最大的能源收入。每一次，你可以选择一个可进攻的植物进行攻击。本题的目标为，制定一套</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">Zombies</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的进攻方案，选择进攻哪些植物以及进攻的顺序，从而获得最大的能源收入。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【输入文件】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">输入文件</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">pvz.in</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的第一行包含两个整数</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">N</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">M</i></span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，分别表示地图的行数和列数。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">接下来</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">N</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">&times;<i style="mso-bidi-font-style: normal">M</i></span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行描述每个位置上植物的信息。第</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">r</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">&times;<i style="mso-bidi-font-style: normal">M</i> + <i style="mso-bidi-font-style: normal">c</i> + 1</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行按照如下格式给出植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的信息：第一个整数为</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Score</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>], </span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">第二个整数为集合</span><font face="Times New Roman"><b style="mso-bidi-font-weight: normal"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">Attack</span></i></b><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">[<i style="mso-bidi-font-style: normal">P<sub>r</sub></i><sub>, <i style="mso-bidi-font-style: normal">c</i></sub>]</span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">中的位置个数</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">w</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，接下来</span><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">w</font></span></i><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">个位置信息（</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">r&rsquo;</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c&rsquo;</i></span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">），表示</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P<sub>r</sub></span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">c</i></span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">可以攻击位置第</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">r&rsquo;</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"> </span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行第</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">c&rsquo;</span></i><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"> </span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">列。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【输出文件】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">输出文件</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">pvz.out</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">仅包含一个整数，表示可以获得的最大能源收入。注意，你也可以选择不进行任何攻击，这样能源收入为</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">0</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【输入样例】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">3 2<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">10 0<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">20 0<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">-10 0<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">-5 1 0 0<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">100 1 2 1<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">100 0<o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【输出样例】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.0pt">25<o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【样例说明】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">在样例中</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">, </font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P</span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">1,1</span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">可以攻击位置</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">(0,0), <i style="mso-bidi-font-style: normal">P</i><sub>2, 0</sub></font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">可以攻击位置</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">(2,1)</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 6pt 0cm 0pt; text-indent: 24pt; mso-char-indent-count: 2.0; mso-para-margin-top: .5gd"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">一个方案为，首先进攻</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P</span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">1,1</span></sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">, <i style="mso-bidi-font-style: normal">P</i><sub>0,1</sub></span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，此时可以攻击</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P</span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">0,0</span></sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"> </span></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。共得到能源收益为</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">(-5)+20+10 = 25</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">。注意</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">, </font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">位置</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">(2,1)</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">被植物</span><font face="Times New Roman"><i style="mso-bidi-font-style: normal"><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">P</span></i><sub><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt">2,0</span></sub></font><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">保护，所以无法攻击第</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">2</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">行中的任何植物。</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体; mso-font-kerning: 0pt; mso-bidi-font-weight: bold">【大致数据规模】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21.75pt"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">约</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">20%</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的数据满足</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">1 &le; <i style="mso-bidi-font-style: normal">N</i>, <i style="mso-bidi-font-style: normal">M</i> &le; 5</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">；</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21.75pt"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">约</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">40%</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的数据满足</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">1 &le; <i style="mso-bidi-font-style: normal">N</i>, <i style="mso-bidi-font-style: normal">M</i> &le; 10</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">；</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21.75pt"><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">约</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">100%</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">的数据满足</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">1 &le; <i style="mso-bidi-font-style: normal">N</i> &le; 20</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">1 &le; <i style="mso-bidi-font-style: normal">M</i> &le; 30</font></span><span style="font-size: 12pt; font-family: 宋体; mso-bidi-font-size: 10.0pt; mso-ascii-font-family: ''Times New Roman''; mso-hansi-font-family: ''Times New Roman''">，</span><span lang="EN-US" style="font-size: 12pt; mso-bidi-font-size: 10.0pt"><font face="Times New Roman">-10000 &le; <i style="mso-bidi-font-style: normal">Score</i> &le; 10000<o:p></o:p></font></span></p>', 2000, 512, 10, 0, '2012-04-05 16:23:34');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(411, '管道取珠', 'ballb', '<div class="Section1">\r\n<h2 style="margin: 0cm 0cm 13pt; text-align: center" align="center"><span style="font-size: 18pt; line-height: 173%; font-family: 黑体">管道取珠<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【问题描述】</span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 7.8pt; text-indent: 21pt"><span style="font-size: 12pt; font-family: 宋体">管道取珠是小</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">X</font></span><span style="font-size: 12pt; font-family: 宋体">很喜欢的一款游戏。在本题中，我们将考虑该游戏的一个简单改版。游戏画面如图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1</font></span><span style="font-size: 12pt; font-family: 宋体">所示：</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt"><v:shapetype id="_x0000_t32" filled="f" path="m,l21600,21600e" o:oned="t" o:spt="32" coordsize="21600,21600"><v:path o:connecttype="none" fillok="f" arrowok="t"></v:path><o:lock shapetype="t" v:ext="edit"></o:lock></v:shapetype><v:shape id="_x0000_s1106" style="margin-top: 20.65pt; z-index: 4; left: 0px; margin-left: 176.75pt; width: 43.75pt; position: absolute; height: 22.3pt; text-align: left" type="#_x0000_t32" o:connectortype="straight"><v:stroke endarrow="block"></v:stroke></v:shape><v:shape id="_x0000_s1107" style="margin-top: 52.45pt; z-index: 5; left: 0px; margin-left: 183.65pt; width: 36.85pt; position: absolute; height: 17pt; text-align: left" type="#_x0000_t32" o:connectortype="straight"><v:stroke endarrow="block"></v:stroke></v:shape><span lang="EN-US" style="font-size: 12pt"><img height="90" alt="" width="409" src="/images/gdqz1.JPG" /><v:shapetype id="_x0000_t75" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:spt="75" coordsize="21600,21600" stroked="f" o:preferrelative="t"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:connecttype="rect" gradientshapeok="t" o:extrusionok="f"></v:path><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype></span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt; text-align: center" align="center"><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1)<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 7.8pt 0cm 0pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">游戏初始时，左侧上下两个管道分别有一定数量的小球（有深色球和浅色球两种类型），而右侧输出管道为空。每一次操作，可以从左侧选择一个管道，并将该管道中<b><u>最右侧的球</u></b>推入右边输出管道。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 7.8pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">例如，我们首先从下管道中移一个球到输出管道中，将得到图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">2</font></span><span style="font-size: 12pt; font-family: 宋体">所示的情况。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US"><img height="90" alt="" width="409" src="/images/gdqz2.JPG" /></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt; text-align: center" align="center"><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">2)<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 7.8pt 0cm 0pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">假设上管道中有</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">n</font></span></i><span style="font-size: 12pt; font-family: 宋体">个球</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">, </font></span><span style="font-size: 12pt; font-family: 宋体">下管道中有</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">m</font></span></i><span style="font-size: 12pt; font-family: 宋体">个球，则整个游戏过程需要进行</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">n </span></i><span lang="EN-US" style="font-size: 12pt">+ <i>m</i></span></font><span style="font-size: 12pt; font-family: 宋体">次操作，即将所有左侧管道中的球移入输出管道。最终</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">n</span></i><span lang="EN-US" style="font-size: 12pt"> + <i>m</i></span></font><span style="font-size: 12pt; font-family: 宋体">个球在输出管道中<b><u>从右到左</u></b>形成<b><u>输出序列</u></b>。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 7.8pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">爱好数学的小</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">X</font></span><span style="font-size: 12pt; font-family: 宋体">知道，他共有</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">C</span></i><span lang="EN-US" style="font-size: 12pt">(<i>n</i>+<i>m</i>,<i> n</i>)</span></font><span style="font-size: 12pt; font-family: 宋体">种不同的操作方式，而不同的操作方式可能导致相同的<b><u>输出序列</u></b>。举个例子，对于图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">3</font></span><span style="font-size: 12pt; font-family: 宋体">所示的游戏情形：</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt"><span lang="EN-US" style="font-size: 12pt"><v:group id="_x0000_s1026" style="width: 337.7pt; height: 76.75pt" coordsize="6754,1535" coordorigin="2569,3094"><v:rect id="_x0000_s1027" style="left: 6360px; width: 2959px; position: absolute; top: 3608px; height: 517px" stroked="f" strokeweight="1pt" strokecolor="#4f81bd" fillcolor="#bfbfbf"><v:stroke dashstyle="dash"></v:stroke><v:shadow color="#868686"></v:shadow></v:rect><v:rect id="_x0000_s1028" style="left: 2569px; width: 3030px; position: absolute; top: 3094px; height: 450px" stroked="f" strokeweight="1pt" strokecolor="#4f81bd" fillcolor="#bfbfbf"><v:stroke dashstyle="dash"></v:stroke><v:shadow color="#868686"></v:shadow></v:rect><v:rect id="_x0000_s1029" style="left: 5407px; width: 1241px; position: absolute; top: 3336px; height: 446px" stroked="f" strokeweight="1pt" strokecolor="#4f81bd" fillcolor="#bfbfbf"><v:stroke dashstyle="dash"></v:stroke><v:shadow color="#868686"></v:shadow></v:rect><v:rect id="_x0000_s1030" style="left: 5430px; width: 1226px; position: absolute; top: 3972px; height: 420px" stroked="f" strokeweight="1pt" strokecolor="#4f81bd" fillcolor="#bfbfbf"><v:stroke dashstyle="dash"></v:stroke><v:shadow color="#868686"></v:shadow></v:rect><v:shape id="_x0000_s1031" style="left: 6663px; width: 2648px; position: absolute; top: 4125px; height: 0px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:rect id="_x0000_s1032" style="left: 2569px; width: 3030px; position: absolute; top: 4193px; height: 435px" stroked="f" strokeweight="1pt" strokecolor="#4f81bd" fillcolor="#bfbfbf"><v:stroke dashstyle="dash"></v:stroke><v:shadow color="#868686"></v:shadow></v:rect><v:shape id="_x0000_s1033" style="left: 2569px; width: 3030px; position: absolute; top: 3100px; height: 0px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1034" style="left: 5599px; width: 1013px; position: absolute; top: 3101px; height: 495px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1035" style="left: 2569px; width: 2934px; position: absolute; top: 3544px; height: 1px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1036" style="left: 5504px; width: 698px; position: absolute; top: 3545px; height: 347px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1037" style="left: 2569px; width: 2934px; position: absolute; top: 4193px; height: 1px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1038" style="left: 2569px; width: 3000px; position: absolute; top: 4629px; height: 0px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1039" style="left: 5504px; width: 698px; position: absolute; top: 3892px; height: 301px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:shape id="_x0000_s1040" style="left: 5578px; width: 1074px; position: absolute; top: 4129px; height: 499px" type="#_x0000_t32" o:connectortype="straight"></v:shape><v:oval id="_x0000_s1041" style="left: 4174px; width: 435px; position: absolute; top: 3094px; height: 435px" fillcolor="#dbe5f1"></v:oval><v:oval id="_x0000_s1042" style="left: 4639px; width: 435px; position: absolute; top: 3094px; height: 435px" fillcolor="#1f497d"></v:oval><v:oval id="_x0000_s1043" style="left: 4577px; width: 435px; position: absolute; top: 4194px; height: 435px" fillcolor="#1f497d"></v:oval><v:shape id="_x0000_s1044" style="left: 6619px; width: 2704px; position: absolute; top: 3600px; height: 8px" type="#_x0000_t32" o:connectortype="straight"></v:shape><w:wrap type="none"></w:wrap><w:anchorlock><img height="89" alt="" width="408" src="/images/gdqz3.JPG" /></w:anchorlock></v:group></span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt; text-align: center" align="center"><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">3)<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 7.8pt 0cm 0pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">我们用</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">A</font></span><span style="font-size: 12pt; font-family: 宋体">表示浅色球，</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">B</font></span><span style="font-size: 12pt; font-family: 宋体">表示深色球。并设移动上管道右侧球的操作为</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">U, </font></span><span style="font-size: 12pt; font-family: 宋体">移动下管道右侧球的操作为</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">D</font></span><span style="font-size: 12pt; font-family: 宋体">，则共有</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">C</span></i><span lang="EN-US" style="font-size: 12pt">(2+1,1)=3</span></font><span style="font-size: 12pt; font-family: 宋体">种不同的操作方式</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">, </font></span><span style="font-size: 12pt; font-family: 宋体">分别为</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">UUD, UDU, DUU</font></span><span style="font-size: 12pt; font-family: 宋体">；最终在输出管道中形成的<b><u>输出序列（从右到左）</u></b>分别为</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">BAB</font></span><span style="font-size: 12pt; font-family: 宋体">，</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">BBA</font></span><span style="font-size: 12pt; font-family: 宋体">，</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">BBA</font></span><span style="font-size: 12pt; font-family: 宋体">。可以发现后两种操作方式将得到同样的<b><u>输出序列</u></b>。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 24pt"><span style="font-size: 12pt; font-family: 宋体">假设最终可能产生的不同种类的<b><u>输出序列</u></b>共有</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">K</font></span></i><span style="font-size: 12pt; font-family: 宋体">种，其中第</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">i</font></span></i><span style="font-size: 12pt; font-family: 宋体">种输出序列的产生方式</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">即不同的操作方式数目</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">)</font></span><span style="font-size: 12pt; font-family: 宋体">有</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">a<sub>i</sub></font></span></i><span style="font-size: 12pt; font-family: 宋体">个。聪明的小</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">X</font></span><span style="font-size: 12pt; font-family: 宋体">早已知道，</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: center" align="center"><span lang="EN-US"><span style="position: relative; top: 14pt"><v:shape id="_x0000_i1028" style="width: 115.5pt; height: 42pt" type="#_x0000_t75" o:ole=""><v:imagedata o:title="" src="file:///C:DOCUME~1syzxLOCALS~1Tempmsohtml1\03clip_image006.wmz"></v:imagedata></v:shape></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span style="font-size: 12pt; font-family: 宋体">因此，小</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">X</font></span><span style="font-size: 12pt; font-family: 宋体">希望计算得到</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: center" align="center"><span lang="EN-US"><span style="position: relative; top: 14pt"><v:shape id="_x0000_i1029" style="width: 44.25pt; height: 48pt" type="#_x0000_t75" o:ole=""><v:imagedata o:title="" src="file:///C:DOCUME~1syzxLOCALS~1Tempmsohtml1\03clip_image008.wmz"></v:imagedata></v:shape></span></span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span style="font-size: 12pt; font-family: 宋体">你能帮助他计算这个值么？由于这个值可能很大，因此只需要输出该值对</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1024523</font></span><span style="font-size: 12pt; font-family: 宋体">的取模即可</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">即除以</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1024523</font></span><span style="font-size: 12pt; font-family: 宋体">的余数</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">)</font></span><span style="font-size: 12pt; font-family: 宋体">。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 7.8pt 0cm 0pt; text-indent: 24.1pt"><b><u><span style="font-size: 12pt; font-family: 宋体">说明</span></u></b><span style="font-size: 12pt; font-family: 宋体">：文中</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">C</span></i><span lang="EN-US" style="font-size: 12pt">(<i>n </i>+ <i>m</i>, <i>n</i>)</span></font><span style="font-size: 12pt; font-family: 宋体">表示组合数。组合数</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">C</span></i><span lang="EN-US" style="font-size: 12pt">(<i>a</i>, <i>b</i>)</span></font><span style="font-size: 12pt; font-family: 宋体">等价于在</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">a</font></span></i><span style="font-size: 12pt; font-family: 宋体">个不同的物品中选取</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">b</font></span></i><span style="font-size: 12pt; font-family: 宋体">个的选取方案数。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 6pt 0cm 0pt"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【输入文件】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 12pt"><span><font face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-size: 12pt; font-family: 宋体">输入文件</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">ball.in</font></span><span style="font-size: 12pt; font-family: 宋体">第一行包含两个整数</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">n</span></i><span lang="EN-US" style="font-size: 12pt">, <i>m</i></span></font><span style="font-size: 12pt; font-family: 宋体">，分别表示上下两个管道中球的数目。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 12pt"><span><font face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-size: 12pt; font-family: 宋体">第二行为一个</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">AB</font></span><span style="font-size: 12pt; font-family: 宋体">字符串，长度为</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">n</font></span></i><span style="font-size: 12pt; font-family: 宋体">，表示上管道中<b><u>从左到右</u></b>球的类型。其中</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">A</font></span><span style="font-size: 12pt; font-family: 宋体">表示浅色球，</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">B</font></span><span style="font-size: 12pt; font-family: 宋体">表示深色球。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 12pt"><span><font face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-size: 12pt; font-family: 宋体">第三行为一个</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">AB</font></span><span style="font-size: 12pt; font-family: 宋体">字符串，长度为</span><i><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">m</font></span></i><span style="font-size: 12pt; font-family: 宋体">，表示下管道中的情形。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 6pt 0cm 0pt"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【输出文件】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21.75pt"><span style="font-size: 12pt; font-family: 宋体">输出文件</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">ball.out</font></span><span style="font-size: 12pt; font-family: 宋体">仅包含一行，即为</span><span lang="EN-US"><span style="position: relative; top: 14pt"><v:shape id="_x0000_i1030" style="width: 34.5pt; height: 37.5pt" type="#_x0000_t75" o:ole=""><font size="3"><font face="Times New Roman"> <v:imagedata o:title="" src="file:///C:DOCUME~1syzxLOCALS~1Tempmsohtml1\03clip_image010.wmz"></v:imagedata></font></font></v:shape></span></span><font size="3"><span style="font-family: 宋体">除以</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1024523</font></span><span style="font-family: 宋体">的余数。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></font></p>\r\n<h2 style="margin: 0cm 0cm 0pt"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【输入样例】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 11pt"><span><font face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></span></span><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;">2 1<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;">AB<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 11pt; font-family: &quot;Courier New&quot;"><span>&nbsp;&nbsp; </span>B<o:p></o:p></span></p>\r\n<h2 style="margin: 0cm 0cm 0pt"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【输出样例】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><span lang="EN-US" style="font-size: 12pt"><span><font face="Times New Roman">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></span></span><span lang="EN-US" style="font-size: 12pt; font-family: &quot;Courier New&quot;">5<o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm 0pt"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【样例说明】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt"><span style="font-size: 12pt; font-family: 宋体">样例即为文中</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">(</font></span><span style="font-size: 12pt; font-family: 宋体">图</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">3)</font></span><span style="font-size: 12pt; font-family: 宋体">。共有两种不同的<b><u>输出序列</u></b>形式，序列</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">BAB</font></span><span style="font-size: 12pt; font-family: 宋体">有</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">1</font></span><span style="font-size: 12pt; font-family: 宋体">种产生方式，而序列</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">BBA</font></span><span style="font-size: 12pt; font-family: 宋体">有</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">2</font></span><span style="font-size: 12pt; font-family: 宋体">种产生方式，因此答案为</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">5</font></span><span style="font-size: 12pt; font-family: 宋体">。</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<h2 style="margin: 13pt 0cm"><span style="font-weight: normal; font-size: 12pt; line-height: 173%; font-family: 黑体">【大致数据规模】<span lang="EN-US"><o:p></o:p></span></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21.75pt"><span style="font-size: 12pt; font-family: 宋体">约</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">30%</font></span><span style="font-size: 12pt; font-family: 宋体">的数据满足</span><span style="font-size: 12pt"><font face="Times New Roman"> <i><span lang="EN-US">n</span></i><span lang="EN-US">, <i>m</i> &le; 12</span></font></span><span style="font-size: 12pt; font-family: 宋体">；</span><span lang="EN-US" style="font-size: 12pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 20.5pt"><span style="font-size: 12pt; font-family: 宋体">约</span><span lang="EN-US" style="font-size: 12pt"><font face="Times New Roman">100%</font></span><span style="font-size: 12pt; font-family: 宋体">的数据满足</span><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 12pt">n</span></i><span lang="EN-US" style="font-size: 12pt">, <i>m </i>&le; 500</span></font><span style="font-size: 12pt; font-family: 宋体">。</span></p>\r\n</div>\r\n<p><span lang="EN-US" style="font-size: 10.5pt; font-family: &quot;Times New Roman&quot;"><br style="page-break-before: always" clear="all" />\r\n</span></p>', 5000, 512, 9, 0, '2012-04-05 16:23:34');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(412, '小熊Mecho', 'mecho', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">问题描述</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">小熊</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">发现了一笔小财富&mdash;&mdash;装满蜂蜜的罐子。它正高高兴兴地吃着蜂蜜，突然发现一只蜜蜂看见了自己，并拉响了警报。</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">知道此刻一群蜜蜂正在从蜂房涌出，并四处涌动试图抓到自己。</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">知道自己必须赶快离开罐子回到家里，但是蜂蜜实在太好吃了，它不想太早逃离。请你帮助</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">计算最迟何时离开才能安全地回到家里。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">小熊</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">所居住的森林可以用正方形网格表示，该正方形网格由</span><span lang="EN-US"><font face="Calibri">N*N</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">个单元格组成，它的边分别平行于南北方向和东西方向。每个单元格被一棵树、一块草地、一个蜂房或者</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的家所占据。两个单元格相邻是指它们在南北方向或者东西方向有一条公共边</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">即对角线上的单元格不是相邻的</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">是一只笨拙的小熊，每步只能从当前单元格走到相邻的单元格，并且它只能走向草地或者家里，不能通过树木或蜂房，它每分钟最多能走</span><span lang="EN-US"><font face="Calibri">s</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">步。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">警报响起的那一刻，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">正位于蜂蜜罐所在的单元格，而蜜蜂则分布于各个蜂房所在的单元格内</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">森林里可能有不止一个蜂房</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。这一刻之后，。</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">按如下规则移动：</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">如果</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">仍在吃蜂蜜，它会决定是继续享用蜂蜜还是开始逃离。如果它决定继续吃蜂蜜，那么在一分钟之内它不会移动。否则，它立刻离开并按照上述要求最多走</span><span lang="EN-US"><font face="Calibri">S</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">步。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">不能带走任何蜂蜜，所以它一旦离开就不能再吃蜂蜜而只能移动了。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">蜜蜂按照如下规则扩散：</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">警报响起时，蜜蜂仅仅占据有蜂房的单元格。第一分钟之后，它们占据所有与蜂房所在单元格相邻的草地单元格</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">包括蜂房所在单元格</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。在第二分钟之后，它们多占据了一些草地单元格，即与蜂房相邻的草地单元格的相邻草地单元格，依此类推。只要有充足的时间，蜜蜂可以同时占据它们所能到达的所有草地单元格。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">可以理解为在每一分钟</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">先移动，蜜蜂后扩散，即</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">在每一分钟内停留或者移动，而蜜蜂在每分钟结束时瞬间扩散。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">注意：</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">和蜜蜂都不能走到森林之外。另外，根据上述规则，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">吃蜂蜜的时间是一个整数。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">在任何时刻，如果</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">和蜜蜂处于同一个单元格，即认为蜜蜂抓住了</span><span lang="EN-US"><font face="Calibri">Mecho o</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">．</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">任务</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">写一个程序，根据给定的森林地图，计算在</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">安全回到家里而不被蜜蜂抓到的前提下，它可以停留在初始位置吃蜂蜜的最长时间。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">数据规模</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>l</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">&le;</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">&le;</span><span lang="EN-US"><font face="Calibri">800<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">地图的大小</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">即正方形的边长</span><span lang="EN-US"><font face="Calibri">)</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>l</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">&le;</span><span lang="EN-US"><font face="Calibri">S</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">&le;</span><span lang="EN-US"><font face="Calibri">l</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，</span><span lang="EN-US"><font face="Calibri">000<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">每分钟可以行走的最大步数。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输入</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">你的程序必须从标准输入读人下列数据：</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">第一行包含整数</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">和</span><span lang="EN-US"><font face="Calibri">S</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，以一个空格隔开。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">接下来N行表示森林的地图，其中每行包N个字符，每个字符代表一个单元格。可能出现的字符和它们的相应意义如下：</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp; </span>T</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">表示一棵树木</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp; G</span></font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">表示草地单元格</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp; </span>M</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">表示</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的初始位置，即蜂蜜罐所在的位置，该位置是草地单元格</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp; </span>D</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">表示</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的家，这一位置</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">可以进人，而蜜蜂不能进入</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span style="mso-spacerun: yes">&nbsp; </span>H</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">表示蜂房的位置</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">注意：数据保证地图中只存在一个字符</span><span lang="EN-US"><font face="Calibri">M</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，一个字符</span><span lang="EN-US"><font face="Calibri">D</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，至少存在一个字符</span><span lang="EN-US"><font face="Calibri">H</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。数据保证</span><span lang="EN-US"><font face="Calibri">M</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">可通过一串相邻的字符</span><span lang="EN-US"><font face="Calibri">G</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">到达</span><span lang="EN-US"><font face="Calibri">D</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，也保证至少存在一个日可以通过一串相邻的</span><span lang="EN-US"><font face="Calibri">G</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">到达</span><span lang="EN-US"><font face="Calibri">M</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。这串相邻的字符</span><span lang="EN-US"><font face="Calibri">G</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的长度可以是</span><span lang="EN-US"><font face="Calibri">0</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">，例如，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">家</span><span lang="EN-US"><font face="Calibri">D</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">或者蜂房</span><span lang="EN-US"><font face="Calibri">H</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">与</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的起始位置</span><span lang="EN-US"><font face="Calibri">M</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">相邻。另外，蜜蜂不能进人或者跳过</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">家所在的单元格，对它们来说，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">的家就像一棵树一样。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输出</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">你的程序必须向标准输出写入一行，该行包含一个整数，表示在安全回家的前提下</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">可以停留在初始位置吃蜂蜜的最长时间</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">单位：分钟</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">如果</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">不能安全回到家里，输出</span><span lang="EN-US"><font face="Calibri">-1</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">评分说明</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">有</span><span lang="EN-US"><font face="Calibri">40</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分的评测数据，</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">不大于</span><span lang="EN-US"><font face="Calibri">60</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">样例</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输入样例</span><font face="Calibri"> </font></span><span style="font-size: 10pt"><font face="Calibri"><span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">7 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TTTTTTT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">MGGGGGD</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">THHHHHT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输出样例</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">1</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">继续吃蜂蜜</span><span lang="EN-US"><font face="Calibri">1</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟后，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">可以用</span><span lang="EN-US"><font face="Calibri">2</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟的时间向右走最短路回到家里，而不被蜜蜂抓到。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输入样例</span><font face="Calibri"> </font></span><span style="font-size: 10pt"><font face="Calibri"><span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">7 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TTTTTTT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">MGGGGGD</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGGGGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">TGHHGGT</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">输出样例</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">2</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span style="mso-spacerun: yes"><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">继续吃蜂蜜</span><span lang="EN-US"><font face="Calibri">2</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟后，</span><span lang="EN-US"><font face="Calibri">Mecho</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">在第</span><span lang="EN-US"><font face="Calibri">3</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟走</span><span lang="EN-US"><font face="Calibri">-&gt; ^ -&gt;</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">三步，接着在第</span><span lang="EN-US"><font face="Calibri">4</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟走</span><span lang="EN-US"><font face="Calibri">-&gt;-&gt;-&gt;</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">三步，在第</span><span lang="EN-US"><font face="Calibri">5</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">分钟走</span><span lang="EN-US"><font face="Calibri">| -&gt;</font></span><span style="font-family: 宋体; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri">两步回到家里，而不被蜜蜂抓到。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p><span style="font-size: small">&nbsp;</span></p>', 1000, 64, 90, 0, '2012-04-05 16:23:34'),
(413, '巧克力', 'chocolate', '<p>\r\n<div align="center">&nbsp;</div>\r\n<b><span style="font-size: 14pt">试题描述</span></b><br clear="all" />\r\n<span style="font-size: 12pt">有一块</span><span style="font-size: 12pt">n*m</span><span style="font-size: 12pt">的矩形巧克力，准备将它切成</span><span style="font-size: 12pt">n*m</span><span style="font-size: 12pt">块。巧克力上共有</span><span style="font-size: 12pt">n-1</span><span style="font-size: 12pt">条横线和</span><span style="font-size: 12pt">m-1</span><span style="font-size: 12pt">条竖线，你每次可以沿着其中的一条横线或竖线将巧克力切开，无论切割的长短，沿着每条横线切一次的代价依次为</span><span style="font-size: 12pt">y<sub>1</sub></span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">y<sub>2</sub></span><span style="font-size: 12pt">，&hellip;，</span><span style="font-size: 12pt">y<sub>n-1</sub></span><span style="font-size: 12pt">，而沿竖线切割的代价依次为</span><span style="font-size: 12pt">x<sub>1</sub></span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">x<sub>2</sub></span><span style="font-size: 12pt">，&hellip;，</span><span style="font-size: 12pt">x<sub>m-1</sub></span><span style="font-size: 12pt">。例如，对于下图</span><span style="font-size: 12pt">6*4</span><span style="font-size: 12pt">的巧克力，我们先沿着三条横线切割，需要</span><span style="font-size: 12pt">3</span><span style="font-size: 12pt">刀，得到</span><span style="font-size: 12pt">4</span><span style="font-size: 12pt">条巧克力，然后再将这</span><span style="font-size: 12pt">4</span><span style="font-size: 12pt">条巧克力沿竖线切割，每条都需要</span><span style="font-size: 12pt">5</span><span style="font-size: 12pt">刀，则最终所花费的代价为</span><span style="font-size: 12pt">y<sub>1</sub>+y<sub>2</sub>+y<sub>3</sub>+4*(x<sub>1</sub>+x<sub>2</sub>+x<sub>3</sub>+x<sub>4</sub>+x<sub>5</sub>)</span><span style="font-size: 12pt">。</span></p>\r\n<p style="text-align: center"><span style="font-size: 12pt"><img width="352" height="202" alt="" src="/images/chocolate1.bmp" /></span></p>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">当然，上述简单切法不见得是最优切法，那么怎样切割该块巧克力，花费的代价最少呢？</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">输入数据</span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">第一行为两个整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">和</span><span style="font-size: 12pt">m</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">接下来</span><span style="font-size: 12pt">n-1</span><span style="font-size: 12pt">行，每行一个整数，分别代表</span><span style="font-size: 12pt">x<sub>1</sub></span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">x<sub>2</sub></span><span style="font-size: 12pt">，&hellip;，</span><span style="font-size: 12pt">x<sub>n-1</sub></span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">接下来</span><span style="font-size: 12pt">m-1</span><span style="font-size: 12pt">行，每行一个整数，分别代表</span><span style="font-size: 12pt">y<sub>1</sub></span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">y<sub>2</sub></span><span style="font-size: 12pt">，&hellip;，</span><span style="font-size: 12pt">y<sub>m-1</sub></span><span style="font-size: 12pt">。</span></div>\r\n<div><b>&nbsp;</b></div>\r\n<div><b><span style="font-size: 14pt">输出数据</span></b><b><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">输出一整数，为切割巧克力的最小代价。</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例输入</span></b></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">6 4</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">2</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">3</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">4</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">4</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">1</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">2</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例输出</span></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">42</span></div>\r\n<div>&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">测试数据范围</span></b></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">30%</span><span style="font-size: 12pt">的数据，</span><span style="font-size: 12pt">n&lt;=100,m&lt;=100</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据，</span><span style="font-size: 12pt">n&lt;=10000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m&lt;=10000</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:34'),
(414, '逆序对数列', 'permut', '<p><b><span style="font-size: 14pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 试题描述</span></b></p>\r\n<p>&nbsp;</p>\r\n<div style="text-indent: 21.75pt"><span style="font-size: 12pt">对于一个数列</span><span style="font-size: 12pt">{a<sub>i</sub>}</span><span style="font-size: 12pt">，如果有</span><span style="font-size: 12pt">i&lt;j</span><span style="font-size: 12pt">且</span><span style="font-size: 12pt">a<sub>i</sub>&gt;a<sub>j</sub></span><span style="font-size: 12pt">，那么我们称</span><span style="font-size: 12pt">a<sub>i</sub></span><span style="font-size: 12pt">与</span><span style="font-size: 12pt">a<sub>j</sub></span><span style="font-size: 12pt">为一对逆序对数。若对于任意一个由</span><span style="font-size: 12pt">1~n</span><span style="font-size: 12pt">自然数组成的数列，可以很容易求出有多少个逆序对数。那么逆序对数为</span><span style="font-size: 12pt">k</span><span style="font-size: 12pt">的这样自然数数列到底有多少个？</span></div>\r\n<div style="text-indent: 21.75pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">输入数据</span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">第一行为两个整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">k</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">输出数据</span></b><b><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">写入一个整数，表示符合条件的数列个数，</span><span style="font-size: 12pt">由于这个数可能很大，你只需输出该数对</span><span style="font-size: 12pt">10000</span><span style="font-size: 12pt">求余数后的结果。</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例输入</span></b></div>\r\n<div><b><span style="font-size: 12pt">&nbsp;&nbsp;</span></b><span style="font-size: 12pt">4 1</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例输出</span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">3</span></div>\r\n<div><b><span style="font-size: 14pt">样例说明：</span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">下列</span><span style="font-size: 12pt">3</span><span style="font-size: 12pt">个数列逆序对数都为</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">；分别是</span><span style="font-size: 12pt">1 2 4 3 </span><span style="font-size: 12pt">；</span><span style="font-size: 12pt">1 3 2 4 </span><span style="font-size: 12pt">；</span><span style="font-size: 12pt">2 1 3 4</span><span style="font-size: 12pt">；</span></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">测试数据范围</span></b></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">30%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">&nbsp;n&lt;=12</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">&nbsp;n&lt;=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">k&lt;=1000</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:34');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(415, '旅行（HAOI）', 'toura', '<div align="center">\r\n<div style="text-align: left">&nbsp;</div>\r\n</div>\r\n<div style="text-align: left"><b><span style="font-size: 14pt">试题描述</span></b></div>\r\n<div style="text-indent: 24pt; text-align: left" align="left"><span style="font-size: 12pt">小明住在城市</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">，而他的朋友小芳住在城市</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">。最近小明收到小芳的邀请，准备于近期赴约。可是由于最近下了很多暴雨，很多道路都被淹没。从城市</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">出发到城市</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">之间有很多小城镇，并且两个小城镇之间有一条直接道路相连。小明经过对近期天气和地形的科学分析，绘出了每条道路能顺利通行的概率。</span></div>\r\n<div style="text-indent: 24pt; text-align: left" align="left"><span style="font-size: 12pt">为了能顺利到达目的地，请帮助小明找出一条最稳妥的路线，也就是从城市</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">出发到达城市</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">的路线中能顺利通行的最大概率。</span></div>\r\n<div align="left"><span style="font-size: 12pt">　</span></div>\r\n<div><b><span style="font-size: 14pt">输入数据</span></b></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left"><span style="font-size: 12pt">文件第一行包含两个整数</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">和</span><span style="font-size: 12pt">m</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">为城市数，</span><span style="font-size: 12pt">m</span><span style="font-size: 12pt">为道路条数。</span></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left"><span style="font-size: 12pt">接下来</span><span style="font-size: 12pt">m</span><span style="font-size: 12pt">行，每行包含三个整数</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">b</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">p ( 1&lt;=p&lt;=100 )</span><span style="font-size: 12pt">，表示小城镇</span><span style="font-size: 12pt">a</span><span style="font-size: 12pt">与小城镇</span><span style="font-size: 12pt">b</span><span style="font-size: 12pt">间有一条道路，顺利通过这条道路的概率为</span><span style="font-size: 12pt">p%</span><span style="font-size: 12pt">。</span></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">输出数据</span></b><b><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></b></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left"><span style="font-size: 12pt">一个实数</span><span style="font-size: 12pt">P</span><span style="font-size: 12pt">，为到达城市</span><span style="font-size: 12pt">n</span><span style="font-size: 12pt">的最大概率，</span><span style="font-size: 12pt">P</span><span style="font-size: 12pt">精确到小数点后</span><span style="font-size: 12pt">6</span><span style="font-size: 12pt">位。</span></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left"><span style="font-size: 12pt"><img height="202" alt="" width="179" src="/images/toura1(1).bmp" /></span></div>\r\n<div style="text-indent: 24.75pt; text-align: left" align="left">&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例输入</span></b></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">5 7</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">5 2 100</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">3 5 80</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">2 3 70</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">2 1 50</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">3 4 90</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">4 1 85 </span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt; text-align: left" align="left"><span style="font-size: 12pt">3 1 70</span></div>\r\n<div><b><span style="font-size: 14pt">样例输出</span></b></div>\r\n<div style="text-indent: 21pt"><span style="font-size: 12pt">61.200000</span></div>\r\n<div>&nbsp;</div>\r\n<div><b><span style="font-size: 14pt">样例说明：选择路线为</span></b><b><span style="font-size: 14pt">1-4-3</span></b><b><span style="font-size: 14pt">-5</span></b><b><span style="font-size: 14pt">，概率为</span></b><b><span style="font-size: 14pt">85%*90%*80%=61.2%</span></b></div>\r\n<div><b><span style="font-size: 14pt">测试数据范围</span></b></div>\r\n<div style="text-indent: 24pt; text-align: left" align="left"><span style="font-size: 12pt">30%</span><span style="font-size: 12pt">的数据，</span><span style="font-size: 12pt">n&lt;=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m&lt;=3000</span></div>\r\n<div style="text-indent: 24pt; text-align: left" align="left"><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据，</span><span style="font-size: 12pt">n&lt;=10000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m&lt;=30000</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:34'),
(416, '奇特的图案', 't3', '<p>【<span style="color: #00ff00">问题描述</span>】</p>\r\n<p>&nbsp;&nbsp;&nbsp;X城将举办一次民俗文化节，其活动的标志是设在主会场的奇特图案。该图案是由若干个三角形组成的，且每个三角形都至少有一条边与其它三角形共边。该图案共有N个顶点，每个顶点上有一个彩灯，白天各顶点上彩灯的状态是随机的，有的灯亮，有的灯不亮，但一到晚上20：00，所有顶点上的彩灯必须瞬间全亮。</p>\r\n<p>&nbsp; 控制中心设有N个控制开关，第1个开关可以改变第1个顶点以及与它相邻的顶点彩灯的状态(即：亮-&gt;不亮， 不亮-&gt;亮)。请你为控制中心设计一个按下开关个数最少的方案，它能根据白天各个顶点上彩灯的状态，瞬间使所有顶点上的彩灯都亮。</p>\r\n<p>【输入文件】</p>\r\n<p>t3.in</p>\r\n<p>第1行： N (顶点个数 4&lt;=N&lt;=1000 )<br />\r\n第2~N+I行： Ki J1 J2&hellip; (第1个顶点的状态及相邻的顶点编号)<br />\r\n&nbsp;</p>\r\n<p>【输出文件】</p>\r\n<p>t3.out</p>\r\n<p>M(按下开关的个数)</p>\r\n<p>【约定】</p>\r\n<p>(1) Ki=1表示第I个顶点上彩灯亮，Ki=0表示第I个顶点上彩灯不亮 i=1,2&hellip;,N<br />\r\n&nbsp;</p>\r\n<p>【样例输入】</p>\r\n<p>t3.in</p>\r\n<p>5<br />\r\n1 3 4 5<br />\r\n0 3 4<br />\r\n0 1 2 4<br />\r\n1 1 2 3 5<br />\r\n0 1 4</p>\r\n<p>&nbsp;</p>\r\n<p>【样例输出】</p>\r\n<p>t3.out</p>\r\n<p>2</p>\r\n<p>注：按下开关3和5，可以使所有的灯都亮。</p>\r\n<p>　</p>', 1000, 128, 8, 0, '2012-04-05 16:23:35'),
(417, '毛毛虫', 'worma', '<p><strong>试题描述 </strong></p>\r\n<p>对于一棵树，我们可以将某条链和与该链相连的边抽出来，看上去就象成一个毛毛虫，点数越多，毛毛虫就越大。例如下图左边的树（图 1 ）抽出一部分就变成了右边的一个毛毛虫了（图 2 ）。</p>\r\n<p align="center"><img height="178" width="286" alt="" src="/images/worm.jpg" /></p>\r\n<p><strong>输入数据 </strong></p>\r\n<p>在文本文件 worm.in 中第一行两个整数 N ， M ，分别表示树中结点个数和树的边数。</p>\r\n<p>接下来 M 行，每行两个整数 a, b 表示点 a 和点 b 有边连接（ a, b &le; N ）。你可以假定没有一对相同的 (a, b) 会出现一次以上。</p>\r\n<p><strong>输出数据 </strong></p>\r\n<p>在文本文件 worm.out 中写入一个整数 , 表示最大的毛毛虫的大小。</p>\r\n<p><strong>样例输入 </strong></p>\r\n<p>13 12<br />\r\n1 2<br />\r\n1 5<br />\r\n1 6<br />\r\n3 2<br />\r\n4 2<br />\r\n5 7<br />\r\n5 8<br />\r\n7 9<br />\r\n7 10<br />\r\n7 11<br />\r\n8 12<br />\r\n8 13</p>\r\n<p><strong>样例输出 </strong></p>\r\n<p>11</p>\r\n<p><strong>测试数据范围 </strong></p>\r\n<p>40% 的数据， N &le; 50000</p>\r\n<p>100% 的数据， N &le; 300000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:35'),
(418, '求回文串', 'string!', '<p><strong>试题描述 </strong></p>\r\n<p>所谓回文串，就是对于给定的字符串，正着读和反着读都一样，比如 ABCBA 就是一个回文串， ABCAB 则不是。我们的目标是对于任意输入的字符串，不断将第 i 个字符和第 i+1 个字符交换，使得该串最终变为回文串。求最少交换次数。</p>\r\n<p><strong>数据输入 </strong></p>\r\n<p>在文本文件 string!.in 中包含一个由大写字母字母组成的字符串。</p>\r\n<p><strong>数据输出 </strong></p>\r\n<p>在文本文件 string!.out 中写入一个整数。若能经过有限次操作能将原串变为回文串，则输出最少操作次数；否则输出 -1 。</p>\r\n<p><strong>样例输入 </strong></p>\r\n<p>SHLLZSHZS</p>\r\n<p><strong>样例输出 </strong></p>\r\n<p>4</p>\r\n<p><strong>样例说明 </strong></p>\r\n<p>1 ．交换 L 和 Z 变成 SHL ZL SHZS</p>\r\n<p>2 ．交换 L 和 Z 变成 SH ZL LSHZS</p>\r\n<p>3 ．交换 L 和 S 变成 SHZL SL HZS</p>\r\n<p>4 ．交换 H 和 Z 变成 SHZLSL ZH S</p>\r\n<p>&nbsp;</p>\r\n<p><strong>测试数据范围 </strong></p>\r\n<p>40% 的数据， N &le; 50000</p>\r\n<p>100% 的数据， N &le; 10^6</p>', 3000, 128, 10, 0, '2012-04-05 16:23:35'),
(419, '区域发展', 'region', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: center" align="center"><span style="font-size: small"><span style="font-family: 宋体">问题描述</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体">联合国区域发展委员会</span><span lang="EN-US"><font face="Calibri">(The United Nations Regional Development Agencv</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">UNRDA)</font></span><span style="font-family: 宋体">有一个良好的组织结构。它任用了</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">名委员，每名委员都属于</span><span lang="EN-US"><font face="Calibri">R</font></span><span style="font-family: 宋体">个地区中的一个。委员们按照其资历被编号为</span><span lang="EN-US"><font face="Calibri">1</font></span><span style="font-family: 宋体">到</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">1</font></span><span style="font-family: 宋体">号委员是主席，资历最高。委员所属地区被编号为</span><span lang="EN-US"><font face="Calibri">l</font></span><span style="font-family: 宋体">到</span><span lang="EN-US"><font face="Calibri">R</font></span><span style="font-family: 宋体">。除了主席之外所有委员都有一个直接导师。任何直接导师的资历都比他所指导的委员的资历要高。</span><font face="Calibri"> </font></span><span style="font-size: 10pt"><font face="Calibri"><span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体">我们说委员</span><span lang="EN-US"><font face="Calibri">A</font></span><span style="font-family: 宋体">是委员日的导师当且仅当</span><span lang="EN-US"><font face="Calibri">A</font></span><span style="font-family: 宋体">是</span><span lang="EN-US"><font face="Calibri">B</font></span><span style="font-family: 宋体">的直接导师或者</span><span lang="EN-US"><font face="Calibri">A</font></span><span style="font-family: 宋体">是</span><span lang="EN-US"><font face="Calibri">B</font></span><span style="font-family: 宋体">的直接导师的导师。显然，主席是所有其他委员的导师，没有任何两名委员互为导师。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体">现在，联合国区域发展委员会想要建立一个计算机系统：在给定委员之间的直接导师关系的情况下，该系统可以自动地回答下述形式的问题：给定两个地区</span><span lang="EN-US"><font face="Calibri">r1</font></span><span style="font-family: 宋体">和</span><span lang="EN-US"><font face="Calibri">r2</font></span><span style="font-family: 宋体">，要求系统回答委员会中有多少对委员</span><span lang="EN-US"><font face="Calibri">e1</font></span><span style="font-family: 宋体">和</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">，满足</span><span lang="EN-US"><font face="Calibri">e</font></span><span style="font-family: 宋体">，属于</span><span lang="EN-US"><font face="Calibri">r1</font></span><span style="font-family: 宋体">而</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">属于</span><span lang="EN-US"><font face="Calibri">r2</font></span><span style="font-family: 宋体">，并且</span><span lang="EN-US"><font face="Calibri">e1</font></span><span style="font-family: 宋体">是</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">的导师。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">任务</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">写一个程序，给定所有委员所属的地区和委员之间的直接导师关系，逐一回答上述的查询问题。</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">数据规模</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">200</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">委员的数目</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">R</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">25</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">地区的数目</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">Q</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">200</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">你的程序需要回答的查询的数目</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">Hk</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">R<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">委员</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">所属的地区</span><span lang="EN-US"><font face="Calibri">(1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">N)<span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">Sk</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">k<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">委员</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">的直接导师</span><span lang="EN-US"><font face="Calibri">(2</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">N)<span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span>1</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">r1</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">r2</font></span><span style="font-family: 宋体">&le;</span><span lang="EN-US"><font face="Calibri">R<span>&nbsp;&nbsp;&nbsp; </span></font></span><span style="font-family: 宋体">查询所给出的地区</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">输入</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">你的程序需要从标准输入读入下列数据：</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">第一行依次包含整数</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">R</font></span><span style="font-family: 宋体">和</span><span lang="EN-US"><font face="Calibri">Q</font></span><span style="font-family: 宋体">，分别以一个空格隔开。</span><span lang="EN-US"><font face="Calibri"><span>&nbsp;&nbsp;&nbsp; </span></font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">接下来</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">行按照资历的顺序给出了</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">个委员的描述信息。这</span><span lang="EN-US"><font face="Calibri">N</font></span><span style="font-family: 宋体">行中的第</span><span lang="EN-US"><font face="Calibri">k^th</font></span><span style="font-family: 宋体">行描述了编号为</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">的委员。第一行</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体">描述主席的一行</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体">包含一个整数：主席所属的地区</span><span lang="EN-US"><font face="Calibri">H1</font></span><span style="font-family: 宋体">；其余的</span><span lang="EN-US"><font face="Calibri">N-1</font></span><span style="font-family: 宋体">行每行包含两个整数</span><span lang="EN-US"><font face="Calibri">(</font></span><span style="font-family: 宋体">以一个空格隔开</span><span lang="EN-US"><font face="Calibri">)</font></span><span style="font-family: 宋体">分别表示委员</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">的直接导师</span><span lang="EN-US"><font face="Calibri">Sk</font></span><span style="font-family: 宋体">和委员</span><span lang="EN-US"><font face="Calibri">k</font></span><span style="font-family: 宋体">所属的地区</span><span lang="EN-US"><font face="Calibri">Hk</font></span><span style="font-family: 宋体">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small">&nbsp;</span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">每个查询是标准输入的一行，包含两个不同的整数，以一个空格隔开：表示地区</span><span lang="EN-US"><font face="Calibri">r1</font></span><span style="font-family: 宋体">和</span><span lang="EN-US"><font face="Calibri">r2</font></span><span style="font-family: 宋体">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">对查询的回答是标准输出的一行，包含一个整数，表示在联合国区域发展委员会中有多少对委员</span><span lang="EN-US"><font face="Calibri">e1</font></span><span style="font-family: 宋体">和</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">满足下述条件，即</span><span lang="EN-US"><font face="Calibri">e1</font></span><span style="font-family: 宋体">属于地区</span><span lang="EN-US"><font face="Calibri">r1</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">属于地区</span><span lang="EN-US"><font face="Calibri">r2</font></span><span style="font-family: 宋体">，并且</span><span lang="EN-US"><font face="Calibri">e1</font></span><span style="font-family: 宋体">是</span><span lang="EN-US"><font face="Calibri">e2</font></span><span style="font-family: 宋体">的导师。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">注意：所有给出的查询语句的正确答案都小于</span><span lang="EN-US"><font face="Calibri">1</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000</font></span><span style="font-family: 宋体">，</span><span lang="EN-US"><font face="Calibri">000</font></span><span style="font-family: 宋体">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;</font></span></span><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">评分说明</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">有</span><span lang="EN-US"><font face="Calibri">30</font></span><span style="font-family: 宋体">分的评测数据，</span><span lang="EN-US"><font face="Calibri">R</font></span><span style="font-family: 宋体">不超过</span><span lang="EN-US"><font face="Calibri">500</font></span><span style="font-family: 宋体">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">有</span><span lang="EN-US"><font face="Calibri">55</font></span><span style="font-family: 宋体">分的评测数据，没有任何地区的委员数目超过</span><span lang="EN-US"><font face="Calibri">500</font></span><span style="font-family: 宋体">。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp;&nbsp;&nbsp; </font></span></span><span style="font-family: 宋体">有</span><span lang="EN-US"><font face="Calibri">15</font></span><span style="font-family: 宋体">分的评测数据，同时满足上述两个条件。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体">有</span><span lang="EN-US"><font face="Calibri">70</font></span><span style="font-family: 宋体">分的评测数据，满足上述两个条件中的至少一个。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体">样例</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体">输入样例</span><font face="Calibri"> </font></span><span style="font-size: 10pt"><font face="Calibri"><span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">6 3 4</font></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US">1</span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">1 2</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">1 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">2 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">2 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><font face="Calibri"><st1:chmetcnv tcsc="0" numbertype="1" negative="False" hasspace="True" sourcevalue="5" unitname="l" w:st="on"><span lang="EN-US">5 1</span></st1:chmetcnv></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><font face="Calibri"><st1:chmetcnv tcsc="0" numbertype="1" negative="False" hasspace="True" sourcevalue="5" unitname="l" w:st="on"></st1:chmetcnv></font></span><span style="font-size: small"><span lang="EN-US"><font face="Calibri">1 2</font></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">1&nbsp;3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">2 3</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">3 1</font></span></span><span lang="EN-US" style="font-size: 10pt"><font face="Calibri"><o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span style="font-family: 宋体">输出样例</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri"><span>1&nbsp; </span></font></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">3<span>&nbsp;</span></font></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 19.5pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><font face="Calibri">2<span>&nbsp; </span></font></span></span></p>\r\n<p class="a" style="margin: 0cm 0cm 0pt 43.5pt; text-indent: -24pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">1</font><span style="font: 7pt ''Times New Roman''">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体">关于测试</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left" align="left"><span style="font-size: small"><span lang="EN-US"><span><font face="Calibri">&nbsp; </font></span></span><span style="font-family: 宋体">如果你想在比赛系统的测试界面测试你的程序，你提供的输入文件必须包含与上述样例格式相同的输入数据和所有查询语句。</span></span><span lang="EN-US" style="font-size: 10pt"><o:p></o:p></span></p>\r\n<p><span style="font-size: small">&nbsp;</span></p>', 8000, 128, 10, 0, '2012-04-05 16:23:35'),
(420, '晨跑', 'run', '<p><span style="font-size: larger"><span style="font-family: Arial">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Elaxia最近迷恋上了空手道，他为自己设定了一套健身计划，比如俯卧撑、仰卧起坐等等，不过到目前为止，他坚持下来的只有晨跑。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 现在给出一张学校附近的地图，这张地图中包含N个十字路口和M条街道，Elaxia只能从一个十字路口跑向另外一个十字路口，街道之间只在十字路口处相交。Elaxia每天从寝室出发跑到学校，保证寝室编号为1，学校编号为N。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Elaxia的晨跑计划是按周期（包含若干天）进行的，由于他不喜欢走重复的路线，所以在一个周期内，每天的晨跑路线都不会相交（在十字路口处），寝室和学校不算十字路口。Elaxia耐力不太好，他希望在一个周期内跑的路程尽量短，但是又希望训练周期包含的天数尽量长。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 除了练空手道，Elaxia其他时间都花在了学习和找MM上面，所有他想请你帮忙为他设计一套满足他要求的晨跑计划。 </span></span></p>\r\n<p><span style="font-size: larger"><span style="font-family: Arial"><br />\r\n输入<br />\r\n第一行2个数n,m。表示十字路口数和街道数。<br />\r\n接下来m行，每行3个数a,b,c,表示十字路口a和十字路口b之间有条长度为c的街道（单向）。</span></span></p>\r\n<p><span style="font-size: larger"><span style="font-family: Arial"><br />\r\n输出<br />\r\n2个数，第一个数为最长周期的天数，第二个数为满足最长天数的条件下最短的路程长度。</span></span></p>\r\n<p><span style="font-size: larger"><span style="font-family: Arial"><br />\r\n输入样例<br />\r\n7 10<br />\r\n1 2 1<br />\r\n1 3 1<br />\r\n2 4 1<br />\r\n3 4 1<br />\r\n4 5 1<br />\r\n4 6 1<br />\r\n2 5 5<br />\r\n3 6 6<br />\r\n5 7 1<br />\r\n6 7 1</span></span></p>\r\n<p><span style="font-size: larger"><span style="font-family: Arial"><br />\r\n输出样例<br />\r\n2 11<br type="_moz" />\r\n</span></span></p>\r\n<p>N&lt;=200&nbsp; M&lt;=20000</p>', 2000, 128, 10, 0, '2012-04-05 16:23:35'),
(421, 'HH的项链', 'diff', '<p>问题描述：<br />\r\nHH有一串由各种漂亮的贝壳组成的项链。HH相信不同的贝壳会带来好运，所以每次散步<br />\r\n完后，他都会随意取出一段贝壳，思考它们所表达的含义。HH不断地收集新的贝壳，因此，<br />\r\n他的项链变得越来越长。有一天，他突然提出了一个问题：某一段贝壳中，包含了多少种不同<br />\r\n的贝壳？这个问题很难回答。。。因为项链实在是太长了。于是，他只好求助睿智的你，来解<br />\r\n决这个问题。<br />\r\n输入格式：<br />\r\n第一行：一个整数N，表示项链的长度。<br />\r\n第二行：N个整数，表示依次表示项链中贝壳的编号（编号为0到1000000之间的整数）。<br />\r\n第三行：一个整数M，表示HH询问的个数。<br />\r\n接下来M行：每行两个整数，L和R（1 &le; L &le; R &le; N），表示询问的区间。<br />\r\n输出格式：<br />\r\nM行，每行一个整数，依次表示询问对应的答案。<br />\r\n样例输入：<br />\r\n6<br />\r\n1 2 3 4 3 5<br />\r\n3<br />\r\n1 2<br />\r\n3 5<br />\r\n2 6<br />\r\n样例输出：<br />\r\n2<br />\r\n2<br />\r\n4<br />\r\n数据范围：<br />\r\n对于20%的数据，N &le; 100，M &le; 1000；<br />\r\n对于40%的数据，N &le; 3000，M &le; 200000；<br />\r\n对于100%的数据，N &le; 50000，M &le; 200000。</p>', 1000, 256, 10, 0, '2012-04-05 16:23:35'),
(422, 'Bill的挑战', 'set', '<p>问题描述：<br />\r\nSheng bill不仅有惊人的心算能力，还可以轻松地完成各种统计。在昨天的比赛中，你凭借<br />\r\n优秀的程序与他打成了平局，这导致Sheng bill极度的不满。于是他再次挑战你。这次你可不<br />\r\n能输！<br />\r\n这次，比赛规则是这样的：<br />\r\n给N个长度相同的字符串（由小写英文字母和&prime;<br />\r\n?&prime;<br />\r\n组成），S1, S2, . . . , SN，求与这N个串中<br />\r\n的刚好K个串匹配的字符串T的个数（答案模1000003）。<br />\r\n若字符串Sx（1 &le; x &le; N）和T匹配，满足以下条件：<br />\r\n1. Sx.length = T.length。<br />\r\n2. 对于任意的1 &le; i &le; Sx.length，满足Sx[i] =&prime;<br />\r\n?&prime;<br />\r\n或者Sx[i] = T[i]。<br />\r\n其中T只包含小写英文字母。<br />\r\n输入格式：<br />\r\n本题包含多组数据。<br />\r\n第一行：一个整数T，表示数据的个数。<br />\r\n对于每组数据：<br />\r\n第一行：两个整数，N和K（含义如题目表述）。<br />\r\n接下来N行：每行一个字符串。<br />\r\n输出格式：<br />\r\n对于每组数据，输出方案数目（共T行）。<br />\r\n样例输入：<br />\r\n1<br />\r\n2 1<br />\r\na?<br />\r\n?b<br />\r\n样例输出：<br />\r\n50<br />\r\n数据范围：<br />\r\n对于30%的数据，T &le; 5，N &le; 5，字符串长度&le; 20；<br />\r\n对于70%的数据，T &le; 5，N &le; 13，字符串长度&le; 30；<br />\r\n对于100%的数据，T &le; 5，N &le; 15，字符串长度&le; 50。</p>', 1000, 256, 10, 0, '2012-04-05 16:23:35'),
(423, 'Elaxia的路线', 'traval!', '<p>问题描述：<br />\r\n最近，Elaxia和w**的关系特别好，他们很想整天在一起，但是大学的学习太紧张了，他们<br />\r\n必须合理地安排两个人在一起的时间。Elaxia和w**每天都要奔波于宿舍和实验室之间，他们<br />\r\n希望在节约时间的前提下，一起走的时间尽可能的长。<br />\r\n现在已知的是Elaxia和w**所在的宿舍和实验室的编号以及学校的地图：地图上有N个路<br />\r\n口，M条路，经过每条路都需要一定的时间。<br />\r\n具体地说，就是要求无向图中，两对点间最短路的最长公共路径。<br />\r\n输入格式：<br />\r\n第一行：两个整数N和M（含义如题目描述）。<br />\r\n第二行：四个整数x1、y1、x2、y2（1 &le; x1 &le; N，1 &le; y1 &le; N，1 &le; x2 &le; N，1 &le;<br />\r\ny2 &le; N），分别表示Elaxia的宿舍和实验室及w**的宿舍和实验室的标号（两对点分别<br />\r\n为x1, y1和x2, y2）。<br />\r\n接下来M行：每行三个整数，u、v、l（1 &le; u &le; N，1 &le; v &le; N，1 &le; l &le; 10000），表<br />\r\n示u和v之间有一条路，经过这条路所需要的时间为l。<br />\r\n输出格式：<br />\r\n一行，一个整数，表示每天两人在一起的时间（即最长公共路径的长度）。<br />\r\n样例输入：<br />\r\n9 10<br />\r\n1 6 7 8<br />\r\n1 2 1<br />\r\n2 5 2<br />\r\n2 3 3<br />\r\n3 4 2<br />\r\n3 9 5<br />\r\n4 5 3<br />\r\n4 6 4<br />\r\n4 7 2<br />\r\n5 8 1<br />\r\n7 9 1<br />\r\n样例输出：<br />\r\n3<br />\r\n数据范围：<br />\r\n对于30%的数据，N &le; 100；<br />\r\n对于60%的数据，N &le; 1000；<br />\r\n对于100%的数据，N &le; 1500，输入数据保证没有重边和自环。</p>', 1000, 256, 10, 0, '2012-04-05 16:23:35'),
(424, '扭曲的能量', 'twist', '<p><span style="font-size: medium">问题描述 <br />\r\n泰坦在创造艾泽拉斯的时候，留下了一个充满魔法能量的泉水，也就是后世所称的永恒之井。泉水支持着世界上的生命，滋润着世界的骨骼，各种生命开始繁荣。一个原始的精灵部落谨慎地来到了永恒之井旁边，被湖水的魔力吸引，并在湖边建造了自己原始的家。随着时间的流逝，永恒之井开始影响这个部落，使他们更强壮，更有智慧，并且获得了永生。然而，精灵们对泉水魔法力量的滥用，吸引了诸世的毁灭者&mdash;&mdash;萨格拉斯。萨格拉斯聚集了他庞大的燃烧军团，信步挥师前往艾泽拉斯。军团里充满了来自宇宙各个角落的尖叫着的恶魔，他们渴望征服。萨格拉斯的大将破坏者阿克蒙德和毁灭者玛诺洛斯，带领地狱恶魔对艾泽拉斯世界发起进攻。在森林守护者半身塞纳留斯的组织下，精灵们最终以牺牲永恒之井的代价，毁灭了世界的入口，击退了萨格拉斯和他的燃烧军团的进攻。 <br />\r\n&nbsp;<br />\r\n一切平静以后，暗夜精灵们开始皈依德鲁伊的教义。然而昔日的精灵贵族们还在研习者他们强大，却有着扭曲的能量的上古魔法。大德鲁伊玛法里奥发现了这一个可怕的事实，决定借住塞纳留斯的力量，与塞纳里奥议会的德鲁伊们对上古魔法进行研究和改造，使强大却不稳定的上古魔法变得与自然和谐起来。 <br />\r\n&nbsp;<br />\r\n玛法里奥把一个上古魔法抽象为一个长度为N的序列，序列的每一位是一个正整数，代表了这一位的能量，设序列第i位的值为A[i]。魔法的不和谐程度，需要用能量扭曲的数目来衡量。如果有i&lt;j，且A[i]&gt;A[j]，则称第i位能量和第j位能令产生了一个能量扭曲。整个魔法的不和谐程度，就是其中能量扭曲的个数。塞纳里奥议会对一个上古魔法进行改造时，需要多次修改某一位能量的值，并随时掌握当前魔法的不和谐程度。你的任务是设计一个程序，满足这一要求。 <br />\r\n</span></p>\r\n<p><span style="font-size: medium">输入格式 <br />\r\n第1行。两个整数N和Q，分别表示上古魔法序列的长度，对魔法修改的次数。 <br />\r\n第2行，N个整数，第i个为A[i]（从1计数），表示原始的魔法能量序列。 <br />\r\n第3行至第Q＋2行，每行两个整数k和v，表示一个修改，将第k为的能量值修改为v。 </span></p>\r\n<p><span style="font-size: medium">输出格式 <br />\r\nQ行，第i行为一个整数，为第i次修改以后，当前魔法的不和谐程度。 <br />\r\n&nbsp;<br />\r\n样例输入 <br />\r\n5 6 <br />\r\n5 4 3 2 1 <br />\r\n1 8 <br />\r\n2 1 <br />\r\n5 3 <br />\r\n4 4 <br />\r\n3 1 <br />\r\n1 2 <br />\r\n样例输出 <br />\r\n10 <br />\r\n7 <br />\r\n5 <br />\r\n5 <br />\r\n5 <br />\r\n3 </span></p>\r\n<p><span style="font-size: medium"><br />\r\n数据规模 <br />\r\n10%的数据满足N&lt;=500，Q&lt;=500; <br />\r\n30%的数据满足N&lt;=10000，Q&lt;=10000; <br />\r\n100%的数据满足N&lt;=40000，Q&lt;=50000，1&lt;=A[i]&lt;=100000000。 <br />\r\n&nbsp; </span></p>\r\n<p>&nbsp;</p>\r\n<p><span style="font-size: medium">by &nbsp;&nbsp;&nbsp;&nbsp; BYVoid </span></p>', 6000, 128, 10, 0, '2012-04-05 16:23:35');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(425, '卡赞群岛', 'kezan', '<p><span style="font-size: medium;">问题描述 <br />\r\n当联盟与部落的注意力还停留在诺森德之时，一股古老的邪恶力量正在土元素界&mdash;&mdash;地深之源中沉睡。藏身在与世隔绝的圣殿里，堕落的守护巨龙&mdash;&mdash;死亡之翼静静等着，等待从最后一次与艾泽拉斯交战时所受的伤势中复原；他以对地表上弱势生物的仇恨滋养自己；静候能用复活之火重新吞噬世界的时机来临。终于，&ldquo;毁灭者&rdquo;死亡之翼回到了艾泽拉斯，他从地深之源破巢而出的那一刻，整个世界被割裂，在大陆上留下了一道无法抹灭的伤痕。 <br />\r\n&nbsp;<br />\r\n原本安静的卡赞群岛，如今也被地震和洪水撕裂，地精们为了自己的生存，不得不结成商业联盟&mdash;&mdash;只有极少数地精还保持中立。地精的商业联盟为了各自的利益，互相设置了很多贸易壁垒，群岛之间的昂贵得匪夷所思的船票就是一个典型的例子。卡赞群岛由很多岛屿组成，岛屿之间有很多航线。依靠垄断海上贸易，各个商业联盟都控制了一些岛屿。如果两个岛屿之间有不止一条路径可以到达，那么这两个岛屿一定是被一个商业联盟控制的，否则这两个岛屿属于两个不同的商业联盟的控制之下。 <br />\r\n&nbsp;<br />\r\n菲利克斯作为一个中立者，靠在各个商业联盟之间投机获取利润，因此要经常在岛屿之间旅行。菲利克斯已经骗取了所有的商业联盟的信任，所以在一个商业联盟内部的岛屿间旅行全部是免费的，只有乘坐跨两个商业联盟控制的岛屿的航线才用付出费用。菲利克斯从任何一个岛屿开始，前往别的岛屿都会采用费用最小的路线。尽管如此，为了估计支出，菲利克斯想知道从每个岛屿出发，到其他岛屿的最大费用。 <br />\r\n</span></p>\r\n<p><span style="font-size: medium;"> </span></p>\r\n<p><span style="font-size: medium;">输入格式 <br />\r\n第1行，两个整数N,M，表示有N个岛屿，M条航线。 <br />\r\n接下来M行，每行三个整数a,b,c，表示岛屿a,b(1&lt;=a,b&lt;=N)之间有一条费用为c的航线。 <br />\r\n</span></p>\r\n<p><span style="font-size: medium;">输出格式 <br />\r\n共N行，第i行为从岛屿i出发到达别的岛屿费用的最大值。 <br />\r\n&nbsp;<br />\r\n样例输入 <br />\r\n6 6 <br />\r\n1 4 2 <br />\r\n1 2 6 <br />\r\n2 5 3 <br />\r\n2 3 7 <br />\r\n6 3 4 <br />\r\n3 1 8 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n样例输出 <br />\r\n4 <br />\r\n4 <br />\r\n4 <br />\r\n6 <br />\r\n7 <br />\r\n7 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n样例说明 <br />\r\n有四个商业联盟，控制的岛屿分别为{1,2,3},{4},{5},{6}。从岛屿1出发到达岛屿6，乘坐(1,3)(3,6)两个航线费用最大，(1,3)为免费航线，(3,6)的费用为4，所以从1出发的最大费用为4。 <br />\r\n</span></p>\r\n<p><span style="font-size: medium;">数据规模 <br />\r\n30%的数据满足1&lt;=N&lt;=1000，1&lt;=M&lt;=1000; <br />\r\n100%的数据满足1&lt;=N&lt;=20000,1&lt;=M&lt;=200000。  </span></p>\r\n<p><span style="font-size: medium;"> </span></p>\r\n<p><span style="font-size: medium;">by &nbsp; BYVoid </span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:36'),
(426, '血帆海盗', 'bloodsail', '<p><span style="font-size: medium;">问题描述 <br />\r\n随着资本的扩大，藏宝海湾贸易亲王在卡利姆多和东部王国大陆各建立了N/2 个港口。大灾变发生以后，这些港口之间失去了联系，相继脱离了藏宝海湾贸易亲王的管辖，各自为政。利益的驱动使得每个港口都想和对岸大陆的另一个港口建立贸易合作关系，由于地理位置因素，只有存在直接到达的航线的两个港口才能建立合作，而且每个港口只与对岸一个港口建立合作，因此并不是所有的港口都能找到合作伙伴。 <br />\r\n&nbsp;<br />\r\n血帆海盗得知这一消息以后，决定对其中一条航线进行干扰性的掠夺。经过分析，血帆海盗计算出最多能有W 对港口合作。如果两个港口之间只有一条航线，而且这条航线恰好是血帆海盗要掠夺的航线，这两个港口将不能建立合作关系。血帆海盗指挥官菲尔拉伦想知道他们有几种选择，可以让地精们无法建立W 对港口。 <br />\r\n</span></p>\r\n<p><span style="font-size: medium;"> </span></p>\r\n<p><span style="font-size: medium;">输入格式<br />\r\n第1行，两个整数N,M，表示一共的港口个数和航线条数。 <br />\r\n接下来M行，每行两个整数A,B，表示卡利姆多的港口A与东部王国的港口B之间有一条航线直接连接，其中1&lt;=A&lt;=N/2，N/2+1&lt;=B&lt;=N。  </span></p>\r\n<p><span style="font-size: medium;">输出格式<br />\r\n一个整数，表示血帆海盗可以选择掠夺的航线条数。 <br />\r\n&nbsp;<br />\r\n解释：如果掠夺一条航线以后，地精依然可以建立起最多的W个合作关系（可以有多种），<br />\r\n那么这条航线是不值得掠夺的，否则就是掠夺方案之一。 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n样例输入 <br />\r\n8 5 <br />\r\n1 5 <br />\r\n1 6 <br />\r\n2 7 <br />\r\n3 7 <br />\r\n4 8 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n样例输出 <br />\r\n1 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n样例说明 <br />\r\n地精做多能建立起合作关系的数量为3，掠夺(4,8)这条航线后，最多能建立的合作关系的<br />\r\n数量减少为2。 </span></p>\r\n<p><span style="font-size: medium;"><br />\r\n数据规模 <br />\r\n40%的数据满足2&lt;=N&lt;=200，1&lt;=M&lt;=1000 <br />\r\n100%的数据满足2&lt;=N&lt;=100000，1&lt;=M&lt;=100000，保证N为偶数  </span></p>\r\n<p>&nbsp;</p>\r\n<p><span style="font-size: medium;">by &nbsp; BYVoid</span></p>', 2000, 128, 10, 0, '2012-04-05 16:23:36'),
(427, '工厂选址', 'factory1', '<p><span style="font-size: small">某地区有m座煤矿，其中第i号矿每年产量为ai吨，现有火力发电站一个，每年需用煤b吨，每年运行的固定费用（包括折旧费，不包括煤的运费）为h元，每吨原煤从第i号矿运到原有发电厂的运费为Ci0（i=1，2，&hellip;，m；j=1，2，&hellip;，n）。<br />\r\n现规划新建一个发电厂，m座煤矿每年开采的原煤将全部供给这两座发电厂。现有n个备选的厂址。若在第j号备选厂址建新厂，每年运行的固定费用为hi元。每吨原煤从第i号矿运到j号备选厂址的运费为Cij（i=1，2，&hellip;，m；j=1，2，&hellip;，n）。<br />\r\n试问：应把新厂厂址选取在何处？m座煤矿开采的原煤应如何分配给两个发电厂，才能使每年的总费用（发电厂运行费用与原煤费用之和）为最小。<br />\r\n<br />\r\n输入<br />\r\n<br />\r\n第1行： m b h n<br />\r\n第2行： a1 a2 &hellip; am （0&lt;=ai&lt;=500，a1+a2+&hellip;+an&gt;=b）<br />\r\n第3行： h1 h2 &hellip; hn （0&lt;=hi&lt;=100）<br />\r\n第4行： C10 C20 &hellip; Cm0 （0&lt;=Cij&lt;=50）<br />\r\n第5行： C11 C21 &hellip; Cm1 <br />\r\n&hellip; &hellip;<br />\r\n第n+4行：C1n C2n &hellip; Cmn<br />\r\n<br />\r\n输出<br />\r\n第1行：新厂址编号，如果有多个编号满足要求，输出最小的。<br />\r\n第2行：总费用<br />\r\n<br />\r\n样例<br />\r\nfactory.in<br />\r\n4 2 7 9 <br />\r\n3 1 10 3<br />\r\n6 3 7 1 10 2 7 4 9<br />\r\n1 2 4 3<br />\r\n6 6 8 2<br />\r\n4 10 8 4<br />\r\n10 2 9 2<br />\r\n7 6 6 2<br />\r\n9 3 7 1<br />\r\n2 1 6 9<br />\r\n3 1 10 9<br />\r\n4 2 1 8<br />\r\n2 1 3 4<br />\r\n<br />\r\nfactory.out<br />\r\n8<br />\r\n49<br />\r\n<br />\r\n数据范围<br />\r\n对于30%的数据，n&lt;=50，m&lt;=100，b&lt;=100<br />\r\n对于60%的数据，n&lt;=50，m&lt;=100，b&lt;=10000<br />\r\n对于所有数据，n&lt;=50，m&lt;=50000，b&lt;=10000<br />\r\n</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:36'),
(428, '多项式运算', 'ploy', '<div><b>【问题描述</b>】</div>\r\n<div>大家会不会觉得多项式运算是一个很复杂的问题呢?<br />\r\n现在给出多项式的手写形式(如x+1，3x^3-2x^2+2)，要求进行各种运算。<br />\r\n运算一共有4种，分别为evaluate(代入)，add(加)，subtract(减)，multiply(乘)。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div><br />\r\n每个输入数据都有多个运算，行末行首均没有多余空格。所有的字母都是小写，每行都用回车分开。表达式可能出现的字符有0～9，+，-，^，x 任何+，-运算符都不会连续出现两个。下面是几种基本运算的输入格式。<br />\r\n代入，求出当x等于指定值的时候对应的多项式的值：<br />\r\n加法，求出所有的多项式的和(输入-1表示运算结束)：<br />\r\n减法，求出第一个多项式减去后面所有多项式的值(输入-1表示减法结束)：<br />\r\n乘法，求出所有的多项式的积(输入-1表示乘法结束)：<br />\r\n若干行多项式<br />\r\n-1<br />\r\n结束，表示程序的结束<br />\r\nlast</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div><br />\r\n输出每种运算以后的结果。首先输出运算的序号，然后紧跟一个冒号，接着是一个空格，最后是运算结果。每种运算的结果占用一行。多项式按降序排列，并且要进行同类项合并。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输入(ploy.in)<br />\r\nadd<br />\r\nx+1<br />\r\n2x^2+1<br />\r\n3x+4<br />\r\n-1<br />\r\nevaluate</div>\r\n<div>3<br />\r\n7x^3+2x^2-10<br />\r\nlast</div>\r\n<div>输出(ploy.out)<br />\r\n1:2x^2+4x+6<br />\r\n2:197</div>\r\n<div><b>【</b>数据规模】</div>\r\n<div style1="">多顶式项数&lt;=500 指数&lt;=10^9</div>', 1000, 128, 6, 0, '2012-04-05 16:23:36'),
(429, '城市规划', 'cityroad', '<div><b>【问题描述</b>】<br />\r\n<br />\r\nN城准备开发一片荒地，目前已经规划好了一些居民点，还要建些道路。由于经费问题，他们想在任意两点间的距离最短的前提下，用尽可能少的投资把各个点连接起来。需要注意的是并不是任意两个居民点间都能直接相连。给出两两居民点间建路的花费(与长度成正比)，你可以帮他们选择一个最佳方案吗?</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>第1行是一个数N(N&lt;100)，表示有N个居民点。<br />\r\n以下的N行每行有N个数，第i行第j个数表示居民点i到居民点J问建路的花费(O&lt;w<sub>ij</sub>&lt;10000,w<sub>ij</sub>=w<sub>ij</sub>，非正数表示两地不可直连。输入数据保证有解。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>第1行输出总花费。<br />\r\n然后输出N行，每行N个数，第i行第j个数表示居民点i到居民点j的路，用1表示先取这条路，0则不选。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输入(cityroad.in)<br />\r\n3<br />\r\n0 2 1<br />\r\n2 0 3<br />\r\n1 3 0<br />\r\n输出(cityroad.out)</div>\r\n<div>3<br />\r\n0 1 1<br />\r\n1 0 0<br />\r\n1 0 0</div>\r\n<div>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:36'),
(430, '烟花的寿命', 'firework', '<div><b>【问题描述</b>】<br />\r\n<br />\r\n见过夜空中美丽的烟花吗，它们总是由一个块炸成多块，可能还会继续分裂成更小的块。然而，并不是每块都会继续发光。如果把一个烟花炸开的整个过程中的亮点记录下来，并给所有爆炸点标上号，你能算出它最长可能的存活时间吗?(指第一次爆炸到最后一次之间间隔的时问，假设任意两次相邻的爆炸时间间隔都是1秒)。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>(输入文件名fireworlk.in)<br />\r\n第1行一个数T，说明输入文件中共T组数据。每组的第l行是爆炸的总数N(1&lt;N&le;1000)，下面N-1行每行是一对数Ai,Bi，(1&le;i&le;N-1，1&le;Ai，Bi&le;N)，指标号为Ai的爆炸点和标号为Bi的爆炸点相邻。输入总是合法的，组与组间没有空行隔开。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>(输出文件名fireworlk.out)<br />\r\n对每组输入，输出若干行。第1行是最长的时间x(秒)，接着输出x+1个数，每数占一行，给出最长时间是怎样达到的(从哪个点开始，经过哪些点)。如果存在多解，则任意输出一组解。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输入(firework.in)<br />\r\n2<br />\r\n3<br />\r\n1 2<br />\r\n1 3<br />\r\n4<br />\r\n1 2<br />\r\n2 4<br />\r\n3 2<br />\r\n输出(firework.out)<br />\r\n2<br />\r\n2<br />\r\n1<br />\r\n3<br />\r\n2<br />\r\n1<br />\r\n2<br />\r\n4<br />\r\n图为样例中第2组输出的示意图。 <br />\r\n&nbsp;</div>\r\n<div><img width="477" height="320" src="http://192.168.1.252/os/times/2004/04gdoi/fireword/hw005.jpg" alt="" /></div>\r\n<div><br />\r\n&nbsp;</div>', 1000, 128, 5, 0, '2012-04-05 16:23:36'),
(431, '圆桌会议B', 'dislike', '<div><b>【问题描述】</b></div>\r\n<div>N个政党的领导人参加一次圆桌会议讨论政治问题，但是某些领导人不愿意与其他某些政党的领导人坐在一起。这N个领导人用1，2，&hellip;，N来表示。I不愿意与J坐在一起不一定表示J不愿意与I坐在一起，但是在这种情况下，I与J还是不能坐在一起，因为I不喜欢J。<br />\r\n用一个以1开头的1，2，&hellip;，N的排列来表示一种安排座位的方案，假定排列的最后一个数字与1是相邻的。排列的方案要以字典顺序输出。而且，顺时针和逆时针的情况被认为是相同的。<br />\r\n写一个程序，输出所有可行的座位安排方案。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名dislike.in)<br />\r\n输入文件包含多组数据。<br />\r\n每组数据的第1行是数据编号C和领导人的数目N(N&lt;=40)。<br />\r\n接下来是一个N行N列的矩阵D，如果I不愿意与J坐在一起，那么矩阵的第，行的第J个数为1，否则为0。同行整数之间用一个空格分隔。<br />\r\n当C=0时输入文件结束。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式(输出文件名dislike.out)<br />\r\n对于输入的每一组数据，首先在一行输出数据编号C和所有可行的安排方案的总数K。<br />\r\n接下来的K行按字典顺序输出每种可行的方案。两组相邻的输出数据间用一个空行分隔</div>\r\n<div>(注：输出数据顺序与输入数据一致即可)</div>\r\n<div><b>【</b>输入输出样例】</div>\r\n<div>输入(dislike.in)<br />\r\n1 5<br />\r\n1 1 0 1 0<br />\r\n0 1 0 0 1<br />\r\n0 0 1 0 0<br />\r\n1 0 0 1 0<br />\r\n0 1 0 1 1<br />\r\n2 6<br />\r\n1 0 1 1 0 0<br />\r\n0 1 0 0 0 1<br />\r\n1 0 1 0 0 0<br />\r\n1 0 0 1 1 0<br />\r\n0 0 1 0 1 1<br />\r\n0 1 0 0 1 1<br />\r\n0<br />\r\n输出(dislike.out)<br />\r\n1 0<br />\r\n2 2<br />\r\n1 5 2 3 4 6<br />\r\n1 5 2 4 3 6</div>', 1000, 128, 7, 0, '2012-04-05 16:23:36'),
(432, '中奖的机率', 'lottery', '<div><b>【问题描述</b>】</div>\r\n<div>GDOI组委会准备举办一次抽奖活动，这次抽奖规则如下：组委会将发行一批刮奖卡，每张刮奖卡刮开上面的涂层后，会出现几种图案中的一种，各种图案出现的机率相同,只要筹齐这n种图案就算中奖，某人买了m张卡片，问其能中奖的概率P是多少?</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名lottery.in)<br />\r\n输入文件只有1行，包含两个整数n,m(1&le;n,m&le;20)，分别表示图案的种类数与某人买卡片的张数。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式(输出文件名lottery.in)<br />\r\n输出文件也只有1行，一个实数P，为中奖的概率，答案保留4位小数。</div>\r\n<div>【输入输出样例1】</div>\r\n<div>输入(lottery.in)<br />\r\n2 3<br />\r\n输出(lottery.out)<br />\r\n0.7500<br />\r\n提示：在，n=2，m=3这个例子里，买3张卡片出现图案情况有1 1 1，1 1 2，1 2 1，1 2 2，2 1 1，2 1 2，2 2 1，2 2 2共8种情形，其中第2到第7种情况是能中奖的，故中奖机率是6/8=0.75。</div>\r\n<div>【输入输出样例2】</div>\r\n<div>输入(lottery.in)<br />\r\n1 2<br />\r\n输出(lottery.out)<br />\r\n1.0000</div>', 1000, 128, 8, 0, '2012-04-05 16:23:36'),
(433, '词法分析程序', 'lex', '<div><b>【问题描述</b>】</div>\r\n<div>兰兰刚学完编译原理，老师Max布置了一个作业，就是编写一个词法分析程序。<br />\r\n所谓的词法分析程序，就是对一个程序进行词法分析。词法规则可以用一个所谓的DFA(确定的有限自动机)表示，DFA是用来识别词法的单元(Token)的工具。如图为一个DFA的示意图。<br />\r\n&ldquo;开始状态&rdquo;表示识别的开始，所有的分析都是从这里开始，而且当前的字符串(Token)为空串。然后进行状态转移，转移的方法有很多种。我们的词法分析器是建立在预测分析的基础上的。所以只需要看下一个字符(编译原理中称这个字符为Lookahead)。</div>\r\n<div align="center"><img width="460" height="300" src="http://192.168.1.252/os/times/2004/04gdoi/lex/lex.JPG" alt="" /></div>\r\n<div>如图所示，如果Lookahead是数字，就会转移到数字状态，并且把Lookahead加入到Token的尾部，然后Lookahead指向下一个字符，继续进行分析；如果是字母，那么当前Token就是一个由Lookahead组成的字母。图中双圈就表示是一个结束状态，每个Token的分析都必须在结束状态结束(但到达结束状态不表示Token分析结束)。如果当前状态对于当前读入的字符串无法匹配(也就是没有一个射出弧上的字母等于当前读入的字符)，那么就表示当前的Token分析结束，输出该Token及它的名称，并且返回开始状态进行处理(注意，此时的Lookahead是参与下一次识别)。<br />\r\n显然，DFA可以看成是一幅有向图G&lt;V，E&gt;，每个状态就是图上的顶点V，每次识别的字符就是图上的边E，而每次的状态转移就是从一个顶点到达相应的下一顶点的过程。<br />\r\n兰兰很有耐性，把老师需要分析的程序的DFA已经画出来了，现在请你读入她所写的DFA，帮她进行词法分析。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名lex.in)<br />\r\n首先是一个整数T<sub>x</sub>(T<sub>x</sub>&le;100)，表示状态数。状态是从0开始，即0，1，2，&hellip;，T<sub>x-1</sub>，然后是T<sub>x</sub>行，每行是一个字符串(长度不大于20)，表示该状态所表示的Token的名称(如果是终结状态)，当为非终结状态时，字符串为&ldquo;-1&rdquo;，如果该状态不用显示，字符串为&ldquo;-2&rdquo;。<br />\r\n<sub>x</sub>接着是T行，每行表示每个状态的转移，其中第一行规定为开始状态(即状态0)。每一行第一个是一个数字(T<sub>y</sub>&le;100)，表示当前状态的射出弧的条数，然后是一共T<sub>y</sub>个对，每个对分别由一个字符和一个数字组成，分别是每条弧的LookAhead(任意非空白的可显示的字符)，以及转移到的状态(&lt;T<sub>x</sub>)。每个字符与数字之间都有一个空格分隔。接着是只有一个$的一行，表示需要分析的源程序的开始。然后就是需要分析的源程序。最后是只有一个$的一行，表示分析结束。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出Token名字和对应的Token，中间由冒号和一个空格分隔。如果到达了一个非终止状态并且无法继续进行分析，显示一行Lexer Error。并把Token显示出来，然后回到初始状态，继续进行词法分析。所有的空白字符都强制作为Token的分隔符(空格，回车，制表符)。每个Token的长度都不会超过100 ．</div>\r\n<div><b>【</b>输入输出样例】</div>\r\n<div>输入(lex.in)<br />\r\n3<br />\r\n-1<br />\r\nDigit<br />\r\nLetter<br />\r\n10 0 l 1 1 2 1 3 1 4 1 a 2 b 2 c 2 d 2 e 2<br />\r\nO<br />\r\nO<br />\r\n$<br />\r\n123 abc<br />\r\n9<br />\r\ne1<br />\r\n$<br />\r\n输出(lex.out)<br />\r\nDigit： 1<br />\r\nDigit： 2<br />\r\nDigit：3<br />\r\nLetter：a<br />\r\nLetter：b<br />\r\nLetter：C<br />\r\nLexer Error： 9<br />\r\nLetter：e<br />\r\nDigit： 1</div>\r\n<div>&nbsp;</div>', 1000, 128, 7, 0, '2012-04-05 16:23:36'),
(434, '可怜的蜘蛛', 'spider', '<div><b>【问题描述</b>】</div>\r\n<div>蛛蛛William经常居住在Petro博士的化学实验室里面。悠闲的William常常漫步于实验室的管道上，甚至有时还会光顾一下里面空空的管道。一天晚上，它逛得实在太累了，居然在管道中睡着了。第二天早上，Petro士来到实验室，打开阀门往管道里注入热水，准备新一天的实验研究工作。就在这千钧一发的时刻，William的好朋友小灰鼠Stanley意识到问题的严重性，拼命地往阀门跑去。然而Stanley的努力还是无法挽回好朋友william的生命。<br />\r\n可怜的蜘蛛William被烫死了，留给Stanley只有痛苦的回忆。虽然Stanley尽了自己最大的努力，但它内心还是感觉很内疚。它想知道从Petro博士打开阀门那一刻开始，它有多少时间去拯救好朋友。它的心情是如此的差，以至于无法自己计算。你能帮助它吗?<br />\r\n所有的管道都是直径1cm垂直放置的底部封闭开口向上的圆柱体。有些管道之间有水平的小细管相连。由于直径很细，任何时候流动在小细管中的水的体积可以忽略不计。水从一个管道上方以恒定的速度0.25picm3/s注入。管道中的水越来越多，当水位到达跟某管道相连的小细管时，该管道也开始注入水。根据基本的物理原理，我们知道对于两个相连的管道，如果水位已经超过连接它们的小细管，往其中任意一个管道注水，两个管道的水位都会保持一致。在这种情况下，其中一个管道的水增量只有注入水总量的二分之一。<br />\r\n例如，对于如图所示情况：</div>\r\n<div>首先，水以全速注入左边管道最下2cm；然后水注入右边管道最下的3cm。接着两条管道水位同时以原先速度的二分之一上升。</div>\r\n<div>输入你程序的数据包含仪器中各个管道和细管的位置，以及蜘蛛所处的管道及深度。<br />\r\n你的程序应该返回在水淹没William,之前，Stanley有多少时间去救它的好朋友。如图所示例子的答案是9s.<br />\r\n<img height="710" alt="" width="595" src="http://192.168.1.252/os/times/2004/04gdoi/spider/ww.jpg" /></div>\r\n<div>为了简化问题，题目假设水下降速度很快，从开口下降所用的时间忽略不计。蜘蛛所在的位置可以假定为描述深度稍微高一点点的地方。比如，蜘蛛处于图1．3．1左边管道深度为4的地方的时候，那么答案应当是5，而不是2。同时，如果水到达一个管道的出口的时候，水并不会立刻溢出。只有等所有跟其相连的管道低于该开口的空间都充满了水的时候，水才开始溢出。(不排除有小细管处于开口的垂直位置的情况。)<br />\r\n&nbsp;</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名spider.in)<br />\r\n我们用管道或小细管的左上方的坐标(x,y)表示它们的位置(x轴坐标从左到右递增，y轴坐标从上到下递增)。<br />\r\n所有的坐标都是从0到100的整数(即O&le;x&le;100，0&le;v&le;100)。<br />\r\n文件的第1行是t，表示输入文件包含t个输入数据(1&le;f&le;10)。<br />\r\n对于每个输入数据：<br />\r\n数据的第1部分第1行是管道的数目p(1&le;p&le;20)，接着p行分别描述各个管道。每一个管道由3个整数(x,y,h)描述，表示管道的左上角坐标(x,y)和管道的深度．h(1&le;h&le;20)。注意管道的直径恒为1cm。<br />\r\n数据的第2部分第1行是小细管的数目g(0&le;g&le;50)，接着q行分别描述各个小细管。<br />\r\n每一个小细管也是由3个整数(x,y,l)描述，表示小细管的左端点坐标(x,y)和小细管的长度(1&le;l&le;20)。假设小细管的宽度为0。<br />\r\n数据的最后一行有两个整数。第1个表示William所在管道在输入数据中的序号。第2个整数表示William所处的位置(用y坐标表示)。William当时可能不在管道中(可能伤心的Stanley把William所在的位置记错了)。<br />\r\n可以假定：<br />\r\n(1)水从第一个管道注入； <br />\r\n(2)没有小细管会穿过管道；<br />\r\n(3)任意两个小细管处于不同的高度；<br />\r\n(4)任意两个管道的左上角坐标不同；<br />\r\n(5)任何小细管的端点跟管道相连。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式(输出文件名spider．out)<br />\r\n输出文件应该包含f行输出数据，分别对应f个输入数据。如果可能的话，输出数据是一个整数，表示水到达William所在位置所用的时间，否则输出&ldquo;No Solution&rdquo;(这个时候水不可能到达William所在的位置)。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输入(spider.in)<br />\r\n1</div>\r\n<div>2<br />\r\n2 O 6<br />\r\n5 1 6<br />\r\n1</div>\r\n<div>3 4 2<br />\r\n2 2<br />\r\n输出(spider.out)<br />\r\n9</div>', 1000, 128, 10, 0, '2012-04-05 16:23:37'),
(435, '王伯买鱼', 'fish', '<div>【问题描述】</div>\r\n<div style="text-indent: 24pt;">王伯退休后开始养鱼。他一早起来就赶去动物公园，发现这个世界的鱼真不少，五光十色、色彩斑斓，大的、小的，什么都有。这些鱼实在是太美了，买的人越来越多，湖里的鱼越米越少。没有美丽的鱼，哪里有美丽的湖?于是动物公园不得不规定，对于每种鱼，每个人最多只能买一条。并且有些鱼是不能一起买的，因为它们之间会互相争斗吞食。</div>\r\n<div style="text-indent: 24pt;">王伯想买尽可能多的鱼，但很可惜，他的资金有限。他冥思苦想，不知如何是好。请编写一个程序帮助他。如果有多个方案都能买尽可能多的鱼，选择所花资金最多的一个。</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输入】</div>\r\n<div style="text-indent: 24pt;">从输入文件读入数据。输入文件的第一行为两个正整数M(M&le;1000)，N(N&le;30)，分别表示王伯的资金和鱼的种类。以下N行，每行有两个正整数S(1&le;S&le;N)，T，分别表示某种鱼的编号以及该鱼的价格。</div>\r\n<div style="text-indent: 24pt;">接着，每行有两个整数P，Q。当P，Q均大于0时，表示P，Q不能共处；当P，Q均等于0时，表示输入文件的结束。</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输出】</div>\r\n<div style="text-indent: 24pt;">输出文件的第一行为两个正整数X，y，分别表示所买鱼的条数和总花费。以下X行，每行有一个正整数，表示所买鱼的编号。编号按升序排列输出。</div>\r\n<div style="text-indent: 24pt;">如果题目有多个解，只需输出其中的一个。</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输入输出样例】</div>\r\n<div style="text-indent: 24pt;">样例输入（<span>fish.in</span>）:</div>\r\n<div style="text-indent: 24pt;">170&nbsp;7</div>\r\n<div style="text-indent: 24pt;">&nbsp;1&nbsp;70</div>\r\n<div style="text-indent: 24pt;">&nbsp;2&nbsp;50</div>\r\n<div style="text-indent: 24pt;">&nbsp;3&nbsp;30</div>\r\n<div style="text-indent: 24pt;">&nbsp;4&nbsp;40</div>\r\n<div style="text-indent: 24pt;">&nbsp;5&nbsp;40</div>\r\n<div style="text-indent: 24pt;">&nbsp;6&nbsp;30</div>\r\n<div style="text-indent: 24pt;">&nbsp;7&nbsp;20</div>\r\n<div style="text-indent: 24pt;">&nbsp;1&nbsp;4</div>\r\n<div style="text-indent: 24pt;">&nbsp;1&nbsp;7</div>\r\n<div style="text-indent: 24pt;">&nbsp;3&nbsp;4</div>\r\n<div style="text-indent: 24pt;">&nbsp;3&nbsp;5</div>\r\n<div style="text-indent: 24pt;">&nbsp;5&nbsp;7</div>\r\n<div style="text-indent: 24pt;">&nbsp;6&nbsp;7</div>\r\n<div style="text-indent: 24pt;">&nbsp;0&nbsp;0</div>\r\n<div style="text-indent: 24pt;">样例输出（<span>fish.out</span>）：</div>\r\n<div style="text-indent: 24pt;">4&nbsp;160</div>\r\n<div style="text-indent: 24pt;">2</div>\r\n<div style="text-indent: 24pt;">4</div>\r\n<div style="text-indent: 24pt;">5</div>\r\n<div style="text-indent: 24pt;">6</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37'),
(436, '星际争霸', 'starwar', '<div><b>【问题描述</b>】</div>\r\n<div>虫族已经消灭了神族。邪恶的虫族还想消灭人族，于是又向人族发起了战争。经过激烈的战斗，人族凭着团结的精神，视死如归的斗志把虫族打得落花流水。然而事情还没结束，虫族是天生邪恶的，一有机会它们便要消灭人族，为了人族子孙后代的幸福，人族不能放过余下的虫族，一只也不能放过!<br />\r\n当时战斗形势是：所有余下虫族集中在一个星球上，虫族也意识到它们不是顽抗的时候，逃跑是它们惟一的出路，而且为了能有所生还，它们会分散的逃跑，但人族早有准备，军师派出多名探子，探出虫族逃跑的所有可能经过的路线，派兵在其中若干条路上等待并消灭虫族。<br />\r\n虫族所在星球编号为0，另外还有N个星球，分别编号为1，2，&hellip;，N-1，N。建立一个原点在0号星球的三维坐标系，另N个星球的坐标为(Xi，Yi，Zi)，i=1，2，&hellip;，N-1，N。虫族已经建立了在这(N+1)个星球之间的交通设备，具体地说，有某种不明交通工具M架，每架能且只能连接两个不同的星球，使虫族能从连接的两个星球中的任一个到达另一个。探子已经探出这M架交通工具连接的星球对。<br />\r\n军师要派兵在若干个虫族的通路中埋伏，使所有虫无路可逃，但是要在某条通路中埋伏，派兵的数目等于该通路连接的两个星球的距离的平方，军师希望用最少的兵力达到不让一只虫逃掉的目的，你要帮他算算最少用兵数目。军师指出，若有某一只虫能逃离星球0到达另一个星球i，并且星球i与星球0的距离大于R，则该虫就逃掉了，那时它能用某种不明方法逃到很远很远的地方，然后重新繁衍出虫族，再来消灭人族，这正是人族要避免的。注意人族可以派兵埋伏于与星球O距离大于R的地方。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名starwar.in)<br />\r\nN M R<br />\r\nX<sub>1</sub> Y<sub>1</sub> Z<sub>1</sub><br />\r\nX<sub>2</sub> Y<sub>2</sub> Z<sub>2</sub><br />\r\n......<br />\r\nX<sub>N</sub> Y<sub>N</sub> Z<sub>N</sub> <br />\r\nT<sub>1a</sub> T<sub>1b</sub> <br />\r\nT<sub>2a</sub> T<sub>2b</sub> <br />\r\n......<br />\r\nT<sub>ma</sub> T<sub>mb</sub> <br />\r\n以上的输入均为整数，同行整数用1个或多个空格隔开。<br />\r\n第1行中N(1&le;N&le;50)为除星球0外的星球数；M(0&le;M&le;N(N+1)/2)为虫族交通工具数目，R(1&le;R&le;10000)为虫族逃离界限，意义见上。<br />\r\n接下来的N行中(Xi，Yi,Zi)分别描述星球i的坐标，i=1，2，&hellip;，N-1，N。(-1000&le;Xi,Yi,Zi&le;1000)<br />\r\n再往下M行中T<sub>ia</sub>，T<sub>ib</sub> 分别描述第i个交通工具连接的两个星球。0&le;T<sub>ia</sub>，T<sub>ib</sub>&le;N且T<sub>ia</sub>&ne;T<sub>ib</sub>，并且若TiaTib出现了，以后就不会再出现T<sub>ia</sub>T<sub>ib</sub>或T<sub>ib</sub>T<sub>ia</sub>，既每对点最多出现一次。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式(输出文件名starwar.out)<br />\r\n仅一个整数，即所用的最少用兵数。</div>\r\n<div><b>【</b>输入输出样例1】<br />\r\n输入(starwar.in)<br />\r\n1 1 2<br />\r\n1 1 1<br />\r\n0 1<br />\r\n输出(starwar.out)<br />\r\n0</div>\r\n<div><b>【</b>输入输出样例2】</div>\r\n<div>输入(starwar.in)<br />\r\n1 1 1<br />\r\n1 1 1<br />\r\n0 1</div>\r\n<div>输出(starwar.out)<br />\r\n3</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37'),
(437, '删掉的边', 'edges', '<p>连通图是指任意两个顶点都有路径可互相到达的图。<br />\r\n读入一个无向的连通图，输出最多能删掉多少条边，使这个图仍然连通。</p>\r\n<div><b>【</b>输入格式】</div>\r\n<div>第1行为图的顶点数N(1&le;N&le;100)和边数M，它们之间用一个空格隔开，图中的顶点用1到N的整数标号。接下来的M行，每行用两个数V<sub>1</sub>，V<sub>2</sub>和也表示一边条。V<sub>1</sub>与V<sub>2</sub>用一个空格隔开，表示这条边所连接的顶点的标号(V<sub>1</sub>&lt;&gt;V<sub>2</sub>)，同一条边不会重复出现。</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出最多能删掉的边数。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输 入(edges.in)<br />\r\n5 7<br />\r\n4 6<br />\r\n1 2<br />\r\n1 3<br />\r\n1 4<br />\r\n2 3<br />\r\n2 4<br />\r\n3 4<br />\r\n输 出(edges.out)<br />\r\n3</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37'),
(438, '烦人的幻灯片', 'slides', '<div><b>【问题描述</b>】<br />\r\n<br />\r\n李教授将于今天下午作一次非常重要的演讲。不幸的是他不是一个非常爱整洁的人，他把自己演讲要用的幻灯片随便堆在了一起。因此，演讲之前他不得不去整理这些幻灯片。做为一个讲求效率的学者，他希望尽可能简单地完成它。教授这次演讲一共要用n张幻灯片(n&le;26)，这n张幻灯片按照演讲要使用的顺序已经用数字l，2，&hellip;，n在上面编了号。因为幻灯片是透明的，所以我们不能一下子看清每一个数字所对应的幻灯片。<br />\r\n现在我们用大写字母A，B，C，&hellip;再次把幻灯片依次编号。你的任务是编写一个程序，把幻灯片的数字编号和字母编号对应起来，显然这种对应应该是惟一的；若是出现多种对应的情况或是某些数字编号和字母编号对应不起来，我们就称对应是无法实现的。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>幻灯片的情况通过一个文本文件slides.in输入。</div>\r\n<div>文件的第1行只有一个整数n，表示有n张幻灯片，接下来的n行每行包括4个整数X<sub>min</sub>，X<sub>max</sub>，Y<sub>min</sub>，Y<sub>max</sub>(整数之间用空格分开)为幻灯片的坐标，这n张幻灯片按其在输入文件中出现的顺序从前到后依次编号为A，B，C，&hellip;<br />\r\n再接下来的n行依次为n个数字编号的坐标x，y，显然在幻灯片之外是不会有数字的。<br />\r\n&nbsp;</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>要求将程序的运行结果写入一个名为slides.out的文本文件。若是对应可以实现，输出文件应该包括n行，每一行为一个字母和一个数字，中间以一个空格隔开，并且各行以字母的升序排列，注意输出的字母要大写并且顶格；反之，若是对应无法实现，在文件的第1行顶格输出None即可。行首行末并无多余的空格。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输 入<br />\r\n4<br />\r\n6 22 10 20<br />\r\n4 18 6 16<br />\r\n8 20 2 18<br />\r\n10 24 4 8<br />\r\n9 15<br />\r\n19 17<br />\r\n11 7<br />\r\n21 11<br />\r\n输 出<br />\r\nA 4<br />\r\nB 1<br />\r\nC 2<br />\r\nD 3</div>', 1000, 128, 3, 0, '2012-04-05 16:23:37'),
(439, '软件补丁', 'bugs', '<div>【问题描述】</div>\r\n<div style="text-indent: 24pt;">对于一个软件公司来说，在发行一个新软件之后，可以说已经完成了工作。但是实际上，许多软件公司在发行一个新产品之后，还经常发送补丁程序，修改原产品中的错误(当然，有些补丁是要收费的)。</div>\r\n<div style="text-indent: 24pt;">如某微硬公司就是这样的一个软件公司。今年夏天，在发行了一个新的字处理软件之后，到现在他们已经编写了许多补丁程序。仅仅在这个周末，他们就用新编写的补丁程序解决了软件中的一个大问题。而在每一个补丁程序修改软件中的某些错误时，有可能引起软件中原来存在的某些错误重新发作。发生这种情况是因为当修改一个错误时，补丁程序利用了程序中约定的特别行为，从而导致错误的重新产生。</div>\r\n<div style="text-indent: 24pt;">微硬公司在他们的软件中一共发现了n个错误B={<span>b<sub>l</sub></span>，b<sub>2</sub>，&hellip;，<span>b<sub>n</sub></span>)，现在他们一共发送了m 个补丁程序p<sub>1</sub>,p<sub>2</sub>，&hellip;,p<sub>m</sub>。如果想要在软件中应用第p<sub>i</sub>号补丁程序，则软件中必须存在错误<span>B<sup>+</sup><sub>i</sub></span> &le;B，并且错误B<sup>-</sup><span><sub>i</sub></span>&le;B必须不存在(显然，<span>B<sup>+</sup><sub>i</sub></span>&cap;B<sup>-</sup><span><sub>i</sub></span>为空集)。然后，这个补丁程序将改正错误 F<sup>-</sup><span><sub>i</sub></span>&le;B(如果错误存在的话)，并且产生新错误<span>F<sup>+</sup><sub>i</sub></span>&le;B(同样，<span>F<sup>+</sup><sub>i</sub></span>&cap;F<sup>-</sup><span><sub>i</sub></span>也为空集)。</div>\r\n<div style="text-indent: 24pt;">现在，微硬公司的问题只有一个。他们给出一个原始版本的软件，软件包含了B中的所有错误，然后按照某一顺序在软件中应用补丁程序(应用某个补丁程序时，软件必须符合该补丁程序的应用条件，且运行该程序需要一定的时间)。问怎样才能最快地改正软件中的所有错误(即为修正所有错误而运行的补丁程序的总时间最短)?</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div style="text-indent: 24pt;">数据存放在当前目录下的文本文件&ldquo;<span>bugs.in</span>&quot;中。</div>\r\n<div style="text-indent: 24pt;">文件的第一行包含两个整数n和m，分别表示软件中的错误个数和发送的补丁个数。其中，n和m满足条件：1&le;n&le;20，1&le;m&le;100。</div>\r\n<div style="text-indent: 24pt;">接下来的m行(即第2行至第m+1行)按顺序描述了m个补丁程序的情况，第<span>i</span>行描述第i-1号补丁程序。每一行包含一个整数(表示在软件中应用该补丁程序所需的时间，单位为秒)和两个n个字符的字符串(中间均用一个空格分开)。、</div>\r\n<div style="text-indent: 24pt;">第一个字符串描述了应用该补丁程序(第i-1号)的条件，即说明在软件中某错误应该存在还是不应该存在。字符串的第<span>i</span>个字符，如果是&ldquo;+&rdquo;，表示在软件中必须存在b<sub>i</sub>号错误；如果是&ldquo;-&rdquo;，表示软件中错误b<sub>i</sub>不能存在；如果是&ldquo;0&quot;，则表示错误bi存在或不存在均可(即对应用该补丁程序没有影响)。</div>\r\n<div style="text-indent: 24pt;">第二个字符串描述了应用该补丁程序(第i-1号)后的效果，即应用补丁程序后，哪些错误被修改好了，而又产生了哪些新错误。字符串的第<span>i</span>个字符，如果是&ldquo;+&rdquo;，表示产生了一个新错误b<sub>i</sub>；如果是&ldquo;-&rdquo;，表示错误b<sub>i</sub>被修改好了；如果是&ldquo;0&rdquo;，则表示错误b<sub>i</sub>不变(即原来存在，则仍然存在；原来不存在，则也不存在)。</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输出格式】</div>\r\n<div style="text-indent: 24pt;">答案输出在当前目录下的文本文件&ldquo;<span>bugs.out</span>&quot;中。</div>\r\n<div style="text-indent: 24pt;">请你找到一个应用补丁程序的最优顺序，修改软件中的所有错误，并且所用的时间最少。</div>\r\n<div style="text-indent: 24pt;">注意，每个补丁程序是可以应用多次的。</div>\r\n<div style="text-indent: 24pt;">如果存在这样一个序列，请在输出文件的第一行输出应用补丁程序的总时间(单位为秒)；如果找不到这样一个序列，请在输出文件的第一行输出-1。</div>\r\n<div style="text-indent: 24pt;">&nbsp;</div>\r\n<div>【输入输出样例】</div>\r\n<div style="text-indent: 24pt;">样例输入（<span>bugs.in</span>）:</div>\r\n<div style="text-indent: 24pt;">3&nbsp;<span>3</span></div>\r\n<div style="text-indent: 24pt;">1 000 00-</div>\r\n<div style="text-indent: 24pt;">1 00- 0-+</div>\r\n<div style="text-indent: 24pt;">2 0-- -++</div>\r\n<div style="text-indent: 24pt;">样例输出（<span>bugs.out</span>）：</div>\r\n<div style="text-indent: 24pt;">8</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37'),
(440, '聪明的耗子', 'mousea', '<div style="text-indent: 24pt;">\r\n<p>【问题描述】</p>\r\n<p>在XOI总部，有一只由C.H养的耗子，这一只耗子拥有超过一般耗子的智商，而且很听话，所有XOI的人都叫它&ldquo;WM&rdquo;意思为聪明的耗子。而XOI总部有另一名成员X.J.H养的一只大猫，这只猫是一个捕鼠能手，名字叫&ldquo;UC&rdquo;。有一天C.H．和X.J.H打赌，C.H认为W.M可以逃脱U.C的追捕，X.J.H很不服气，他认为W.M是逃不过U.C的追捕。</p>\r\n<p>他们就在XOI总部做了一个实验来判断，XOI总部的地形有点奇怪，如下图所示，</p>\r\n<p><img width="188" height="187" alt="" src="http://192.168.1.252/os/sj/gdoi/gdoisearch/mouse/image001.gif" /></p>\r\n<p>每一间工作室只有三条通路，而且某一些路是非常不好走的，通过的时间较长，因为那里放满了杂物，通过其余通路的用时是一样的，U.C可以以最快的速度从第一间工作室，通过所有的工作室再回到第一间工作室，而且每一间工作室只能进一次。如果W.M也可以在最短的时间内通过则U.C就算输了。事实上W.M办到了。</p>\r\n<p>请问它是如何办到的?</p>\r\n<p>【输入格式】<br />\r\n&nbsp;</p>\r\n<p>输入文件的第一行为数字3&lt;n&le;80。n为工作室的个数，接下的3n/2行为a,b,c表示为从a工作室到b工作室有通道。c为0时通道为好走的通道，为1时是难走的通道。<br />\r\n&nbsp;</p>\r\n<p>【输出格式】</p>\r\n<p>输出文件为耗子依次通过工作室的编号。</p>\r\n<p><br />\r\n【输入输出样例】</p>\r\n<p>样例输入:（mouse.in）</p>\r\n<p>8<br />\r\n1 3 0<br />\r\n3 2 0<br />\r\n7 3 1<br />\r\n7 2 0<br />\r\n8 7 0<br />\r\n1 8 0<br />\r\n6 8 0<br />\r\n6 4 0<br />\r\n6 5 1<br />\r\n5 4 0<br />\r\n<br />\r\n样例输出（mouse.out）：</p>\r\n<p>1 5 4 6 8 7 2 3</p>\r\n<p><br />\r\n&nbsp;</p>\r\n</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37'),
(441, '商人的宣传', 'merchant', '<div><b>【问题描述</b>】<br />\r\n<br />\r\nBruce是K国的商人，他在A州成立了自己的公司，这次他的公司生产出了一批性能很好的产品，准备宣传活动开始后的第L天到达B州进行新品拍卖，期间Bruce打算将产品拿到各个州去做推销宣传，以增加其影响力。<br />\r\nK国有很多个州，每个州都与其他一些州相邻，但是K国对商人作宣传却有一些很奇怪的规定：<br />\r\n(1)商人只能从某些州到达另外一些州，即连通路线是单向的，而且有些州可能是到达不了的。<br />\r\n(2)商人不允许在同一个州连续宣传两天或以上，每天宣传完必须离开该州。<br />\r\n(3)商人可以多次来到同一个州进行宣传。<br />\r\nBruce想：&ldquo;我必须找出一条影响力最大的路线才行，但首先必须知道到底有多少这种符合规定的宣传路线可供我选择。&rdquo;现在Bruce把任务交给了你，并且出于考虑以后的需要，你还要帮他算出给出的两州之间的路线的总数。</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式(输入文件名merchant.in)<br />\r\n输入文件第1行包含3个整数n，m，L(1&le;n，L&le;100)，分别表示K国的州数、连通路线的数量，以及多少天后必须到达B州。<br />\r\n接下来有m行，每行一对整数五)，(1&le;x,y&le;n)，表示商人能从x州到达y州。<br />\r\n第m+2行为一个整数q(1&le;q&le;100)，表示Bruce有q个询问。<br />\r\n下面q行每行两个整数A，B(1&le;A，B&le;n)，即A、B州的位置。<br />\r\n&nbsp;</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式(输出文件名merchant.out)<br />\r\n输出文件包含q行，每行一个整数t，为所求的从A州到B州满足上述规定的路线总数。<br />\r\n输入数据中的询问将保证答案f在长整数范围内，即i&lt;231。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输入(merchant.in)<br />\r\n4 5 6<br />\r\n1 2<br />\r\n2 3<br />\r\n3 4<br />\r\n4 1<br />\r\n2 4<br />\r\n2<br />\r\n1 4<br />\r\n4 2<br />\r\n输出(merchant.out)<br />\r\n2<br />\r\n1</div>', 1000, 128, 10, 0, '2012-04-05 16:23:37'),
(442, '可怜的绵羊问题', 'sheep', '<div><b>【问题描述</b>】<br />\r\n<br />\r\n阿里是一个老实巴交的牧羊人，他有一块地，这块地周边插着一些树桩，阿里用一根粗绳顺次将这些树桩联结起来，构成一个凸多边形，这个多边形就是他的牧羊场了。阿里就是靠自己辛勤的劳动卖羊毛挣钱的。过冬了，今年特别冷，所以羊毛的销量特别好，阿里看着自己的绵羊心里十分高兴。然而住在附近的财主见到了阿里的收成十分眼红，他在阿里的牧场里某些地方下了毒药，想毒死阿里的绵羊。阿里知道了这件事情，但他知道自己斗不过这个财主，他只能忍受着，他所能做的就是把自己的牧羊场缩小，即挑选出一些树桩，用绳子把牧羊场重新按顺序围成，以保证牧羊场里的草没有毒药。阿里不希望他的牧羊场被分隔开，所以围成牧羊场后任意两段绳子除在树桩顶点外不能相交。他希望新的牧羊场的面积能尽可能大。但他不知道具体是多少，你能帮他计算出来吗?</div>\r\n<div><b>【</b>输入格式】</div>\r\n<div>输入格式：<br />\r\n输入数据第l行是一个整数，n(1&le;n&le;100)，表示树桩的数目。接下来有n行，每行两个整数xi，yi(|xi|&le;10000，|yi|&le;10000)，按逆时针顺序给出各个树桩所在的坐标，这些树桩顺次相连成一个凸多边形(该多边形只是形状是凸的，即某些树桩可能会落在多边形边上)。然后一个整数m(1&le;m&le;100)，表示财主下毒的地点数，跟着_m行，每行两个整数pi,qi(|qi|&le;10000，|qi|&le;10000)，即财主下毒地点的坐标，该坐标点可能落在多边形边上或外面，但财主当然不会笨到在树桩上下毒。<br />\r\n<br />\r\n&nbsp;</div>\r\n<div><b>【</b>输出格式】</div>\r\n<div>输出格式：<br />\r\n输出文件只有一行，为重新安排后牧羊场的最大面积，答案保留两位小数。如果不可能围成一个新牧羊场，则输出一行字串&ldquo;die&rdquo;(不包含引号)。<br />\r\n注意重新围成后某段绳子可能会经过下毒的坐标，这是允许的。</div>\r\n<div><b>【</b>输入输出样例】<br />\r\n输 入<br />\r\n4<br />\r\n2 2<br />\r\n-2 2<br />\r\n-2 -2<br />\r\n2 -2<br />\r\n2<br />\r\n0 0<br />\r\n-1 1<br />\r\n输 出<br />\r\n8.00<br />\r\n输出如图4．6．1所示，粗边为新围成的牧羊场，它的面积为8。</div>\r\n<div><img width="267" height="230" src="http://192.168.1.252/os/zhuanti/09dp/sheep/dd.JPG" alt="" /></div>\r\n<div>&nbsp;</div>', 1000, 128, 8, 0, '2012-04-05 16:23:37');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(443, '计数', 'perm', '<p><span style="font-size: medium;">你有一组非零数字(不一定唯一)，你可以在其中插入任意个0，这样就可以产生无限个数。比如说给定{1,2}，那么可以生成数字 12,21,102,120,201,210,1002,1020，等等。<br />\r\n现在给定一个数，问在这个数之前有多少个数。 (注意这个数不会有前导0)． </span></p>\r\n<p><span style="font-size: medium;">&nbsp;</span></p>\r\n<p class="MsoNormal">&nbsp;</p>\r\n<p><span style="font-size: medium;">\r\n<p class="MsoNormal"><span style="font-family: 宋体;"><b>【</b></span>输入格式<span style="font-family: 宋体;">】</span></p>\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  只有1行，为1个整数n </span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">&nbsp;</span></p>\r\n<p class="MsoNormal">&nbsp;</p>\r\n<p><span style="font-size: medium;">\r\n<p class="MsoNormal"><span style="font-family: 宋体;"><b>【</b></span>输出格式<span style="font-family: 宋体;">】</span></p>\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  只有整数，表示N之前出现的数的个数。</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">&nbsp;</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入样例<span style="font-family: 宋体;">】</span><br />\r\n1020</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输出样例<span style="font-family: 宋体;">】</span><br />\r\n<span> 7</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br />\r\n数据范围：n的长度不超过50，答案不超过2^63-1．</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:37'),
(444, '软件安装', 'install', '<p class="MsoNormal"><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【问题描述</b>】<br />\r\n</span>             <br />\r\n现在我们的手头有N个软件，对于一个软件i，它要占用W<sub>i</sub>的磁盘空间，它的价值为V<sub>i</sub>。我们希望从中选择一 些软件安装到一台磁盘容量为M计算机上，使得这些软件的价值尽可能大(即V<sub>i</sub>的和最大)。<br />\r\n但是现在有个问题：软件之间存在依赖关系，即软件i只有在安装了软件j(包括软件j的直接或间接依赖)的情况下才能正确工作(软件i依赖软件j)。幸运的 是，一个软件最多依赖另外一个软件。如果一个软件不能正常工作，那么它能够发挥的作用为0。<br />\r\n我们现在知道了软件之间的依赖关系：软件i依赖软件D<sub>i</sub>。现在请你设计出一种方案，安装价值尽量大的软件。一个软件只能被安装一 次，如果一个软件没有依赖则D<sub>i</sub>=0，这时只要这个软件安装了，它就能正常工作。</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  第1行：N，M   (0&lt;=N&lt;=100．0&lt;=M&lt;=500)<br />\r\n第2行：W<sub>1</sub>，W<sub>2</sub>，&hellip;，W<sub>i</sub>，&hellip;，W<sub>n</sub>(0&lt;=W<sub>i</sub>&lt;=M)<br />\r\n第3行：V<sub>1</sub>，V<sub>2</sub>，&hellip;，V<sub>i</sub>，&hellip;，V<sub>n</sub> (0&lt;=V<sub>i</sub>&lt;=1000)<br />\r\n第4行：D<sub>1</sub>，D<sub>2</sub>，&hellip;，D<sub>i</sub>，&hellip;，D<sub>n</sub>(0&lt;=D<sub>i</sub>&lt;=N，D<sub>i</sub>&ne;i)</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输出格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  一个整数，代表最大价值。</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入样例<span style="font-family: 宋体;">】</span><br />\r\n3 10<br />\r\n5 5 6<br />\r\n2 3 4<br />\r\n0 1 1<br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br />\r\n<span><span style="font-family: 宋体;"><b>【</b></span>输 出样例<span style="font-family: 宋体;">】</span></span><br />\r\n<span> 5</span></span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(445, '最长公共子序列', 'lcs', '<p class="MsoNormal"><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【问题描述</b>】</span><br />\r\n字符序列的子序列是指从给定字符序列中随意地(不一定连续)去掉若干个字符(可能一个也不去掉)后所形成的字符序列。令给定的字符序列x=&ldquo;x<sub>0</sub>，x<sub>1</sub>，&hellip;，x<sub>n-1</sub>&rdquo;， 序列Y=&ldquo;y<sub>0</sub>，y<sub>1</sub>，&hellip;，y<sub>k-1</sub>是X的子序列，存在X的一个严格递增下标序 列&lt;i<sub>0</sub>，i<sub>1</sub>，&hellip;，i<sub>k-1</sub>&gt;，使得对所有的j=0，1，&hellip;，k- 1，有x<sub>ij</sub>=y<sub>j</sub>。<br />\r\n例如，x=&ldquo;ABCBDAB&rdquo;，Y=&ldquo;BCDB&rdquo;是X的一个子序列。<br />\r\n对给定的两个字符序列，求出他们最长的公共子序列长度，以及最长公共子序列个数。</span></p>\r\n<p class="MsoNormal">&nbsp;</p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  第1行为第1个字符序列，都是大写字母组成，以&rdquo;.&rdquo;结束。长度小于5000。<br />\r\n第2行为第2个字符序列，都是大写字母组成，以&rdquo;.&rdquo;结束，长度小于5000。</span></p>\r\n<p class="MsoNormal">&nbsp;</p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输出格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  第1行输出上述两个最长公共子序列的长度。<br />\r\n第2行输出所有可能出现的最长公共子序列个数，答案可能很大，只要将答案对100，000，000求余即可。</span></p>\r\n<p class="MsoNormal">&nbsp;</p>\r\n<p><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【</b></span>输入样例<span style="font-family: 宋体;">】</span><br />\r\nABCBDAB．<br />\r\nBACBBD．</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【</b></span>输出样例<span style="font-family: 宋体;">】</span><br />\r\n4<br />\r\n7</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(446, '订货', 'order', '<p class="MsoNormal"><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【问题描述</b>】<br />\r\n</span>             <br />\r\n某公司估计市场在第i个月对某产品的需求量为U<sub>i</sub>，已知在第i月该产品的订货单价为d<sub>i</sub>，上个月月底未销完 的单位产品要付存贮费用m，假定第一月月初的库存量为零，第n月月底的库存量也为零，问如何安排这n个月订购计划，才能使成本最低?每月月初订购，订购后 产品立即到货，进库并供应市场，于当月被售掉则不必付存贮费。假设仓库容量为s。</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">   第1行：n，m，S(0&lt;=n&lt;=50，0&lt;=m&lt;=10，0&lt;=S&lt;=10000)<br />\r\n第2行：U<sub>1</sub>，U<sub>2</sub>，&hellip;，U<sub>i</sub>，&hellip;，U<sub>n</sub>。(0&lt;=U<sub>i</sub>&lt;=10000)<br />\r\n第3行：d<sub>1</sub>，d<sub>2</sub>，&hellip;，d<sub>i</sub>，&hellip;，d<sub>n</sub>(0&lt;=d<sub>i</sub>&lt;=100)</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输出格式<span style="font-family: 宋体;">】</span></span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">  只有1行，一个整数，代表最低成本</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;">            <span style="font-family: 宋体;"><b>【</b></span>输入样例<span style="font-family: 宋体;">】</span><br />\r\n3 1 1000<br />\r\n2 4 8<br />\r\n1 2 4<br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><br type="_moz" />\r\n</span></p>\r\n<p class="MsoNormal"><span style="font-size: medium;"><span style="font-family: 宋体;"><b>【</b></span>输出样例<span style="font-family: 宋体;">】</span><br />\r\n34</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(447, '奶牛家谱', 'nocows', '<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">农民约翰准备购买一群新奶牛。</span><span style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">在这个新的奶牛群中</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">, </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">每一个母亲奶牛都生两小奶牛。这些奶牛间的关系可以用二叉树来表示。这些二叉树总共有</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">N</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">个节点</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">(3 &lt;= N &lt; 200)</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">。这些二叉树有如下性质</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">: <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">每一个节点的度是</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">0</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">或</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">2</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">。度是这个节点的孩子的数目。</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><br />\r\n</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">树的高度等于</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">K(1 &lt; K &lt; 100)</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">。高度是从根到最远的那个叶子所需要经过的结点数</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">; </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">叶子是指没有孩子的节点。</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">有多少不同的家谱结构</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">? </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">如果一个家谱的树结构不同于另一个的</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">, </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">那么这两个家谱就是不同的。输出可能的家谱树的个数除以</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">9901</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">的余数。</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<div style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 2pt; border-left: medium none; padding-top: 0cm; border-bottom: #aaaaaa 1pt solid; mso-element: para-border-div; mso-border-bottom-alt: solid #AAAAAA .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 0cm; margin: 0cm 0cm 7.2pt; border-left: medium none; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-border-bottom-alt: solid #AAAAAA .75pt; mso-line-height-alt: 18.0pt; mso-outline-level: 3; mso-padding-alt: 0cm 0cm 2.0pt 0cm" align="left"><span style="font-size: 19pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">格式</span><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p></o:p></span></p>\r\n</div>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><b><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">PROGRAM NAME</span></b><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">: nocows <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><br />\r\n<b>INPUT FORMAT</b> (file nocows.in) <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><br />\r\n</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">第</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">1</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">行</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">: </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">两个空格分开的整数</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">, N</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">和</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">K</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">。</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p>&nbsp;</o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><b><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">OUTPUT FORMAT</span></b><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> (file nocows.out) <o:p></o:p></span></p>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><br />\r\n</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">第</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> 1 </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">行</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">: </span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">一个整数，表示可能的家谱树的个数除以</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">9901</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">的余数。</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<div style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 2pt; border-left: medium none; padding-top: 0cm; border-bottom: #aaaaaa 1pt solid; mso-element: para-border-div; mso-border-bottom-alt: solid #AAAAAA .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 0cm; margin: 0cm 0cm 7.2pt; border-left: medium none; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-border-bottom-alt: solid #AAAAAA .75pt; mso-line-height-alt: 18.0pt; mso-outline-level: 3; mso-padding-alt: 0cm 0cm 2.0pt 0cm" align="left"><a name="SAMPLE_INPUT"></a><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">SAMPLE INPUT</span><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p></o:p></span></p>\r\n</div>\r\n<div style="border-right: #2f6fab 1pt dashed; padding-right: 12pt; border-top: #2f6fab 1pt dashed; padding-left: 12pt; background: #f9f9f9; padding-bottom: 12pt; border-left: #2f6fab 1pt dashed; padding-top: 12pt; border-bottom: #2f6fab 1pt dashed; mso-element: para-border-div; mso-border-alt: dashed #2F6FAB .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">5 3<o:p></o:p></span></p>\r\n</div>\r\n<div style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 0cm; border-left: medium none; padding-top: 0cm; border-bottom: #aaaaaa 1pt solid; mso-element: para-border-div; mso-border-bottom-alt: solid #AAAAAA .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 0cm; margin: 0cm 0cm 7.2pt; border-left: medium none; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-border-bottom-alt: solid #AAAAAA .75pt; mso-line-height-alt: 18.0pt; mso-outline-level: 3; mso-padding-alt: 0cm 0cm 0cm 0cm" align="left"><a name="SAMPLE_OUTPUT"></a><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">SAMPLE OUTPUT</span><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p></o:p></span></p>\r\n</div>\r\n<div style="border-right: #2f6fab 1pt dashed; padding-right: 12pt; border-top: #2f6fab 1pt dashed; padding-left: 12pt; background: #f9f9f9; padding-bottom: 12pt; border-left: #2f6fab 1pt dashed; padding-top: 12pt; border-bottom: #2f6fab 1pt dashed; mso-element: para-border-div; mso-border-alt: dashed #2F6FAB .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">2<o:p></o:p></span></p>\r\n</div>\r\n<div style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 2pt; border-left: medium none; padding-top: 0cm; border-bottom: #aaaaaa 1pt solid; mso-element: para-border-div; mso-border-bottom-alt: solid #AAAAAA .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: white; padding-bottom: 0cm; margin: 0cm 0cm 7.2pt; border-left: medium none; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-border-bottom-alt: solid #AAAAAA .75pt; mso-line-height-alt: 18.0pt; mso-outline-level: 3; mso-padding-alt: 0cm 0cm 2.0pt 0cm" align="left"><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">OUTPUT DETAILS</span><span lang="EN-US" style="font-size: 19pt; color: black; font-family: Arial; mso-font-kerning: 0pt"><o:p></o:p></span></p>\r\n</div>\r\n<p class="MsoNormal" style="background: white; margin: 4.8pt 0cm 6pt; line-height: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">有</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">5</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">个节点，高为</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt">3</span><span style="font-size: 12.5pt; color: black; font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: Arial; mso-font-kerning: 0pt">的两个不同的家谱：</span><span lang="EN-US" style="font-size: 12.5pt; color: black; font-family: Arial; mso-font-kerning: 0pt"> <o:p></o:p></span></p>\r\n<div style="border-right: #2f6fab 1pt dashed; padding-right: 12pt; border-top: #2f6fab 1pt dashed; padding-left: 12pt; background: #f9f9f9; padding-bottom: 12pt; border-left: #2f6fab 1pt dashed; padding-top: 12pt; border-bottom: #2f6fab 1pt dashed; mso-element: para-border-div; mso-border-alt: dashed #2F6FAB .75pt">\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/ \\<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/ \\<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt">和<span lang="EN-US"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp; </span>@<o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/ \\<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/ \\<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@<span style="mso-spacerun: yes">&nbsp; </span>@</span><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-hansi-font-family: Calibri; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="border-right: medium none; padding-right: 0cm; border-top: medium none; padding-left: 0cm; background: #f9f9f9; padding-bottom: 0cm; margin: 0cm 0cm 0pt; border-left: medium none; line-height: 13.2pt; padding-top: 0cm; border-bottom: medium none; text-align: left; mso-pagination: widow-orphan; mso-padding-alt: 12.0pt 12.0pt 12.0pt 12.0pt; mso-border-alt: dashed #2F6FAB .75pt; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt" align="left"><span lang="EN-US" style="font-size: 12pt; color: black; font-family: 宋体; mso-hansi-font-family: Calibri; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-size: 11.0pt"><o:p>&nbsp;</o:p></span></p>\r\n</div>', 1000, 128, 12, 0, '2012-04-05 16:23:38'),
(448, '神牛果', '1', '<p>【题目描述】 <br />\r\n在某次膜拜大会上，一些神牛被要求集体膜拜。这些神牛被奖励每人吃一些神牛果。但是，每个神牛的肚量不一样。为了不显得某些人吃得太多，决定两人一组，使得吃得最多的那组吃得尽量少。（神牛数为偶数） <br />\r\n【输入格式】 <br />\r\n第一行一个整数 n。(n&lt;=10000) <br />\r\n第二行有 n 个正整数，为给定的一列数字，表示每个神牛能吃多少神牛果。(数字均小于 1000000000) <br />\r\n文件名为&ldquo;1.in&rdquo;。 <br />\r\n【输出格式】 <br />\r\n一个正整数，吃的最多的一组神牛吃的个数的最小值。 <br />\r\n文件名为&ldquo;1.out&rdquo;。 <br />\r\n【输入样例】<br />\r\n4 <br />\r\n1 5 2 8 <br />\r\n【输出样例】 <br />\r\n9</p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(449, '四面楚歌', 'virus', '<p>【题目描述】 <br />\r\n公元2008年10月31日星期五，笃志者所在的整个机房由于猖獗的病毒一片恐慌。经查证，病毒是由A1机器散播开来的。。这要追溯到29日，笃志者由于病毒被迫从A1机器撤离。 <br />\r\n一想到病毒是从自己的机器传开的，笃志者就心神不宁。他决定搞清楚病毒是怎么散播开来的。事实上，机房内的机器并不是全部都能够互相感染的。笃志者（ceeji）好不容易经过测试得到了机房中各机器间是否连通的图表，就在他马上就要得出结果的时候，大脑突然乱了！问题的严重性在于：如果他不在1s内搞清楚这个问题，机房就会整体瘫痪。现在笃志者求助于你，他需要知道病毒从未感染机房开始，最少入侵几台机器之后，机房就会整体感染。 <br />\r\n【输入格式】 <br />\r\n文件的第一行为一个整数n，第二行至第n+1行为n*n的矩阵（若第i行第j列为1，则机器i能对机器j进行ARP攻击（即感染机器j），若第i行第j列为0，则机器i不能感染机器j）。 <br />\r\n文件名为&ldquo;2.in&rdquo;。 <br />\r\n【输出格式】 <br />\r\n输出文件只有一行，为笃志者想知道的最少感染机器数。 <br />\r\n文件名为&ldquo;2.out&rdquo;。 <br />\r\n【输入样例】 <br />\r\n8 <br />\r\n0 0 1 0 0 0 0 0 <br />\r\n1 0 0 1 0 0 0 0 <br />\r\n0 1 0 1 1 0 0 0 <br />\r\n0 0 0 0 0 1 0 0 <br />\r\n0 0 0 1 0 0 0 0 <br />\r\n0 0 0 1 0 0 0 0 <br />\r\n0 0 0 1 0 0 0 1 <br />\r\n0 0 0 0 0 0 1 0 <br />\r\n【输出样例】 <br />\r\n2 <br />\r\n【数据范围】 <br />\r\n对于 100% 的数据，n&lt;=1000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(450, '监考老师', 'smallblack', '<p>【题目描述】<br />\r\n上周四监考老师在你的帮助下一次性抓住了好多作弊的同学，Black对你相当不满，这次轮到你帮助Black和他的同学们作弊了&hellip;&hellip; <br />\r\n而监考老师没有了你的帮助，决定这次的考试座位线形排列。但因为教室地方不够大，考场移到了地面凹凸不平的操场上。<br />\r\nBlack和他的同学们坐成一竖列，毫无疑问每个人只能向前看，且只能看比自己位置低的人的卷子。Black昨天晚上花了整晚测量每个人座位所在的高度，现在需要休息。他想知道自己能看到的最近的同学座位所在的高度，但是睡着前他忘了告诉你他的位置了！没办法，你必须计算出所有位置的结果。<br />\r\n【输入格式】<br />\r\n数据的第一行是一个正整数n，表示一共有多少个座位。 <br />\r\n第二行有n个用空格隔开的正整数，它们从前至后给出了n个座位的高度。这些数保证小于 2^31。<br />\r\n文件名为&ldquo;3.in&rdquo;。 <br />\r\n【输出格式】<br />\r\n输出一行用空格隔开的n个数，这些数对应输入数据中的座位的结果。如果输入中某个座位无法作弊（即它前边的座位都不比它低），请输出0。<br />\r\n文件名为&ldquo;3.out&rdquo;。 <br />\r\n【输入样例】 <br />\r\n7 <br />\r\n3 1 2 7 6 7 4<br />\r\n【输出样例】 <br />\r\n0 0 1 2 2 6 2 <br />\r\n【数据范围】 <br />\r\n对于100%的数据，n&lt;=1000 000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:38'),
(451, '布匠问题', 'fabric', '<p class="floor"><cc></cc>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 布匠的问题<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 布匠L所居住的城市遭遇了虫灾！这是一个天大的坏消息，因为虫子会吃掉L的布匹。<br />\r\n但是L是一个优秀的布匠，他可以给自己的布打补丁，弥补被虫子吃掉的部分。<br />\r\n从现在到虫灾结束的每一天里，虫子都可能会袭击L的布匹，但是如果某一天没有发生袭击事件，L将会为他的布匹打补丁，或者向你询问他的布匹的某一个区域内有多少个虫洞。<br />\r\nL的布被描述为一个N*M的矩形，矩形分为N*M个单元格。每次虫群袭击会吃掉一块R*Q的矩形布块（虫群可能会袭击没有布的区域，比如前面已经被吃掉了），如果没有虫群袭击，当日L将会将一块S*T的矩形区域内的所有被吃掉的单元格打上补丁，或者向你发出一次询问。请设计程序对L的每次询问做出回答。<br />\r\n<br />\r\n输入格式：<br />\r\n第一行三个整数 N，M，Q，（Q为虫灾持续的天数）<br />\r\n第2到第Q+1行，每行5个整数<br />\r\nO x1 y1 x2 y2<br />\r\n若O=0 表示今天L向你发出询问，在左上角坐标为x1,y1右下角坐标为x2,y2的矩形内有多少个被虫吃掉的单元格<br />\r\n若O=1表示今天虫群将袭击左上角坐标为x1,y1右下角坐标为x2,y2的矩形布匹<br />\r\n若O=2表示今天L将为左上角坐标为x1,y1右下角坐标为x2,y2的矩形布匹内缺失的单元格打上补丁。（若没有虫洞则不打补丁，打的补丁后来也可能会被吃掉）<br />\r\n<br />\r\n输出格式：<br />\r\n对于L的每一个询问输出一个答案，每行一个<br />\r\n<br />\r\n样例输入 fabric.in<br />\r\n4 5 4<br />\r\n1 2 2 3 4<br />\r\n0 1 2 2 5<br />\r\n2 3 1 3 3<br />\r\n0 1 1 4 5<br />\r\n样例输出 fabric.out<br />\r\n3<br />\r\n4<br />\r\n数据规模<br />\r\n对于30%的数据 1&lt;=N,M&lt;=200;<br />\r\n对于100%的数据 1&lt;=N,M&lt;=1000,1&lt;=Q&lt;=10000</p>\r\n<p class="floor">&nbsp;</p>\r\n<p class="floor">By Pom<br />\r\n&nbsp;</p>', 3000, 256, 10, 0, '2012-04-05 16:23:38'),
(452, 'Nim游戏！', 'nim!', '<p>甲，乙两个人玩Nim取石子游戏。</p>\r\n<p>nim游戏的规则是这样的：地上有n堆石子（每堆石子数量小于10000），每人每次可从任意一堆石子里取出任意多枚石子扔掉，可以取完，不能不取。每次只能从一堆里取。最后没石子可取的人就输了。假如甲是先手，且告诉你这n堆石子的数量，他想知道是否存在先手必胜的策略。</p>\r\n<p>输入格式</p>\r\n<p>有多组数据</p>\r\n<p>第一行一个整数T&lt;=10,表示有T组数据</p>\r\n<p>接下来每两行是一组数据，第一行一个整数n，表示有n堆石子，n&lt;=10000;</p>\r\n<p>第二行有n个数，表示每一堆石子的数量</p>\r\n<p>输出格式</p>\r\n<p>共T行，如果对于这组数据存在先手必胜策略则输出&quot;Yes&quot;,否则输出&quot;No&quot;，不包含引号，每个单词一行。</p>\r\n<p>&nbsp;</p>\r\n<p>By Pom</p>\r\n<p>&nbsp;输入样例：</p>\r\n<p>2</p>\r\n<p>2</p>\r\n<p>1 1</p>\r\n<p>2</p>\r\n<p>1 0</p>\r\n<p>输出样例：</p>\r\n<p>No</p>\r\n<p>Yes</p>\r\n<p>&nbsp;</p>', 1000, 128, 5, 0, '2012-04-05 16:23:38'),
(453, '字符串哈希', 'stringhash', '<p>字符串哈希是一种非常好用的算法，它可以将一个字符串用一个整数来表示（尽管有时候会发生冲突），这是非常方便的.<br />\r\n现在小H拿着一些字符串来找你，希望你能帮她把这些字符串按照给定的规则转换成哈希值..</p>\r\n<p>一个长度为n的字符串c1,c2,c3..cn-1,cn的哈希值=它的子串c1,c2,c3..cn-1的哈希值乘以一个常数Seed，再加上cn的ASCII值，<br />\r\n最后对一个整数2147483647求 &ldquo;和&rdquo; 运算的结果（&ldquo;和&rdquo;为位运算中的和，分别是Pascal中的and和C/C++中的&amp;）<br />\r\n请注意，空串的哈希值为0</p>\r\n<p>输入格式：<br />\r\n有N组数据<br />\r\n第一行是一个整数N<br />\r\n接下来有若干组数据，每个数据第一行是一个数len（len&lt;=20），表示字符串的长度<br />\r\n下面一行有一个字符串和一个整数Seed，用一个空格隔开，字符串中只可能包含''a''..''z'',''1''..''9'',''A''..''Z''</p>\r\n<p>输出格式：<br />\r\n共N行，每行一个整数即为对应数据的哈希值</p>\r\n<p><br />\r\n样例输入：<br />\r\n1<br />\r\n6<br />\r\nyznJS1 131</p>\r\n<p>样例输出：<br />\r\n1306619859</p>\r\n<p><br />\r\n数据范围：<br />\r\nN&lt;=10000<br />\r\nSeed&lt;=131<br />\r\n其他如题。</p>\r\n<p>&nbsp;</p>\r\n<p>by pom</p>', 1000, 256, 10, 0, '2012-04-05 16:23:39'),
(454, '购买？', 'buyy', '<p>某商店有M类物品，每类物品中有N件物品，每件物品价格不完全相同。商店营业T天，每天都会有一位顾客来买走一件物品，<br />\r\n每天商店会出示给消费者总价格最大的一类物品，若同时有多类总价格相同的物品则出示编号最小的一类，<br />\r\n消费者则会从这类物品中买走价格最低的一件，被买走的物品将从商店中消失。<br />\r\n给出商店初始的货物情况，要求输出每天卖出的物品价格。</p>\r\n<p>输入格式<br />\r\n第一行三个整数 M N T<br />\r\n接下的第2~M+1行，每行N个整数，第i+1行的N个整数分别表示第i类物品中的N个物品的价格</p>\r\n<p>输出格式<br />\r\n共T行，每行一个整数，表示每天卖出的物品价格</p>\r\n<p>样例输入：<br />\r\n3 3 5<br />\r\n1 2 3<br />\r\n2 3 4<br />\r\n3 3 5</p>\r\n<p><br />\r\n样例输出:<br />\r\n3<br />\r\n2<br />\r\n3<br />\r\n3<br />\r\n1</p>\r\n<p>数据规模<br />\r\n对于20%的数据，1&lt;=M,N&lt;=200，1&lt;=T&lt;=500<br />\r\n对于40%的数据，1&lt;=M&lt;=800，1&lt;=T&lt;=5000<br />\r\n对于100%的数据，1&lt;=M&lt;=5000，1&lt;=N&lt;=400，1&lt;=T&lt;=50000 1&lt;=每一个物品价值&lt;=10000</p>\r\n<p>&nbsp;</p>\r\n<p>by pom</p>', 1500, 256, 10, 0, '2012-04-05 16:23:39'),
(455, '多重数列', 'linesum', '<p>给出n个长度为m的数字序列S1,S2..Sn，找出一个子序列S'',使得S''的各项和最大，<br />\r\n且S''中的相邻两个元素在原串中的位置差必须是2^k+1(k&gt;0)，<br />\r\n比如说，选取了第1个元素，下一个只能选取第4个，第6个，第10个&hellip;(距离相差2^1+1，2^2+1，2^3+1&hellip;)</p>\r\n<p>如果选取了原串中第k个元素，则可以从S1[k]，S2[k]，S3[k]...Sn[k]中任选一个加入S''</p>\r\n<p>输入格式：<br />\r\n第一行有两个整数n,m<br />\r\n第2到n+1行，每行有一个长度为m的数字序列</p>\r\n<p>输出格式：<br />\r\n一行，最大的子序列和值</p>\r\n<p>样例输入：<br />\r\n2 10<br />\r\n1 0 -1 3 2 1 -4 10 1 3<br />\r\n2 3 -2 -7 3 4 1 2 4 9</p>\r\n<p>样例输出<br />\r\n16<br />\r\n（第2个序列的第2个，第5个和第一个序列的第8个）</p>\r\n<p><br />\r\n数据规模：<br />\r\n对于30%的数据，m&lt;=10000<br />\r\n对于100%的数据 m&lt;=1000000,n&lt;=5,答案不超过longint/int范围</p>', 2000, 128, 10, 0, '2012-04-05 16:23:39'),
(456, '岛国', 'jx', '<p>很久很久很久很久很久很久以前......<br />\r\n有一个岛国。</p>\r\n<p><br />\r\n这个国家的领地是一块坐标从(1,1)到(K,K)的正方形（包括领海和领陆，坐标(x,y)是指(x,y)这块土地，并非一个点）<br />\r\n卫星信息会告诉你这个国家的土地情况，希望你能根据给出的信息计算出这个国家有多少个岛。<br />\r\n卫星给出的信息形如x1 y1 x2 y2，表示左下角坐标为x1,y1,右上角坐标为x2,y2的这一个矩形区域是陆地</p>\r\n<p>输入格式：<br />\r\n第一行一个整数n，表示卫星会传送给你n条信息<br />\r\n下面n行每行有4个整数，x1,y1,x2,y2，含义如上</p>\r\n<p>输出格式：<br />\r\n第一行，一个整数Sum，表示这个国家的岛的数量</p>\r\n<p>注，只有一个公共点的两块陆地不算是一块区域，具体如样例</p>\r\n<p>样例输入：<br />\r\n3<br />\r\n1 1 2 2<br />\r\n1 3 1 3<br />\r\n3 3 4 5</p>\r\n<p>样例输出：<br />\r\n2</p>\r\n<p><br />\r\n样例解释：<br />\r\n0 0 1 1 0<br />\r\n0 0 1 1 0<br />\r\n1 0 1 1 0<br />\r\n1 1 0 0 0<br />\r\n1 1 0 0 0<br />\r\n（1是陆地，0是海）</p>\r\n<p>数据规模：<br />\r\n对于30%的数据，K&lt;=1000，n&lt;=100<br />\r\n对于100%的数据，K&lt;=20000，n&lt;=5000，x1&lt;=x2，y1&lt;=y2，1&lt;=x1,x2,y1,y2&lt;=K<br />\r\n&nbsp;</p>\r\n<p>by pom</p>', 1000, 128, 10, 0, '2012-04-05 16:23:39'),
(457, '真·排序', 'justsort', '<p>于模拟赛时公布题目</p>', 1000, 128, 10, 0, '2012-04-05 16:23:40'),
(458, '最小费用生成树', 'lftree', '<p>于模拟赛时公布题目</p>', 1000, 256, 10, 0, '2012-04-05 16:23:40');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(459, '矩阵游戏', 'matrixgame', '<p>小H在玩一个很有意思的游戏~游戏规则是这样的...</p>\r\n<p>有一个N*M的矩阵，矩阵的每一个单元格内有一个数字，这个数字就是这一格的&ldquo;分&rdquo;，对于一块p*q的矩形，它有两种计分方式，<br />\r\n第一种方式是将这个p*q的矩形内所有的数字相加作为这个矩形的得分值，第二种方式是画一条直线将这个矩形<br />\r\n分割成两个子矩形，并将这两个子矩形的得分的乘积除以(p*q*5)作为这个p*q的矩形的得分，这条分割线只能平行于x轴或者y轴画<br />\r\n，且不能画在这个p*q矩形的边界上.现在，小O拿着一个矩阵来为难小H，你能帮小H计算出这个矩阵的最大得分吗?</p>\r\n<p>要求，给出一个n*m的矩阵，输出这个矩阵可以得到的最大的分值</p>\r\n<p>输入格式：<br />\r\n第一行有两个整数 n,m<br />\r\n接下来是一个n行m列的矩阵，表示这个矩阵</p>\r\n<p>输出格式：<br />\r\n只有一行，输出一个数，该矩阵最大得分值</p>\r\n<p>样例输入:<br />\r\n2 2<br />\r\n1 1<br />\r\n2 -1<br />\r\n样例输出:<br />\r\n3</p>\r\n<p>数据范围<br />\r\n对于30%的数据，1&lt;=n,m&lt;=5<br />\r\n对于另外30%的数据，矩阵中不存在负数<br />\r\n对于100%的数据 1&lt;=n,m&lt;=50,且1&lt;=n*m&lt;=600&nbsp; -20&lt;=矩阵中的数&lt;=20</p>\r\n<p>&nbsp;</p>\r\n<p>by pom</p>', 1000, 256, 10, 0, '2012-04-05 16:23:40'),
(460, '数列计数', 'cata', '<p>于模拟赛时公布题目</p>', 1000, 16, 10, 0, '2012-04-05 16:23:40'),
(461, '餐 巾', 'napkin', '<p>【问题描述】</p>\r\n<p>一个餐厅在相继的 N 天里，第 i 天需要 Ri 块餐巾 (i=l ， 2 ，&hellip;， N) 。餐厅可以从三种途径获得餐巾。</p>\r\n<p>(1) 购买新的餐巾，每块需 p 分；</p>\r\n<p>(2) 把用过的餐巾送到快洗部，洗一块需 m 天，费用需 f 分 (f&lt;p) 。如 m=1 时，第一天送到快洗部的餐巾第二天就可以使用了，送慢洗的情况也如此。</p>\r\n<p>(3) 把餐巾送到慢洗部，洗一块需 n 天 (n&gt;m) ，费用需 s 分 (s&lt;f) 。</p>\r\n<p>在每天结束时，餐厅必须决定多少块用过的餐巾送到快洗部，多少块送慢洗部。在每天开始时，餐厅必须决定是否购买新餐巾及多少，使洗好的和新购的餐巾之和满足当天的需求量 Ri, 并使 N 天总的费用最小。</p>\r\n<p>【输入】</p>\r\n<p>输入文件共 3 行，第 1 行为总天教；第 2 行为每天所需的餐巾块数；第 3 行为每块餐巾的新购费用 p ，快洗所需天数 m ，快洗所需费用 f ，慢洗所需天数 n ，慢洗所需费用 s 。</p>\r\n<p>【输出】</p>\r\n<p>一行，最小的费用</p>\r\n<p>【样例】</p>\r\n<p>napkin.in</p>\r\n<p>3 <br />\r\n3 2 4 <br />\r\n10 1 6 2 3</p>\r\n<p>napkin.out</p>\r\n<p>64 <br />\r\n&nbsp;</p>\r\n<p>【数据规模】</p>\r\n<p>n&lt;=200,Ri&lt;=50</p>', 1000, 128, 12, 0, '2012-04-05 16:23:40'),
(462, '关键子工程', 'project', '<div>【问题描述】</div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 24pt">在大型工程的施工前，我们把整个工程划分为若干个子工程，并把这些子工程编号为1、2、&hellip;&hellip;、N；这样划分之后，子工程之间就会有一些依赖关系，即一些子工程必须在某些子工程完成之后才能施工。由于子工程之间有相互依赖关系，因此有两个任务需要我们去完成：首先，我们需要计算整个工程最少的完成时间；同时，由于一些不可预测的客观因素会使某些子工程延期，因此我们必须知道哪些子工程的延期会影响整个工程的延期，我们把有这种特征的子工程称为关键子工程，因此第二个任务就是找出所有的关键子工程，以便集中精力管理好这些子工程，尽量避免这些子工程延期，达到用最快的速度完成整个工程。为了便于编程，现在我们假设： <br />\r\n（1）根据预算，每一个子工程都有一个完成时间。 <br />\r\n（2）子工程之间的依赖关系是：部分子工程必须在一些子工程完成之后才开工。 <br />\r\n（3）只要满足子工程间的依赖关系，在任何时刻可以有任何多个子工程同时在施工，也既同时施工的子工程个数不受限制。 <br />\r\n（4）整个工程的完成是指：所有子工程的完成。 <br />\r\n例如，有五个子工程的工程规划表：</div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div style="text-indent: 24pt"><img alt="" width="647" height="163" src="http://192.168.1.252/os/g2_zxy/noipmn_1/project_1.JPG" /><br />\r\n&nbsp;</div>\r\n<div style="text-indent: 24pt">其中，表格中第 I+1 行 J+2 列的值如为 0 表示&ldquo;子工程 I&rdquo;可以在&ldquo;子工程 J&rdquo;没完成前施工，为 1 表示&ldquo;子工程 I&rdquo;必须在&ldquo;子工程 J&rdquo;完成后才能施工。上述工程最快完成时间为 14 天，其中子工程1、3、4、5为关键子工程。 <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;又例如，有五个子工程的工程规划表：</div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div style="text-indent: 24pt"><img alt="" width="647" height="163" src="http://192.168.1.252/os/g2_zxy/noipmn_1/project_2.JPG" /></div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div style="text-indent: 24pt">上述的子工程划分不合理，因为无法安排子工程1，3，4的施工。</div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 24pt">第1 行为N，N是子工程的总个数，N&le;200。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第 2 行为N个正整数，分别代表子工程1、2、&hellip;&hellip;、N的完成时间。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第 3 行到 N+2 行，每行有 N-1 个 0 或 1。其中的第 I+2 行的这些 0，1，分别表示&ldquo;子工程 I&rdquo;与子工程1、2、&hellip;、I-1、I+1、&hellip;N的依赖关系，（I=1、2、&hellip;&hellip;、N）。每行数据之间均用一个空格分开。 <br />\r\n&nbsp;</div>\r\n<div>【输出格式】</div>\r\n<div style="text-indent: 24pt">&nbsp;</div>\r\n<div style="text-indent: 24pt">如子工程划分不合理，则输出-1； <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;如子工程划分合理，则用两行输出：第1行为整个工程最少的完成时间。第2行为按由小到大顺序输出所有关键子工程的编号。 <br />\r\n&nbsp;</div>\r\n<div>【输入输出样例】</div>\r\n<div>&nbsp;</div>\r\n<div>输入文件名：project.in <br />\r\n5 <br />\r\n5 4 12 7 2 <br />\r\n0 0 0 0 <br />\r\n0 0 0 0 <br />\r\n0 0 0 0 <br />\r\n1 1 0 0 <br />\r\n1 1 1 1</div>\r\n<div>输出文件名：project.out <br />\r\n14 <br />\r\n1 3 4 5</div>', 1000, 128, 10, 0, '2012-04-05 16:23:40'),
(463, '乒乓球', 'table', '<p><b>【问题背景】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 国际乒联现在主席沙拉拉自从上任以来就立志于推行一系列改革，以推动乒乓球运动在全球的普及。其中 11 分制改革引起了很大的争议，有一部分球员因为无法适应新规则只能选择退役。华华就是其中一位，他退役之后走上了乒乓球研究工作，意图弄明白 11 分制和 21 分制对选手的不同影响。在开展他的研究之前，他首先需要对他多年比赛的统计数据进行一些分析，所以需要你的帮忙。</p>\r\n<p><b>【问题描述】</b></p>\r\n<p>华华通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在 11 分制和 21 分制下，双方的比赛结果（截至记录末尾）。</p>\r\n<p>比如现在有这么一份记录，（其中 W 表示华华获得一分， L 表示华华对手获得一分）：</p>\r\n<p>WWWWWWWWWWWWWWWWWWWWWWLW</p>\r\n<p>在 11 分制下，此时比赛的结果是华华第一局 11 比 0 获胜，第二局 11 比 0 获胜，正在进行第三局，当前比分 1 比 1 。而在 21 分制下，此时比赛结果是华华第一局 21 比 0 获胜，正在进行第二局，比分 2 比 1 。如果一局比赛刚开始，则此时比分为 0 比 0 。</p>\r\n<p>你的程序就是要对于一系列比赛信息的输入（ WL 形式），输出正确的结果。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 每个输入文件包含若干行字符串（每行至多 20 个字母），字符串有大写的 W 、 L 和 E 组成。其中 E 表示比赛信息结束，程序应该忽略 E 之后的所有内容。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出由两部分组成，每部分有若干行，每一行对应一局比赛的比分（按比赛信息输入顺序）。其中第一部分是 11 分制下的结果，第二部分是 21 分制下的结果，两部分之间由一个空行分隔。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\ntable.in<br />\r\nWWWWWWWWWWWWWWWWWWWW <br />\r\nWWLWE</p>\r\n<p>输出：<br />\r\ntable.out<br />\r\n11:0 <br />\r\n11:0 <br />\r\n1:1 <br />\r\n&nbsp; <br />\r\n21:0 <br />\r\n2:1</p>', 1000, 128, 10, 0, '2012-04-05 16:23:40'),
(464, '破碎的项链', 'beads', '<div style="layout-grid-mode: char">你有一条由N个红色的，白色的，或蓝色的珠子组成的项链(3&lt;=N&lt;=350)，珠子是随意安排的。这里是 n=29 的二个例子:</div>\r\n<div style="layout-grid-mode: char">&nbsp;</div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 2</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r b b r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b r r b</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>r<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b</span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r b r&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r r w</span></div>\r\n<div style="layout-grid-mode: char"><span style="font-size: 10pt">&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>图片 A<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>图片&nbsp;B</div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r </span>代表 红色的珠子<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b </span>代表 蓝色的珠子<span>&nbsp;&nbsp; </span></div>\r\n<div style="layout-grid-mode: char"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>w 代表 白色的珠子</div>\r\n<div style="layout-grid-mode: char">第一和第二个珠子在图片中已经被作记号。&nbsp;</div>\r\n<div style="layout-grid-mode: char">图片 A 中的项链可以用下面的字符串表示：&nbsp;</div>\r\n<div style="layout-grid-mode: char"><span><span>brbrrrbbbrrrrrbrrbbrbbbbrrrrb</span></span><span> .&nbsp;</span></div>\r\n<div style="layout-grid-mode: char">假如你要在一些点打破项链,展开成一条直线，然后从一端开始收集同颜色的珠子直到你遇到一个不同的颜色珠子，在另一端做同样的事 <span>(</span>颜色可能与在这之前收集的不同) 。确定应该在哪里打破项链来收集到最大多数的数目的子。</div>\r\n<div style="layout-grid-mode: char">举例来说，在图片 A 中的项链，可以收集到8个珠子,在珠子 9 和珠子 10 或珠子 24 和珠子 25 之间打断项链。 在一些项链中，包括白色的珠子如图片 B 所示。 当收集珠子的时候，一个<span>被遇到的白色珠子可以被当做红色也可以被当做蓝色。</span> 表现项链的字符串将会包括三符号 r ， b 和 w 。 写一个程序来确定从一条被供应的项链最大可以被收集珠子数目。</div>\r\n<div>&nbsp;</div>\r\n<div>【输入】</div>\r\n<div>输入文件 <b><span style="font-size: 13.5pt">beads</span> ，共 2 行。 </b>.in</div>\r\n<div>第 1 行: &nbsp;N, 珠子的数目 &nbsp;</div>\r\n<div>第 2 行: &nbsp;一串度为N的字符串, 每个字符是 r ， b 或 w。</div>\r\n<div>&nbsp;&nbsp;</div>\r\n<div>【输出】</div>\r\n<div>输出文件 <b><span style="font-size: 13.5pt">beads</span> ，仅 1 行<span style="font-size: 12pt">包含从被</span><span style="font-size: 12pt">供应的项链可以被收集的珠子数目的最大值。&nbsp;</span>。 </b>.out</div>\r\n<div>【样例】</div>\r\n<div><b><span style="font-size: 13.5pt">beads<span style="font-size: 10pt; font-weight: normal">.in</span></span></b></div>\r\n<div style="layout-grid-mode: char">29&nbsp;</div>\r\n<div style="layout-grid-mode: char"><span>wwwbbrwrbrbrrbrbrwrwwrbwrwrrb</span>&nbsp;</div>\r\n<div><b><span style="font-size: 13.5pt">beads</span></b>.0ut</div>\r\n<div><span style="font-size: 12pt">11 </span></div>\r\n<div>&nbsp;</div>', 1000, 128, 9, 0, '2012-04-05 16:23:40'),
(465, '挤牛奶', 'milk2', '<div>【问题描述】</div>\r\n<div>三个农民每天清晨5点起床，然后去牛棚给3头牛挤奶。第一个农民在300时刻(从5点开始计时，秒为单位)给他的牛挤奶，一直到1000时刻。第二个农民在700时刻开始，在 1200时刻结束。第三个农民在1500时刻开始2100时刻结束。期间最长的至少有一个农民在挤奶的连续时间为900秒(从300时刻到1200时刻)，而最长的无人挤奶的连续时间(从挤奶开始一直到挤奶结束)为300时刻(从1200时刻到1500时刻)。</div>\r\n<div>你的任务是编一个程序，读入一个有N个农民(1 &lt;= N &lt;= 5000)挤N头牛的工作时间列表，计算以下两点(均以秒为单位):</div>\r\n<ul type="disc">\r\n    <li>最长至少有一人在挤奶的时间段。</li>\r\n    <li>最长的无人挤奶的时间段。（从有人挤奶开始算起）</li>\r\n</ul>\r\n<div>&nbsp;</div>\r\n<div>【输入】</div>\r\n<div>输入文件 milk2.in ，共 4 行。</div>\r\n<div>Line 1:</div>\r\n<div>一个整数N。</div>\r\n<div>Lines 2..N+1:</div>\r\n<div>每行两个小于1000000的非负整数，表示一个农民的开始时刻与结束时刻。</div>\r\n<div>&nbsp;</div>\r\n<div>【输出】</div>\r\n<div>输出文件 milk2.out ，一行，两个整数，即题目所要求的两个答案。</div>\r\n<div>【样例】</div>\r\n<div>milk2.in</div>\r\n<div>3</div>\r\n<div>300 1000</div>\r\n<div>700 1200</div>\r\n<div>1500 2100</div>\r\n<div>milk2.out</div>\r\n<div>900 300</div>', 1000, 128, 8, 0, '2012-04-05 16:23:40'),
(466, '细胞分裂', 'cell', '<p>【问题描述】<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;Hanks 博士是BT (Bio-Tech，生物技术) 领域的知名专家。现在，他正在为一个细胞实验做准备工作：培养细胞样本。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;Hanks 博士手里现在有N 种细胞，编号从1~N，一个第i 种细胞经过1 秒钟可以分裂为S<sub>i</sub> 个同种细胞（S<sub>i</sub> 为正整数）。现在他需要选取某种细胞的一个放进培养皿，让其自由分裂，进行培养。一段时间以后，再把培养皿中的所有细胞平均分入M 个试管，形成M 份样本，用于实验。Hanks 博士的试管数M 很大，普通的计算机的基本数据类型无法存储这样大的 M 值，但万幸的是，M 总可以表示为m<sub>1</sub> 的m<sub>2</sub> 次方，即 M = m1<sup>m2</sup> ，其中m<sub>1</sub>，m<sub>2</sub> 均为基本数据类型可以存储的正整数。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;注意，整个实验过程中不允许分割单个细胞，比如某个时刻若培养皿中有4 个细胞，Hanks 博士可以把它们分入2 个试管，每试管内2 个，然后开始实验。但如果培养皿中有5个细胞，博士就无法将它们均分入2 个试管。此时，博士就只能等待一段时间，让细胞们继续分裂，使得其个数可以均分，或是干脆改换另一种细胞培养。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;为了能让实验尽早开始，Hanks 博士在选定一种细胞开始培养后，总是在得到的细胞&ldquo;刚好可以平均分入M 个试管&rdquo;时停止细胞培养并开始实验。现在博士希望知道，选择哪种细胞培养，可以使得实验的开始时间最早。<br />\r\n【输入】<br />\r\n输入文件名为 cell.in，共有三行。<br />\r\n第一行有一个正整数 N，代表细胞种数。<br />\r\n第二行有两个正整数 m<sub>1</sub>，m<sub>2</sub>，以一个空格隔开，m1<sup>m2</sup> 即表示试管的总数M。<br />\r\n第三行有 N 个正整数，第i 个数Si 表示第i 种细胞经过1 秒钟可以分裂成同种细胞的个数。<br />\r\n【输出】<br />\r\n输出文件 cell.out 共一行，为一个整数，表示从开始培养细胞到实验能够开始所经过的最少时间（单位为秒）。如果无论 Hanks 博士选择哪种细胞都不能满足要求，则输出整数-1。<br />\r\n【输入输出样例 1】<br />\r\ncell.in</p>\r\n<p>1<br />\r\n2 1<br />\r\n3</p>\r\n<p>cell.out</p>\r\n<p>-1<br />\r\n【输入输出样例1 说明】<br />\r\n经过 1 秒钟，细胞分裂成3 个，经过2 秒钟，细胞分裂成9 个，&hellip;&hellip;，可以看出无论怎么分裂，细胞的个数都是奇数，因此永远不能分入2 个试管。</p>\r\n<p>【输入输出样例 2】<br />\r\ncell.in</p>\r\n<p>2<br />\r\n24 1<br />\r\n30 12</p>\r\n<p>cell.out</p>\r\n<p>2<br />\r\n【输入输出样例2 说明】<br />\r\n第 1 种细胞最早在3 秒后才能均分入24 个试管，而第2 种最早在2 秒后就可以均分（每试管144/(241)=6 个）。故实验最早可以在2 秒后开始。<br />\r\n【数据范围】<br />\r\n对于 50%的数据，有m1<sup>m2</sup> &le; 30000。<br />\r\n对于所有的数据，有1 &le;N&le; 10000，1 &le;m<sub>1</sub> &le; 30000，1 &le;m<sub>2</sub> &le; 10000，1 &le; S<sub>i</sub> &le; 2,000,000,000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:40'),
(467, '魔术数字游戏', 'magic', '<p>【问题描述】</p>\r\n<p>填数字方格的游戏有很多种变化，如下图所示的 4*4 方格中，我们要选择从数字 1 到 16 来填满这十六个格子（ Aij ，其中 i=1..4 ， j=1..4 ）。为了让游戏更有挑战性，我们要求下列六项中的每一项所指定的四个格子，其数字累加的和必须为 34 ：</p>\r\n<p>四个角落上的数字，即： A11+A14+A41+A44=34 。</p>\r\n<p>每个角落上的 2*2 方格中的数字，例如左上角： A11+A12+A21+A22=34 。</p>\r\n<p>最中间的 2*2 方格中的数字，即： A22+A23+A32+A33=34 。</p>\r\n<p>每条水平线上四个格子的数字，即： Ai1+Ai2+Ai3+Ai4=34 ，其中 i=1..4 。</p>\r\n<p>每条他垂线上四个格子的数字，即： A1j+A2j+A3j+A4j=34 ，其中 j=1..4 。</p>\r\n<p>两条对角线上四个格子中的数字，例如左上角到右下角： A11+A22+A33+A44=34 。</p>\r\n<p>右上角到左下角： A14+A23+A32+A41=34 。</p>\r\n<table border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="78">\r\n            <p>A11</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A12</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A13</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A14</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="78">\r\n            <p>A21</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A22</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A23</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A24</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="78">\r\n            <p>A31</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A32</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A33</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A34</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="78">\r\n            <p>A41</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A42</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A43</p>\r\n            </td>\r\n            <td valign="top" width="78">\r\n            <p>A44</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>【输入】</p>\r\n<p>输入文件会指定把数字 1 先固定在某一格内。输入的文件只有一行包含两个正数据 I 和 J ，表示第 I 行和第 J 列的格子放数字 1 。剩下的十五个格子，请按照前述六项条件用数字 2 到 16 来填满。</p>\r\n<p>【输出】</p>\r\n<p>把全部的正确答案用每 4 行一组写到输出文件，每行四个数，相邻两数之间用一个空格隔开。两组答案之间，要以一个空白行相间，并且依序排好。排序的方式，先从第一行的数字开始比较，每一行数字，由最左边的数字开始比，数字较小的解答必须先输出到文件中。</p>\r\n<p>【样例】</p>\r\n<p>magic.in</p>\r\n<p>1 1</p>\r\n<p>magic.out</p>\r\n<p>1 4 13 16 <br />\r\n14 15 2 3 <br />\r\n8 5 12 9 <br />\r\n11 10 7 6</p>\r\n<p>1 4 13 16 <br />\r\n14 15 2 3 <br />\r\n12 9 8 5 <br />\r\n7 6 11 10</p>', 1000, 128, 10, 0, '2012-04-05 16:23:41'),
(468, '超级钢琴', 'piano', '<h2 style="margin: auto 0cm; text-align: center" align="center"><span style="color: black"><font face="宋体">超级钢琴</font></span></h2>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【问题描述】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">小<span lang="EN-US">Z</span>是一个小有名气的钢琴家，最近<span lang="EN-US">C</span>博士送给了小<span lang="EN-US">Z</span>一架超级钢琴，小<span lang="EN-US">Z</span>希望能够用这架钢琴创作出世界上最美妙的音乐。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">这架超级钢琴可以弹奏出<span lang="EN-US">n</span>个音符，编号为<span lang="EN-US">1</span>至<span lang="EN-US">n</span>。第<span lang="EN-US">i</span>个音符的美妙度为<span lang="EN-US">A<sub>i</sub></span>，其中<span lang="EN-US">A<sub>i</sub></span>可正可负。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">一个<span lang="EN-US">&ldquo;</span>超级和弦<span lang="EN-US">&rdquo;</span>由若干个<b><u>编号连续的</u></b>音符组成，包含的音符个数不少于<span lang="EN-US">L</span>且不多于<span lang="EN-US">R</span>。我们定义超级和弦的<b><u>美妙度</u></b>为其包含的所有音符的美妙度之和。两个超级和弦被认为是相同的，当且仅当这两个超级和弦所包含的音符集合是相同的。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">小<span lang="EN-US">Z</span>决定创作一首由<span lang="EN-US">k</span>个超级和弦组成的乐曲，为了使得乐曲更加动听，小<span lang="EN-US">Z</span>要求该乐曲由<span lang="EN-US">k</span>个<b><u>不同的</u></b>超级和弦组成。我们定义一首<b><u>乐曲的美妙度</u></b>为其所包含的所有超级和弦的美妙度之和。小<span lang="EN-US">Z</span>想知道他能够创作出来的乐曲美妙度最大值是多少。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【输入格式】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">输入文件名为<span lang="EN-US">piano.in</span>。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">输入文件第一行包含四个正整数<span lang="EN-US">n, k, L, R</span>。其中<span lang="EN-US">n</span>为音符的个数，<span lang="EN-US">k</span>为乐曲所包含的超级和弦个数，<span lang="EN-US">L</span>和<span lang="EN-US">R</span>分别是超级和弦所包含音符个数的下限和上限。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">接下来<span lang="EN-US">n</span>行，每行包含一个整数<span lang="EN-US">A<sub>i</sub></span>，表示按编号从小到大每个音符的美妙度。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【输出格式】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">输出文件为<span lang="EN-US">piano.out</span>。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">输出文件只有一个整数，表示乐曲美妙度的最大值。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【样例输入】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">4 3 2 3<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">3<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">2<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">-6<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">8<o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【样例输出】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">11<o:p></o:p></span></p>\r\n<p><b><span lang="EN-US" style="font-size: 18pt; font-family: 宋体; mso-bidi-font-family: 宋体; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA"><br style="page-break-before: always" clear="all" />\r\n</span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【样例说明】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">共有<span lang="EN-US">5</span>种不同的超级和弦：<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<ol style="margin-top: 0cm" type="1">\r\n    <li class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">音符<span lang="EN-US">1 ~ 2</span>，美妙度为<span lang="EN-US">3 + 2 = 5<o:p></o:p></span></span></li>\r\n    <li class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">音符<span lang="EN-US">2 ~ 3</span>，美妙度为<span lang="EN-US">2 + (-6) = -4<o:p></o:p></span></span></li>\r\n    <li class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">音符<span lang="EN-US">3 ~ 4</span>，美妙度为<span lang="EN-US">(-6) + 8 = 2<o:p></o:p></span></span></li>\r\n    <li class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">音符<span lang="EN-US">1 ~ 3</span>，美妙度为<span lang="EN-US">3 + 2 + (-6) = -1<o:p></o:p></span></span></li>\r\n    <li class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-list: l0 level1 lfo1; tab-stops: list 36.0pt"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">音符<span lang="EN-US">2 ~ 4</span>，美妙度为<span lang="EN-US">2 + (-6) + 8 = 4<o:p></o:p></span></span></li>\r\n</ol>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">最优方案为：乐曲由和弦<span lang="EN-US">1</span>，和弦<span lang="EN-US">3</span>，和弦<span lang="EN-US">5</span>组成，美妙度为<span lang="EN-US">5 + 2 + 4 = 11</span>。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【运行时限】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">2</span><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">秒。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【运行空限】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">512M</span><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">。<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan; mso-outline-level: 2" align="left"><b><span style="font-size: 18pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">【数据规模和约定】<span lang="EN-US"><o:p></o:p></span></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">总共<span lang="EN-US">10</span>个测试点，数据范围满足：</span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 18pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体"><span lang="EN-US"><o:p><img height="430" alt="" width="570" src="/images/clip_image001.png" /></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-pagination: widow-orphan" align="left"><span lang="EN-US" style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-indent: 21pt; text-align: left; mso-pagination: widow-orphan" align="left"><span style="font-size: 12pt; font-family: 宋体; mso-font-kerning: 0pt; mso-bidi-font-family: 宋体">所有数据满足：<span lang="EN-US">-1000 &le; A<sub>i</sub> &le; 1000</span>，<span lang="EN-US">1 &le; L &le; R &le; n</span>且保证一定存在满足要求的乐曲。<span lang="EN-US"><o:p></o:p></span></span></p>', 2000, 512, 10, 0, '2012-04-05 16:23:41');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(469, '能量采集', 'energy2010', '<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【问题描述】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">栋栋有一块长方形的地，他在地上种了一种能量植物，这种植物可以采集太阳光的能量。在这些植物采集能量后，栋栋再使用一个能量汇集机器把这些植物采集到的能量汇集到一起。</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">栋栋的植物种得非常整齐，一共有<font face="Calibri">n</font><font face="宋体">列，每列有</font><font face="Calibri">m</font><font face="宋体">棵，植物的横竖间距都一样，因此对于每一棵植物，栋栋可以用一个坐标</font><font face="Calibri">(x,&nbsp;y)</font><font face="宋体">来表示，其中</font><font face="Calibri">x</font><font face="宋体">的范围是</font><font face="Calibri">1</font><font face="宋体">至</font><font face="Calibri">n</font><font face="宋体">，表示是在第</font><font face="Calibri">x</font><font face="宋体">列，</font><font face="Calibri">y</font><font face="宋体">的范围是</font><font face="Calibri">1</font><font face="宋体">至</font><font face="Calibri">m</font><font face="宋体">，表示是在第</font><font face="Calibri">x</font><font face="宋体">列的第</font><font face="Calibri">y</font><font face="宋体">棵。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">由于能量汇集机器较大，不便移动，栋栋将它放在了一个角上，坐标正好是<font face="Calibri">(0,&nbsp;0)</font><font face="宋体">。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">能量汇集机器在汇集的过程中有一定的能量损失。如果一棵植物与能量汇集机器连接而成的线段上有<font face="Calibri">k</font><font face="宋体">棵植物，则能&nbsp;量的损失为</font><font face="Calibri">2k&nbsp;+&nbsp;1</font><font face="宋体">。例如，当能量汇集机器收集坐标为</font><font face="Calibri">(2,&nbsp;4)</font><font face="宋体">的植物时，由于连接线段上存在一棵植物</font><font face="Calibri">(1,&nbsp;2)</font><font face="宋体">，会产生</font><font face="Calibri">3</font><font face="宋体">的能量损失。注意，如果一棵植物与能量汇集机器连接的线段上没有植物，则能量损失为</font><font face="Calibri">1</font><font face="宋体">。现在要计算总的能量损失。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">下面给出了一个能量采集的例子，其中<font face="Calibri">n&nbsp;=&nbsp;5</font><font face="宋体">，</font><font face="Calibri">m&nbsp;=&nbsp;4</font><font face="宋体">，一共有</font><font face="Calibri">20</font><font face="宋体">棵植物，在每棵植物上标明了能量汇集机器收集它的能量时产生的能量损失。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p><img alt="" width="627" height="477" src="/images/energy2010.png" /></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">在这个例子中，总共产生了<font face="Calibri">36</font><font face="宋体">的能量损失。</font></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0">&nbsp;</p>\r\n<p>\r\n<p>&nbsp;</p>\r\n<!--EndFragment--></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输入格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><font face="宋体">仅包含一行，为两个整数</font><font face="Calibri">n</font><font face="宋体">和</font><font face="Calibri">m</font><font face="宋体">。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输出格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><font face="宋体">仅包含一个整数，表示总共产生的能量损失。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输入1】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">5&nbsp;4</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输出1】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">36</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输入2】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">3&nbsp;4</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输出2】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">20</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【数据规模和约定】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">10%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n,&nbsp;m&nbsp;&le;&nbsp;10</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">50%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n,&nbsp;m&nbsp;&le;&nbsp;100</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">80%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n,&nbsp;m&nbsp;&le;&nbsp;1000</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">90%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n,&nbsp;m&nbsp;&le;&nbsp;10,000</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">100%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n,&nbsp;m&nbsp;&le;&nbsp;100,000</font><font face="宋体">。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<!--EndFragment-->', 1000, 512, 10, 0, '2012-04-05 16:23:41'),
(470, '海拔', 'altitude', '<p style="text-align: center; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">海拔</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【问题描述】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">YT<font face="宋体">市是一个规划良好的城市，城市被东西向和南北向的主干道划分为</font><font face="Calibri">n&times;n</font><font face="宋体">个区域。简单起见，可以将</font><font face="Calibri">YT</font><font face="宋体">市看作&nbsp;一个正方形，每一个区域也可看作一个正方形。从而，</font><font face="Calibri">YT</font><font face="宋体">城市中包括</font><font face="Calibri">(n+1)&times;(n+1)</font><font face="宋体">个交叉路口和</font><font face="Calibri">2n&times;(n+1)</font><font face="宋体">条双向道路（简称道路），每条双向&nbsp;道路连接主干道上两个相邻的交叉路口。下图为一张</font><font face="Calibri">YT</font><font face="宋体">市的地图</font><font face="Calibri">(n&nbsp;=&nbsp;2)</font><font face="宋体">，城市被划分为</font><font face="Calibri">2&times;2</font><font face="宋体">个区域，包括</font><font face="Calibri">3&times;3</font><font face="宋体">个交叉路口和</font><font face="Calibri">12</font><font face="宋体">条双向道路。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p style="text-align: center"><img width="508" height="288" alt="" src="/images/altitude1.png" /></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">小<font face="Calibri">Z</font><font face="宋体">作为该市的市长，他根据统计信息得到了每天上班高峰期间</font><font face="Calibri">YT</font><font face="宋体">市每条道路两个方向的人流量，即在高峰期间沿&nbsp;着该方向通过这条道路的人数。每一个交叉路口都有不同的海拔高度值，</font><font face="Calibri">YT</font><font face="宋体">市市民认为爬坡是一件非常累的事情，每向上爬</font><font face="Calibri">h</font><font face="宋体">的高度，就需要消耗</font><font face="Calibri">h</font><font face="宋体">的体力。如果&nbsp;是下坡的话，则不需要耗费体力。因此如果一段道路的终点海拔减去起点海拔的值为</font><font face="Calibri">h(</font><font face="宋体">注意</font><font face="Calibri">h</font><font face="宋体">可能是负数</font><font face="Calibri">)</font><font face="宋体">，那么一个人经过这段路所消耗的体力是</font></span><span style="font-family: ''Calibri''; font-size: 10pt; font-weight: bold; mso-spacerun: ''yes''" class="15">max</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">{0,&nbsp;h}<font face="宋体">（这里</font></span><span style="font-family: ''Calibri''; font-size: 10pt; font-weight: bold; mso-spacerun: ''yes''" class="15">max</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">{a,&nbsp;b}<font face="宋体">表示取</font><font face="Calibri">a,&nbsp;b</font><font face="宋体">两个值中的较大值）。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">小<font face="Calibri">Z</font><font face="宋体">还测量得到这个城市西北角的交叉路口海拔为</font><font face="Calibri">0</font><font face="宋体">，东南角的交叉路口海拔为</font><font face="Calibri">1(</font><font face="宋体">如上图所示</font><font face="Calibri">)</font><font face="宋体">，但其它交叉路口的海拔高度都无法得知。小</font><font face="Calibri">Z</font><font face="宋体">想知道在最理想的情况下（即你可以任意假设其他路口的海拔高度），每天上班高峰期间所有人爬坡消耗的总体力和的最小值。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输入格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><font face="宋体">第一行包含一个整数</font><font face="Calibri">n</font><font face="宋体">，含义如上文所示。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">接下来<font face="Calibri">4n(n&nbsp;+&nbsp;1)</font><font face="宋体">行，每行包含一个非负整数分别表示每一条道路每一个方向的人流量信息。输入顺序：</font><font face="Calibri">n(n&nbsp;+&nbsp;1)</font><font face="宋体">个数表示所有从西到东方向的人流量，然后</font><font face="Calibri">n(n&nbsp;+&nbsp;1)</font><font face="宋体">个数表示所有从北到南方向的人流量，</font><font face="Calibri">n(n&nbsp;+&nbsp;1)</font><font face="宋体">个数表示所有从东到西方向的人流量，最后是</font><font face="Calibri">n(n&nbsp;+&nbsp;1)</font><font face="宋体">个数表示所有从南到北方向的人流量。对于每一个方向，输入顺序按照起点由北向南，若南北方向相同时由西到东的顺序给出</font><font face="Calibri">(</font><font face="宋体">参见样例输入</font><font face="Calibri">)</font><font face="宋体">。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输出格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><font face="宋体">仅包含一个数，表示在最理想情况下每天上班高峰期间所有人爬坡所消耗的总体力和（即总体力和的最小值），结果四舍五入到整数。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输入】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">1</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">1</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">2</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">3</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">4</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">5</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">6</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">7</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">8</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输出】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">3</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例说明】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">样例数据见下图。</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p><img width="471" height="229" alt="" src="/images/altitude2.png" /></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">最理想情况下所有点的海拔如上图所示。</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【数据规模】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">20%</font><font face="宋体">的数据：</font><font face="Calibri">n&nbsp;&le;&nbsp;3</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">50%</font><font face="宋体">的数据：</font><font face="Calibri">n&nbsp;&le;&nbsp;15</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">80%</font><font face="宋体">的数据：</font><font face="Calibri">n&nbsp;&le;&nbsp;40</font><font face="宋体">；</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">对于<font face="Calibri">100%</font><font face="宋体">的数据：</font><font face="Calibri">1&nbsp;&le;&nbsp;n&nbsp;&le;&nbsp;500</font><font face="宋体">，</font><font face="Calibri">0&nbsp;&le;&nbsp;</font><font face="宋体">流量&nbsp;</font><font face="Calibri">&le;&nbsp;1,000,000</font><font face="宋体">且所有流量均为整数。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【提示】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">海拔高度不一定是整数。</span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【运行时限】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">2<font face="宋体">秒。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<h2 style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【运行空限】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></h2>\r\n<p style="margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''">512M<font face="宋体">。</font></span><span style="font-family: ''Calibri''; font-size: 10.5pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<!--EndFragment-->', 2000, 512, 10, 0, '2012-04-05 16:23:41'),
(471, '航空管制', 'plane', '<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【问题描述】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">世博期间，上海的航空客运量大大超过了平时，随之而来的航空管制也频频发生。最近，小X就因为航空管制，连续两次在机场被延误超过了两小时。对此，小X表示很不满意。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">在这次来烟台的路上，小X不幸又一次碰上了航空管制。于是小X开始思考关于航空管制的问题。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">假设目前被延误航班共有n个，编号为1至n。机场只有一条起飞跑道，所有的航班需按某个顺序依次起飞（称这个顺序为</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">）。定义一个航班的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">为该航班在</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">中的位置，即是第几个起飞的航班。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 18pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">起飞序列还存在两类限制条件：</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: -18pt; margin-bottom: 0pt; margin-left: 36pt" class="p0"><span style="font-family: ''Symbol''; font-size: 10pt; mso-spacerun: ''yes''">&middot;&nbsp;</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">第一类（</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">最晚起飞时间限制</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">）：编号为i的航班</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">不得超过k</span><span style="font-family: ''宋体''; font-size: 12pt; vertical-align: sub; mso-spacerun: ''yes''">i</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">;</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: -18pt; margin-bottom: 0pt; margin-left: 36pt" class="p0"><span style="font-family: ''Symbol''; font-size: 10pt; mso-spacerun: ''yes''">&middot;&nbsp;</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">第二类（</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">相对起飞顺序限制</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">）：存在一些相对起飞顺序限制(a,&nbsp;b)，表示航班a的起飞时间必须早于航班b，即航班a的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">必须小于航班b的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 18pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">小X思考的第一个问题是，若给定以上两类限制条件，是否可以计算出一个可行的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">。第二个问题则是，在考虑两类限制条件的情况下，如何求出每个航班在所有可行的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">中的最小</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输入格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">输入文件plane.in第一行包含两个正整数n和m，n表示航班数目，m表示第二类限制条件（</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">相对起飞顺序限制</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">）的数目。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">第二行包含n个正整数k1,&nbsp;k2,&nbsp;&hellip;,&nbsp;kn。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">接下来m行，每行两个正整数a和b，表示一对相对起飞顺序限制(a,&nbsp;b)，其中1&le;a,b&le;n,&nbsp;表示航班a必须先于航班b起飞。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【输出格式】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">输出文件plane.out由两行组成。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">第一行包含n个整数，表示一个可行的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">，相邻两个整数用空格分隔。输入数据保证至少存在一个可行的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">。如果存在多个可行的方案，输出任意一个即可。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: 21pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">第二行包含n个整数t</span><span style="font-family: ''宋体''; font-size: 12pt; vertical-align: sub; mso-spacerun: ''yes''">1</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">,&nbsp;t</span><span style="font-family: ''宋体''; font-size: 12pt; vertical-align: sub; mso-spacerun: ''yes''">2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">,&nbsp;&hellip;,&nbsp;t</span><span style="font-family: ''宋体''; font-size: 12pt; vertical-align: sub; mso-spacerun: ''yes''">n</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">，其中t</span><span style="font-family: ''宋体''; font-size: 12pt; vertical-align: sub; mso-spacerun: ''yes''">i</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">表示航班i可能的最小</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序号</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">，相邻两个整数用空格分隔。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0">&nbsp;</p>\r\n<p style="text-align: left; margin-top: 0pt; text-indent: -18pt; margin-bottom: 0pt; margin-left: 36pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输入1】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p>&nbsp;</p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">5&nbsp;5</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">4&nbsp;5&nbsp;2&nbsp;5&nbsp;4</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">1&nbsp;2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">5&nbsp;1</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;4</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;1</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输出1】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;5&nbsp;1&nbsp;4&nbsp;2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;4&nbsp;1&nbsp;2&nbsp;1</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输入2】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">5&nbsp;0</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;3&nbsp;3&nbsp;5&nbsp;5</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例输出2】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;2&nbsp;1&nbsp;5&nbsp;4</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">1&nbsp;1&nbsp;1&nbsp;4&nbsp;4</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【样例说明】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; mso-spacerun: ''yes''">在样例1&nbsp;中：</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;5&nbsp;1&nbsp;4&nbsp;2满足了所有的限制条件，所有满足条件的</span><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; text-decoration: underline; mso-spacerun: ''yes''">起飞序列</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">有：</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">3&nbsp;4&nbsp;5&nbsp;1&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;5&nbsp;1&nbsp;2&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;5&nbsp;1&nbsp;4&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;5&nbsp;4&nbsp;1&nbsp;2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">5&nbsp;3&nbsp;1&nbsp;2&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;3&nbsp;1&nbsp;4&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;3&nbsp;4&nbsp;1&nbsp;2</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">由于存在(5,&nbsp;1)和(3,&nbsp;1)两个限制，航班1只能安排在航班5和3之后，故最早起飞时间为3，其他航班类似。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; font-weight: bold; mso-spacerun: ''yes''">在样例2&nbsp;中：</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">虽然航班4、5没有相对起飞顺序限制，但是由于航班1、2、3都必须安排在前3个起飞，所以4、5最早只能安排在第4个起飞。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【数据范围】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">对于30%数据：n&le;10；</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">对于60%数据：n&le;500；</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">对于100%数据：n&le;2,000，m&le;10,000。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【运行时限】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">1秒。</span><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''">【运行空限】</span><span style="font-family: ''宋体''; font-size: 18pt; font-weight: bold; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''">512M。</span></p>\r\n<p style="text-align: left; margin-top: 0pt; margin-bottom: 0pt" class="p0"><span style="font-family: ''宋体''; font-size: 12pt; mso-spacerun: ''yes''"><o:p>注意：由于没有评测插件，这题只需输出第二问即可</o:p></span></p>\r\n<!--EndFragment-->', 1000, 512, 10, 0, '2012-04-05 16:23:41');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(472, '火车调度', 'train', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 火车站内往往设有一些主干线分叉出去的铁路支路，供火车停靠，以便上下客或装载货物。铁路支路有一定长度；火车也有一定的长度，且每列火车的长度相等。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 假设某东西向的铁路上，有一小站。该站只有一条铁路支路可供火车停靠，并且该铁路支路最多能容纳 M 辆火车。为了火车行驶的通畅，该站只允许火车自东方进站，自西方出站，且先进站的火车必须先出站，否则，站内火车将发生堵塞。 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 该火车站工作任务繁忙。每天都有 N 辆自东方驶向西方的火车要求在预定时刻进站，并在站内作一定时间的停靠。为了满足每辆进站火车的要求，小站的调度工作是井井有条地开展。在小站每天的工作开始前，小站工作人员须阅读所有火车的进站申请,并决定究竞接受哪些火车的申请。而对于不能满足要求的火车，小站必须提前通知它们，请它们改变行车路线，以免影响正常的铁路运输工作。由于火车进站、出站的用时可以忽略不计，小站允许几辆火车同时进站或出站，且小站工作人员可以任意安排这些火车进站的先后排列次序。小站的工作原则是尽量地满足申请火车的要求。&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 请你编一个程序，帮助工作人员考察某天所有火车的进站申请，计算最多能满足多少火车的要求。</p>\r\n<p><br />\r\n输入数据： <br />\r\n共 N＋1行。 <br />\r\n第一行是两个正整数N和M。（N&le;100，M&le;3）； <br />\r\n以下N行每行是一辆火车的进站申请，第i+1行的两个整数分别表示第i列火车进站的时间和火车出站的时间。</p>\r\n<p>输出数据： <br />\r\n仅一行，是一个正整数B，表示火车站最多能接纳的火车数量。</p>\r\n<p><br />\r\n样例 <br />\r\ntrain.in <br />\r\n6 3 <br />\r\n2 4 <br />\r\n1 7 <br />\r\n3 6 <br />\r\n5 7 <br />\r\n8 10 <br />\r\n9 11 <br />\r\n&nbsp;&nbsp; <br />\r\ntrain.out <br />\r\n5</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:41'),
(473, '核电站问题', 'nucle', '<p><b>【问题描述】</b></p>\r\n<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;一个核电站有 N 个放核物质的坑，坑排列在一条直线上。如果连续 M 个坑中放入核物质，则会发生爆炸，于是，在某些坑中可能不放核物质。</p>\r\n<p>　　 任务：对于给定的 N 和 M ，求不发生爆炸的放置核物质的方案总数。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件（nucle.in）只一行，两个正整数 N ， M( 1&lt;N&lt;50 ， 2 &le; M &le; 5)</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输出文件 (nucle.out) 只有一个正整数 S ，表示方案总数。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入：</p>\r\n<p>nucle.in</p>\r\n<p>4 3</p>\r\n<p>输出：</p>\r\n<p>nucle.out</p>\r\n<p>13</p>', 1000, 128, 10, 0, '2012-04-05 16:23:41'),
(474, '集合', 'subset1', '<p>给定两个集合A、B，集合内的任一元素x满足1 &le; x &le; 10^9，每个集合的元素个数不超过20,000。我们希望求出A、B之间的关系。&nbsp;<br />\r\n任　务：给定两个集合的描述，判断它们满足下列关系的哪一种：<br />\r\nA是B的一个真子集，输出&ldquo;A is a proper subset of B&rdquo;<br />\r\nB是A的一个真子集，输出&ldquo;B is a proper subset of A&rdquo;<br />\r\nA和B的交集为空，输出&ldquo;A and B are disjoint&rdquo;<br />\r\nA和B是同一个集合，输出&ldquo;A equals B&rdquo;<br />\r\n上述情况都不是，输出&ldquo;I am confused!&rdquo;<br />\r\n&nbsp;</p>\r\n<p>输入格式：</p>\r\n<p>两行，均为整数，第一行为集合A，其中第一个数表示集合A的元素个数，第二行为集合B，其中第一个数表示集合B的元素个数；</p>\r\n<p>输出格式：</p>\r\n<p>一行，为两个集合的关系。</p>\r\n<p>样例：<br />\r\n输入 subset1.in<br />\r\n11 1 2 3 4 5 6 7 8 9 10 12<br />\r\n11 11 13 44 56 76 878 43 466 6657 19 678</p>\r\n<p>输出 subset1.out<br />\r\nA and B are disjoint</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:41'),
(475, '数学家旅游', 'golygon', '<p>【问题描述】</p>\r\n<p>有一个城市的道路由规则的方砖组成。有一位数学家来参观，他可沿方砖的边沿行走，有四种方法：<br />\r\nn(0,1)，s(0,-1)，e(1,0)，w(-1,0)，但他是一个很怪的数学家，他会走一段时间休息一会儿，然后继续走。他有几个很特别的特性：<br />\r\n(1)不喜欢休息后走的方向和休息前一样；<br />\r\n(2)第一次休息前走一步，休息后走的距离比休息前走的距离长一步；<br />\r\n(3)不喜欢重复走同一个地方；<br />\r\n(4)要走回出发点。<br />\r\n我们称他的路线是一个golygon。我们可以将出发的地点标记为(0，0)，城市有几个地点正在施工，是不可以通行的。为了这位奇怪的科学家可以旅游得开心，我们决定帮他设计旅游的方案，找出城市中有多少个他希望的golygon。</p>\r\n<p>【输入】<br />\r\n从输入文件读入数据。文件的第一行是golygons最大边的大小(不大于20)，第二行是施工地点的个数(不大于50)，以下的每一行有两个数字，表示施工的地点的坐标。</p>\r\n<p>【输出】<br />\r\n答案输出到输出文件。输出每一个golygon的走法，每个占一行，最后输出golygon的个数。</p>\r\n<p>【输入输出样例】<br />\r\n样例输入（golygon.in）:<br />\r\n8<br />\r\n2<br />\r\n-2&nbsp; 0<br />\r\n6&nbsp; -2</p>\r\n<p>样例输出（golygon.out）： <br />\r\nwsenenws<br />\r\nFound 1 golygon(s)</p>\r\n<p>&nbsp;</p>', 1000, 128, 6, 0, '2012-04-05 16:23:41'),
(476, '最长公共子序列长度', 'lcslength', '<div>\r\n<div><span style="font-size: medium"><b>【问题描述</b>】<br />\r\n字符序列的子序列是指从给定字符序列中随意地(不一定连续)去掉若干个字符(可能一个也不去掉)后所形成的字符序列。令给定的字符序列x=&ldquo;x<sub>0</sub>，x<sub>1</sub>，&hellip;，x<sub>n-1</sub>&rdquo;， 序列Y=&ldquo;y<sub>0</sub>，y<sub>1</sub>，&hellip;，y<sub>k-1</sub>是X的子序列，存在X的一个严格递增下标序 列&lt;i<sub>0</sub>，i<sub>1</sub>，&hellip;，i<sub>k-1</sub>&gt;，使得对所有的j=0，1，&hellip;，k- 1，有x<sub>ij</sub>=y<sub>j</sub>。<br />\r\n例如，x=&ldquo;ABCBDAB&rdquo;，Y=&ldquo;BCDB&rdquo;是X的一个子序列。<br />\r\n对给定的两个字符序列，求出他们最长的公共子序列长度。</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: medium"><b>【</b>输入格式】</span></div>\r\n<div><span style="font-size: medium">第1行为第1个字符序列，都是大写字母组成，以&rdquo;.&rdquo;结束。长度小于5000。<br />\r\n第2行为第2个字符序列，都是大写字母组成，以&rdquo;.&rdquo;结束，长度小于5000。</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: medium"><b>【</b>输出格式】</span></div>\r\n<div><span style="font-size: medium">输出上述两个最长公共子序列的长度。<br />\r\n</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: medium"><b>【</b>输入样例】<br />\r\nABCBDAB．<br />\r\nBACBBD．</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: medium"><b>【</b>输出样例】<br />\r\n4<br />\r\n</span></div>\r\n</div>', 1000, 128, 10, 0, '2012-04-05 16:23:41'),
(477, '排序工作量-加强版', 'px', '<p>给出一个整数数列A,输出这个数列中的逆序对数量</p>\r\n<p>逆序对定义：</p>\r\n<p>Ai&lt;Aj 而且 i&gt;j</p>\r\n<p>输入格式</p>\r\n<p>第一行一个整数n</p>\r\n<p>下面有n行，每行一个正整数</p>\r\n<p>输出格式</p>\r\n<p>一个整数，逆序对数目</p>\r\n<p>数据规模：</p>\r\n<p>n=50000</p>\r\n<p>数列中的数小于1000000</p>', 256, 256, 10, 0, '2012-04-05 16:23:41'),
(478, '罪犯问题A', 'criminala', '<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">一天，警官抓获了<font face="Times New Roman">N</font><font face="宋体">个嫌犯，有</font><font face="Times New Roman">M</font><font face="宋体">个居民站了出来指证罪犯，每人说了一句话，形式有两种，</font><font face="Times New Roman">&ldquo;***</font><font face="宋体">是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">，</font><font face="Times New Roman">&ldquo;***</font><font face="宋体">不是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">。现在警长想借此考察居民的诚信程度，请作为警长副手的你帮忙，求出最多有多少个人在说谎，最少有多少个人在说谎。</font></span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【输入格式】</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">&nbsp;&nbsp;&nbsp;&nbsp;第一行，两个整数<font face="Times New Roman">N</font><font face="宋体">，</font><font face="Times New Roman">M</font><font face="宋体">，含义如题目描述所示。</font></span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">第<font face="Times New Roman">2&mdash;M+1</font><font face="宋体">行，第</font><font face="Times New Roman">i+1</font><font face="宋体">行有一个整数</font><font face="Times New Roman">X</font><font face="宋体">，若</font><font face="Times New Roman">X</font><font face="宋体">大于零，表示</font></span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">有一个</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">居民说<font face="Times New Roman">&ldquo;X</font><font face="宋体">号是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">；若</font><font face="Times New Roman">X</font><font face="宋体">小于零，表示</font></span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">有一个</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">居民说<font face="Times New Roman">&ldquo;-X</font><font face="宋体">号不是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">。</font></span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【输出格式】</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">共有两行，第一行输出最多有多少个人在说谎，第二行输出最少有多少个人在说谎。</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【样例输入】</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">2&nbsp;7</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">2</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-1</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-2</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-1</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【样例输出】</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">4</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">3</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">如果<font face="Times New Roman">1</font><font face="宋体">号嫌犯不是罪犯，</font><font face="Times New Roman">2</font><font face="宋体">号也不是，则有四人说谎，如果</font><font face="Times New Roman">1</font><font face="宋体">号嫌犯是罪犯，而</font><font face="Times New Roman">2</font><font face="宋体">号也是，则有三人说谎。</font></span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【数据规模】</span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">对于<font face="Times New Roman">30%</font><font face="宋体">的数据，</font><font face="Times New Roman">N&lt;=10,M&lt;=500;</font></span><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">对于<font face="Times New Roman">100%</font><font face="宋体">的数据，</font><font face="Times New Roman">N&lt;=1000,M&lt;=50000;</font></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">by kily</span></p>\r\n<!--EndFragment-->', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(479, '罪犯问题B', 'criminalb', '<div class="Section0" style="layout-grid:  18pt none">\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">一天，警官抓获了<font face="DejaVu Serif">N</font><font face="明兰">个嫌犯，</font><font face="DejaVu Serif">M</font><font face="明兰">个居民站了出来指证</font></span><span style="font-size: 12pt; font-family: ''明兰''; mso-spacerun: ''yes''">他们</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">，每人说了一句话，形式有两种，<font face="DejaVu Serif">&ldquo;***</font><font face="明兰">是罪犯</font><font face="DejaVu Serif">&rdquo;</font><font face="明兰">，</font><font face="DejaVu Serif">&ldquo;***</font><font face="明兰">不是罪犯</font><font face="DejaVu Serif">&rdquo;</font><font face="明兰">。已经知道居民还是比较可信的，说谎的人数不会超过</font><font face="DejaVu Serif">K</font><font face="明兰">人。且根据每个嫌犯所被怀疑犯的罪不同，每个</font></span><span style="font-size: 12pt; font-family: ''明兰''; mso-spacerun: ''yes''">嫌</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">犯的邪恶程度也不同，用一个正整数表示，该整数越大表明该人</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">如果是罪犯的话他</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">越邪恶，若某人不是罪犯，当然他就一点不邪恶，邪恶程度为<font face="DejaVu Serif">0</font><font face="明兰">。现在希望你能写个程序判断出罪犯总邪恶程度最大为多少，最小为多少。</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">【输入格式】</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">&nbsp;第一行，两个整数<font face="DejaVu Serif">N</font><font face="明兰">，</font><font face="DejaVu Serif">M</font><font face="明兰">，</font><font face="DejaVu Serif">K</font><font face="明兰">含义如题目描述所示。</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">第二行，<font face="DejaVu Serif">N</font><font face="明兰">个整数，第</font><font face="DejaVu Serif">i</font><font face="明兰">个整数表示编号</font><font face="DejaVu Serif">i</font><font face="明兰">的嫌犯被怀疑罪行的邪恶程度。</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">第<font face="DejaVu Serif">3&mdash;M+2</font><font face="明兰">行，第</font><font face="DejaVu Serif">i+2</font><font face="明兰">行有一个整数</font><font face="DejaVu Serif">X</font><font face="明兰">，若</font><font face="DejaVu Serif">X</font><font face="明兰">大于零，表示</font></span><span style="font-size: 12pt; font-family: ''明兰''; mso-spacerun: ''yes''">有个</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">居民说<font face="DejaVu Serif">&ldquo;X</font><font face="明兰">号是罪犯</font><font face="DejaVu Serif">&rdquo;</font><font face="明兰">；若</font><font face="DejaVu Serif">X</font><font face="明兰">小于零，表示</font></span><span style="font-size: 12pt; font-family: ''明兰''; mso-spacerun: ''yes''">有个</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">居民说<font face="DejaVu Serif">&ldquo;-X</font><font face="明兰">号不是罪犯</font><font face="DejaVu Serif">&rdquo;</font><font face="明兰">。</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">【输出格式】</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">共有两行，第一行罪犯总邪恶程度最大为多少，第二行输出总邪恶程度最小为多少。</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">【样例输入】</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">2&nbsp;7&nbsp;3</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">2&nbsp;3</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">2</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">-1</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">-2</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">-1</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">【样例输出】</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">5</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">2</span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">一号是罪犯，二号也是的时候，邪恶程度最大，为<font face="DejaVu Serif">5</font><font face="明兰">，一号是罪犯，而二号不是的时候，邪恶程度最小，为</font><font face="DejaVu Serif">2</font><font face="明兰">。而两人都不是罪犯的时候说谎人数为</font><font face="DejaVu Serif">4</font><font face="明兰">，不可能出现这种情况。</font></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">对于<font face="DejaVu Serif">30%</font><font face="明兰">的数据，</font><font face="DejaVu Serif">N&lt;=10,M&lt;=500;</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">对于<font face="DejaVu Serif">80%</font><font face="明兰">的数据，</font><font face="DejaVu Serif">M&lt;=5000;</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">对于<font face="DejaVu Serif">100%</font><font face="明兰">的数据，</font><font face="DejaVu Serif">N&lt;=1000,M&lt;=50000;</font></span><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''">数据保证有解。</span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''DejaVu Serif''; mso-spacerun: ''yes''"><o:p></o:p><o:p></o:p><o:p></o:p><o:p></o:p><o:p></o:p></span>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">by kily</span></p>\r\n<!--{12873913910190}--></div>\r\n<!--EndFragment-->', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(480, '罪犯问题C', 'criminalc', '<div class="Section0">\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">一天，警官抓获了<font face="Times New Roman">N</font><font face="宋体">个嫌犯，审问</font><font face="Times New Roman">N</font><font face="宋体">个罪犯的途中，作为警长助手的你突然发现其中被确定为罪犯的</font><font face="Times New Roman">K</font><font face="宋体">号人是你曾经出生入死的兄弟，你不能眼睁睁看着他被抓进牢里。审问完了嫌犯之后，发现每个人都说话了，并且每个人只说了一句话，说的话形式有两种，</font><font face="Times New Roman">&ldquo;***</font><font face="宋体">是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">，</font><font face="Times New Roman">&ldquo;***</font><font face="宋体">不是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">，并且罪犯说的都是假话，不是罪犯的说的都是真话</font><font face="Times New Roman">(</font><font face="宋体">每人说的话均不是说自己</font><font face="Times New Roman">)</font><font face="宋体">。因为见过某</font><font face="Times New Roman">M</font><font face="宋体">个人的通缉令，镇长可以确定这</font><font face="Times New Roman">M</font><font face="宋体">个人是罪犯。通过这些情况可推断出大部分人是不是罪犯。值得庆幸的是，你兄弟并不在这<font face="Times New Roman">M</font><font face="宋体">个</font>人之中。每个人说话的内容都已经存入了资料库之中，现在你需要冒险修改资料库中某些人说话的内容使得你兄弟摆脱的罪犯嫌疑。当然修改的条数越多，风险也就越大，现在希望你能求出最少要修改资料库中几个人说的话。</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【输入格式】</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">第一行，三个整数<font face="Times New Roman">N</font><font face="宋体">，</font><font face="Times New Roman">M</font><font face="宋体">，</font><font face="Times New Roman">K</font><font face="宋体">，含义如题目描述所示。</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">第二行，<font face="Times New Roman">M</font><font face="宋体">个整数，第</font><font face="Times New Roman">i</font><font face="宋体">个整数</font><font face="Times New Roman">Ti</font><font face="宋体">表示编号</font><font face="Times New Roman">Ti</font><font face="宋体">的嫌犯确定是罪犯。</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">第<font face="Times New Roman">3-N+2</font><font face="宋体">行，第</font><font face="Times New Roman">i+2</font><font face="宋体">行有一个整数</font><font face="Times New Roman">X</font><font face="宋体">，若</font><font face="Times New Roman">X</font><font face="宋体">大于零，表示编号为</font><font face="Times New Roman">i</font><font face="宋体">嫌犯的人说</font><font face="Times New Roman">&ldquo;X</font><font face="宋体">号是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">；若</font><font face="Times New Roman">X</font><font face="宋体">小于零，表示编号</font><font face="Times New Roman">i</font><font face="宋体">为嫌犯的居民说</font><font face="Times New Roman">&ldquo;-X</font><font face="宋体">号不是罪犯</font><font face="Times New Roman">&rdquo;</font><font face="宋体">。</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【输出格式】</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">仅一个整数，表示最少需修改资料库中几人说的话。</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【样例输入】</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">3&nbsp;1&nbsp;3</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">1</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-2</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-3</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">-1</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【样例输出】</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">2</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">修改<font face="Times New Roman">3</font><font face="宋体">号说的话和另外随意某人说的话就可以使</font><font face="Times New Roman">K</font><font face="宋体">号不再是罪犯。</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">【数据规模】</span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">对于<font face="Times New Roman">20%</font><font face="宋体">的数据，</font><font face="Times New Roman">N&lt;=10;</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">对于<font face="Times New Roman">100%</font><font face="宋体">的数据，</font><font face="Times New Roman">N&lt;=200000,1&lt;=M&lt;=N;</font></span><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">数据保证嫌犯说的话不存在矛盾，且<font face="Times New Roman">K</font><font face="宋体">号本为罪犯且未在通缉令上。</font></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt"><span style="font-size: 10.5pt; font-family: ''Times New Roman''; mso-spacerun: ''yes''">by kily</span></p>\r\n</div>\r\n<!--EndFragment-->', 1000, 128, 10, 0, '2012-04-05 16:23:42');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(481, '罪犯问题D', 'criminald', '<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">有N个嫌犯，镇长在审问他们，审问过程中不知道哪个人会突然说出来句话，说的话形式有两种，&ldquo;***是罪犯&rdquo;，&ldquo;***不是罪犯&rdquo;。已知罪犯说的都是假话，不是罪犯的说的都是真话（每人说的话均不指自己）。且因为见过M个人的通缉令，镇长可是确定这M个人是罪犯。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">通过这些情况可推断出别人是不是罪犯。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">现在镇长会在审问过程中随时询问作为副手的你，&ldquo;***是不是罪犯？&rdquo;，请你设计程序回答&ldquo;Yes&rdquo;，&ldquo;No&rdquo;或者&ldquo;Unknown&rdquo;。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">【输入格式】</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">&nbsp;&nbsp;&nbsp;&nbsp;第一行，两个整数N，M，含义如题目描述所示。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">第二行，M个整数，第i个整数Ti表示编号Ti的嫌犯确定是罪犯。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 24pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">接下来每行开头有一个大写字母：</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; margin-left: 21pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">若为&ldquo;S&rdquo;，表示某嫌犯说话了，接下来有两个整数A，B，若B大于零，表示编号A的嫌犯说&ldquo;B号是罪犯&rdquo;；若B小于零，表示编号为A的嫌犯说&ldquo;-B号不是罪犯&rdquo;。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; margin-left: 21pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">若为&ldquo;A&rdquo;，表示镇长询问你了，接下来有一个整数X，表示镇长询问你&ldquo;X号是不是罪犯？&rdquo;，是则回答&ldquo;Yes&rdquo;，不是则回答&ldquo;No&rdquo;，在当前已知情况下无法确定则回答&ldquo;Unknown&rdquo;。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; margin-left: 21pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">若为E，表示审问结束。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">【输出格式】</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-indent: 21pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">假设询问有K个，则输出有K行，对于每一个询问，回答&ldquo;Yes&rdquo;，&ldquo;No&rdquo;或者&ldquo;Unknown&rdquo;。</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">【样例输入】</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">3&nbsp;1</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">1</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">A&nbsp;3</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">S&nbsp;1&nbsp;3</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">A&nbsp;3</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">S&nbsp;3&nbsp;-2</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">A&nbsp;2</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">A&nbsp;1</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">E</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">【样例输出】</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">Unknown</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">No</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">No</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">Yes</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">【数据规模】</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">对于30%的数据，N&lt;=1000，S与A数目和&lt;=10000，S：A约为10：3;</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">对于100%的数据，N&lt;=50000,1&lt;=M&lt;=N，&nbsp;S与A数目和&lt;=200000，S：A约为1：3;</span><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p></span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''">数据保证嫌犯说的话不存在矛盾.</span></p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left">&nbsp;</p>\r\n<p class="p0" style="margin-top: 0pt; margin-bottom: 0pt; text-align: left"><span style="font-size: 12pt; font-family: ''宋体''; mso-spacerun: ''yes''"><o:p></o:p><o:p></o:p><o:p></o:p><o:p></o:p><o:p>by kily</o:p></span></p>\r\n<!--EndFragment-->', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(482, 'NBA总冠军', 'nba', '<p>【问题描述】<br />\r\n又要考试了，Ljw决定放松一下，就打开电视，看见了篮球赛，他立即想到了每年的NBA总冠军队伍。由于复习紧张，他只记起了一部分，记忆的内容是正确的，可能不是按时间顺序排列的，记忆的内容可能有重复。<br />\r\n现在请求学过编程的你帮助Ljw，按时间顺序依次输出总冠军的球队(不能重复)。<br />\r\n(NBA从1947A．D到2009A．D)</p>\r\n<p>【输入】<br />\r\n输入文件nba.in的第一行是一个整数n(0&lt;n&lt;50)。<br />\r\n接下来的n行，每行先是城市名(由大小写字母、空格组成)，后是时间(由数字组成)。二者之间用空格隔开。</p>\r\n<p>【输出】<br />\r\n输出文件nba.out共n行，即排序后的NBA总冠军队伍。每行先是时间，后是城市名。</p>\r\n<p>【输入输出样例】<br />\r\nnba.in</p>\r\n<p>3<br />\r\nBoston 1963<br />\r\nBoston 1959<br />\r\nPhilly 1947</p>\r\n<p>nba.out</p>\r\n<p>1947 Philly<br />\r\n1959 Boston<br />\r\n1963 Boston</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(483, '买票', 'tickets', '<p>【问题描述】<br />\r\n周末ztc想去剧场看演出，但他没有票。这时，救世主Wzj出现了，他慷慨地愿意卖给Ztc一些票。Wzj手上共有n张票，但每张票的费用都不一样，贪心的ztc想要得到尽可能多的票，但又想花费最少，慷慨的wzj愿意给连续的m<br />\r\n张票。Ztc希望你能帮助他在花钱范围内取得最大的票数。</p>\r\n<p>【输入】<br />\r\n输入文件tickets.in的第一行是2个整数n，f 其中(2&le;N&le;1000000)，表示票的数目，(10&le;f&le;10000)，表示ztc身上的钱。接下来的1行，有n个整数a(1&le;a&le;30)，表示每一张票的票价。</p>\r\n<p>【输出】<br />\r\n输出文件tickets.out仅一行整数m，表示Ztc。能得连续的最大票数。</p>\r\n<p>【输入输出样例】<br />\r\ntickets.in<br />\r\n5 10<br />\r\n2 3 1 6 7<br />\r\ntickets.out<br />\r\n3<br />\r\n【限制】<br />\r\n50％的数据满足：2&le;n&le;10000<br />\r\n100％的数据满足：2&le;n&le;1000000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(484, '逛街', 'shop', '<p>【问题描述】<br />\r\n某天，zcL在街上闲逛。他在超市里看到促销广告：商品大降价。于是他很高兴地拿着篮子购物去了。<br />\r\n已知商场内有n种商品。每种商品的重量为w千克，价格为v，价值为t。此种商品有h件。<br />\r\n注意：此商场有一个奇怪的规定。每种物品要么不买，要么买1件或h件。ZCL带了y元。ZCL最多能扛x千克的物品。请帮ZCL求出他最多能获得的价值。(不允许抢劫)</p>\r\n<p>【输入】<br />\r\n输入文件shop.in的第一行有3个用空格隔开的整数n、x和y。<br />\r\n接下来的n行，每行有4个数据，分别为w，v，t和h。</p>\r\n<p>【输出】<br />\r\n输出文件shop.out共一行，表示ZCL最多能获得的价值。</p>\r\n<p>【输入输出样例】<br />\r\nshop.in<br />\r\n2 8 10<br />\r\n5 3 7 1<br />\r\n3 7 10 1<br />\r\nshop.out。<br />\r\n17</p>\r\n<p>【限制】<br />\r\n100％的数据满足：0&le;n&le;300．0&le;x&le;1000，0&le;y&le;100，0&le;h&le;10</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(485, '整理书本', 'book', '<p>【问题描述】<br />\r\nZtc想把他满屋子的书整理一下。为了应付繁重的学习任务，ztc已经筋疲力尽了，于是他向你求助，请你帮他计算他最少需要花费多少力气。<br />\r\n书本分成若干堆，呈直线排布。每一堆的书本都有重量w和价值v。Ztc的任务是将所有书合成一堆。因为Ztc很看重书本的价值，所以他认为合并i，j两堆的书所需要的力气为w[i]-v[i]+w[j]-v[j]。合并后的书堆的重量和价值均为合并前两堆书的重量和价值的总和。也就是说，合并i．j两堆的书后，w=w[i]+w[j],v=v[i]+v[j]。小智个人不愿意走来走去，所以合并只能在相邻两堆书本间进行。书本合并前后，位置不变。如将1，2，3中的1，2进行合并，那么合并结果为3，3，再将3，3合并为6(1，2，3，6指重量)。</p>\r\n<p>【输入】<br />\r\n输入文件book.in的第一行是一个整数n(2&le;n&le;400)。<br />\r\n第2～n+1行每行两个整数w和v(0&lt;v&lt;w&le;1000)。</p>\r\n<p>【输出】<br />\r\n输出文件book.out共一行，这一行只有一个整数f，表示最小力气。</p>\r\n<p>【输入输出样例】<br />\r\nbook.in<br />\r\n3<br />\r\n6 5<br />\r\n9 7<br />\r\n11 2<br />\r\nbook.out<br />\r\n15<br />\r\n【输入输出样例解释】<br />\r\n先将前两堆合并，再将合并后的书堆与剩余的一堆合并。</p>\r\n<p>【限制】<br />\r\n30％的数据满足：2&le;n&le;100<br />\r\n100％的数据满足：2&le;n&le;400</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(486, '漂亮字串', 'bs', '<div><b>【问题描述</b>】<br />\r\n<br />\r\n小 x 认为 O 和 X 是最优美的两个字母，由 O 和 X 组成的串是最优美的串。在这些最优美的串中，如果任意只包含 X 的子串，长度不超过 maxX ，任意只包含 O 的子串，长度不超过 maxO ，且整个串最多有 countO 个 O ， countX 个 X 。那么这个就是超级优美无敌串。</div>\r\n<div>现在 小 x 想知道最长的优美无敌串有多长，希望你告诉他。</div>\r\n<div>【输入格式】</div>\r\n<div>输入包含多行，每行一组数据，至文件结束为止；</div>\r\n<div>每行四个数，依次是 countO 、 countX ， maxO ， maxX 。</div>\r\n<div>【输出格式】</div>\r\n<div>每组数据输出一行，一个数表示最长的超级优美无敌串的长度。</div>\r\n<div>【输入样例】</div>\r\n<div>10 10 0 0</div>\r\n<div>3 5 1 1</div>\r\n<div>【输出样例】</div>\r\n<div>0</div>\r\n<div>7</div>\r\n<div>【数据规模】</div>\r\n<div>0&lt;= countO,countX,maxO,maxX&lt;=1000000</div>\r\n<div>最多 1000 组数据。</div>\r\n<div>其中 30% 的数据 0&lt;= countO,countX,maxO,maxX&lt;=20 ，且数据组数不超过 20 组。</div>\r\n<div>【注意事项】</div>\r\n<div>第二个样例的解释：&ldquo; XOXOXOX &rdquo;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(487, '整数合并', 'setb', '<p>【题目描述】</p>\r\n<p>现在给你一些连续的整数，它们是从 A 到 B 的整数。一开始每个整数都属于各自的集合，然后你需要进行如下操作：</p>\r\n<p>每次选择两个属于不同集合的整数，如果这两个整数拥有大于等于 P 的公共质因子，那么把他们所在的集合合并。</p>\r\n<p>反复上述操作，直到没有可以合并的集合为止。</p>\r\n<p>现在，小 X 想知道，最后有多少个集合。</p>\r\n<p>【输入格式】</p>\r\n<p>一行，三个整数 A,B,P</p>\r\n<p>【输出格式】</p>\r\n<p>一个数，表示最终集合的个数。</p>\r\n<p>【输入样例】</p>\r\n<p>10 20 3</p>\r\n<p>【输出样例】</p>\r\n<p>7</p>\r\n<p>解释： {10 ， 20 ， 12 ， 15 ， 18} ， {11}，{13} ， {14} ， {16} ， {17} ， {19}</p>\r\n<p>【数据规模】</p>\r\n<p>A&lt;=B&lt;=100000; 2&lt;=P&lt;=B</p>\r\n<p>80% B&lt;=1000.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(488, '奇怪的监狱', 'prison', '<p>【题目描述】</p>\r\n<p>小 X 的王国中有一个奇怪的监狱，这个监狱一共有 P 个牢房，这些牢房一字排开，第 i 个仅挨着第 i+1 个（最后一个除外），当然第 i 个也挨着第 i-1 个（第一个除外），现在牢房正好是满员的。</p>\r\n<p>上级下发了一个释放名单，要求每天释放名单上的一个人。这可把看守们吓得不轻，因为看守们知道，现在牢房里的 P 个人，可以相互之间传话。第 i 个人可以把话传给第 i+1 个，当然也能传给第 i-1 个，并且犯人很乐意把消息传递下去。</p>\r\n<p>如果某个人离开了，那么原来和这个人 <strong>能说上话的人 </strong>， <strong>都 </strong>会很气愤，导致他们那天会一直大吼大叫，搞得看守很头疼。如果给这些要发火的人吃上肉，他们就会安静下来。</p>\r\n<p>为了河蟹社会，现在看守们想知道，如何安排释放的顺序，才能是的他们话费的肉钱最少。</p>\r\n<p>【输入格式】</p>\r\n<p>第一行两个数 P 和 Q ， Q 表示释放名单上的人数；</p>\r\n<p>第二行 Q 个数，表示要释放哪些人。</p>\r\n<p>【输出格式】</p>\r\n<p>仅一行，表示最少要给多少人次送肉吃。</p>\r\n<p>【输入样例】</p>\r\n<p>20 3</p>\r\n<p>3 6 14</p>\r\n<p>【输出样例】</p>\r\n<p>35</p>\r\n<p>样例解释： 先放 14 号犯人，给 19 个人肉吃，再放 6 号犯人，给 12 个人肉吃，最后放 3 号，给 4 个人肉吃，一共 35 个。</p>\r\n<p>【数据规模】</p>\r\n<p>1&lt;=P&lt;=1000; 1&lt;=Q&lt;=100.</p>\r\n<p>Q&lt;=P, 且 50% 的数据 1&lt;=P&lt;=100 ； 1&lt;=Q&lt;=5;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:42'),
(489, 'treeb', 'treeb', '<p>【题目描述】</p>\r\n<p>给一棵树，你可以匹配右边相连的两个点，问 这棵树的最大匹配是多少，并且计算出有多少种最大匹配</p>\r\n<p>【输入格式】</p>\r\n<p>第一行一个数 N ，表示有多少个结点。</p>\r\n<p>接下来 N 行，每行第一个数，表示要描述的那个结点的编号。然后一个数 m ，表示这个结点有 m 个儿子，接下来 m 个数，表示它的 m 个儿子的编号。</p>\r\n<p>【输出格式】</p>\r\n<p>输出两行，第一行为最大匹配数，第二行输出最大匹配方案数。</p>\r\n<p>【输入样例】</p>\r\n<p>7 <br />\r\n1 3 2 4 7 <br />\r\n2 1 3 <br />\r\n4 1 6 <br />\r\n3 0 <br />\r\n7 1 5 <br />\r\n5 0 <br />\r\n6 0</p>\r\n<p>【输出样例】</p>\r\n<p>3<br />\r\n4</p>\r\n<p>【数据规模】</p>\r\n<p>N&lt;=1000, 其中 40% 的数据答案不超过 10^7</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(490, '火星上的加法运算', 'madition', '<p>【题目描述】 <br />\r\n<br />\r\n&nbsp;</p>\r\n<p>最近欢欢看到一本有关火星的书籍，其中她被一个加法运算所困惑，由于她的运算水平有限，她想向你求助，作为一位优秀的程序员，你当然不会拒绝。</p>\r\n<p>输入文件(madition.in)：</p>\r\n<p>第一行先输入一个运算的进制N(2&lt;=N&lt;=36),接下来的两行为需要进行运算的字符，其中每个字符串的长度不超过200位.其为N进制的数。其中包括0-9及a-z(代表10-35).</p>\r\n<p>输出文件(madition.out)：<br />\r\n在N进制下它们的和.<br />\r\n&nbsp;</p>\r\n<p>输入样例1：<br />\r\n20</p>\r\n<p>1234567890</p>\r\n<p>abcdefghij<br />\r\n&nbsp;</p>\r\n<p>输出样例1：<br />\r\nbdfi02467j<br />\r\n&nbsp;</p>\r\n<p>输入样例2：<br />\r\n20</p>\r\n<p>99999jjjjj</p>\r\n<p>9999900001<br />\r\n&nbsp;</p>\r\n<p>输出样例2：<br />\r\niiiij00000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(491, '懒人的工作', 'lazy', '<p>【题目描述】</p>\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;小明是一个懒人，他每天上班前都会接到当天要完成的全部工作的列表，每个工作任务由一个开始时间和一个持续时间构成。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;小明一天要工作N分钟，从第一分钟开始到第N分钟结束。当小明到达公司时他就立刻开始工作。如果同一时间有多个任务要完成，小明可以任选一个，而其余的有同事包办，反之如果只有一个任务就由小明完成，假如某些工作的开始时间在小明正在工作时，则这些工作由他的同事完成，如某工作在第P分钟开始，持续时间为T分钟，则该工作在第P+T-1分钟结束。<br />\r\n写一个程序计算小明应该如果选择任务才能得到最大空闲时间</p>\r\n<p>输入文件（lazy.in） <br />\r\n输入数据第一行含两个用空格隔开的整数N和K（1&lt;=N&lt;=10000,1&lt;=k&lt;=10000）,N表示小明的工作时间单位为分钟，k表示任务总数。<br />\r\n接下来共有K行，每一行有2个用空格隔开的整数P和T，表示该任务从第P分钟开始，持续时间为T分钟，其中1&lt;=p&lt;=n,1&lt;=p+t-1&lt;=n.<br />\r\n&nbsp;</p>\r\n<p>输出文件（lazy.out）：<br />\r\n输出文件只有1行，包含一个整数，表示小明可能得到的最大空闲时间。<br />\r\n&nbsp;</p>\r\n<p>输入样例：<br />\r\n15 6<br />\r\n1 2<br />\r\n1 6<br />\r\n4 11<br />\r\n8 5<br />\r\n8 1<br />\r\n11 5 <br />\r\n输出样例： <br />\r\n4</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(492, 'Sramoc问题', 'sramoc', '<p>【题目描述】 <br />\r\n<br />\r\n<br />\r\nSramoc ( K , M ) 表示用数字0、1、２&hellip;、K-1组成的自然数中能被M整除的最小数。给定 K、M，求Sramoc ( K,M )。例如 K=2，M=7的时候，Sramoc( 2 , 7 ) = 1001。<br />\r\n输入文件（sramoc.in） <br />\r\n第一行为两个整数K、M满足2&lt;=K&lt;=10、1&lt;=M&lt;=1000。<br />\r\n输出文件（sramoc.out）：<br />\r\n输出Sramoc(K,M) 。<br />\r\n输入样例：<br />\r\n2 7<br />\r\n输出样例： <br />\r\n1001</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(493, '倒水', 'watera', '<p>【题目描述】 <br />\r\n<br />\r\n&nbsp;</p>\r\n<p>一天， CC 买了 N 个容量可以认为是无限大的瓶子，开始时每个瓶子里有 1 升水。接着 CC</p>\r\n<p>发现瓶子实在太多了，于是他决定保留不超过 K 个瓶子。每次他选择两个当前含水量相同的瓶子，把一个瓶子的水全部倒进另一个里，然后把空瓶丢弃。（不能丢弃有水的瓶子）</p>\r\n<p>显然在某些情况下 CC 无法达到目标，比如 N=3,K=1 。此时 CC 会重新买一些新的瓶子（新瓶子容量无限，开始时有 1 升水），以达到目标。</p>\r\n<p>现在 CC 想知道，最少需要买多少新瓶子才能达到目标呢？</p>\r\n<p>输入文件（ watera.in ）：</p>\r\n<p>一行两个正整数， N,K （ 1&lt;=N&lt;=10^9,K&lt;=1000 ）。</p>\r\n<p>输出文件（ watera.out ）：</p>\r\n<p>一个非负整数，表示最少需要买多少新瓶子。</p>\r\n<p>输入样例 1 ：</p>\r\n<p>3 1</p>\r\n<p>输出样例 1 ：</p>\r\n<p>1</p>\r\n<p>输入样例 2 ：</p>\r\n<p>13 2</p>\r\n<p>输出样例 2 ：</p>\r\n<p>3</p>\r\n<p>输入样例 3:</p>\r\n<p>1000000 5</p>\r\n<p>输出样例 3 ：</p>\r\n<p>15808</p>\r\n<p>样例说明：</p>\r\n<p>无</p>\r\n<p>数据规模</p>\r\n<p>对于 50% 的数据， N&lt;=10^7</p>\r\n<p>对于 100% 的数据如题目。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(494, 'YL杯超级篮球赛', 'ballc', '<p>【问题描述】</p>\r\n<p>一年一度的高一YL杯超级篮球赛开赛了。当然，所谓超级的意思是参赛人数可能多于5人。小三对这场篮球赛非常感兴趣，所以一场都没有落下。每天中午都准时守候在篮球场看比赛。经过一个星期的研究，小三终于对篮球的技战术找到了一丝丝感觉。他发现打YL杯的每个班都有一套相似的进攻战术：<br />\r\n1．控球后卫带球到前场，找到一个最佳攻击点(x，y)。<br />\r\n2．所有除控卫以外的队员都从各自的当前位置迅速向(x,y)移动。<br />\r\n3．控球后卫根据场上情况组织进攻。<br />\r\n这个战术对于一般情况是非常奏效的，但是每个队员毕竟不像小三一样每天精力过剩，每个队员都有一个疲劳指数w，显然对于每个队员的移动需要消耗一些能量。<br />\r\n假设一个队员从位置xl,y1)移动到(x，y)的能量消耗为w*(ABS(x-x1)+ABS(y-y1))，这里ABS为绝对值函数，那么我们希望整个队伍一次进攻的能量消耗当然是越少越好。显然能量消耗的多少直接取决于控球后卫对于攻击点(x，y)的选择。<br />\r\n因为参赛人数众多，所以小三希望你能编写一个程序，帮他找出某个时刻的最佳攻击点。</p>\r\n<p>输入格式：<br />\r\n第一行：一个整数N，表示篮球队人数<br />\r\n第二行：一共N个整数，其中的第i个数Wi表示第i个队员的疲劳指数。<br />\r\n第3～N+2行：每一行两个整数x和Y，表示其中的第i+2行，表示第i个队员的当前位置的横坐标和纵坐标。</p>\r\n<p>输出格式：<br />\r\n一个实数。表示所有队员集合到最佳攻击位置的能量消耗总和，答案保留两位小数。</p>\r\n<p>样例：<br />\r\nballc.in<br />\r\n1<br />\r\n1<br />\r\n0 0<br />\r\nballc.out<br />\r\n0.00</p>\r\n<p>数据规模:<br />\r\nn&lt;=50000<br />\r\n0&lt;w&lt;=1000<br />\r\n0&lt;x,y&lt;=1000000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(495, '窗口', 'window', '<p>【问题描述】</p>\r\n<p>给你一个长度为N的数组，一个长为K的滑动的窗体从最左移至最右端，你只能见到窗口的K个数，每次窗体向右移动一位，如下表：</p>\r\n<table width="515" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="317">Window position</td>\r\n            <td width="85">Min value</td>\r\n            <td width="91">Max value</td>\r\n        </tr>\r\n        <tr>\r\n            <td>[1 3 -1] -3 5 3 6 7</td>\r\n            <td>-1</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1 [3 -1 -3] 5 3 6 7</td>\r\n            <td>-3</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1 3 [-1 -3 5]3 6 7</td>\r\n            <td>-3</td>\r\n            <td>5</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1 3 -1 [-3 5 3] 6 7</td>\r\n            <td>-3</td>\r\n            <td>5</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1 3 -1 -3 [5 3 6] 7</td>\r\n            <td>3</td>\r\n            <td>6</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1 3 -1 -3 5 [3 6 7 ]</td>\r\n            <td>3</td>\r\n            <td>7</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p><br />\r\n你的任务是找出窗口在各位置时的max value,min value．</p>\r\n<p>输入格式：<br />\r\n第一行n，k，第二行为长度为n的数组</p>\r\n<p>输出格式：<br />\r\n第一行每个位置的min value,第二行每个位置的max value</p>\r\n<p>样例：<br />\r\nwindow.in<br />\r\n8 3<br />\r\n1 3 -1 -3 5 3 6 7</p>\r\n<p>window.out<br />\r\n-1 -3 -3 -3 3 3<br />\r\n3 3 5 5 6 7</p>\r\n<p>数据范围：<br />\r\n20％：n&le;500； 50％：n&le;100000；<br />\r\n100％：n&le;1000000；</p>', 2000, 256, 9, 0, '2012-04-05 16:23:43'),
(496, '移动服务', 'service', '<p>【问题描述】</p>\r\n<p>一个公司有三个移动服务员。如果某个地方有一个请求，某个员工必须赶到那个地方去(那个地方没有其他员工)，某一时刻只有一个员工能移动。被请求后，他才能移动，不允许在同样的位置出现两个员工。从p到q移动一个员工，需要花费c(p，q)。这个函数没有必要对称，但是c(p，p)=0。公司必须满足所<br />\r\n有的请求。目标是最小化公司花费。</p>\r\n<p>输入格式：<br />\r\n第一行有两个整数L，N(3&le;L&le;200，1&le;N&le;1000)。L是位置数，N是请求数。每个位置从1到L编号。下L行每行包含L个非负整数。第i+1行的第j个数表示c(i,j)，并且它小于2000。最后一行包含N个数，是请求列表。&mdash;开始三个服务员分别在位置1，2，3。</p>\r\n<p>输出格式：<br />\r\n一个数M，表示最小服务花费。</p>\r\n<p>输入输出样例<br />\r\nservice.in<br />\r\n5 9<br />\r\n0 1 1 1 1<br />\r\n1 0 2 3 2<br />\r\n1 1 0 4 1<br />\r\n2 1 5 0 1<br />\r\n4 2 3 4 0<br />\r\n4 2 4 1 5 4 3 2 1</p>\r\n<p>service.out<br />\r\n5</p>', 1200, 128, 20, 0, '2012-04-05 16:23:43'),
(497, '奶牛派对', 'party', '<p>【问题描述】</p>\r\n<p>N头牛要去参加一场在编号为x(1&le;x&le;n)的牛的农场举行的派对(1&le;N&le;1000)，有M(1&le;m&le;100000)条有向道路，每条路长ti(1&le;ti&le;100)；每头牛都必须参加完派对后回到家，每头牛都会选择最短路径，求这n个牛的最短路径(一个来回)中最长的一条的长度。<br />\r\n特别提醒：可能有权值不同的重边。</p>\r\n<p>输入格式：<br />\r\n第一行：N,M,X；<br />\r\n第二--m+1行：Ai,Bi,Ti，表示有一条从Ai到Bi的路，长度为Ti．</p>\r\n<p>输出格式：<br />\r\n最长最短路的长度。</p>\r\n<p>样例输入输出：<br />\r\nparty.in<br />\r\n4 8 2<br />\r\n1 2 4<br />\r\n1 3 2<br />\r\n1 4 7<br />\r\n2 1 1<br />\r\n2 3 5<br />\r\n3 1 2<br />\r\n3 4 4<br />\r\n4 2 3</p>\r\n<p><br />\r\nparty.out<br />\r\n10</p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(498, '矩形分割', 'cut', '<div><span style="font-size: 15pt">Description</span></div>\r\n<div style="text-indent: 21pt">出于某些方面的需求，我们要把一块N&times;M的木板切成一个个1&times;1的小方块。</div>\r\n<div style="text-indent: 21pt">对于一块木板，我们只能从某条横线或者某条竖线（要在方格线上），而且这木板是不均匀的，从不同的线切割下去要花不同的代价。而且，对于一块木板，切割一次以后就被分割成两块，而且不能把这两块木板拼在一起然后一刀切成四块，只能两块分别再进行一次切割。</div>\r\n<div style="text-indent: 21pt">现在，给出从不同的线切割所要花的代价，求把整块木板分割成1&times;1块小方块所需要耗费的最小代价。</div>\r\n<div><span style="font-size: 15pt">Input Format</span></div>\r\n<div style="text-indent: 21pt">输入文件第一行包括N和M，表示长N宽M的矩阵。</div>\r\n<div style="text-indent: 21pt">第二行包括N-1个非负整数，分别表示沿着N-1条横线切割的代价。</div>\r\n<div style="text-indent: 21pt">第三行包括M-1个非负整数，分别表示沿着M-1条竖线切割的代价。</div>\r\n<div><span style="font-size: 15pt">Output Format</span></div>\r\n<div style="text-indent: 21pt">输出一个整数，表示最小代价。</div>\r\n<div><span style="font-size: 15pt">Sample Input</span></div>\r\n<div style="text-indent: 21pt">2 2</div>\r\n<div style="text-indent: 21pt">3</div>\r\n<div style="text-indent: 21pt">3</div>\r\n<div><span style="font-size: 15pt">Sample Output</span></div>\r\n<div style="text-indent: 21pt">9</div>\r\n<div><span style="font-size: 15pt">Data Limit</span></div>\r\n<div style="text-indent: 21pt">对于60%的数据，有1 &le; N ,M&le; 100；</div>\r\n<div style="text-indent: 21pt">对于100%的数据，有1 &le; N,M &le; 2000。</div>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(499, '牛宫', 'long', '<div><span style="font-size: 15pt">Description</span></div>\r\n<div style="text-indent: 21pt">AP神牛准备给自己盖一座很华丽的宫殿。于是，他看中了一块N*M的矩形空地。空地中每个格子都有自己的海拔高度。AP想让他的宫殿的平均海拔在海平面之上（假设海平面的高度是0，平均数都会算吧？）。而且，AP希望他的宫殿尽量大，能够容纳更多的人来膜拜他。请问AP的宫殿最后会有多大？</div>\r\n<div><span style="font-size: 15pt">Input Format</span></div>\r\n<div style="text-indent: 21pt; text-align: left" align="left">第一行为N和M。之后N行，每行M个数，描述的空地的海拔。</div>\r\n<div><span style="font-size: 15pt">Output Format</span></div>\r\n<div style="text-indent: 21pt">输出一行,表示宫殿最大面积。</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<pre><span style="font-size: 15pt">Sample Input</span></pre>\r\n<pre style="text-indent: 21pt"><span style="font-size: 10.5pt">3 2</span></pre>\r\n<pre style="text-indent: 21pt"><span style="font-size: 10.5pt">4 0</span></pre>\r\n<pre style="text-indent: 21pt"><span style="font-size: 10.5pt">-10 8</span></pre>\r\n<pre style="text-indent: 21pt"><span style="font-size: 10.5pt">-2 -2</span></pre>\r\n<pre style="text-indent: 21pt">\r\n&nbsp;</pre>\r\n<div><span style="font-size: 15pt">Sample Output</span></div>\r\n<pre style="text-indent: 21pt"><span style="font-size: 10.5pt">4</span></pre>\r\n<pre style="text-indent: 21pt">\r\n&nbsp;</pre>\r\n<div><span style="font-size: 15pt">Data Limit</span></div>\r\n<div style="text-indent: 21pt">对于30%的数据，N,M&le;<span>50;</span></div>\r\n<div style="text-indent: 21pt">对于100%的数据，N,M&le;<span>200；</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(500, '技能树', 'skill', '<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Description<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 热爱电子娱乐的同学们对于技能树一定不陌生.就是说,要先学习低级的垃圾技能,特定的几个垃圾技能学会了,才能学习更强的技能.比如说,要先学火球术和烈火墙,才能学习地狱烈焰.科技树也是一样.要先研究出电力和内燃机,才能研究工业学.那么,现在我们把问题简化,<br />\r\n<img height="125" alt="" width="504" src="file://192.168.1.252/c$/Inetpub/os/times/2009/09noizk/cy09-1/skill/skill_clip_image001.gif" /> <br />\r\n这是一个技能树(或者科技树).格子上的数,是威力值.要先学会第一排第二个和第三个,才能学会第二排的第二个.每个技能学习的前提都是左上和右上的两个技能.假设现在有一个第一层有N个技能的技能树,而且技能点是有限的,只能学习M个技能,我们想知道最大的威力值之和是多少.</p>\r\n<p>Input Format<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第一行两个数N和M,如题所述<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 之后N行,第i行,有n+1-i个数.表示一个技能树. <br />\r\nOutput Format<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 输出一个数,表示最大威力值之和 <br />\r\nSample Input<br />\r\n4 5<br />\r\n1 1 1 1<br />\r\n1 2 1<br />\r\n1 1<br />\r\n1<br />\r\nSample Output<br />\r\n6 <br />\r\nData Limit<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于40%的数据,N&lt;=10<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于100%的数据,N&lt;=50,M&lt;=500,所有数据都在longint之内.</p>', 1000, 128, 10, 0, '2012-04-05 16:23:43'),
(501, '最小密度路径', 'path', '<div><span style="font-size: 15pt">Description</span></div>\r\n<div><span style="font-size: 15pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>这次的任务很简单，给出了一张有N个点M条边的加权有向无环图，接下来有Q个询问，每个询问包括2个节点X和Y，要求算出从X到Y的一条路径，使得密度最小（密度的定义为，路径上边的权值和除以边的数量）。</div>\r\n<div><span style="font-size: 15pt">Input Format</span></div>\r\n<div><span style="font-size: 15pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>第一行包括2个整数N和M。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>以下M行，每行三个数字A、B、W，表示从A到B有一条权值为W的有向边。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>再下一行有一个整数Q。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>以下Q行，每行一个询问X和Y，如题意所诉。</div>\r\n<div><span style="font-size: 15pt">Output Format</span></div>\r\n<div><span style="font-size: 15pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>对于每个询问输出一行，表示该询问的最小密度路径的密度（保留3位小数），如果不存在这么一条路径输出&ldquo;OMG!&rdquo;（不含引号）。</div>\r\n<pre><span style="font-size: 15pt">Sample Input</span></pre>\r\n<div style="margin: 0cm 0cm 0pt 21pt">3 3</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">1 3 5</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">2 1 6</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">2 3 6</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">2</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">1 3</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">2 3</div>\r\n<div><span style="font-size: 15pt">Sample Output</span></div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">5.000</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">5.500</div>\r\n<div><span style="font-size: 15pt">Data Limit</span></div>\r\n<div style="text-indent: 21pt">对于60%的数据，有1 &le; N &le; 10，1 &le; M &le; 100，1 &le; W&le; 1000，1 &le; Q &le; 1000；</div>\r\n<div style="text-indent: 21pt">对于100%的数据，有1 &le; N &le; 50，1 &le; M &le; 1000，1 &le; W &le; 100000，1 &le; Q &le; 100000。</div>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(502, '长路上的灯', 'light', '<p>【题目描述】</p>\r\n<p>在一条无限长的路上，有一排无限长的路灯，编号为1，2，3，4，&hellip;&hellip;。<br />\r\n每一盏灯只有两种可能的状态，开或者关。如果按一下某一盏灯的开关，那么这盏灯的状态将发生改变。如果原来是开，将变成关。如果原来是关，将变成开。<br />\r\n在刚开始的时候，所有的灯都是关的。<br />\r\n小明每次可以进行如下的操作：<br />\r\n指定两个数，a，t（a为实数，t为正整数）。将编号为[a]，[2*a]，[3*a]，&hellip;&hellip;，[t*a]的灯的开关各按一次。其中[k]表示实数k的整数部分。<br />\r\n在小明进行了n次操作后，小明突然发现，这个时候只有一盏灯是开的，小明很想知道这盏灯的编号，可是这盏灯离小明太远了，小明看不清编号是多少。<br />\r\n幸好，小明还记得之前的n次操作。于是小明找到了你，你能帮他计算出这盏开着的灯的编号吗？<br />\r\n【输入格式】<br />\r\n第一行一个正整数n，表示n次操作。<br />\r\n接下来有n行，每行两个数，ai，ti。其中ai是实数，小数点后一定有6位，ti是正整数。<br />\r\n【输出格式】<br />\r\n仅一个正整数，那盏开着的灯的编号。<br />\r\n【输入样例】<br />\r\n3<br />\r\n1.618034 13<br />\r\n2.618034 7<br />\r\n1.000000 21<br />\r\n【输出样例】<br />\r\n20<br />\r\n【数据规模】<br />\r\n记T=t1+t2+t3+&hellip;&hellip;+tn。<br />\r\n对于30%的数据，满足T&lt;=1000<br />\r\n对于80%的数据，满足T&lt;=200000<br />\r\n对于100%的数据，满足T&lt;=2000000<br />\r\n对于100%的数据，满足n&lt;=5000，1&lt;=ai&lt;1000，1&lt;=ti&lt;=T<br />\r\n数据保证，在经过n次操作后，有且只有一盏灯是开的，不必判错。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(503, '打砖块', 'gamea', '<p>【题目描述】<br />\r\n小红很喜欢玩一个叫打砖块的游戏，这个游戏的规则如下：<br />\r\n在刚开始的时候，有n行*m列的砖块，小红有k发子弹。小红每次可以用一发子弹，打碎某一列当前处于这一列最下面的那块砖，并且得到相应的得分。<br />\r\n如图所示：<br />\r\n某些砖块在打碎以后，还可能将得到一发子弹的奖励。最后当所有的砖块都打碎了，或者小红没有子弹了，游戏结束。<br />\r\n小红在游戏开始之前，就已经知道每一块砖在打碎以后的得分，并且知道能不能得到一发奖励的子弹。小红想知道在这次游戏中她可能的最大得分，可是这个问题对于她来说太难了，你能帮帮她吗？<br />\r\n【输入格式】<br />\r\n第一行有3个正整数，n，m，k。表示开始的时候，有n行*m列的砖块，小红有k发子弹。<br />\r\n接下来有n行，每行的格式如下：<br />\r\nf1 c1 f2 c2 f3 c3 &hellip;&hellip; fm cm<br />\r\n其中fi为正整数，表示这一行的第i列的砖，在打碎以后的得分。ci为一个字符，只有两种可能，Y或者N。Y表示有一发奖励的子弹，N表示没有。<br />\r\n所有的数与字符之间用一个空格隔开，行末没有多余的空格。<br />\r\n【输出格式】<br />\r\n仅一个正整数，表示最大的得分。<br />\r\n【输入样例】<br />\r\n3 4 2<br />\r\n9 N 5 N 1 N 8 N<br />\r\n5 N 5 Y 5 N 5 N<br />\r\n6 N 2 N 4 N 3 N<br />\r\n【输出样例】<br />\r\n13<br />\r\n【数据规模】<br />\r\n对于20%的数据，满足1&lt;=n,m&lt;=5，1&lt;=k&lt;=10，所有的字符c都为N<br />\r\n对于50%的数据，满足1&lt;=n,m&lt;=200，1&lt;=k&lt;=200，所有的字符c都为N<br />\r\n对于100%的数据，满足1&lt;=n,m&lt;=200，1&lt;=k&lt;=200，字符c可能为Y<br />\r\n对于100%的数据，所有的f值满足1&lt;=f&lt;=10000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(504, '纸', 'rectangle', '<p>【题目描述】<br />\r\n小明今天突发奇想，想从一张用过的纸中剪出一个长方形。<br />\r\n为了简化问题，小明做如下的规定：<br />\r\n（1）这张纸的长度、宽度分别为n，m。小明将这张纸看成是由n*m个格子组成，在剪的时候，只能沿着格子的边缘剪。<br />\r\n（2）这张纸有些地方小明以前在上面画过，剪出来的长方形不能含有以前画过的地方。<br />\r\n（3）剪出来的长方形的大小没有限制。<br />\r\n小明看着这张纸，想到了好多好多种剪的方法，可是到底有多少种呢？小明数不过来了，你能帮帮他吗？<br />\r\n【输入格式】<br />\r\n第一行两个正整数，n，m，表示这张纸的长度和宽度。<br />\r\n接下来有n行，每行m个字符，每个字符为&lsquo;*&rsquo;或者&lsquo;.&rsquo;。<br />\r\n字符&lsquo;*&rsquo;表示以前在这个格子上画过，字符&lsquo;.&rsquo;表示以前在这个格子上没有画过。<br />\r\n【输出格式】<br />\r\n仅一个整数，表示方案数。<br />\r\n【输入样例】<br />\r\n6 4<br />\r\n....<br />\r\n.***<br />\r\n.*..<br />\r\n.***<br />\r\n...*<br />\r\n.***<br />\r\n【输出样例】<br />\r\n38<br />\r\n【数据规模】<br />\r\n对于10%的数据，满足1&lt;=n&lt;=10，1&lt;=m&lt;=10<br />\r\n对于30%的数据，满足1&lt;=n&lt;=50，1&lt;=m&lt;=50<br />\r\n对于60%的数据，满足1&lt;=n&lt;=200，1&lt;=m&lt;=200<br />\r\n对于100%的数据，满足1&lt;=n&lt;=1000，1&lt;=m&lt;=1000<br />\r\n最后一个点所有的字符都为&lsquo;.&rsquo;。<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(505, '城市', 'cost', '<p>【题目描述】<br />\r\n在某个遥远的国家里，有n个城市。编号为1，2，3，&hellip;&hellip;，n。<br />\r\n这个国家的政府修建了m条双向的公路。每条公路连接着两个城市。沿着某条公路，开车从一个城市到另一个城市，需要花费一定的汽油。<br />\r\n开车每经过一个城市，都会被收取一定的费用（包括起点和终点城市）。所有的收费站都在城市中，在城市间的公路上没有任何的收费站。<br />\r\n小红现在要开车从城市u到城市v(1&lt;=u，v&lt;=n)。她的车最多可以装下s升的汽油。在出发的时候，车的油箱是满的，并且她在路上不想加油。<br />\r\n在路上，每经过一个城市，她要交一定的费用。如果她某次交的费用比较多，她的心情就会变得很糟。所以她想知道，在她能到达目的地的前提下，她交的费用中最多的一次最少是多少。这个问题对于她来说太难了，于是她找到了聪明的你，你能帮帮她吗？<br />\r\n【输入格式】<br />\r\n第一行5个正整数，n，m，u，v，s。分别表示有n个城市，m条公路，从城市u到城市v，车的油箱的容量为s升。<br />\r\n接下来有n行，每行1个正整数，fi。表示经过城市i，需要交费fi元。<br />\r\n再接下来有m行，每行3个正整数，ai，bi，ci(1&lt;=ai，bi&lt;=n)。表示城市ai和城市bi之间有一条公路，如果从城市ai到城市bi，或者从城市bi到城市ai，需要用ci升汽油。<br />\r\n【输出格式】<br />\r\n仅一个整数，表示小红交费最多的一次的最小值。<br />\r\n如果她无法到达城市v，输出-1。<br />\r\n【输入样例1】<br />\r\n4 4 2 3 8<br />\r\n8<br />\r\n5<br />\r\n6<br />\r\n10<br />\r\n2 1 2<br />\r\n2 4 1<br />\r\n1 3 4<br />\r\n3 4 3<br />\r\n【输出样例1】<br />\r\n8<br />\r\n【输入样例2】<br />\r\n4 4 2 3 3<br />\r\n8<br />\r\n5<br />\r\n6<br />\r\n10<br />\r\n2 1 2<br />\r\n2 4 1<br />\r\n1 3 4<br />\r\n3 4 3<br />\r\n【输出样例2】<br />\r\n-1<br />\r\n【数据规模】</p>\r\n<p>对于60%的数据，满足n&lt;=200，m&lt;=10000，s&lt;=200<br />\r\n对于100%的数据，满足n&lt;=10000，m&lt;=50000，s&lt;=1000000000<br />\r\n对于100%的数据，满足ci&lt;=1000000000，fi&lt;=1000000000，可能有两条边连接着相同的城市。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(506, '教官', 'officer', '<p>【题目描述】</p>\r\n<p><br />\r\n每个学年的开始，高一新生们都要进行传统的军训。今年有一个军训教官十分奇怪，他为了测试学员们的反应能力，每次吹哨后学员们都会变换位置。每次左数第i位学员都会站到第ai个位置，经过若干次之后，队伍又会回到原来的样子。 <br />\r\n你的任务是计算n个人的队伍至少经过多少次之后，队伍恢复到原来样子。 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输入】</h3>\r\n<p><br />\r\n第一行包含一个整数N（0&lt;N&lt;=10000），表示队伍的人数。 <br />\r\n接下来N行，每行一个正整数ai表示左起第i个人接下来出现在左起第ai个位置上。 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输出】</h3>\r\n<p><br />\r\n仅包括一行，一个正整数M，表示军官最少的吹哨次数。 <br />\r\n&nbsp;</p>\r\n<h3>【输入样例】</h3>\r\n<p>officer.in</p>\r\n<p>5 <br />\r\n2 <br />\r\n3 <br />\r\n4 <br />\r\n5 <br />\r\n1 <br />\r\n<br />\r\n【输出样例】</p>\r\n<p>officer.out</p>\r\n<p>5 <br />\r\n【提示】</p>\r\n<p>数据规模 <br />\r\n对于30％的数据，有N&lt;=100 <br />\r\n对于100%的数据，有N&lt;=10000; <br />\r\n对于全部数据，答案在均在64位整数范围之内。 <br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(507, '拯救', 'savey', '<p>【题目描述】 <br />\r\n<br />\r\n正义之士被恶魔抓了，被关在小黑屋里，无法继续他的正义事业，你决定去拯救他。 <br />\r\n关正义之士的小黑屋迅速被你打开，可是正义之士却被恶魔用一把锁给锁住了。这把锁包含了N个小锁。只有打开前K-2个锁，且锁上第K-1个锁，才能改变第K个锁的状态（打开或锁上该锁），第1个锁可以任意改变状态，当第1个锁锁上时第2个锁就可以改变状态。 <br />\r\n为了知道你到底是要留下来开锁，还是&ldquo;走为上&rdquo;，你需要知道到底需要多少次操作才能开锁（打开或锁上一把锁算一次操作，只有当N个小锁都被打开进才算开了锁）。 <br />\r\n输入savey.in <br />\r\n第一行为一个N（小锁的个数，1&lt;=N&lt;=1000）。 <br />\r\n第二行为n个整数a1,a2,...,an（每个都是0或者1），中间用单个空格隔开。如果是ai=1，表示第i个锁是锁着的，反之表示该锁已被打开。 <br />\r\n输出savey.out <br />\r\n包括一个数，表示最少要操作的次数。 <br />\r\n样例输入 <br />\r\n4 <br />\r\n1 0 1 0 <br />\r\n样例输出 <br />\r\n6 <br />\r\n样例说明 <br />\r\n1010--&gt;1110--&gt;0110--&gt;0100--&gt;1100--&gt;1000--&gt;0000 <br />\r\n对于40％的数据，有N&lt;=30 <br />\r\n对于100%的数据，有N&lt;=1000;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(508, '物品', 'magica', '<h3>【题目描述】</h3>\r\n<p><br />\r\n有两种类型的物品：普通物品和魔法物品。普通物品没有魔法属性而魔法物品拥有一些魔法属性。每种普通物品有一个价值P，但每种魔法物品有两种价值：鉴定前的价值P1和鉴定后的价值P2(当然，P2总是大于P1)。 <br />\r\n为了鉴定一个魔法物品，你需要购买一个鉴定卷轴，用它来鉴定魔法物品。鉴定完一件魔法物品以后，鉴定卷轴便会消失。每个鉴定将会消耗Pi元钱，如果没有足够的钱，你将无法购买任何鉴定卷轴。 <br />\r\n现在，你正在一个集市中，同时拥有很多物品。你知道每件物品的价值并且想要出售全部物品。那么，你最多能够获得多少钱呢? <br />\r\n你可以假定： <br />\r\n*开始的时候你没有钱。 <br />\r\n*所有的魔法物品都还没有被鉴定。 <br />\r\n*只要你有足够的钱，你可以购买任意多的鉴定卷轴。 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输入】</h3>\r\n<p><br />\r\n第一行有两个整数N和Pi(0 &lt; Pi &lt;= 5000)，表示你拥有的物品数和一个鉴定卷轴价格。 <br />\r\n接下来N行，每行给出一件物品的价格。 <br />\r\n对于每件普通物品，那一行仅有一个整数P (0 &lt; P &lt;= 10000)。 <br />\r\n对于每件魔法物品，那一行将会有两个整数P1和P2 (0 &lt; P1 &lt; P2 &lt;= 10000) <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输出】</h3>\r\n<p><br />\r\n一个整数表示你最多能够获得多少钱。 <br />\r\n&nbsp;</p>\r\n<h3>【输入样例】</h3>\r\n<p><br />\r\nmagica.in</p>\r\n<p>2 10 <br />\r\n10 <br />\r\n20 100 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输出样例】</h3>\r\n<p><br />\r\nmagica.out</p>\r\n<p>100 <br />\r\n&nbsp;</p>\r\n<h3>【提示】</h3>\r\n<p><br />\r\n数据规模: <br />\r\n对于30%的数据 N &lt;= 50 <br />\r\n对于100%的数据 N &lt;= 1000 <br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(509, '邮递员', 'carrier', '<h3>【题目描述】</h3>\r\n<p><br />\r\n邮局需要你来帮助他们为某个邮递员设计出一条能够穿过那遥远乡村的所有村子和小路至少一次的邮路（输入数据将会保证这么一条路是一定存在的）。 <br />\r\n但是，每条路线都是有一个花费的。各个村子里的村民希望邮递员到达他们村子的时间越早越好。因此，各个村子里的人们采用了一些措施：假设第i号村子是邮递员在他的邮递路线上到达的第k个村子。如果k&lt;=w( i )，那么这个村子的村民就会付给邮局w( i )-k欧元。当然，如果k&gt;w(i)，邮局也同意付k- w( i )欧元给这个村子，对某些村子重复经过要重复收费。此外，邮递员每经过一条小路，邮局也要付给邮递员1欧元作为补贴。 <br />\r\n现在有n个村子，编号依次为1到n。邮局就位于1号村子，因此邮递员的传递路线从这里开始，也从这个村子结束。能够离开每个村子的路口的数目一定是2，4或者8。这里允许出现同样的村子间存在多条小路，或者某条小路构成了一个自环的情况。 <br />\r\n你的任务是设计一个路线使得邮局赚的钱最多(或者说赔的钱最少。如果有多种最优解，输出字典序最小的。 <br />\r\n<img alt="" src="http://192.168.1.252/os/times/2009/09noizk/2009-a/carrier/1421.gif" /><br />\r\n&nbsp;</p>\r\n<h3>【输入】</h3>\r\n<p><br />\r\n第一行：两个整数n，m，分别表示村子的数量和小路的数量。 <br />\r\n接下来n行，每行一个整数：w(i)(1&le;w(i)&lt;1000) <br />\r\n接下来m行，每行两个整数u，v，表示这条小路连接的村子的编号。 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输出】</h3>\r\n<p><br />\r\n第一行：一个整数k，你的程序所设计的路径的长度 <br />\r\n第二行：k+1个整数，v1，v2&hellip;vk+l，每个数之间用一个空格隔开，表示你设计的路径所经过的村子的编号，其中需要满足v1=vk+1=1 <br />\r\n<br />\r\n&nbsp;</p>\r\n<h3>【输入样例】</h3>\r\n<p><br />\r\ncarrier.in</p>\r\n<p>6 7 <br />\r\n1 <br />\r\n7 <br />\r\n4 <br />\r\n10 <br />\r\n20 <br />\r\n5 <br />\r\n2 4 <br />\r\n1 5 <br />\r\n2 1 <br />\r\n4 5 <br />\r\n3 6 <br />\r\n1 6 <br />\r\n1 3 <br />\r\n&nbsp;</p>\r\n<h3>【输出样例】</h3>\r\n<p><br />\r\ncarrier.out</p>\r\n<p>7 <br />\r\n1 2 4 5 1 3 6 1 <br />\r\n&nbsp;</p>\r\n<h3>【提示】</h3>\r\n<p><br />\r\n对于30％的数据，有N&lt;=20 <br />\r\n对于100%的数据，有N&lt;=200; <br />\r\n补充说明：邮递员每条路线都要去送信，并且每条线路只要送一次就可以了。 <br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:44'),
(510, '分班', 'groupa', '<p>【题目描述】</p>\r\n<p>&nbsp; 有N组学生，给出初始时每组中的学生个数，再给出每组学生人数的上界R和下届L(L&lt;=R)，每次你可以在某组中选出一个学生把他安排到另外一组中，问最少要多少次才可以使N组学生的人数都在[L,R]中。</p>\r\n<p>【输入格式】</p>\r\n<p>第一行一个整数N，表示学生组数； <br />\r\n第二行N个整数，表示每组的学生个数； <br />\r\n第三行两个整数 L，R，表示下界和上界</p>\r\n<p>【输出格式】</p>\r\n<p>一个数，表示最少的交换次数，如果不能满足题目条件输出-1</p>\r\n<p>【输入样例】 <br />\r\n2<br />\r\n10 20<br />\r\n10 15</p>\r\n<p>【输出样例】 <br />\r\n5</p>\r\n<p>【数据规模】 <br />\r\nn&lt;=50&nbsp;&nbsp; L&lt;=R&nbsp;&nbsp; 其他数在[1,1000000]中</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(511, '情敌', 'rival', '<p>【问题描述】 <br />\r\n在复杂的社会生活中，TT发现自己有了很多个情敌。为了自己能在感情事业上一帆风顺，TT决定在有限的时间里消灭掉他的情敌，使剩下的情敌对他的威胁最小。 <br />\r\nTT有N个情敌，每一个情敌对他都有一个威胁值，消灭他也需要一个时间。但是TT的时间是有限的，他要在两个月内解决掉一些情敌，使得剩下的发敌对他的威胁最小。 <br />\r\n但是，情敌们也不会束手待弊，他们也在不断得使自己变强，所以在第二个月，消灭情敌所需要的时间为第一个月的2倍。 <br />\r\n或许，情敌们认为这样还是不够强大，所以他们决定选择M个情敌变为超级情敌，超级情敌可以保护一些普通情敌，换句话说想消灭超级情敌所保护的普通情敌，必须先消灭该超级情敌。一个普通情敌最多只能被一个超级情敌所保护。 <br />\r\n现在TT想知道，该消灭哪些情敌才能使自己所受到的威胁最少。 <br />\r\n【输入文件】 <br />\r\n第一行为两个数字a,b，表示TT第一个月和第二个月的时间。 <br />\r\n第二行为两个数字N，M，表示TT有N个情敌，其中M个是超级情敌。 <br />\r\n第3到第N+2行，每I行有两个数字x,t，表示第I-2个情敌对TT的威胁值和TT消灭他所需要的时间。 <br />\r\n第N+3行到第N+2+M行，前两个数c,tot，表示第c个情敌是超级情敌，他保护的普通情敌有tot个，后面给出tot个数，即他所保护的普通情敌序号。 <br />\r\n【输出文件】 <br />\r\n输出一个数字Min，表示TT所受到的最小的威胁。 <br />\r\n【样例输入】 <br />\r\n5 8<br />\r\n7 1<br />\r\n1 1<br />\r\n2 5<br />\r\n3 6<br />\r\n4 2<br />\r\n5 4<br />\r\n6 8<br />\r\n7 4<br />\r\n1 1 5<br />\r\n【样例输出】 <br />\r\n15<br />\r\n【数据规模】</p>\r\n<p>对于30%的数据，N&lt;=10，M=0，0&lt;a,b&lt;21。 <br />\r\n对于100%的数据，N&lt;=50，M&lt;=4，0&lt;a,b&lt;101。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(512, '扩散', 'ppg', '<p>【问题描述】<br />\r\n在平面上有n个点，一个点每过一个单位时间就会向4个方向（上下左右）扩散一个距离，如下图所示：<br />\r\n<img height="283" alt="" width="647" src="http://192.168.1.252/os/times/2010/10noipmn/11.17/ppg/ppg_clip_image002.jpg" /><br />\r\n两个点a和b连通，记作e(a,b)，当且仅当a、b的扩散区域有公共部分。连通块的定义是块内的任意两个点u、v都必定存在路径e(u,a0),e(a0,a1),&hellip;&hellip;e(ak,v)。给定平面上n个点的坐标，问最早什么时刻它们形成一个连通块。<br />\r\n【输入文件】<br />\r\n第一行一个数：n<br />\r\n下面n行，每行两个整数x,y，代表一个点的坐标。<br />\r\n【输出文件】<br />\r\n一个整数，表示最早的时刻所有点形成的连通块。<br />\r\n【样例输入】<br />\r\n2<br />\r\n0 0<br />\r\n5 5<br />\r\n【样例输出】<br />\r\n5<br />\r\n【数据规模】<br />\r\n对于20%的数据，满足1&lt;=n&lt;=5; 1&lt;=x[i],y[i]&lt;=50;<br />\r\n对于100%的数据，满足1&lt;=n&lt;=50;1&lt;=x[i],y[i]&lt;=10^9</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(513, '八', 'eight', '<p>【问题描述】</p>\r\n<p>八是个很有趣的数字啊。八=发，八八=爸爸，88=拜拜。当然最有趣的还是8用二进制表示是1000。怎么样，有趣吧。当然题目和这些都没有关系。 <br />\r\n某个人很无聊，他想找出[a,b]中能被8整除却不能被其他一些数整除的数。</p>\r\n<p>【输入文件】</p>\r\n<p>第一行一个数n，代表不能被整除的数的个数。第二行n个数，中间用空格隔开。第三行两个数a，b，中间一个空格。</p>\r\n<p>【输出文件】</p>\r\n<p>一个整数，为[a,b]间能被8整除却不能被那n个数整除的数的个数。</p>\r\n<p>【样例输入】 <br />\r\neight.in</p>\r\n<p>3<br />\r\n7764 6082 462<br />\r\n2166 53442<br />\r\n【样例输出】</p>\r\n<p>eight.out <br />\r\n6378</p>\r\n<p>【数据规模】 <br />\r\n对于30%的数据， 1&le;n&le;5，1&le;a&le;b&le;100000。 <br />\r\n对于100%的数据，1&le;n&le;15，1&le;a&le;b&le;10^9，N个数全都小于等于10^4大于等于1。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(514, '01进制数', 'binacy', '<p>求所有可以只用1和00拼成的长度为N的二进制数的个数除以1 5746的余数。</p>\r\n<p>比如当N=4的时候，有5个可能的二进制：0011，0000，1001，1100，1111。</p>\r\n<h4>【输入格式】</h4>\r\n第一行一个正整数N\r\n<h4>【输出格式】</h4>\r\n输出所有可以只用1和00拼成的长度为N的二进制数的个数除以15746的余数。\r\n<h4>【输入样例】</h4>\r\n<pre>4</pre>\r\n<h4>【输出样例】</h4>\r\n<pre>5</pre>\r\n<h4>【数据范围】</h4>\r\n在100％的数据中，1&le;N&lt;1000000\r\n', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(515, '国际象棋比赛', 'chess', '<p>有N个人要参加国际象棋比赛，该比赛要进行K场对弈。<br />\r\n每个人最多参加两场对弈，最少参加零场对弈。<br />\r\n每个人都有一个与其他人都不相同的登记(用一个正整数来表示)。<br />\r\n在对弈中，等级高的人必须用黑色的棋子，等级低的人必须用白色的棋子。<br />\r\n每个人最多只能用一次黑色的棋子和一次白色的棋子。<br />\r\n为了增加比赛的客观度，观众希望K场对弈中双方的登记差的总和最小。<br />\r\n比如有7个选手，他们的登记分别是 30，1 7，26，41，19，38，18，要进行3场比赛。最好的安排是Player 2 vs Player 7，Player7 vs Player 5，Player 6 vs P1ayer 4，此时等级差的总和于(18-17)+(19-18)+(41-38)=5打到最小。</p>\r\n<p>【输入格式】<br />\r\n第一行两个正整数N，K。<br />\r\n接下来有N行，第i行表示第i-1个人等级。</p>\r\n<p>【输出格式】<br />\r\n在第一行输出最小的等级差的总和。<br />\r\n【输入样例】<br />\r\n7 3<br />\r\n30<br />\r\n17<br />\r\n26<br />\r\n41<br />\r\n19<br />\r\n38<br />\r\n18<br />\r\n【输出样例】<br />\r\n5<br />\r\n【数据范围】<br />\r\n在90％的数据中，1&le;N&le;3000<br />\r\n在1 00％的数据中，1&le;N&le;1 00000<br />\r\n保证所有输入数据中等级的值小于108，1&le;K&le;N-1</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(516, '求和', 'suma', '<p>【问题描述】<br />\r\n<br />\r\n给出一个数列a1，a2&hellip;．，an和K，P。<br />\r\n设Sij=ai+ai+1+&hellip;+aj<br />\r\nAnaswer=min{S<sub>i,j</sub> mod P | s<sub>i,j</sub> mod P&ge;K)，其中i&le;j，(s<sub>i,j</sub> mod P | s<sub>i,j</sub> mod P&ge;K}非空。</p>\r\n<p>【输入格式】<br />\r\n第一行一个正整数n，K，P。<br />\r\n第二行n个整数，表示一个数列a1，a2，&hellip;，an</p>\r\n<p>【输出格式】<br />\r\n在第一行输出Answer。</p>\r\n<p>【输入样例】<br />\r\n7 2 17<br />\r\n12<br />\r\n13<br />\r\n15<br />\r\n11<br />\r\n16<br />\r\n26<br />\r\n11</p>\r\n<p>【输出样例】</p>\r\n<p>2</p>\r\n<p>【数据范围】<br />\r\n在100％的数据中，1&lt;n&lt;100000，1&lt;K，P，ai&lt;108，i=1，2&hellip;n<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(517, 'Olympic', 'olympic', '<h3>【题目描述】</h3>\r\n<p><br />\r\n奥运会正在如火如荼地进行着，奖牌榜上也有许多队伍需要排名。你需要选择三个(高分在前)。现在，为了使你所在的队伍排名尽可能地靠前，由你来选择Pg,Ps和Pb。</p>\r\n<p>输入：<br />\r\n第一行一个整数n(1&le;n&le;15)，表示有n支队伍进行排名。<br />\r\n以下n行，每行三个整数G,S,B(0&le;G,S，B&le;100000)，表示每支队伍获得的金、银、铜牌个数。</p>\r\n<p>输出：<br />\r\n一行输出三个数Pg,Ps,Pb，中间用空格隔开。<br />\r\nHint：<br />\r\n1．第一支队伍即为你所在的队伍。<br />\r\n2．相同分数下，你所在的队伍排名为最前。<br />\r\n3．若有多组解，则输出 Pg最小的解，若仍有多组，则输出Ps最小的解，若还有多组解，输出Pb最小的解。</p>\r\n<p>样例：<br />\r\nOlympic．in<br />\r\n3<br />\r\n1 1 1<br />\r\n0 1 2<br />\r\n2 1 0<br />\r\nOlympic.out<br />\r\n1 1 1<br />\r\nOlympic.in<br />\r\n3<br />\r\n0 3 0<br />\r\n0 0 4<br />\r\n3 0 0<br />\r\nOlympic.out<br />\r\n2 2 1</p>\r\n<p>数据范围：<br />\r\n对于10％的数据，保证最优解的Pg&le;10。<br />\r\n对于30％的数据，保证最优解的Pg&le;100。<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(518, '机器翻译', 'translate', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【问题描述】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">小晨的电脑上安装了一个机器翻译软件，他经常用这个软件来翻译英语文章。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">这个翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">来替换。对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">软件就会用它进行翻译；如果内存中没有，软件就会在外存中的词典内查找，查出单词的中<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">假设内存中有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个单元，每单元能存放一个单词和译义。每当软件将一个新单词存入<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">内存前，如果当前内存中已存入的单词数不超过</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M&minus;1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，软件会将新单词存入一个未使用的<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">内存单元；若内存中已存入</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个单词，软件会清空最早进入内存的那个单词，腾出单元来，<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">存放新单词。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">假设一篇英语文章的长度为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个单词。给定这篇待译文章，翻译软件需要去外存查找多<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">少次词典？假设在翻译开始前，内存中没有任何单词。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输入】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入文件名为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">translate.in</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，输入文件共</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行。每行中两个数之间用一个空格隔开。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第一行为两个正整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">和</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，代表内存容量和文章的长度。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第二行为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个非负整数，按照文章的顺序，每个数（大小不超过</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1000</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">）代表一个英文<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">单词。文章中两个单词是同一个单词，当且仅当它们对应的非负整数相同。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输出】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出文件</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">translate.out </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">共</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行，包含一个整数，为软件需要查词典的次数。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">translate.in translate.out<o:p></o:p></font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">3 7<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1 2 1 5 4 4 1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">5<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例 </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">说明】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">整个查字典过程如下：每行表示一个单词的翻译，冒号前为本次翻译后的内存状况：<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">空：内存初始状态为空。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：查找单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">并调入内存。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：查找单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">并调入内存。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：在内存中找到单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 2 5</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：查找单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">并调入内存。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 5 4</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：查找单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">并调入内存替代单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">6</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 5 4</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：在内存中找到单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">7</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">． </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5 4 1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">：查找单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">并调入内存替代单词</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">共计查了</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">次词典。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">translate.in </font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">2 10<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">8 824 11 78 11 78 11 78 8 264</font></span></p>\r\n<p><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3"><o:p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: ''Courier New''; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">translate.out<o:p></o:p></font></span></b></p>\r\n</o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">6<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【数据范围】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">10%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M=1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span></font><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">100%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">0&lt;M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">100</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">0&lt;N </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1000</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(519, '乌龟棋', 'tortoise', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-size: 14pt; font-family: &quot;Courier New&quot;; mso-font-kerning: 0pt">2</span></b><span style="font-size: 14pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">．乌龟棋<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">(tortoise.pas/c/cpp)<o:p></o:p></font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【问题描述】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">小明过生日的时候，爸爸送给他一副乌龟棋当作礼物。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">乌龟棋的棋盘是一行</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个格子，每个格子上一个分数（非负整数）。棋盘第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">格是唯一<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的起点，第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">格是终点，游戏要求玩家控制一个乌龟棋子从起点出发走到终点。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">&hellip;&hellip;<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 2 3 4 5 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">&hellip;&hellip; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">乌龟棋中</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">张爬行卡片，分成</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">种不同的类型（</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">张卡片中不一定包含所有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">种类型<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的卡片，见样例），每种类型的卡片上分别标有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">、</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">、</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">、</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">四个数字之一，表示使用这种卡<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">片后，乌龟棋子将向前爬行相应的格子数。游戏中，玩家每次需要从所有的爬行卡片中选择<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">一张之前没有使用过的爬行卡片，控制乌龟棋子前进相应的格子数，每张卡片只能使用一次。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">游戏中，乌龟棋子自动获得起点格子的分数，并且在后续的爬行中每到达一个格子，就得到<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">该格子相应的分数。玩家最终游戏得分就是乌龟棋子从起点到终点过程中到过的所有格子的<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">分数总和。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">很明显，用不同的爬行卡片使用顺序会使得最终游戏的得分不同，小明想要找到一种卡<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">片使用顺序使得最终游戏得分最多。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">现在，告诉你棋盘上每个格子的分数和所有的爬行卡片，你能告诉小明，他最多能得到<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">多少分吗？<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输入】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入文件名</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">tortoise.in</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。输入文件的每行中两个数之间用一个空格隔开。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个正整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">和</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，分别表示棋盘格子数和爬行卡片数。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行</span></font><span lang="EN-US" style="font-size: 10pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">_______</span><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个非负整数，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">a</font></span></font><font face="Times New Roman"><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">, a</font></span><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">2</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">, </font></span></font><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">&hellip;&hellip;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">, a</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，其中</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">a</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">i </font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">表示棋盘第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">i </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个格子上的分数。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个整数，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">b</font></span></font><font face="Times New Roman"><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">,b</font></span><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">2</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">, </font></span></font><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">&hellip;&hellip;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">, b</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，表示</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">张爬行卡片上的数字。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入数据保证到达终点时刚好用光</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">张爬行卡片，即</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N&minus;1=</font></span></font><font face="Times New Roman"><span style="font-size: 22.5pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&Sigma;</span><i><span lang="EN-US" style="font-size: 8.5pt; mso-font-kerning: 0pt">M<o:p></o:p></span></i></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 8.5pt; mso-font-kerning: 0pt">i </span></i><i><span lang="EN-US" style="font-size: 15pt; mso-font-kerning: 0pt">b<o:p></o:p></span></i></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-size: 8.5pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输出】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出文件名</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">tortoise.out</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-size: 9pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">全国信息学奥林匹克联赛（</span><span lang="EN-US" style="font-size: 9pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">NOIP2010</font></span><span style="font-size: 9pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">）复赛 提高组<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-size: 9pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第 </span><span lang="EN-US" style="font-size: 9pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-size: 9pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">页 共 </span><span lang="EN-US" style="font-size: 9pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">7 </font></span><span style="font-size: 9pt; font-family: 宋体; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">页<span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出只有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个整数，表示小明最多能得到的分数。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">tortoise.in tortoise.out<o:p></o:p></font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">9 5<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">6 10 14 2 8 8 18 5 17<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1 3 1 2 1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">73<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例 </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">说明】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">小明使用爬行卡片顺序为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，得到的分数为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">6+10+14+8+18+17=73</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。注意，<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">由于起点是</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，所以自动获得第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">格的分数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">6</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">tortoise.in </font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">13 8<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">4 96 10 64 55 13 94 53 5 24 89 8 30<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1 1 1 1 1 2 4 1</font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3"><o:p><strong>tortoise.out<o:p></o:p></strong></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">455<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【数据范围】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">30%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">30</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">12</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">50%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">120</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span></font><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">50</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，且</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">种爬行卡片，每种卡片的张数不会超<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">过</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">20</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">100%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">350</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">120</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，且</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">种爬行卡片，每种卡片的张数不会<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">超过</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">40</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">；</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">0 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">a</span></font></font><font face="Times New Roman"><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">i </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">100</font></span></font><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">i </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span></font><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">；</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">b</span></font></font><font face="Times New Roman"><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">i </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font size="3">4</font></span></font><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">i </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le;</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。输入数据保证</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N&minus;1=</font></span></font><font face="Times New Roman"><span style="font-size: 18pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&Sigma;</span><i><span lang="EN-US" style="font-size: 7pt; mso-font-kerning: 0pt">M</span></i></font><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 7pt; mso-font-kerning: 0pt">i </span></i><i><span lang="EN-US" style="font-size: 12pt; mso-font-kerning: 0pt">bi</span></i></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(520, '关押罪犯', 'prison1', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【问题描述】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">S </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">城现有两座监狱，一共关押着</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">名罪犯，编号分别为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1~N</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。他们之间的关系自然也极<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">不和谐。很多罪犯之间甚至积怨已久，如果客观条件具备则随时可能爆发冲突。我们用&ldquo;怨<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">气值&rdquo;（一个正整数值）来表示某两名罪犯之间的仇恨程度，怨气值越大，则这两名罪犯之<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">间的积怨越多。如果两名怨气值为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">c </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的罪犯被关押在同一监狱，他们俩之间会发生摩擦，并<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">造成影响力为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">c </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的冲突事件。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">每年年末，警察局会将本年内监狱中的所有冲突事件按影响力从大到小排成一个列表，<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">然后上报到</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">S </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">城</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">Z </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">市长那里。公务繁忙的</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">Z </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">市长只会去看列表中的第一个事件的影响力，<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">如果影响很坏，他就会考虑撤换警察局长。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">在详细考察了</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">名罪犯间的矛盾关系后，警察局长觉得压力巨大。他准备将罪犯们在<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">两座监狱内重新分配，以求产生的冲突事件影响力都较小，从而保住自己的乌纱帽。假设只<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">要处于同一监狱内的某两个罪犯间有仇恨，那么他们一定会在每年的某个时候发生摩擦。那<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">么，应如何分配罪犯，才能使</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">Z </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">市长看到的那个冲突事件的影响力最小？这个最小值是多<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">少？<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输入】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入文件名为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">prison.in</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。输入文件的每行中两个数之间用一个空格隔开。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">第一行为两个正整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">和</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，分别表示罪犯的数目以及存在仇恨的罪犯对数。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">接下来的</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行每行为三个正整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">a</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">b</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">c</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，表示</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">a</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j </font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">号和</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">b</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">号罪犯之间存在仇恨，其怨<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">气值为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">c</font></span></font><span lang="EN-US" style="font-size: 7pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">j</font></span><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。数据保证</span><i><span lang="EN-US" style="font-size: 12pt; mso-font-kerning: 0pt"><font face="Times New Roman">a b N </font></span></i></font><font face="Times New Roman"><i><span lang="EN-US" style="font-size: 7pt; mso-font-kerning: 0pt">j j </span></i><span lang="EN-US" style="font-size: 12pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1 </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le;<span lang="EN-US"> &lt; </span>&le; </span></font><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><span lang="EN-US" style="font-size: 12pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">0 </font></span></font><font face="Times New Roman"><span lang="EN-US" style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&lt; </span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-size: 12pt; font-family: TimesNewRomanPSMT; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">1,000,000,000 </span><i><span lang="EN-US" style="font-size: 7pt; mso-font-kerning: 0pt">j </span></i><i><span lang="EN-US" style="font-size: 12pt; mso-font-kerning: 0pt">c </span></i></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">，且每对罪犯组合只出现一<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">次。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输出】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出文件</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">prison.out </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">共</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行，为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">Z </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">市长看到的那个冲突事件的影响力。如果本年内监狱<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">中未发生任何冲突事件，请输出</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">0</font></span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">。</font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【数据范围】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">30%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">15</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">70%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">2000</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">50000</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">100%</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的数据有</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">N</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">20000</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，</span><font face="Times New Roman"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">M</span><span style="font-size: 12pt; font-family: SymbolMT; mso-bidi-font-family: SymbolMT; mso-font-kerning: 0pt">&le; </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt">100000</span></font><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US"><o:p></o:p></span></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(521, '引水入城', 'flow', '<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">在一个遥远的国度，一侧是风景秀美的湖泊，另一侧则是漫无边际的沙漠。该国的行政<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">区划十分特殊，刚好构成一个</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">列的矩形，如上图所示，其中每个格子都代表一座城<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">市，每座城市都有一个海拔高度。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">为了使居民们都尽可能饮用到清澈的湖水，现在要在某些城市建造水利设施。水利设施<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">有两种，分别为蓄水厂和输水站。蓄水厂的功能是利用水泵将湖泊中的水抽取到所在城市的<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">蓄水池中。因此，只有与湖泊毗邻的第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行的城市可以建造蓄水厂。而输水站的功能则是通<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">过输水管线利用高度落差，将湖水从高处向低处输送。故一座城市能建造输水站的前提，是<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">存在比它海拔更高且拥有公共边的相邻城市，已经建有水利设施。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">由于第</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行的城市靠近沙漠，是该国的干旱区，所以要求其中的每座城市都建有水利<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">设施。那么，这个要求能否满足呢？如果能，请计算最少建造几个蓄水厂；如果不能，求干<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">旱区中不可能建有水利设施的城市数目。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输入】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入文件名为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">flow.in</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。输入文件的每行中两个数之间用一个空格隔开。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输入的第一行是两个正整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">和</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，表示矩形的规模。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">接下来</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">行，每行</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">M </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个正整数，依次代表每座城市的海拔高度。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【输出】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出文件名为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">flow.out</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">输出有两行。如果能满足要求，输出的第一行是整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，第二行是一个整数，代表最少<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">建造几个蓄水厂；如果不能满足要求，输出的第一行是整数</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">0</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">，第二行是一个整数，代表有<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">几座干旱区中的城市不可能建有水利设施。<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">flow.in</font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">2 5<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">9 1 5 4 3<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">8 7 6 1 2</font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3"><o:p><strong>flow.out<o:p></o:p></strong></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">说明】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">只需要在海拔为</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">9 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">的那座城市中建造蓄水厂，即可满足要求。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【输入输出样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2</font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><b><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">flow.in</font></span></b></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">3 6<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">8 4 5 6 4 4<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">7 3 4 3 3 3<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">3 2 2 1 1 2</font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3"><o:p><strong>flow.out<o:p></o:p></strong></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">1<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">3<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">【样例</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">说明】<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">湖泊<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">8 4 5 6 4 4<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">7 3 4 3 3 3<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span lang="EN-US" style="font-family: &quot;Courier New&quot;; mso-bidi-font-size: 10.5pt; mso-font-kerning: 0pt"><font size="3">3 2 2 1 1 2<o:p></o:p></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">沙漠<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">上图中，在</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个粗线框出的城市中建造蓄水厂，可以满足要求。以这</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个蓄水厂为源头<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">在干旱区中建造的输水站分别用</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">种颜色标出。当然，建造方法可能不唯一。<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt"><font size="3">【数据范围】<span lang="EN-US"><o:p></o:p></span></font></span></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">本题共有</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">10 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个测试数据，每个数据的范围如下表所示：<span lang="EN-US"><o:p></o:p></span></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">测试数据编号能否满足要求 </span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">N M<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">1 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">不能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;10 M&nbsp;&le; 10<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">2 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">不能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;100M&le; 100<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">3 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">不能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;500 M&le; 500<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">4 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">= 1 M&le; 10<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">5 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;10 M &le; 10<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">6 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;100 M&le; 20<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">7 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;100 M&le; 50<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">8 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;100 M&le;100<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">9 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能 N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;200 M&le; 200<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none" align="left"><font size="3"><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">10 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">能N</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">&le;500 M&le; 500<o:p></o:p></font></span></font></p>\r\n<p class="MsoNormal" style="margin: 0cm 0cm 0pt"><font size="3"><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">对于所有的</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">10 </font></span><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">个数据，每座城市的海拔高度都不超过</span><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 10.5pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">10</font></span><sup><span lang="EN-US" style="font-family: TimesNewRomanPSMT; mso-bidi-font-size: 7.0pt; mso-bidi-font-family: TimesNewRomanPSMT; mso-font-kerning: 0pt"><font face="Times New Roman">6</font></span></sup><span style="font-family: 宋体; mso-bidi-font-size: 10.5pt; mso-hansi-font-family: ''Times New Roman''; mso-bidi-font-family: 宋体; mso-font-kerning: 0pt">。</span></font></p>\r\n<p>&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(522, '最佳地点', 'bestspot', '<p><br />\r\n最佳地点<br />\r\n<br />\r\n贝茜总是希望优化她的人生，她很想访问约翰农场所拥有的P(1 &lt;= F &lt;= P)个草地中的F(1 &lt;= P &lt;= 500; 1 &lt;= F_i &lt;= P)个。<br />\r\n贝茜知道,她只能在C (1 &lt;= C &lt;= 8,000)条双向的路径上旅行，在路径P_i旅行，需要时间T_i(1 &lt;= T_i &lt;= 892),路径的两个端点是a_i and b_i (1 &lt;= a_i &lt;=P; 1 &lt;= b_i &lt;= P).<br />\r\n贝茜想找一个最好的草地睡觉，并且到达这个草地能让这次旅行的平均时间最短。<br />\r\n例如，下面是一个农场的草地分布图，带*号的草地是贝茜特别喜欢的，括号中的数是该路径的旅行时间。<br />\r\n&nbsp;</p>\r\n<pre>\r\n            1*--[4]--2--[2]--3\r\n                     |       |\r\n                    [3]     [4]\r\n                     |       |\r\n                     4--[3]--5--[1]---6---[6]---7--[7]--8*\r\n                     |       |        |         |\r\n                    [3]     [2]      [1]       [3]\r\n                     |       |        |         |\r\n                    13*      9--[3]--10*--[1]--11*--[3]--12*\r\n\r\n下面的表格显示有可能成为最好草地的距离分析 4, 5, 6, 7, 9, 10, 11, and 12:\r\n\r\n                       * * * * * * Favorites * * * * * *\r\n Potential      Pasture Pasture Pasture Pasture Pasture Pasture     Average\r\nBest Pasture       1       8      10      11      12      13        Distance\r\n------------      --      --      --      --      --      --      -----------\r\n    4              7      16       5       6       9       3      46/6 = 7.67\r\n    5             10      13       2       3       6       6      40/6 = 6.67\r\n    6             11      12       1       2       5       7      38/6 = 6.33\r\n    7             16       7       4       3       6      12      48/6 = 8.00\r\n    9             12      14       3       4       7       8      48/6 = 8.00\r\n   10             12      11       0       1       4       8      36/6 = 6.00 ** BEST\r\n   11             13      10       1       0       3       9      36/6 = 6.00\r\n   12             16      13       4       3       0      12      48/6 = 8.00\r\n\r\n如此可知，最好草地是10号草地\r\n\r\n\r\n\r\n输入格式\r\n\r\n* 第1行: 三个空格隔开的整数 P, F, and C\r\n\r\n* 第2..F+1行: 每行表示一个整数: F_i\r\n\r\n* 第F+2..C+F+1行: 行 i+F+1 描述路径i,用三个空格隔开的整数: a_i, b_i, and T_i\r\n\r\n输入样例 (file bestspot.in):\r\n\r\n13 6 15\r\n11\r\n13\r\n10\r\n12\r\n8\r\n1\r\n2 4 3\r\n7 11 3\r\n10 11 1\r\n4 13 3\r\n9 10 3\r\n2 3 2\r\n3 5 4\r\n5 9 2\r\n6 7 6\r\n5 6 1\r\n1 2 4\r\n4 5 3\r\n11 12 3\r\n6 10 1\r\n7 8 7\r\n\r\n输出格式:\r\n\r\n* 只有一行一个整数,表示最好的草地,如果有多解,输出最小的.\r\n\r\n输出样例 (file bestspot.out):\r\n\r\n10\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:45'),
(523, '总流量', 'tflow', '<p class="STYLE9">农夫约翰总是希望他的奶牛有足够的水喝，因而他曾测绘过一张地图，该图描述了连接农场上水井和谷仓的N（1&lt;=N&lt;=700）条水管的分布情况。他吃惊地发现大量不同口径的水管明显以随意的方式连接着。</p>\r\n<p class="STYLE9">他想要计算出通过水管系统的总流量。</p>\r\n<p class="STYLE9">由两条水管串联而形成的水管的流量等于二者流量的最小值。例如两条流量分别为5和3的水管串联形成的水管则被从逻辑上变为一条流量为3的单管，如图所示：</p>\r\n<p class="STYLE9">+---5---+---3---+&nbsp;&nbsp;-&gt;&nbsp;&nbsp;+---3---+</p>\r\n<p class="STYLE9">同样，并联的水管允许通过的水量是二者流量的总和，如图所示：</p>\r\n<p class="STYLE9">&nbsp;&nbsp;&nbsp;+---5---+<br />\r\n---+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+---&nbsp;&nbsp;-&gt;&nbsp;&nbsp;+---8---+<br />\r\n&nbsp;&nbsp;&nbsp;+---3---+</p>\r\n<p class="STYLE9">最后，没有和其他任何水管连接的水管可以删除掉；它对总体的流量没有贡献值，如图所示：</p>\r\n<p class="STYLE9">&nbsp;&nbsp;&nbsp;+---5---+<br />\r\n---+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;+---3---+<br />\r\n&nbsp;&nbsp;&nbsp;+---3---+--<br />\r\n这迷宫式的配管系统中的所有水管流量均可按照这一原则变为一个单管的总流量。</p>\r\n<p class="STYLE9">给定一个管道地图，请确定水井和谷仓之间的总流量。</p>\r\n<p class="STYLE9">考虑以下样例，图中结点均以字母标记。</p>\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------6-----------+<br />\r\nA+---3---+B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+Z<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+---3---+---5---+---4---+<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D</p>\r\n<p>管道 BC 和 CD 可组合为:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------6-----------+<br />\r\nA+---3---+B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+Z<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----3-----+-----4-----+<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D</p>\r\n<p>然后，管道 BD 和 DZ 可组合为:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------6-----------+<br />\r\nA+---3---+B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+Z<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------3-----------+</p>\r\n<p>然后，BZ的两条分支可组合为:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B<br />\r\nA+---3---+---9---+Z</p>\r\n<p>然后，AB 和 BZ 组合生成净流量3：</p>\r\n<p>A+---3---+Z</p>\r\n<p class="STYLE9">编程读入一组管道数据，管道以端结点方式描述，然后计算出从&quot;A&quot;到&quot;Z&quot;的净流量。测试数据中的所有管道网络都可以使用以上规则生成。</p>\r\n<p class="STYLE9">管道i连接两个不同的结点a_i和b_i（a_i和b_i的范围都是&quot;A-Za-z&quot;）,管道i的流量为F_i(1&lt;= F_i&lt;=1000)。注意：大写和小写会被看做是不同的结点名称。</p>\r\n<p class="STYLE9">针对你前50次的提交，系统会提供额外的测试用例反馈。</p>\r\n<p class="STYLE9">程序名：flow</p>\r\n<p class="STYLE9">输入格式：</p>\r\n<p class="STYLE9">*第一行：一个整型数：N；</p>\r\n<p class="STYLE9">*第二行到第N+1行：第i+1行以两个字母和一个整型数的形式描述了管道i，即：空格隔开的a_i b_i F_i。</p>\r\n<p class="STYLE9">输入样例（flow.in）：</p>\r\n<p class="STYLE9">5<br />\r\nA B 3<br />\r\nB C 3<br />\r\nC D 5<br />\r\nD Z 4<br />\r\nB Z 6<br />\r\n&nbsp;</p>\r\n<p class="STYLE9">输出格式：</p>\r\n<p class="STYLE9">*第一行：一个整型数，该数描述了从水井&quot;A&quot;到谷仓&quot;Z&quot;的管道的最大流量。</p>\r\n<p class="STYLE9">样例输出（flow.out）：</p>\r\n<p class="STYLE9">3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(524, '激光电话', 'lphone', '<p>奶牛们有了一套新的激光系统，这使它们在牧场的时候可以随心所欲地进行交谈，它们的牧场被设计为由W*H个点组成的网格。（1 &lt;= W &lt;= 100; 1 &lt;= H &lt;= 100）<br />\r\n这套系统要求类似视线连通以确保维持通讯，当然了，牧场里还有一些石头和树，这些东西会干扰通讯，但是奶牛们早有准备，它们购买了一些斜放的反光镜（如下图中的&quot;/&quot;和&quot;\\&quot;），它些镜子能通过反射把激光束扭转90度，下面是问题的一个图解。<br />\r\n在这个地图中H=8，W=7，两头正在通讯的奶牛用符号&quot;C&quot;表示，石头及其它障碍物用&quot;*&quot;表示：<br />\r\n&nbsp;</p>\r\n<pre>\r\n7 . . . . . . .         7 . . . . . . .<br />6 . . . . . . C         6 . . . . . /-C<br />5 . . . . . . *         5 . . . . . | *<br />4 * * * * * . *         4 * * * * * | *<br />3 . . . . * . .         3 . . . . * | .<br />2 . . . . * . .         2 . . . . * | .<br />1 . C . . * . .         1 . C . . * | .<br />0 . . . . . . .         0 . \\-------/ .<br />  0 1 2 3 4 5 6           0 1 2 3 4 5 6</pre>\r\n<p>确定最少需要安放几个反光镜（数目用M表示），才能保证这两头牛之间的激光通讯，注意所给的数据一定有解。<br />\r\n程序名：lphone<br />\r\n输入格式：<br />\r\n第1行有两个空格隔开的整数：W,H；<br />\r\n第2～H+1行为完整的牧场。<br />\r\n输出格式：<br />\r\n一行，一个整数M，即反光镜的个数。<br />\r\n输入样例(lphone.in)<br />\r\n7 8<br />\r\n.......<br />\r\n......C<br />\r\n......*<br />\r\n*****.*<br />\r\n....*..<br />\r\n....*..<br />\r\n.C..*..<br />\r\n.......</p>\r\n<p>输出样例(lphone.out)<br />\r\n3<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(525, '珠宝商', 'jewelry', '<p>【问题描述】<br />\r\nLouis.PS是一名精明的珠宝商，他出售的项链构造独特，很大程度上是因为他的制作方法与众不同。每次Louis.PS到达某个国家后，他会选择一条路径去遍历该国的城市。在到达一个城市后，他会使用在这个城市流行的材料制作一颗珠子，并按照城市被访问的顺序将珠子串联做成项链，为了使制作出来的项链不会因为城市之间的竞争而影响销量，路径中同一个城市不会重复出现(因为如果项链中A城市的材料比B城市的材料使用的多，则项链在B城市的宣传可能会受到影响)。经过多年对消费者的调查，Louis.PS已经掌握了判断一条项链吸引消费者程度的方法，具体来说，Louis.PS经过调查得出了受消费者欢迎的项链的特征，并基于此制作了一个长项链(Louis.PS称之为特征项链)。对于一条待售的项链，这条项链在特征项链里出现的次数越多，这条项链就越受消费者欢迎。<br />\r\n考虑到现实情况的复杂性，我们对条件做出适当的简化。对于每个国家：在某城市间存在道路直接相连,对于两个不同的城市,有且仅有一条路径连接这两个城市 (即国家是连通的，且不存在一个环)。对于每个城市，我们用一个小写字母来表示在这个城市流行的材料类型。这样，我们就可以用一个仅包含小写字母的字符串来表示一条项链，我们将特征项链所对应的字符串称作特征字符串，设为EigenString[1..M]，M为特征项链的长度。对于一条项链，假设其对应字符串为P[1..L]，L为这条项链的长度。如果在一个正整数K,使EigenString[K..K+L-1]=P[1..L],称这条项链在特征项链中出现了一次。满足上述条件的正整数K的个数即为这条项链在特征项链中出现次数,记为Popularity(P)。<br />\r\nLouis.PS使用数学中的期望概念来评价一个国家是否适合珠宝的采集，对于一个包含N个城市的国家，令Str<sub>u,v</sub>表示沿着从u开始，至v结束的路径所得到的项链的对应字符串。</p>\r\n<p>(Str<sub>u,v</sub>与Str<sub>v,u</sub>表示的串一般不相同)，则Expectation=&sum;<sub>u,v</sub> Popularity(Str<sub>u,v</sub>)／N<sup>2</sup><br />\r\n对于如下的例子(图中实线表示两端点的国家有直接道路相连)：</p>\r\n<p><img height="436" alt="" width="520" src="http://192.168.1.252/os/times/2010/10CTSC/jewelry/1.JPG" /></p>\r\n<p><br />\r\nN=3，所流行的材料类型分别为a,a,b。</p>\r\n<p><br />\r\nEigenString=&rdquo;abaab&rdquo;<br />\r\nStr(3，1)=ba Popularity(ba)=1<br />\r\nStr(1，1)=a Popularity(ba)=3<br />\r\nStr(1，2)=aa Popularity(ba)=1<br />\r\nStr(1，3)=ab Popularity(baa)=2<br />\r\nStr(2，1)=aa Popularity(ba)=1<br />\r\nStr(2，2)=a Popularity(ba)=3<br />\r\nStr(2，3)=aab Popularity(ba)=1<br />\r\nStr(3，1)=ba Popularity(ba)=1<br />\r\nStr(3，2)=baa Popularity(baa)=1<br />\r\nStr(3，3)=b Popularity(b)=2</p>\r\n<p>Expectation=(3+1+2+1+3+1+1+1+2)/9=5/3<br />\r\n对于一个国家，Louis.PS想知道其Expectation的值，但苦于计算期望的工作量太大。作为珠宝店的学徒，你当然不愿放过难得在老板面前展示自己的机会。<br />\r\n【输入文件】<br />\r\n输入文什jewelry.in，第一行包含两个整数N，M，表示城市个数及特征项链的长度。<br />\r\n接下来的N-1行,每行两个整数x,y 表示城市x与城市y有直道接路相连。城市由1～N进行编号。<br />\r\n接下来的一行，包含一个长度为N，仅包含小写字母的字符串，第i位的字符表示在城市i流行的原料类型。<br />\r\n最后一行，包含一个长度为M，仅包含小写字母的字符串，表示特征字符串。<br />\r\n【输出文件】<br />\r\n输出文件jewelry.out仅包含一个整数，为N<sup>2</sup>*Expectation。<br />\r\n【样例输入】<br />\r\n3 5<br />\r\n1 2<br />\r\n1 3<br />\r\naab<br />\r\nabaab<br />\r\n【样例输出】<br />\r\n15<br />\r\n【数据规模】<br />\r\n有20％的数据，满足M&lt;= 1000；<br />\r\n有40％的数据，满足N&le;8000，M&le;50000；<br />\r\n对于100％的数据，N，M&le;50000。</p>\r\n<p>&nbsp;</p>', 1000, 1024, 10, 0, '2012-04-05 16:23:46');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(526, '爱争吵的猴子', 'monkeyk', '<p><strong>【问题描述】</strong></p>\r\n<div align="left">在一个森林里,住着N只好斗的猴子.开始,他们各自为政,互不相干.但是猴子们不能消除争吵,但这仅仅发生在两只互不认识的猴子之间.当争吵发生时,争吵的两只猴子都会求助他们各自最强壮的朋友,并且决斗.当然,决斗之后,两只猴子及他们所有的朋友都相互认识了,并且成为朋友,争吵将不会在他们之间发生.</div>\r\n<div>假定每一只猴子有一个强壮值,在每次决斗之后变为原来的一半(例如,10将为变为5,5将会变为2).</div>\r\n<div>假定每一只猴子认识他自己. 也就是当他发生争吵,并且自己是他的朋友中最强壮的,他将代表自己进行决斗.</div>\r\n<div>【输入格式】</div>\r\n<div>有几组测试数据,每组测试数据由两部分构成.</div>\r\n<div>第一部分:第一行有一个整数 N(N&lt;=100,000),表示猴子的数量.下面有N行.每行有一个数,表示猴子的强壮值(&lt;=32768).</div>\r\n<div>第二部分:第一行有一个整数M(M&lt;=100,000),表示有M次争吵发生.下面有M行,每行有两个整数x和y,表示在第x只猴子和第y只猴子之间发生争吵.</div>\r\n<div>【输出格式】</div>\r\n<div>对于每一次争吵,如果两只猴子认识,输出-1,否则输出一个数,表示决斗后朋友中最强壮猴子的强壮值.</div>\r\n<div>【输入输出样例】</div>\r\n<div>monkeyk.in</div>\r\n<div>5 <br />\r\n20 <br />\r\n16 <br />\r\n10 <br />\r\n10 <br />\r\n4 <br />\r\n5 <br />\r\n2 3 <br />\r\n3 4 <br />\r\n3 5 <br />\r\n4 5 <br />\r\n1 5</div>\r\n<div>monkeyk.out</div>\r\n<div>8 <br />\r\n5 <br />\r\n5 <br />\r\n-1 <br />\r\n10 <br />\r\n&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(527, '飞行棋', 'fly', '<p align="left"><b><font color="#333399" size="5">Description</font> </b></p>\r\n<p><font size="3" face="Times New Roman">给出圆周上的若干个点，已知点与点之间的弧长，其值均为正整数，并依圆周顺序排列。 <br />\r\n请找出这些点中有没有可以围成矩形的，并希望在最短时间内找出所有不重复矩形。 <br />\r\n</font></p>\r\n<p align="left"><b><font color="#333399" size="5">Input</font> </b></p>\r\n<p><font size="3" face="Times New Roman">第一行为正整数N，表示点的个数，接下来N行分别为这N个点所分割的各个圆弧长度 <br />\r\n<br />\r\n</font></p>\r\n<p align="left"><b><font color="#333399" size="5">Output</font> </b></p>\r\n<p><font size="3" face="Times New Roman">所构成不重复矩形的个数 <br />\r\n</font></p>\r\n<p align="left"><b><font color="#333399" size="5">Sample Input</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">8 1 2 2 3 1 1 3 3   </font></pre>\r\n<p align="left"><b><font color="#333399" size="5">Sample Output</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">3 </font></pre>\r\n<p align="left"><b><font color="#333399" size="5">Hint</font> </b></p>\r\n<p><font size="3" face="Times New Roman">N&lt;= 20 <br />\r\n<img border="0" alt="" src="http://61.187.179.132:8080/JudgeOnline/images/1800.jpg" /> </font></p>\r\n<p align="left"><b><font color="#333399" size="5">Source</font> </b></p>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(528, '中国象棋', 'cchess', '<p><b><font size="5" color="#333399">Description</font> </b></p>\r\n<p align="left">&nbsp;</p>\r\n<p><font size="3" face="Times New Roman"> 在N行M列的棋盘上，放若干个炮可以是0个，使得没有任何一个炮可以攻击另一个炮。 <br />\r\n请问有多少种放置方法，中国像棋中炮的行走方式大家应该很清楚吧. <br />\r\n<br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Input</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 一行包含两个整数N，M，中间用空格分开. <br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Output</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 输出所有的方案数，由于值比较大，输出其mod 9999973 <br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Sample Input</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">1 3 </font></pre>\r\n<p align="left"><b><font size="5" color="#333399">Sample Output</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">7  </font></pre>\r\n<p align="left"><b><font size="5" color="#333399">Hint</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 除了在3个格子中都放满炮的的情况外，其它的都可以. <br />\r\n<br />\r\n100%的数据中N,M不超过100 <br />\r\n50%的数据中，N,M至少有一个数不超过8 <br />\r\n30%的数据中，N,M均不超过6 <br />\r\n<br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Source</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> Day2</font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(529, '跳棋', 'checker09', '<p align="left"><b><font size="5" color="#333399">Description</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 在一个1行N列（N是奇数）的棋盘上，有K个格子是红色的。这种情况下，你有一个跳棋在最左端的格子上。你的目标是将它移动到最右边的格子，在开始移动之间，你可以在棋盘的任意空位上放棋子。在游戏开始后 <br />\r\n你只可以随时在一个红色格子上放棋子。棋子的移动规则是：每次只可以选择一个棋子，跳过与之相邻的棋子走到后面的空格上，被它跳过的棋子被吃掉，即从棋盘上移走，如相邻棋子的另一侧有棋子，则不能跳。请回答以下两个问题： <br />\r\n1：移动开始前至少要放多少棋子才能完成任务。 <br />\r\n2：如果要使开始前放的棋子数要求尽量少，那么在移动过程中最少需要放多少个棋子才能完成任务。 <br />\r\n关于规则的补充说明： <br />\r\n1：只能往空位上放棋子，不管是移动开始前还是移动过程中。 <br />\r\n2：移动前棋盘最左端的那个原始棋子绝对不能被吃掉. <br />\r\n<br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Input</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 第一行一个正奇数N <br />\r\n第二行有N个整数，如果第i个整数是非功过，说明第i个格子是红棋，否则为白棋，数字间用空格分开. <br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Output</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 两个数字分别代表第一问和第二问的结果. <br />\r\n</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Sample Input</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">5 0 0 0 1 0 </font></pre>\r\n<p align="left"><b><font size="5" color="#333399">Sample Output</font> </b></p>\r\n<pre><font size="3" face="Times New Roman">1  1 </font></pre>\r\n<p align="left"><b><font size="5" color="#333399">Hint</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> 在游戏开始前，可以在第二个格子上放上一个棋子，游戏开始后可用最左边的棋子吃掉它，从而移动到第三格。然后由于第四格是个红色的格子，在游戏中可以在那放一个棋子，然后用已经移动第三格的棋子把它吃掉，从而达到终点。 <br />\r\n<br />\r\n100%的数据中，N&lt; = 1000,输出中的数字不超过10^ 15 <br />\r\n30%的数据中,N&lt; = 20</font></p>\r\n<p align="left"><b><font size="5" color="#333399">Source</font> </b></p>\r\n<p><font size="3" face="Times New Roman"> Day2</font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:46'),
(530, '岛屿', 'isl', '<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p align="left"><b>[问题描述]</b></p>\r\n<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;你将要游览一个有 <strong><em>N </em></strong>个岛屿的公园。从每一个岛 <em>i </em>出发 ，只建造一座 桥。桥的长度以 <strong><em>Li </em></strong>表示。公园内总共有 <strong><em>N </em></strong>座桥。 尽管每座桥由一个岛连到另一个岛，但每座桥均可以双向行走。同时，每一对这样的岛屿，都有一艘专用的往来两岛之间的渡船。</p>\r\n<p>相对于乘船而言，你更喜欢步行。 你希望所经过的桥的总长度尽可能的长，但受到以下的限制。</p>\r\n<p>可以自行挑选一个岛开始游览。</p>\r\n<ul>\r\n    <li>任何一个岛都不能游览一次以上。</li>\r\n    <li>无论任何时间你都可以由你现在所在的岛<em>S </em>去另一个你<strong>从未</strong>到过的岛 <em>D </em>。由 <em>S </em>到 <em>D </em>可以有以下方法：\r\n    <ul>\r\n        <li>步行：仅当两个岛之间有一座桥时才有可能。对于这种情况，桥的长度会累加到你步行的总距离；或者</li>\r\n        <li>渡船：你可以选择这种方法，仅当没有任何桥 和/或 以前使用过的渡船的组合可以由 <em>S </em>走到 <em>D </em>（当检查是否可到达时 ，你应该考虑所有的路径，包括经过你曾游览过的那些岛）。</li>\r\n    </ul>\r\n    </li>\r\n</ul>\r\n<p>注意，你不必游览所有的岛，也可能无法走完所有的桥。</p>\r\n<p align="left"><br />\r\n<strong>任务 </strong></p>\r\n<p>编写一个程序，给定 <strong><em>N </em></strong>座桥以及它们的长度，按照上述的规则，计算你可以走过的桥的最大长度。</p>\r\n<p><strong>限制 </strong></p>\r\n<p>2 &lt;= <strong><em>N </em></strong>&lt;= 1,000,000 公园内的岛屿数目。</p>\r\n<p>1&lt;= <strong><em>Li </em></strong>&lt;= 100,000,000 桥 <strong><em>i </em></strong>的长度。</p>\r\n<p><strong>输入 </strong></p>\r\n<p>你的程序要从输入文件读入以下数据：</p>\r\n<ul>\r\n    <li>第一行包含 <strong><em>N </em></strong>个整数，即公园内岛屿的数目。岛屿由 1 到 <strong><em>N </em></strong>编号。</li>\r\n    <li>随后的 <strong><em>N </em></strong>行每一行用来表示一个岛。第 <strong><em>i </em></strong>行由两个以单空格分隔的整数，表示由岛 <strong><em>i </em></strong>筑的桥。第一个整数表示桥另一端的岛，第二个整数表示该桥的长度 <strong><em>Li </em></strong>。你可以假设对於每座桥，其端点总是位于不同的岛上 。</li>\r\n</ul>\r\n<p><strong>输出 </strong></p>\r\n<p>你的程序必须向输出文件写出包含一个整数的单一行，即可能的最大步行距离。</p>\r\n<p><strong>注</strong>：对某些测试，答案可能无法放进 32-bit 整数，你要取得这道题的满分，可能需要用 Pascal 的 int64 或 C/C++ 的 long long 类型。</p>\r\n<p><strong>评分 </strong></p>\r\n<p>有总计 40 分的测试数据，其中 <strong><em>N </em></strong>不会超过 4,000 。</p>\r\n<p><strong>样例 </strong></p>\r\n<p><img alt="文本框: 样例输入	样例輸出  7  3 8  7 2  4 2  1 4  1 9  3 4  2 3	24  " width="322" height="160" src="http://192.168.1.252/os/times/2008/08ioi/problem/2008day1_clip_image001.gif" /><img alt="" width="318" height="167" src="http://192.168.1.252/os/times/2008/08ioi/problem/2008day1_clip_image003.gif" /><br />\r\n&nbsp;</p>\r\n<p>样例  <strong><em>N </em></strong>＝ 7 座桥，分别为 (1-3), (2-7), (3-4), (4-1), (5-1), (6-3) 以及 (7-2) 。注意连接岛 2 与岛 7 之间有两座不同的桥。</p>\r\n<p>其中一个可以取得最大的步行距离如下：</p>\r\n<p>*由岛 5 开始。 <br />\r\n*步行长度为 9 的桥到岛 1 。 <br />\r\n*步行长度为 8 的桥到岛 3 。 <br />\r\n*步行长度为 4 的桥到岛 6 。 <br />\r\n*搭渡船由岛 6 到岛 7 。 <br />\r\n*步行长度为 3 的桥到岛 2 。</p>\r\n<p>最后，你到达岛 2 ，而你的总步行距离为 9 ＋ 8 ＋ 4 ＋ 3 ＝ 24 。</p>\r\n<p>只有岛 4 没有去。注意，上述游览结束时，你不能再游览这个岛。更准确地说：</p>\r\n<ul>\r\n    <li>你不可以步行去游览，因为没有桥连接岛 2 （你现在的岛）与岛4 。</li>\r\n    <li>你不可以搭渡船去游览，因为你可由当前所在的岛2 到达岛 4 。一个方法是：用 (2-7) 桥，再搭你曾搭过的渡船由岛 7 去岛 6 ，然后走 (6-3) 桥，最后走 (3-4) 桥。</li>\r\n</ul>', 1200, 128, 20, 0, '2012-04-05 16:23:46'),
(531, '图的平方', 'ljb', '<p>【问题描述】</p>\r\n<p>有向图G=(V,E)的平方是图G^2=(V,E^2)，该图满足下列条件：(u,w)&isin;E^2当且仅当对v&isin;V，有(u, v)&isin;E，且(v,w)&isin;E。亦即，如果图G中顶点u和w之间存在着一条恰包含两条边的路径时，则G^2必包含该边(u,w)。<br />\r\n请编程序对于给定的有向图G，查询边(u,w)是否存在于平方图G^2中。</p>\r\n<p>【输入文件】</p>\r\n<p>第一行有两个整数，v(1&lt;=v&lt;=100000)，m(1&lt;=m&lt;=1000)，其中v表示图G的顶点个数，（顶点按1~v编号）；<br />\r\n接下来有m行，每行包含4个整数u1,u2,v1,v2，表示在图G中，顶点区间[u1,u2]中的每一个顶点至顶点区间[v1,v2]中的每一个顶点都有边相连；<br />\r\n接下来有一行，一个整数n（1&lt;=n&lt;=1000），表示查询的个数；<br />\r\n接下来有n行，每一行有4个整数，x1,x2,y1,y2，表示一个询问，即询问在平方图G^2中，其顶点区间[x1,x2]中的每一个顶点至顶点区间[y1,y2]中的每一个顶点是否都有边。</p>\r\n<p>【输出文件】</p>\r\n<p>对于每一个查询，如果结果为&ldquo;是&rdquo;则输出&quot;Yes&quot;，否则输出&quot;No&quot;，如果有多个查询，每个结果单独占一行。</p>\r\n<p>【样例输入】 <br />\r\nljb.in</p>\r\n<p>6 2<br />\r\n1 3 5 6<br />\r\n4 5 2 3<br />\r\n1<br />\r\n2 3 4 6<br />\r\n<br />\r\n【样例输出】</p>\r\n<p>ljb.out</p>\r\n<p>No</p>\r\n<p>注：图G与G^2中的边数均不会超过2000000.<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(532, 'Brownie Slicing', 'brownie', '<pre>\r\nBessie烘焙了一块巧克力蛋糕。这块蛋糕是由R*C(1 &lt;= R,C &lt;= 500)个小的巧克力蛋糕组成的。\r\n\r\n第i行，第j列的蛋糕有N_ij(1 &lt;= N_ij &lt;= 4,000)块巧克力碎屑。\r\n\r\n\r\n\r\nBessie想把蛋糕分成A*B块，(1 &lt;= A &lt;= R,1 &lt;= B &lt;= C): 给A*B只奶牛。蛋糕先水平地切A-1刀\r\n\r\n（只能切沿整数坐标切）来把蛋糕划分成A块。然后再把剩下来的每一块独立地切B-1刀，\r\n\r\n也只能切沿整数坐标切。其他A*B-1只奶牛就每人选一块，留下一块给Bessie。由于贪心，\r\n\r\n他们只会留给Bessie巧克力碎屑最少的那块。\r\n\r\n\r\n\r\n求出Bessie最优情况下会获得多少巧克力碎屑。\r\n\r\n\r\n\r\n例如，考虑一个5*4的蛋糕，上面的碎屑分布如下图所示：\r\n\r\n\r\n\r\n         1 2 2 1\r\n\r\n         3 1 1 1\r\n\r\n         2 0 1 3\r\n\r\n         1 1 1 1\r\n\r\n         1 1 1 1\r\n\r\n\r\n\r\nBessie必须把蛋糕切成4条，每条分成2块。Bessie能像这样切蛋糕:\r\n\r\n\r\n\r\n       1 2 | 2 1\r\n\r\n       ---------\r\n\r\n       3 | 1 1 1\r\n\r\n       ---------\r\n\r\n       2 0 1 | 3\r\n\r\n       ---------\r\n\r\n       1 1 | 1 1\r\n\r\n       1 1 | 1 1\r\n\r\n\r\n\r\n因此，其他贪得无厌的牛拿完后，Bessie仍能够拿走3个巧克力碎屑。\r\n\r\n\r\n\r\n问题名称: brownie\r\n\r\n\r\n\r\n输入格式:\r\n\r\n\r\n\r\n* 第1行: 四个空格隔开的数: R, C, A ，B\r\n\r\n\r\n\r\n* 第2-R+1行: 第i+1行有C个整数, N_i1 , N_i2 .. N_iC\r\n\r\n\r\n\r\n样例输入 (brownie.in):\r\n\r\n\r\n\r\n5 4 4 2\r\n\r\n1 2 2 1\r\n\r\n3 1 1 1\r\n\r\n2 0 1 3\r\n\r\n1 1 1 1\r\n\r\n1 1 1 1\r\n\r\n\r\n\r\n输出格式:\r\n\r\n\r\n\r\n* 第1行: 一个整数: Bessie保证能拿到的最多碎屑数\r\n\r\n\r\n\r\n样例输出 (brownie.out):\r\n\r\n\r\n\r\n3\r\n\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(533, '立春树', 'tdec', '<pre>\r\nFarmer John正在装饰他的立春树（就像圣诞树，但是流行得晚3个月）\r\n\r\n它由一个N（1 &lt;= N &lt;= 100,000）个点的树来表示, 标号为1到N，1号点为根。\r\n\r\n其他节点i都有个父亲P_i（1 &lt;= P_i &lt;= N)。1号点没有父亲，(输入中用-1表示),\r\n\r\n因为它是树根。\r\n\r\n\r\n\r\n每个节点i都有一个对应的以它为根的子树（包括大小为1的子树）。FJ想确保点i对应的子树\r\n\r\n有至少C_i个（1 &lt;= C_i &lt;= 10,000,000）个装饰物分散在整个子树上。 他还想用最少的时间\r\n\r\n来放置所有装饰物（需要K*T_i的时间在点i放置K个装饰物（1 &lt;= T_i&lt;= 100））.\r\n\r\n\r\n\r\n帮助FJ计算出最少需要的时间放置装饰物来满足要求。答案可能超过32位整数，但是保证\r\n会在64位有符号整数范围内。\r\n\r\n\r\n\r\n例如，考虑下面这棵树：\r\n\r\n\r\n\r\n               1 \r\n\r\n               |\r\n\r\n               2\r\n\r\n               |\r\n\r\n               5\r\n\r\n              / \r\n\r\n             4   3\r\n\r\n\r\n\r\n假设FJ需要满足下列要求\r\n\r\n\r\n\r\n                  该子树至少需要的装饰物数\r\n\r\n                    |     放置一个的时间\r\n\r\n                    |       |\r\n\r\n      子树的根 |   C_i  |  T_i\r\n\r\n       --------+--------+-------\r\n\r\n          1    |    9   |   3\r\n\r\n          2    |    2   |   2\r\n\r\n          3    |    3   |   2\r\n\r\n          4    |    1   |   4\r\n\r\n          5    |    3   |   3\r\n\r\n \r\n\r\n那么FJ可以放置像下面这样所有的装饰物，用了20的时间：\r\n\r\n\r\n\r\n            1 [0/9(0)]     图例: 元素# [该点放置的装饰物/\r\n\r\n            |                      子树中总共的装饰物数(该点总时间)]\r\n\r\n            2 [3/9(6)]\r\n\r\n            |\r\n\r\n            5 [0/6(0)]\r\n\r\n           / \r\n\r\n [1/1(4)] 4   3 [5/5(10)]\r\n\r\n\r\n\r\n问题名称: tdec\r\n\r\n\r\n\r\n输入格式:\r\n\r\n\r\n\r\n* 第一行: 一个整数: N\r\n\r\n\r\n\r\n* 第二行到第N+1行: 第i+1行有三个整数，P_i,C_i,T_i。\r\n\r\n\r\n\r\n样例输入 (tdec.in):\r\n\r\n\r\n\r\n5\r\n\r\n-1 9 3\r\n\r\n1 2 2\r\n\r\n5 3 2\r\n\r\n5 1 4\r\n\r\n2 3 3\r\n\r\n\r\n\r\n输出格式:\r\n\r\n\r\n\r\n* 第一行: 一个整数：放置装饰物的最少时间\r\n\r\n\r\n\r\n样例输出 (tdec.out):\r\n\r\n\r\n\r\n20\r\n\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(534, '奶牛议会', 'cowngress', '<pre>\r\n由于对Farmer John的领导感到极其不悦，奶牛们退出了农场，组建了奶牛议会。议会以&ldquo;每头牛\r\n都可以获得自己想要的&rdquo;为原则，建立了下面的投票系统：\r\n\r\n   M只到场的奶牛 (1 &lt;= M &lt;= 4000) 会给N个议案投票(1 &lt;= N &lt;= 1,000) 。每只\r\n   奶牛会对恰好两个议案 B_i and C_i (1 &lt;= B_i &lt;= N; 1 &lt;= C_i &lt;= N)投\r\n   出&ldquo;是&rdquo;或&ldquo;否&rdquo;（输入文件中的''Y''和''N''）。他们的投票结果分别为VB_i \r\n   (VB_i in {''Y'', ''N''}) and VC_i (VC_i in {''Y'', ''N''})。\r\n\r\n   最后，议案会以如下的方式决定：每只奶牛投出的两票中至少有一票和最终结果相符合。\r\n   例如Bessie给议案1投了赞成''Y''，给议案2投了反对''N''，那么在任何合法的议案通过\r\n   方案中，必须满足议案1必须是''Y''或者议案2必须是''N''（或者同时满足）。\r\n\r\n给出每只奶牛的投票，你的工作是确定哪些议案可以通过，哪些不能。如果不存在这样一个方案，\r\n输出&quot;IMPOSSIBLE&quot;。如果至少有一个解，输出：\r\n\r\n    Y  如果在每个解中，这个议案都必须通过\r\n    N  如果在每个解中，这个议案都必须驳回\r\n    ?  如果有的解这个议案可以通过，有的解中这个议案会被驳回\r\n\r\n考虑如下的投票集合：\r\n\r\n       - - - - - 议案 - - - - -\r\n         1        2        3\r\n奶牛 1   YES      NO\r\n奶牛 2   NO       NO\r\n奶牛 3   YES               YES\r\n奶牛 4   YES      YES\r\n\r\n下面是两个可能的解：\r\n    * 议案 1 通过（满足奶牛1，3，4）\r\n    * 议案 2 驳回（满足奶牛2）\r\n    * 议案 3 可以通过也可以驳回（这就是有两个解的原因）\r\n\r\n事实上，上面的问题也只有两个解。所以，输出的答案如下：\r\n\r\nYN?\r\n\r\n问题名称：cowngress\r\n\r\n输入格式：\r\n\r\n* 第1行：两个空格隔开的整数：N和M\r\n\r\n* 第2到M+1行：第i+1行描述第i只奶牛的投票方案：B_i, VB_i, C_i, VC_i\r\n\r\n输入样例（文件 cowngress.in）：\r\n\r\n3 4\r\n1 Y 2 N\r\n1 N 2 N\r\n1 Y 3 Y\r\n1 Y 2 Y\r\n\r\n输出格式：\r\n\r\n* 第1行：一个含有N个字符的串，第i个字符要么是''Y''（第i个议案必须通过），或者是''N''\r\n（第i个议案必须驳回），或者是''?''。\r\n如果无解，输出&quot;IMPOSSIBLE&quot;。\r\n\r\n样例输出（文件 cowngress.out）：\r\n\r\nYN?\r\n\r\n</pre>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(535, '工程规划', 'work', '<div><b>【问题描述】</b><br />\r\n<br />\r\n造一幢大楼是一项艰巨的工程，它是由 n 个子任务构成的，给它们分别编号 1 ， 2 ，&hellip;， n(5 &le; n &le; 1000) 。由于对一些任务的起始条件有着严格的限制，所以每个任务的起始时间 T 1 ， T 2 ，&hellip;， T n 并不是很容易确定的 ( 但这些起始时间都是非负整数，因为它们必须在整个工程开始后启动 ) 。例如：挖掘完成后，紧接着就要打地基；但是混凝土浇筑完成后，却要等待一段时间再去掉模板。</div>\r\n<div>这种要求就可以用 M(5 &le; m &le; 5000) 个不等式表示，不等式形如 T i 一 T j &le; b 代表 i 和 j 的起始时间必须满足的条件。每个不等式的右边都是一个常数 b ，这些常数可能不相同，但是它们都在区间 (-l00 ， 100) 内。</div>\r\n<div>你的任务就是写一个程序，给定像上面那样的不等式，找出一种可能的起始时间序列 T 1 ， T 2 ，&hellip;， T n ，或者判断问题无解。对于有解的情况，要使最早进行的那个任务和整个工程的起始时间相同，也就是说， T 1 ， T 2 ，&hellip;， T n 中至少有一个为 0 。</div>\r\n<div>【输入】</div>\r\n<div>第一行是用空格隔开的两个正整数 n 和 m ，下面的 m 行每行有三个用空格隔开的整数 i ， j ， b 对应着不等式 T i -T j &le; b 。</div>\r\n<div>【输出】</div>\r\n<div>如果有可行的方案，那么输出 N 行，每行都有一个非负整数且至少有一个为 0 ，按顺序表示每个任务的起始时间。如果没有可行的方案，就输出信息&ldquo; NO SOLUTION &rdquo;。</div>\r\n<div>【样例 1 】</div>\r\n<div>work.in</div>\r\n<div>5 8 <br />\r\n1 2 0 <br />\r\n1 5 -1 <br />\r\n2 5 1 <br />\r\n3 1 5 <br />\r\n4 1 4 <br />\r\n4 3 -1 <br />\r\n5 3 -3 <br />\r\n5 4 -3</div>\r\n<div>work.out</div>\r\n<div>0 <br />\r\n2 <br />\r\n5 <br />\r\n4 <br />\r\n1</div>\r\n<div>【样例 2 】</div>\r\n<div>work.in</div>\r\n<div>5 5 <br />\r\n1 2 -3 <br />\r\n1 5 -1 <br />\r\n2 5 -1 <br />\r\n5 1 -5 <br />\r\n4 1 4</div>\r\n<div>work.out</div>\r\n<div>NO SOLUTION</div>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(536, '双亲数', 'parents', '<p>【问题描述】</p>\r\n<p>小 D 是一名数学爱好者，他对数字的着迷到了疯狂的程度。</p>\r\n<p>我们以 d = gcd(a, b) 表示 a 、 b 的最大公约数，小 D 执著的认为，这样亲密的关系足可以用双亲来描述，此时，我们称 <strong>有序 </strong>数对 (a, b) 为 d 的双亲数。</p>\r\n<p>与正常双亲不太相同的是，对于同一个 d ，他的双亲太多了 &gt;_&lt;</p>\r\n<p>比如， (4, 6), (6, 4), (2, 100) 都是 2 的双亲数。</p>\r\n<p>于是一个这样的问题摆在眼前，对于 0 &lt; a &lt;= A, 0 &lt; b &lt;= B ，有多少 <strong>有序 </strong>数对 (a, b) 是 d 的双亲数？</p>\r\n<p>&nbsp;</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件只有一行，三个正整数 A 、 B 、 d (d &lt;= A, B) ，意义如题所示。</p>\r\n<p>&nbsp;</p>\r\n<p>【输出文件】</p>\r\n<p>输出一行一个整数，给出满足条件的双亲数的个数。</p>\r\n<p>&nbsp;</p>\r\n<p>【数据约定】</p>\r\n<p>对于 40% 的数据满足 0 &lt; A, B &lt; 10^4</p>\r\n<p>对于 100% 的数据满足 0 &lt; A, B &lt; 10^6</p>\r\n<p>&nbsp;</p>\r\n<p>【样例】</p>\r\n<p>输入样例</p>\r\n<p>5 5 2</p>\r\n<p>输出样例</p>\r\n<p>3</p>\r\n<p>【样例解释】</p>\r\n<p>满足条件的三对双亲数为 (2, 2) (2, 4) (4, 2)</p>\r\n<p><br />\r\n&nbsp;</p>', 2000, 64, 10, 0, '2012-04-05 16:23:47'),
(537, '请客', 'cookie', '<p>【问题描述】</p>\r\n<p>小明的N（1 &lt;= N &lt;= 1000）个朋友（编号为1到N）决定成立M个学习小组（1 &lt;= M &lt;= 100）。在学习小组G_i中有S_i个人，分别为G_i1、G_i2...一个人可能会参加多个小组。</p>\r\n<p>对于每个学习小组，有一个人必须在每次聚会的时候带饼干饮料请大家吃。因为买这些零食会消耗我们那为数不多的零花钱，还会花费我们宝贵的时间，所以我们希望尽可能公平地分摊带零食的责任。</p>\r\n<p>我们决定。如果一个人参加了K个学习小组，K个学习小组的大小分别为c_1、c_2、...、c_K，那么她最多负责为ceil(1/c_1 + 1/c_2 + ... + 1/c_K)个学习小组的聚会带零食。其中ceil为上取整函数。</p>\r\n<p>请计算出一个方案，决定每个学习小组的聚会由哪一个人负责带零食。如果没有一种方案可行，输出&quot;-1&quot;。</p>\r\n<p>输入格式：</p>\r\n<p>＊第一行：两个由空格隔开的整数：N和M。</p>\r\n<p>＊第二到第M+1行：第i+1行包含若干由空格隔开的整数：S_i，G_i1，G_i2...</p>\r\n<p>样例输入（文件 cookie.in）：</p>\r\n<p>5 6<br />\r\n3 2 4 5<br />\r\n2 1 3<br />\r\n3 1 2 3<br />\r\n1 1<br />\r\n2 2 5<br />\r\n3 2 3 4</p>\r\n<p>解释：</p>\r\n<p>第一、第二和第三个人愿意为两个学习小组的聚会带零食，第四和第五个人只愿意为一个学习小组带零食。</p>\r\n<p>输出格式：</p>\r\n<p>＊第1至第M行：如果有符合要求的方案，第i行有一个整数，表示为第i个学习小组的聚会带零食的人的编号。如果没有符合要求的方案，那么第一行只包含一个整数-1。</p>\r\n<p>样例输出（文件 cookie.out）：</p>\r\n<p>5<br />\r\n1<br />\r\n3<br />\r\n1<br />\r\n2<br />\r\n4</p>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(538, '山顶问题', 'peaks', '<p>题目描述<br />\r\n话说某某在cj校运会上异军突起，其实不是偶然，而是有历史原因的。<br />\r\n时光回溯到XX年前，某某为了心中的理想，每天爬N里山路上学。直到有一天mlj（也就是战神Mars）来到这里，被某某所打动，于是决定帮某某一把。从某某家到学校中间的这N里山路在一条直线上，第i里山路的海拔高度为Hi，如果一段相同高度的山路两边都比它低或者是山的边界，那么这段山路将被称之为&ldquo;山顶&rdquo;。mlj想这连绵起伏的山路爬着多累啊，于是他决定动用神力，降低某些山路的海拔高度使得山顶的个数不超过K。但mlj不想做得太明显而被某某发现，于是他求助于你。</p>\r\n<p>Your Task<br />\r\n请求出要使&ldquo;山顶&rdquo;的数目不超过k，所有山路降低的高度之和至少是多少。<br />\r\n<br />\r\n输入文件<br />\r\n第一行两个正整数 N K。<br />\r\n接下来一行N个正整数Hi。</p>\r\n<p>输出文件<br />\r\n一个数，最小的所有山路减少的高度之和。</p>\r\n<p>样例输入<br />\r\n12 1<br />\r\n1 2 3 3 3 2 1 3 2 2 1 2<br />\r\n样例输出<br />\r\n5<br />\r\n样例解释<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;* * *&nbsp;&nbsp;&nbsp;&nbsp; *<br />\r\n&nbsp;&nbsp;* * * * *&nbsp;&nbsp; * * * &nbsp;&nbsp;*<br />\r\n* * * * * * * * * * * *<br />\r\n1 2 3 3 3 2 1 3 2 2 1 2<br />\r\n这是之前山的形状，有3个山顶。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;* * * &nbsp;&nbsp;&nbsp;&nbsp;-<br />\r\n&nbsp;&nbsp;* * * * *&nbsp;&nbsp; - - -&nbsp;&nbsp; -<br />\r\n* * * * * * * * * * * *<br />\r\n1 2 3 3 3 2 1 1 1 1 1 1<br />\r\n这是mlj用了神力之后（&lsquo;-&rsquo;表示被mlj的神力OOXX掉了），只剩下一个山顶。</p>\r\n<p>数据约定<br />\r\n100% K&lt;=25 1&lt;=Hi&lt;=1000000<br />\r\n90% N&lt;=1000 <br />\r\n100% N&lt;=100000<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(539, '牛棚的灯', 'lights', '<p>【问题描述】</p>\r\n<p>贝希和她的闺密们在她们的牛棚中玩游戏。但是天不从人愿，突然，牛棚的电源跳闸了，所有的灯都被关闭了。贝希是一个很胆小的女生，在伸手不见拇指的无尽的黑暗中，她感到惊恐，痛苦与绝望。她希望您能够帮帮她，把所有的灯都给重新开起来！她才能继续快乐地跟她的闺密们继续玩游戏！</p>\r\n<p>牛棚中一共有N（1 &lt;= N &lt;= 35）盏灯，编号为1到N。这些灯被置于一个非常复杂的网络之中。有M（1 &lt;= M &lt;= 595）条很神奇的无向边，每条边连接两盏灯。</p>\r\n<p>每盏灯上面都带有一个开关。当按下某一盏灯的开关的时候，这盏灯本身，还有所有有边连向这盏灯的灯的状态都会被改变。状态改变指的是：当一盏灯是开着的时候，这盏灯被关掉；当一盏灯是关着的时候，这盏灯被打开。</p>\r\n<p>问最少要按下多少个开关，才能把所有的灯都给重新打开。</p>\r\n<p>数据保证至少有一种按开关的方案，使得所有的灯都被重新打开。</p>\r\n<p>题目名称：lights</p>\r\n<p>输入格式：</p>\r\n<p>＊第一行：两个空格隔开的整数：N和M。</p>\r\n<p>＊第二到第M+1行：每一行有两个由空格隔开的整数，表示两盏灯被一条无向边连接在一起。<br />\r\n没有一条边会出现两次。</p>\r\n<p>样例输入（文件 lights.in）：</p>\r\n<p>5 6<br />\r\n1 2<br />\r\n1 3<br />\r\n4 2<br />\r\n3 4<br />\r\n2 5<br />\r\n5 3</p>\r\n<p>输入细节：</p>\r\n<p>一共有五盏灯。灯1、灯4和灯5都连接着灯2和灯3。</p>\r\n<p>输出格式：</p>\r\n<p>第一行：一个单独的整数，表示要把所有的灯都打开时，最少需要按下的开关的数目。</p>\r\n<p>样例输出（文件 lights.out）：</p>\r\n<p>3</p>\r\n<p>输出细节：</p>\r\n<p>按下在灯1、灯4和灯5上面的开关。<br />\r\n&nbsp;</p>', 1000, 128, 17, 0, '2012-04-05 16:23:47'),
(540, '拯救奶牛贝希', 'rescuea', '<p>【问题描述】</p>\r\n<p>贝希被困在一个三角形的迷宫之中。这个迷宫有N行（1 &lt;= N &lt;= 1000000）。比如下图是一个3行的迷宫。</p>\r\n<p align="center"><br />\r\n<img height="224" alt="" width="273" src="http://192.168.1.252/os/cqwu/2009/0911/re-1.jpg" /></p>\r\n<p>迷宫的第i行有2*i-1个三角形，从左到右分别编号为（i，1）、（i，2）等等。</p>\r\n<p>贝希每次可以从一个三角形走到任意一个一个跟当前的三角形有邻边的三角形。比如说，如果她目前处于三角形（3，3），那么，她可以走到三角形（3，2）、（3，4）和（4，4）。贝希每次需要一分钟的时间来移动到下一个三角形。</p>\r\n<p align="center"><img height="230" alt="" width="349" src="http://192.168.1.252/os/cqwu/2009/0911/re-2.jpg" /><br />\r\n&nbsp;</p>\r\n<p>农夫约翰发现贝希被困了！于是她跟踪贝希的iPhone手机（可怜的触摸屏～），得知贝希目前处于三角形（Si，Sj）。因为约翰对贝希有着无穷无尽的浓浓爱意，所以他希望贝希能尽可能快地回到他的身边。</p>\r\n<p>在迷宫的三角形之中，有M（1 &lt;= M &lt;= 10000）个是出口。在任何一个出口都可以让贝希逃离迷宫。一旦贝希进入一个作为出口的三角形，她用多一分钟就可以逃离这个迷宫。</p>\r\n<p>找到一个可以让贝希逃离迷宫最小时间T，并输出她应该从哪一个出口逃离迷宫，这个出口记为（OUTi，OUTj）。如果有多个出口同时需要时间T，输出那个行的编号小的出口，如果仍然有多个出口，输出那个列的编号小的。</p>\r\n<p>输入格式</p>\r\n<p>＊第一行：两个由空格隔开的整数：N和M。</p>\r\n<p>＊第二行：两个由空格隔开的整数：Si和Sj。</p>\r\n<p>＊第三到第M+2行：第i+2行有两个由空格隔开的整数Ei和Ej，表示三角形（Ei，Ej）是出口。</p>\r\n<p>样例输出：</p>\r\n<p>4 2<br />\r\n2 1<br />\r\n3 5<br />\r\n4 4</p>\r\n<p>输出格式：</p>\r\n<p>＊第一行：两个由空格隔开的整数：OUTi和OUTj。</p>\r\n<p>＊第二行：一个单独的整数：T。</p>\r\n<p>样例输出：</p>\r\n<p>4 4<br />\r\n4<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:47'),
(541, '奶牛的跳格子游戏 ', 'hop', '<p>奶牛们正在回味童年，玩一个类似跳格子的游戏，在这个游戏里，奶牛们在草地上 画了一行N个格子，(3 &lt;=N &lt;= 250,000)，编号为1..N。</p>\r\n<p>就像任何一个好游戏一样，这样的跳格子游戏也有奖励！第i个格子标有一个数字V_i (-2,000,000,000 &lt;=V_i &lt;= 2,000,000,000)表示这个格子的钱。奶牛们想看看最后谁能 得到最多的钱。<br />\r\n<br />\r\n规则很简单：<br />\r\n* 每个奶牛从0号格子出发。(0号格子在1号之前，那里没钱)<br />\r\n* 她向N号格子进行一系列的跳跃(也可以不跳)，每次她跳到的格子最多可以和前一 个落脚的格子差K格(1 &lt;= K &lt;= N)(比方说，当前在1号格，K=2, 可以跳到2号和3号格子)<br />\r\n*在任何时候，她都可以选择回头往0号格子跳，直到跳到0号格子。另外，除了以上规则之外， 回头跳的时候还有两条规则： <br />\r\n*不可以跳到之前停留的格子。 *除了0号格子之外，她在回来的时候，停留的格子必须是恰巧过去的时候停留的某个格子 的前一格(当然，也可以跳过某些过去时候停留的格子)。简单点说，如果i号格子是回来 停留的格子，i+1号就必须是过去停留的格子，如果i+1号格子是过去停留的格子，i号格子 不一定要是回来停留的格子。</p>\r\n<p>她得到的钱就是所有停留过的格子中的数字的和，请你求出最多奶牛可以得到的钱数。</p>\r\n<p>在样例中，K=2，一行5个格子。</p>\r\n<p>格子 编号: 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |///|--|&nbsp;&nbsp;&nbsp;|--|&nbsp;&nbsp;&nbsp;|--|&nbsp;&nbsp;&nbsp;|--|&nbsp;&nbsp;&nbsp;|--|&nbsp;&nbsp;&nbsp;|<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; +---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+&nbsp;&nbsp;+---+<br />\r\n钱数 : &nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4</p>\r\n<p>一个合法的序列Bessie可以选择的是0[0], 1[0], 3[2], 2[1], 0[0]。(括号里的数表示钱数)<br />\r\n这样，可以得到的钱数为0+0+2+1+0 = 3。</p>\r\n<p>如果Bessie选择一个序列开头为0, 1, 2, 3, ...，那么她就没办法跳回去了，因为她没办法再<br />\r\n跳到一个之前没跳过的格子。<br />\r\n序列0[0], 2[1], 4[-3], 5[4], 3[2], 1[0], 0[0]是最大化钱数的序列之一，最后的钱数为<br />\r\n(0+1-3+4+2+0 = 4)。</p>\r\n<p>輸入格式:</p>\r\n<p>* 第1行: 两个用空格隔开的整数: N 和 K<br />\r\n* 第2到N+1行: 第i+1行有一个整数: V_i</p>\r\n<p>樣例輸入 (文件 hop.in):</p>\r\n<p>5 2<br />\r\n0<br />\r\n1<br />\r\n2<br />\r\n-3<br />\r\n4<br />\r\n輸出格式:</p>\r\n<p>* 第一行: 一个单个的整数表示最大的钱数是多少。</p>\r\n<p>樣例輸出 (文件 hop.out):</p>\r\n<p>4</p>\r\n<p>輸出細節:</p>\r\n<p>还有一种可能的最大化钱数的序列是: 0 2 4 5 3 1 0<br />\r\n<br />\r\n&nbsp;</p>', 1000, 128, 15, 0, '2012-04-05 16:23:47'),
(542, '冲浪', 'slide', '<p>受到秘鲁的马丘比丘的新式水上乐园的启发，Farmer John决定也为奶牛们建一个水上乐园。当然，它最大的亮点就是新奇巨大的水上冲浪。</p>\r\n<p>超级轨道包含 E (1 &lt;= E &lt;=150,000)条小轨道连接着V (V &lt;= 50,000)个水池，编号为1..V。每个小轨道必须按照特定的方向运行，不能够反向运行。奶牛们从1号水池出发，经过若干条小轨道，最终到达V号水池。每个水池(除了V号和1号之外，都有至少一条小轨道进来和一条小轨道出去，并且，一头奶牛从任何一个水池到达V号水池。最后，由于这是一个冲浪，从任何一个水池出发都不可能回到这个水池)</p>\r\n<p>每条小轨道从水池P_i到水池Q_i (1 &lt;= P_i &lt;= V; 1&lt;= Q_i &lt;= V; P_i != Q_i)，轨道有一个开心值F_i (0 &lt;= F_i &lt;= 2,000,000,000)，Bessie总的开心值就是经过的所有轨道的开心值之和。</p>\r\n<p>Bessie自然希望越开心越好，并且，她有足够长的时间在轨道上玩。因此，她精心地挑选路线。但是，由于她是头奶牛，所以，会有至多K (1 &lt;= K &lt;= 10)次的情况，她无法控制，并且随机从某个水池选择了一条轨道(这种情况甚至会在1号水池发生)</p>\r\n<p>如果Bessie选择了在最坏情况下，最大化她的开心值，那么，她在这种情况下一次冲浪可以得到的最大开心值是多少？</p>\r\n<p>在样例中，考虑一个超级轨道，包含了3个水池(在图中用括号表示)和4条小轨道，K的值为1(开心值在括号外表示出来，用箭头标识)</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;\\<br />\r\n5 -&gt; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\ &lt;- 9<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br />\r\n&nbsp;&nbsp;[2]---3---[3]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\__5__/</p>\r\n<p>她总是从1号水池出发，抵达3号水池。如果她总是可以自己选择，就是不会发生不能控制的情况她可以选择从1到2(这条轨道开心值为5)，再从2到3(开心值为5)，总的开心值为5+5=10。但是，如果她在1号水池失去控制，直接到了3，那么开心值为9，如果她在2号水池失去控制，她总的开心值为8。</p>\r\n<p>Bessie想要找到最大化开心值的方案，可以直接从1到3，这样，如果在1号水池失去控制，这样，她就不会在2号水池失去控制了，就能够得到10的开心值。因此，她的开心值至少为9。</p>\r\n<p>輸入格式:</p>\r\n<p>* 第一行: 三个用空格隔开的整数: V, E, 和 K<br />\r\n* 第2到第E+1行: 第i+1行包含三个用空格隔开的整数:P_i, Q_i, 和 F_i</p>\r\n<p>樣例輸入 (文件 slide.in):</p>\r\n<p>3 4 1<br />\r\n2 3 5<br />\r\n1 2 5<br />\r\n1 3 9<br />\r\n2 3 3</p>\r\n<p>輸出格式:</p>\r\n<p>* 第一行:一行一个整数表示在最坏情况下最大化的开心值</p>\r\n<p>樣例輸出 (文件 slide.out):</p>\r\n<p>9</p>', 1000, 128, 10, 0, '2012-04-05 16:23:48'),
(543, '数三角形', 'tricount', '<p>在一只大灰狼偷偷潜入Farmer Don的牛群被群牛发现后，贝西现在不得不履行着她站岗的职责。<br />\r\n从她的守卫塔向下瞭望简直就是一件烦透了的事情。她决定做一些开发智力的小练习，防止她睡着了。</p>\r\n<p>想象牧场是一个X，Y平面的网格。她将N只奶牛标记为1&hellip;N (1 &lt;= N &lt;= 100,000)，每只奶牛的坐标为X_i,Y_i (-100,000 &lt;= X_i &lt;= 100,000;-100,000 &lt;= Y_i &lt;= 100,000; 1 &lt;= i &lt;=N)。然后她脑海里想象着所有可能由奶牛构成的三角形。如果一个三角形完全包含了原点(0,0)，那么她称这个三角形为&ldquo;黄金三角形&rdquo;。原点不会落在任何一对奶牛的连线上。另外，不会有奶牛在原点。</p>\r\n<p>给出奶牛的坐标，计算出有多少个&ldquo;黄金三角形&rdquo;。</p>\r\n<p>顺便解释一下样例，考虑五只牛，坐标分别为(-5,0), (0,2), (11,2), (-11,-6), (11,-5)。<br />\r\n下图是由贝西视角所绘出的图示。</p>\r\n<p>............|............<br />\r\n............*..........*.<br />\r\n............|............<br />\r\n-------*----+------------<br />\r\n............|............<br />\r\n............|............<br />\r\n............|............<br />\r\n............|............<br />\r\n............|..........*.<br />\r\n.*..........|............<br />\r\n............|............</p>\r\n<p>所有十个三角形如图下所示：<br />\r\n&nbsp;</p>\r\n<p>通过观察，其中有5个构成了&ldquo;黄金三角形&rdquo;</p>\r\n<p>輸入格式:</p>\r\n<p>* 第一行:一个整数: N<br />\r\n* 第2到第N+1行: 每行两个整数X_i，Y_i，表示每只牛的坐标</p>\r\n<p>樣例輸入 (文件 tricount.in):</p>\r\n<p>5<br />\r\n-5 0<br />\r\n0 2<br />\r\n11 2<br />\r\n-11 -6<br />\r\n11 -5</p>\r\n<p>輸出格式:</p>\r\n<p>* 第一行: 一行包括一个整数，表示&ldquo;黄金三角形的数量&rdquo;</p>\r\n<p>樣例輸出 (文件 tricount.out):</p>\r\n<p>5</p>', 1000, 128, 10, 0, '2012-04-05 16:23:48'),
(544, '向量', 'vector', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="CONTENT-TYPE" />\r\n<meta content="LibreOffice 3.3  (Linux)" name="GENERATOR" /><style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style></p>\r\n<p style="margin-bottom: 0cm"><font size="3">题目描述：</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm" align="left"><font size="3">给你一对数</font><font face="DejaVu Serif Condensed, serif"><font size="3">a,b</font></font><font size="3">，你可以任意使用</font><font face="DejaVu Serif Condensed, serif"><font size="3">(a,b), (a,-b), (-a,b), (-a,-b), (b,a), (b,-a), (-b,a), (-b,-a)</font></font><font size="3">这些向量，问你能不能拼出另一个向量</font><font face="DejaVu Serif Condensed, serif"><font size="3">(x,y)</font></font><font size="3">。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm" align="left"><font size="3">说明：这里的拼就是使得你选出的向量之和为</font><font face="DejaVu Serif Condensed, serif"><font size="3">(x,y)</font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">输入格式：</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第一行数组组数</font><font face="DejaVu Serif Condensed, serif"><font size="3">t</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">(t&lt;=50000)</font></font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">接下来</font><font face="DejaVu Serif Condensed, serif"><font size="3">t</font></font><font size="3">行每行四个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">a,b,x,y (-2*10</font><sup><font size="3">9</font></sup><font size="3">&lt;=a,b,x,y&lt;=2*10</font><sup><font size="3">9</font></sup><font size="3">)</font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">输出格式：</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">t</font></font><font size="3">行每行为</font><font face="DejaVu Serif Condensed, serif"><font size="3">Y</font></font><font size="3">或者为</font><font face="DejaVu Serif Condensed, serif"><font size="3">N</font></font><font size="3">，分别表示可以拼出来，不能拼出来</font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">样例输入：</font></p>\r\n<p style="line-height: 140%; widows: 2; orphans: 2; margin-bottom: 0cm" align="left"><font color="#444444"><font face="宋体, SimSun"><font size="3">3</font></font></font></p>\r\n<p style="line-height: 140%; widows: 2; orphans: 2; margin-bottom: 0cm" align="left"><font color="#444444"><font face="宋体, SimSun"><font size="3">2 1 3 3</font></font></font></p>\r\n<p style="line-height: 140%; widows: 2; orphans: 2; margin-bottom: 0cm" align="left"><font color="#444444"><font face="宋体, SimSun"><font size="3">1 1 0 1</font></font></font></p>\r\n<p style="line-height: 140%; widows: 2; orphans: 2; margin-bottom: 0cm" align="left"><font color="#444444"><font face="宋体, SimSun"><font size="3">1 0 -2 3</font></font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">样例输出：</font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">Y</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">N</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">Y</font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">样例解释：</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">第一组：</font><font face="DejaVu Serif Condensed, serif"><font size="3">(2,1)+(1,2)=(3,3)</font></font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">第三组：</font><font face="DejaVu Serif Condensed, serif"><font size="3">(-1,0)+(-1,0)+(0,1)+(0,1)+(0,1)=(-2,3</font>)</font></p>', 1000, 256, 10, 0, '2012-04-05 16:23:48');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(545, '描边', 'pathnoi', '<p>\r\n<meta http-equiv="CONTENT-TYPE" content="text/html; charset=utf-8" />\r\n<meta content="LibreOffice 3.3  (Linux)" name="GENERATOR" /><style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		H2 { margin-top: 0.46cm; margin-bottom: 0.46cm; line-height: 173%; page-break-inside: avoid }\r\n		H2.western { font-family: "Arial", sans-serif; font-size: 16pt }\r\n		H2.cjk { font-family: "黑体", "SimHei"; font-size: 16pt; font-style: normal }\r\n		H2.ctl { font-family: "Arial", sans-serif; font-size: 16pt }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style></p>\r\n<h2 style="font-weight: normal" class="cjk"><font size="3">【问题描述】</font></h2>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">小</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>Z</i></font></font><font size="3">自幼就酷爱数学。聪明的他特别喜欢研究一些数学小问题。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">有一天，小</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>Z</i></font></font><font size="3">在一张纸上选择了</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font></font><font size="3">个点，并用铅笔将它们两两连接起来，构成</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">(</font><font size="3"><i>n</i></font><font size="3">-1)/2</font></font><font size="3">条线段。由于铅笔很细，可以认为这些线段的宽度为</font><font face="DejaVu Serif Condensed, serif"><font size="3">0</font></font><font size="3">。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">望着这些线段，小</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>Z</i></font></font><font size="3">陷入了冥想中。他认为这些线段中的一部分比较重要，需要进行强调。因此小</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>Z</i></font></font><font size="3">拿出了毛笔，将它们重新进行了描边。毛笔画在纸上，会形成一个</font><u><font size="3"><b>半径为</b></font></u><font face="DejaVu Serif Condensed, serif"><font size="3"><i><u><b>r</b></u></i></font></font><u><font size="3"><b>的圆</b></font></u><font size="3">。</font><u><font size="3"><b>在对一条线段进行描边时，毛笔的中心</b></font><font face="DejaVu Serif Condensed, serif"><font size="3"><b>(</b></font></font></u><u><font size="3"><b>即圆心</b></font><font face="DejaVu Serif Condensed, serif"><font size="3"><b>)</b></font></font></u><u><font size="3"><b>将从线段的一个端点开始，沿着该线段描向另一个端点</b></font></u><font size="3">。下图即为在一张</font><font face="DejaVu Serif Condensed, serif"><font size="3">4</font></font><font size="3">个点的图中，对其中一条线段进行描边强调后的情况。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><img alt="" width="333" height="253" src="/images/1.png" /></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm" align="center">&nbsp;</p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">现在，小</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>Z</i></font></font><font size="3">非常想知道在描边之后纸面上共有多大</font><u><font size="3"><b>面积</b></font></u><font size="3">的区域被强调，你能帮助他解答这个问题么？</font></p>\r\n<h2 style="margin-top: 0.21cm; margin-bottom: 0.21cm" class="cjk"><font size="3"><span style="font-weight: normal">【输入文件】</span></font></h2>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">这是一道提交答案型试题，所有的输入文件 </font><font face="DejaVu Serif Condensed, serif"><font face="TimesNewRomanPSMT, Times New Roman, serif"><font size="3">path1.in~path10.in </font></font></font><font size="3">已在相应目录下。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">输入文件 </font><font face="DejaVu Serif Condensed, serif"><font size="3">path*.in</font><font face="TimesNewRomanPSMT, Times New Roman, serif"><font size="3"> </font></font></font><font size="3">第一行包含一个正整数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font></font><font size="3">，表示选择的点的数目。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第</font><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font><font size="3">至第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+1</font></font><font size="3">行，第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>i</i></font><font size="3">+1</font></font><font size="3">行有两个实数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>x</i></font><sub><font size="3"><i>i</i></font></sub><font size="3">, </font><font size="3"><i>y</i></font><sub><font size="3"><i>i</i></font></sub></font><font size="3">，表示</font><font size="3">点</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>i</i></font></font><font size="3">的坐标为</font><font face="DejaVu Serif Condensed, serif"><font size="3">(</font><font size="3"><i>x</i></font><sub><font size="3"><i>i</i></font></sub><font size="3">, </font><font size="3"><i>y</i></font><sub><font size="3"><i>i</i></font></sub><font size="3">)</font></font><font size="3">。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+2</font></font><font size="3">行有一个正整数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>m</i></font></font><font size="3">，表示小</font><font face="DejaVu Serif Condensed, serif"><font size="3">Z</font></font><font size="3">认为比较重要的线段的条数。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+3</font></font><font size="3">至第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+</font><font size="3"><i>m</i></font><font size="3">+2</font></font><font size="3">行，每行有两个正整数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>a</i></font><font size="3">, </font><font size="3"><i>b</i></font></font><font size="3">表示一条线段。</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>a,</i></font><font size="3"> </font><font size="3"><i>b</i></font></font><font size="3">两个数分别表示该线段的两个端点的编号。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+</font><font size="3"><i>m</i></font><font size="3">+3</font></font><font size="3">行，有一个实数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>r</i></font></font><font size="3">，表示毛笔在纸上形成的圆的半径。</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">第</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>n</i></font><font size="3">+</font><font size="3"><i>m</i></font><font size="3">+4</font></font><font size="3">行，有四个实数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">1, </font><font size="3"><i>p</i></font><font size="3">2, </font><font size="3"><i>p</i></font><font size="3">3, </font><font size="3"><i>p</i></font><font size="3">4</font></font><font size="3">，为评分使用的参数。</font></p>\r\n<h2 style="margin-top: 0.21cm; margin-bottom: 0cm" class="cjk"><font size="3"><span style="font-weight: normal">【输出文件】</span></font></h2>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">输出文件</font><font face="DejaVu Serif Condensed, serif"><font size="3">path*.out</font></font><font size="3">仅包含一行，即为描边后被强调区域的总面积</font>。</p>\r\n<h2 style="margin-top: 0cm; margin-bottom: 0cm; font-weight: normal" class="cjk"><font size="3">【输入样例】</font></h2>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">2</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">1 1</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">1 2</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">1</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">1 2</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">1</font></font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><font face="Courier New, monospace"><font size="3">0.00001 0.001 0.1 1</font></font></p>\r\n<h2 style="margin-bottom: 0cm; font-weight: normal" class="cjk"><font size="3">【输出样例】</font></h2>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font face="Courier New, monospace"><font size="3">5.1415927</font></font></font></p>\r\n<h2 style="margin-bottom: 0cm; font-weight: normal" class="cjk"><font size="3">【样例说明】</font></h2>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">如下图所示。</font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm" align="center">&nbsp;</p>\r\n<h2 style="margin-bottom: 0cm; font-weight: normal" class="cjk"><font size="3">【评分标准】</font></h2>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">每个测试点单独评分。</font></p>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">本题设有</font><font face="DejaVu Serif Condensed, serif"><font size="3">4</font></font><font size="3">个评分参数</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">1,</font><font size="3"><i>p</i></font><font size="3">2,</font><font size="3"><i>p</i></font><font size="3">3,</font><font size="3"><i>p</i></font><font size="3">4 (</font><font size="3"><i>p</i></font><font size="3">1&lt; </font><font size="3"><i>p</i></font><font size="3">2 &lt; </font><font size="3"><i>p</i></font><font size="3">3 &lt; </font><font size="3"><i>p</i></font><font size="3">4)</font></font><font size="3">，已在输入文件中给出。你的得分将按照如下规则给出：</font></p>\r\n<p style="text-indent: 0.74cm; margin-bottom: 0cm"><a name="OLE_LINK7"></a><a name="OLE_LINK8"></a><font size="3">若你的答案与标准答案相差不超过</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">1</font></font><font size="3">，则该测试点你将得到满分；</font></p>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">否则，若你的答案与标准答案相差不超过</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">2</font></font><font size="3">，则你将得到该测试点</font><font face="DejaVu Serif Condensed, serif"><font size="3">70%</font></font><font size="3">的分数；</font></p>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">否则，若你的答案与标准答案相差不超过</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">3</font></font><font size="3">，则你将得到该测试点</font><font face="DejaVu Serif Condensed, serif"><font size="3">40%</font></font><font size="3">的分数；</font></p>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">否则，若你的答案与标准答案相差不超过</font><font face="DejaVu Serif Condensed, serif"><font size="3"><i>p</i></font><font size="3">4</font></font><font size="3">，则你将得到该测试点</font><font face="DejaVu Serif Condensed, serif"><font size="3">10%</font></font><font size="3">的分数；</font></p>\r\n<p style="text-indent: 0.77cm; margin-bottom: 0cm"><font size="3">否则该测试点你的得分为</font><font face="DejaVu Serif Condensed, serif"><font size="3">0</font></font><font size="3">。</font></p>', 100000, 512, 10, 0, '2012-04-05 16:23:48'),
(546, '问题A', 'a', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="CONTENT-TYPE">\r\n<title></title>\r\n<meta content="LibreOffice 3.3  (Linux)" name="GENERATOR"> 	<style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style></meta>\r\n</meta>\r\n</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">题目描述：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">一次考试共有</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">个人参加，第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i</font></font><font size="3">个人说：&ldquo;有</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai</font></font><font size="3">个人分数比我高，</font><font face="DejaVu Serif Condensed, serif"><font size="3">bi</font></font><font size="3">个人分数比我低。&rdquo;问最少有几个人没有说真话</font><font face="DejaVu Serif Condensed, serif"><font size="3">(</font></font><font size="3">可能有相同的分数</font><font face="DejaVu Serif Condensed, serif"><font size="3">)</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">输入格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">第一行一个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">，接下来</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">行每行两个整数，第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i+1</font></font><font size="3">行的两个整数分别代表</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">bi</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">输出格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">一个整数，表示最少有几个人说谎</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">样例输入：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">3</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">2 0</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">0 2</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">2 2</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">样例输出：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">1</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">数据范围：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">30%</font></font><font size="3">的数据满足： </font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;1000</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">100%</font></font><font size="3">的数据满足： </font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;100000   0&le;ai</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">bi&le;n</font></font></p>\r\n<p style="margin-bottom: 0cm;">&nbsp;</p>', 1000, 256, 10, 0, '2012-04-05 16:23:48'),
(547, '防线修建', 'defense', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="CONTENT-TYPE" />\r\n<meta content="LibreOffice 3.3  (Linux)" name="GENERATOR" /><style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">题目描述：</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">近来</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国和</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">B</font></font></font><font size="3">国的矛盾激化，为了预防不测，</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国准备修建一条长长的防线，当然修建防线的话，肯定要把需要保护的城市修在防线内部了。可是</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国上层现在还犹豫不决，到底该把哪些城市作为保护对象呢？又由于</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国的经费有限，所以希望你能帮忙完成如下的一个任务：</font></p>\r\n<ol>\r\n    <li>\r\n    <p style="margin-bottom: 0cm"><font size="3">给出你所有的</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国城市坐标</font></p>\r\n    </li>\r\n    <li>\r\n    <p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国上层经过讨论，考虑到经济问题，决定取消对</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">i</font></font></font><font size="3">城市的保护，也就是说</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">i</font></font></font><font size="3">城市不需要在防线内了</font></p>\r\n    </li>\r\n    <li>\r\n    <p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">A</font></font></font><font size="3">国上层询问对于剩下要保护的城市，修建防线的总经费最少是多少</font></p>\r\n    </li>\r\n</ol>\r\n<p style="margin-bottom: 0cm; margin-left: 0.74cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; margin-left: 0.74cm"><font size="3">你需要对每次询问作出回答。注意单位</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">1</font></font></font><font size="3">长度的防线花费为</font><font face="DejaVu Serif Condensed, serif"><font face="Arial, sans-serif"><font size="3">1</font></font></font><font size="3">。</font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">A</font></font><font size="3">国的地形是这样的，形如下图，</font><font face="DejaVu Serif Condensed, serif"><font size="3">x</font></font><font size="3">轴是一条河流，相当于一条天然防线，不需要你再修建</font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">A</font></font><font size="3">国总是有两个城市在河边，一个点是</font><font face="DejaVu Serif Condensed, serif"><font size="3">(0,0)</font></font><font size="3">，一个点是</font><font face="DejaVu Serif Condensed, serif"><font size="3">(n,0)</font></font><font size="3">，其余所有点的横坐标均大于</font><font face="DejaVu Serif Condensed, serif"><font size="3">0</font></font><font size="3">小于</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">，纵坐标均大于</font><font face="DejaVu Serif Condensed, serif"><font size="3">0</font></font><font size="3">。</font><font face="DejaVu Serif Condensed, serif"><font size="3">A</font></font><font size="3">国有一个不在</font><font face="DejaVu Serif Condensed, serif"><font size="3">(0,0)</font></font><font size="3">和</font><font face="DejaVu Serif Condensed, serif"><font size="3">(n,0)</font></font><font size="3">的首都。</font><font face="DejaVu Serif Condensed, serif"><font size="3">(0,0),(n,0)</font></font><font size="3">和首都这三个城市是一定需要保护的。</font></p>\r\n<p style="margin-bottom: 0cm"><img alt="" width="438" height="337" src="/images/2.png" /></p>\r\n<p style="margin-bottom: 0cm" lang="" align="center">&nbsp;</p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">上图中，</font><font face="DejaVu Serif Condensed, serif"><font size="3">A,B,C,D,E</font></font><font size="3">点为</font><font face="DejaVu Serif Condensed, serif"><font size="3">A</font></font><font size="3">国城市，且目前都要保护，那么修建的防线就会是</font><font face="DejaVu Serif Condensed, serif"><font size="3">A-B-C-D</font></font><font size="3">，花费也就是线段</font><font face="DejaVu Serif Condensed, serif"><font size="3">AB</font></font><font size="3">的长度</font><font face="DejaVu Serif Condensed, serif"><font size="3">+</font></font><font size="3">线段</font><font face="DejaVu Serif Condensed, serif"><font size="3">BC</font></font><font size="3">的长度</font><font face="DejaVu Serif Condensed, serif"><font size="3">+</font></font><font size="3">线段</font><font face="DejaVu Serif Condensed, serif"><font size="3">CD</font></font><font size="3">的长度</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><font size="3">如果，这个时候撤销</font><font face="DejaVu Serif Condensed, serif"><font size="3">B</font></font><font size="3">点的保护，那么防线变成下图</font></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm"><img alt="" width="343" height="243" src="/images/3.png" /></p>\r\n<p style="text-indent: 0.85cm; margin-bottom: 0cm" lang="" align="center">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">输入格式：</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">第一行，三个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">n,x,y</font></font><font size="3">分别表示河边城市和首都是</font><font face="DejaVu Serif Condensed, serif"><font size="3">(0,0)</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">(n,0)</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">(x,y)</font></font><font size="3">。</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">第二行，一个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">。</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">接下来</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">行，每行两个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">a,b</font></font><font size="3">表示</font><font face="DejaVu Serif Condensed, serif"><font size="3">A</font></font><font size="3">国的一个非首都非河边城市的坐标为</font><font face="DejaVu Serif Condensed, serif"><font size="3">(a,b)</font></font><font size="3">。</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">再接下来一个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">q</font></font><font size="3">，表示修改和询问总数。</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">接下来</font><font face="DejaVu Serif Condensed, serif"><font size="3">q</font></font><font size="3">行每行要么形如</font><font face="DejaVu Serif Condensed, serif"><font size="3">1 i</font></font><font size="3">，要么形如</font><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font><font size="3">，分别表示撤销第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i</font></font><font size="3">个城市的保护和询问。</font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">输出格式：</font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">对于每个询问输出</font><font face="DejaVu Serif Condensed, serif"><font size="3">1</font></font><font size="3">行，一个实数</font><font face="DejaVu Serif Condensed, serif"><font size="3">v</font></font><font size="3">，表示修建防线的花费，保留两位小数</font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">样例输入： </font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">4 2 1 </font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">2 </font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">1 2 </font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">3 2 </font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">5 </font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">1 1</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">1 2</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">样例输出：</font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">6.47</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">5.84</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">4.47</font></font></p>\r\n<p style="margin-bottom: 0cm">&nbsp;</p>\r\n<p style="margin-bottom: 0cm"><font size="3">数据范围：</font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">30%</font></font><font size="3">的数据</font><font face="DejaVu Serif Condensed, serif"><font size="3">m&lt;=1000,q&lt;=1000</font></font></p>\r\n<p style="margin-bottom: 0cm"><font face="DejaVu Serif Condensed, serif"><font size="3">100%</font></font><font size="3">的数据</font><font face="DejaVu Serif Condensed, serif"><font size="3">m&lt;=100000,q&lt;=200000,n&gt;1</font></font></p>\r\n<p style="margin-bottom: 0cm"><font size="3">所有点的坐标范围均在</font><font face="DejaVu Serif Condensed, serif"><font size="3">10000</font></font><font size="3">以内</font><font face="DejaVu Serif Condensed, serif"><font size="3">, </font></font><font size="3">数据保证没有重点</font></p>', 1000, 128, 10, 0, '2012-04-05 16:23:48'),
(548, '问题B', 'b', '<p>\r\n<meta content="text/html; charset=utf-8" http-equiv="CONTENT-TYPE">\r\n<title></title>\r\n<meta content="LibreOffice 3.3  (Linux)" name="GENERATOR"> 	<style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style></meta>\r\n</meta>\r\n</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">题目描述：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">对于给出的</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">个询问，每次求有多少个数对</font><font face="DejaVu Serif Condensed, serif"><font size="3">(x,y)</font></font><font size="3">，满足</font><font face="DejaVu Serif Condensed, serif"><font size="3">a&le;x&le;b</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">c&le;y&le;d</font></font><font size="3">，且</font><font face="DejaVu Serif Condensed, serif"><font size="3">gcd(x,y) = k</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">gcd(x,y)</font></font><font size="3">函数为</font><font face="DejaVu Serif Condensed, serif"><font size="3">x</font></font><font size="3">和</font><font face="DejaVu Serif Condensed, serif"><font size="3">y</font></font><font size="3">的最大公约数。</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">输入格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">第一行一个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">，接下来</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">行每行五个整数，分别表示</font><font face="DejaVu Serif Condensed, serif"><font size="3">a</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">b</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">c</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">d</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">k</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">输出格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">共</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">行，每行一个整数表示满足要求的数对</font><font face="DejaVu Serif Condensed, serif"><font size="3">(x,y)</font></font><font size="3">的个数</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">样例输入：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">2 5 1 5 1</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">1 5 1 5 2</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">样例输出：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">14</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">3</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font size="3">数据范围：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">10%</font></font><font size="3">的数据满足：</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;5</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;a&le;b&le;100</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;c&le;d&le;100</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">30%</font></font><font size="3">的数据满足：</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;10</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%;"><font face="DejaVu Serif Condensed, serif"><font size="3">100%</font></font><font size="3">的数据满足：</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;50000</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;a&le;b&le;50000</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;c&le;d&le;50000</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;k&le;50000</font></font></p>', 5000, 256, 10, 0, '2012-04-05 16:23:48'),
(549, '问题C', 'c', '<p>\r\n<meta http-equiv="CONTENT-TYPE" content="text/html; charset=utf-8">\r\n<title></title>\r\n<meta name="GENERATOR" content="LibreOffice 3.3  (Linux)"> 	<style type="text/css">\r\n	<!--\r\n		@page { margin: 2cm }\r\n		P { margin-bottom: 0.21cm }\r\n	-->\r\n	</style>  </meta>\r\n</meta>\r\n</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">题目描述：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">给</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">个人安排座位，先给每个人一个</font><font face="DejaVu Serif Condensed, serif"><font size="3">1~n</font></font><font size="3">的编号，设第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i</font></font><font size="3">个人的编号为</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai</font></font><font size="3">（不同人的编号可以相同），接着从第一个人开始，大家依次入座，第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i</font></font><font size="3">个人来了以后尝试坐到</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai</font></font><font size="3">，如果</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai</font></font><font size="3">被占据了，就尝试</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai+1</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai+1</font></font><font size="3">也被占据了的话就尝试</font><font face="DejaVu Serif Condensed, serif"><font size="3">ai+2</font></font><font size="3">，&hellip;&hellip;，如果一直尝试到第</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">个都不行，该安排方案就不合法。然而有</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">个人的编号已经确定</font><font face="DejaVu Serif Condensed, serif"><font size="3">(</font></font><font size="3">他们或许贿赂了你的上司</font><font face="DejaVu Serif Condensed, serif"><font size="3">...)</font></font><font size="3">，你只能安排剩下的人的编号，求有多少种合法的安排方案。由于答案可能很大，只需输出其除以</font><font face="DejaVu Serif Condensed, serif"><font size="3">M</font></font><font size="3">后的余数即可。</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">输入格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">第一行一个整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">T</font></font><font size="3">，表示数据组数</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">对于每组数据，第一行有三个整数，分别表示</font><font face="DejaVu Serif Condensed, serif"><font size="3">n</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">M</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">若</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">不为</font><font face="DejaVu Serif Condensed, serif"><font size="3">0</font></font><font size="3">，则接下来一行有</font><font face="DejaVu Serif Condensed, serif"><font size="3">m</font></font><font size="3">对整数，</font><font face="DejaVu Serif Condensed, serif"><font size="3">p1</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">q1</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">p2</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">q2 ,&hellip;, pm</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">qm</font></font><font size="3">，其中第</font><font face="DejaVu Serif Condensed, serif"><font size="3">i</font></font><font size="3">对整数</font><font face="DejaVu Serif Condensed, serif"><font size="3">pi</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">qi</font></font><font size="3">表示第</font><font face="DejaVu Serif Condensed, serif"><font size="3">pi</font></font><font size="3">个人的编号必须为</font><font face="DejaVu Serif Condensed, serif"><font size="3">qi</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">输出格式：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">对于每组数据输出一行，若是有解则输出</font><font face="DejaVu Serif Condensed, serif"><font size="3">YES</font></font><font size="3">，后跟一个整数表示方案数</font><font face="DejaVu Serif Condensed, serif"><font size="3">mod M</font></font><font size="3">，注意，</font><font face="DejaVu Serif Condensed, serif"><font size="3">YES</font></font><font size="3">和数之间只有一个空格，否则输出</font><font face="DejaVu Serif Condensed, serif"><font size="3">NO</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">样例输入：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">2</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">4 3 10</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">1 2 2 1 3 1</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">10 3 8882</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">7 9 2 9 5 10</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">样例输出：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">YES 4</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">NO</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font size="3">数据范围：</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">30%</font></font><font size="3">的数据满足：</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;10</font></font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%"><font face="DejaVu Serif Condensed, serif"><font size="3">100%</font></font><font size="3">的数据满足：</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;T&le;10</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;n&le;300</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">0&le;m&le;n</font></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">2&le;M&le;10</font><sup><font size="3">9</font></sup></font><font size="3">，</font><font face="DejaVu Serif Condensed, serif"><font size="3">1&le;pi</font></font><font size="3">、</font><font face="DejaVu Serif Condensed, serif"><font size="3">qi&le;n   </font></font><font size="3">且保证</font><font face="DejaVu Serif Condensed, serif"><font size="3">pi</font></font><font size="3">互不相同。</font></p>\r\n<p style="margin-bottom: 0cm; line-height: 150%">&nbsp;</p>', 5000, 256, 10, 0, '2012-04-05 16:23:48'),
(550, '旅行路线', 'trip', '<h2 class="subtitle">【问题描述】</h2>\r\n<p class="MsoNormal">2010年，世博会在中国上海举办，吸引了数以千万计的中外游客前来参观。暑假期间小Z也来到了上海世博园，她对世博园的拥挤早有所闻，对有的展馆甚至要 排上好几个小时的队才能进入也做好了充分准备，但为了使得自己的世博之旅更加顺利舒畅，小Z决定在游玩之前先制定一份详细的旅行路线。</p>\r\n<p class="MsoNormal">小Z搜集到了世博园的地图，她发现从整体上看世博园是一块非常狭长的区域，而每一个展馆占用了其中一个几乎相同大小的方块。因此可以将整个园区看成一个n &times; m的矩阵(n&le;3)，其中每一个格子为一个主题展馆。</p>\r\n<p class="MsoNormal">由于不同展馆受到的关注度会有一些差别，因此排队时间的长短也不尽相同。小Z根据统计信息给每一个展馆(x, y)标记了Tx,y =  0或1，如果Tx,y = 1，表示这个展馆非常热门，需要排很长时间的队；如果Tx,y =  0，表示这个展馆相对比较普通，几乎不需要排队即可进入参观。小Z希望能够制定一份合理的路线，使得能交替参观热门馆和普通馆，既不会因为总是参观热门馆 而长时间在排队，也不会因为总是参观普通馆而使得游览过于平淡。同时，小Z办事很讲究效率，她希望在游遍所有展馆的同时，又不会走冤枉路浪费体力。因此她 希望旅行路线满足以下几个限制：</p>\r\n<ol type="1">\r\n    <li>在参观完位于(x, y)的展馆后，下一个参观的是一个相邻的且未被参观过的展馆(x'', y'')，即 |x-x''|+|y-y''|=1；</li>\r\n    <li>路线的起点位于整个矩阵的边界上，即x = 1或x = n或y = 1或y = m；</li>\r\n</ol>\r\n<p class="MsoNormal">她制定了一个长度为n*m的 01 序列L，她希望第i个参观的展馆(x,y)满足T<sub>x,y</sub>=L<sub>i</sub>。</p>\r\n<p class="MsoNormal">小Z想知道有多少条不同的旅行路线能够满足她的要求。由于最终的结果可能很大，小Z只想知道可行的旅行路线总数<b>mod</b> 11192869的值。</p>\r\n<h2 class="subtitle">【输入文件】</h2>\r\n<p class="MsoNormal">输入文件trip.in第一行包含两个正整数n, m。</p>\r\n<p class="MsoNormal">第2行至第n+ 1行，每行有m个01整数，其中第i+ 1行第j个数表示T<sub>i,j</sub>。</p>\r\n<p class="MsoNormal">第n+ 2行有n*m个01整数，其中第i个数表示L<sub>i</sub>的值。</p>\r\n<h2 class="subtitle">【输出文件】</h2>\r\n<p class="MsoNormal">输出文件trip.out仅包含一个整数，表示可行的旅行路线总数mod 11192869的值。</p>\r\n<h2 class="subtitle">【输入样例】</h2>\r\n<p class="MsoNormal">2 2</p>\r\n<p class="MsoNormal">10</p>\r\n<p class="MsoNormal">01</p>\r\n<p class="MsoNormal">1010</p>\r\n<h2 class="subtitle">【输出样例】</h2>\r\n<p class="MsoNormal">4</p>\r\n<h2 class="subtitle">【样例说明】</h2>\r\n<p class="MsoNormal">这四条可行的旅行路线分别为：</p>\r\n<center>\r\n<p class="MsoNormal">(1,1)&rarr;(1,2)&rarr;(2,2)&rarr;(2,1)</p>\r\n<p class="MsoNormal">(1,1)&rarr;(2,1)&rarr;(2,2)&rarr;(1,2)</p>\r\n<p class="MsoNormal">(2,2)&rarr;(1,2)&rarr;(1,1)&rarr;(2,1)</p>\r\n<p class="MsoNormal">(2,2)&rarr;(2,1)&rarr;(1,1)&rarr;(1,2)</p>\r\n</center>\r\n<h2 class="subtitle">【数据规模和约定】</h2>\r\n<p class="MsoNormal">对于10%的数据：n=1；</p>\r\n<p class="MsoNormal">对于30%的数据：n=2；</p>\r\n<p class="MsoNormal">对于60%的数据：n= 3，其中20%的数据T<sub>i,j</sub>全为0；</p>\r\n<p class="MsoNormal">对于100%的数据：m&le;50，L<sub>i</sub>, T<sub>i,j</sub> = 0或1。</p>\r\n<h2 class="subtitle">【运行时限】</h2>\r\n<p class="MsoNormal">10秒。</p>\r\n<h2 class="subtitle">【运行空限】</h2>\r\n<p class="MsoNormal">512M。</p>', 10000, 512, 10, 0, '2012-04-05 16:23:48');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(551, '扩张', 'expand1', '<div><span style="font-size: 12pt">fj</span><span style="font-size: 12pt">有</span><span style="font-size: 12pt">n (1 &lt;= N &lt;= 25,000)</span><span style="font-size: 12pt">个矩形牛棚，它们的墙均与坐标轴平行，而且其坐标在</span><span style="font-size: 12pt">0..1,000,000</span><span style="font-size: 12pt">之间，任意两个牛棚不能重叠，但可能会有公共的墙。</span></div>\r\n<div><span style="font-size: 12pt">由于</span><span style="font-size: 12pt">fj</span><span style="font-size: 12pt">的奶牛持续增加，他不得不考虑扩张牛棚，一个牛棚可以扩张，当且仅当他的四周均不与其他牛棚接触，如果两个牛棚有一个公共角，那他们都是不可扩张的。</span></div>\r\n<div><span style="font-size: 12pt">统计有多少牛棚可以扩张。</span></div>\r\n<pre>\r\n输入说明:</pre>\r\n<pre>\r\n* Line 1: 一个整数表示有 N个牛棚</pre>\r\n<pre>\r\n&nbsp;</pre>\r\n<pre>\r\n* Lines 2..N+1:每行四个整数，表示一个牛棚的左下角的坐标和右上角的坐标。.</pre>\r\n<pre>\r\n&nbsp;</pre>\r\n<pre>\r\nSAMPLE INPUT (expand.in):</pre>\r\n<pre>\r\n&nbsp;</pre>\r\n<pre>\r\n5</pre>\r\n<pre>\r\n0 2 2 7</pre>\r\n<pre>\r\n3 5 5 8</pre>\r\n<pre>\r\n4 2 6 4</pre>\r\n<pre>\r\n6 1 8 6</pre>\r\n<pre>\r\n0 0 8 1</pre>\r\n<pre>\r\n&nbsp;</pre>\r\n<pre>\r\n样例解释:</pre>\r\n<pre>\r\n有5个牛棚.&nbsp;第一个牛棚的左上角的坐标为 (0,2) 并且右上角的坐标是(2,7), and so on.</pre>\r\n<pre>\r\n输出格式:</pre>\r\n<pre>\r\n* Line 1:一个整数表示有几个牛棚可以扩张.</pre>\r\n<pre>\r\nSAMPLE OUTPUT (file expand.out):2</pre>\r\n<pre>\r\nOUTPUT DETAILS:</pre>\r\n<pre>\r\n有2个牛棚可以扩张，前两个可以，其他的都不可以。</pre>\r\n<pre>\r\n&nbsp;</pre>\r\n<div>40%&nbsp;n&lt;=6000</div>\r\n<div>&nbsp;</div>\r\n<table style="border-right: medium none; border-top: medium none; border-left: medium none; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>2</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div><span style="color: #993300">1</span></div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc99; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>4</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: fuchsia; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>3</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: fuchsia; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ff99cc; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: fuchsia; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: fuchsia; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #ffcc00; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>5</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.25pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; background: #00ccff; padding-bottom: 0cm; border-left: #ece9d8; width: 53.3pt; padding-top: 0cm; border-bottom: windowtext 1pt solid" valign="top" width="71">\r\n            <div>&nbsp;</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>', 1000, 128, 12, 0, '2012-04-05 16:23:48'),
(552, '吃西瓜', 'matrix', '<div>[说明]此题中出现的所有数全为整数</div>\r\n<div>[背景]SubRaY有一天得到一块西瓜,是长方体形的....</div>\r\n<div>[题目描述]SubRaY发现这块西瓜长m厘米,宽n厘米,高h厘米.他发现如果把这块西瓜平均地分成m*n*h块1立方厘米的小正方体,那么每一小块都会有一个营养值(可能为负,因为西瓜是有可能坏掉的,但是绝对值不超过200).</div>\r\n<div>现在SubRaY决定从这m*n*h立方厘米的西瓜中切出mm*nn*hh立方厘米的一块小西瓜(一定是立方体形,长宽高均为整数),然后吃掉它.他想知道他最多能获得多少营养值.(0&lt;=mm&lt;=m,0&lt;=nn&lt;=n,0&lt;=hh&lt;=h.mm,nn,hh的值由您来决定).</div>\r\n<div>换句话说,我们希望从一个m*n*h的三维矩阵中,找出一个三维子矩阵,这个子矩阵的权和最大.</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;<img alt="" src="/images/matrix.JPG" /></div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div align="center">一个2*3*4的例子,最优方案为切红色2*3*1部分</div>\r\n<div>[输入][matrix.in]</div>\r\n<div>首行三个数h,m,n(注意顺序),分别表示西瓜的高,长,宽.</div>\r\n<div>以下h部分,每部分是一个m*n的矩阵,第i部分第j行的第k个数表示西瓜第i层,第j行第k列的那块1立方厘米的小正方体的营养值.</div>\r\n<div>&nbsp;</div>\r\n<div>[输出][matrix.out]</div>\r\n<div>SubRaY所能得到的最大营养值</div>\r\n<div>&nbsp;</div>\r\n<div>[样例输入]</div>\r\n<div>2 3 4</div>\r\n<div>4 1 2 8</div>\r\n<div>0 5 -48 4</div>\r\n<div>3 0 1 9</div>\r\n<div>2 1 4 9</div>\r\n<div>1 0 1 7</div>\r\n<div>3 1 2 8</div>\r\n<div>&nbsp;</div>\r\n<div>[样例输出]</div>\r\n<div>45</div>\r\n<div>&nbsp;</div>\r\n<div>[数据范围]</div>\r\n<div>对于30%的数据,h=1,1&lt;=m,n&lt;=10</div>\r\n<div>对于全部的数据,1&lt;=h&lt;=32,1&lt;=m,n&lt;=50,保证h&lt;=m,n</div>', 1000, 128, 10, 0, '2012-04-05 16:23:48'),
(553, '铺放矩形块', 'packrec', '<div align="left"><b><span style="font-size: 18pt">描述</span></b></div>\r\n<div align="left"><span style="font-size: 12pt">给定4个矩形块，找出一个最小的封闭矩形将这4个矩形块放入，但不得相互重叠。所谓最小矩形指该矩形面积最小。 </span></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><span style="font-size: 12pt"><img alt="" src="/images/packrec.JPG" /></span></div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left">&nbsp;</div>\r\n<div align="left"><span style="font-size: 12pt">所有4个矩形块的边都与封闭矩形的边相平行，图1示出了铺放4个矩形块的6种方案。这6种方案是仅可能的基本铺放方案。因为其它方案能由基本方案通过旋转和镜像反射得到。 </span></div>\r\n<div align="left"><span style="font-size: 12pt">可能存在满足条件且有着同样面积的各种不同的封闭矩形，你应该输出所有这些封闭矩形的边长。 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">格式</span></b></div>\r\n<div align="left"><b><span style="font-size: 12pt">PROGRAM NAME</span></b><span style="font-size: 12pt">: packrec </span></div>\r\n<div align="left"><b><span style="font-size: 12pt">INPUT FORMAT</span></b><span style="font-size: 12pt">: </span></div>\r\n<div align="left"><span style="font-size: 12pt">(file packrec.in) </span></div>\r\n<div align="left"><span style="font-size: 12pt">共有4行。每一行用两个正整数来表示一个给定的矩形块的两个边长。矩形块的每条边的边长范围最小是1，最大是50。 </span></div>\r\n<div align="left"><b><span style="font-size: 12pt">OUTPUT FORMAT</span></b><span style="font-size: 12pt">: </span></div>\r\n<div align="left"><span style="font-size: 12pt">(file packrec.out) </span></div>\r\n<div align="left"><span style="font-size: 12pt">总行数为解的总数加1。第一行是一个整数，代表封闭矩形的最小面积（子任务A）。接下来的每一行都表示一个解，由数P和数Q来表示，并且P&le;Q（子任务B）。这些行必须根据P的大小按升序排列，P小的行在前，大的在后。且所有行都应是不同的。 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE INPUT</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">1 2</span></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">2 3</span></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">3 4</span></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">4 5</span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE OUTPUT</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">40</span></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">4 10</span></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">5 8</span></div>\r\n<div>&nbsp;</div>', 1000, 128, 21, 0, '2012-04-05 16:23:49'),
(554, '母亲的牛奶', 'milk3', '<div align="left"><b><span style="font-size: 18pt">描述</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">&nbsp;</span><span style="font-size: 12pt">农民约翰有三个容量分别是A,B,C升的桶，A,B,C分别是三个从1到20的整数，</span></div>\r\n<div align="left"><span style="font-size: 12pt">最初，A和B桶都是空的，而C桶是装满牛奶的。有时，约翰把牛奶从一个桶倒到另一个桶中，直到被灌桶装满或原桶空了。当然每一次灌注都是完全的。由于节约，牛奶不会有丢失。 </span></div>\r\n<div align="left"><span style="font-size: 12pt">写一个程序去帮助约翰找出当A桶是空的时候，C桶中牛奶所剩量的所有可能性。 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">格式</span></b></div>\r\n<div align="left"><b><span style="font-size: 12pt">PROGRAM NAME</span></b><span style="font-size: 12pt">: milk3 </span></div>\r\n<div align="left"><b><span style="font-size: 12pt">INPUT FORMAT</span></b><span style="font-size: 12pt">: </span></div>\r\n<div align="left"><span style="font-size: 12pt">(file milk3.in) </span></div>\r\n<div align="left"><span style="font-size: 12pt">单独的一行包括三个整数A,B和C。 </span></div>\r\n<div align="left"><b><span style="font-size: 12pt">OUTPUT FORMAT</span></b><span style="font-size: 12pt">: </span></div>\r\n<div align="left"><span style="font-size: 12pt">(file milk3.out) </span></div>\r\n<div align="left"><span style="font-size: 12pt">只有一行，升序地列出当A桶是空的时候，C桶牛奶所剩量的所有可能性。 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE INPUT 1</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">8 9 10</span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE OUTPUT 1</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">1 2 8 9 10 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE INPUT 2</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">2 5 10 </span></div>\r\n<div align="left"><b><span style="font-size: 18pt">SAMPLE OUTPUT 2</span></b></div>\r\n<div style="text-align: left" align="left"><span style="font-size: 12pt">5 6 7 8 9 10</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:49'),
(555, '网络探测', 'ping', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp;当出现网络故障时，我们经常使用&ldquo;ping&rdquo;命令来检测电脑是否能与其它电脑连通。<br />\r\n&nbsp;&nbsp;&nbsp;举例说明，如果想知道我们的电脑是否能连上中山大学的主机，可以使用命令&ldquo;ping www.zsu.edu.cn&rdquo;，如果网络通畅，那么我们将会收到下面这样的反馈信息：<br />\r\n&nbsp;&nbsp;&nbsp;Reply from 202.116.64.9:bytes=32 time=1ms TTl=126<br />\r\n&nbsp;&nbsp;&nbsp;Reply from 202.116.64.9:bytes=32 time&lt; 1ms TTl=126<br />\r\n&nbsp;&nbsp;&nbsp;可是，我们究竟是如何获取以上信息的呢？特别是用了多长时间？下面就说说&ldquo;Ping&rdquo;的原理，请注意，本原理只跟本题有关，而真实的&ldquo;ping&rdquo;命令处理过程会有所不同。<br />\r\n&nbsp;&nbsp;&nbsp;首先，跟&ldquo;Ping&rdquo;的过程相关的有两种信息，即请求和回应。<br />\r\n&nbsp;&nbsp;&nbsp;请求信息包含一个时间流逝段，用来记录请求信息发出后经过了多长时间，我们假定，在网络中每一个主机（包括路由、交换机、电脑等）都是非常&ldquo;有涵养&rdquo;的，如果它们不是所接收到信息的目标机的话，它们就会更新信息中的时间流逝段，增加从信息转发的主机到达该机的时间，并且把这个信息发送给所有跟它连通的主机。因此，当我们发出请求信息包之后，网络可以貌似自动地把它传输至目标主机。<br />\r\n&nbsp;&nbsp;&nbsp;一旦目标主机接收到一条请求信息，它就会回复一条回应信息。回应信息也包含一个时间流逝段，这个时间流逝段是直接从所收到的请求信息中的时间流逝段复制而来的，而且在以后的中转传输中将不再被改变，就这样，网络又貌似自动地回复了我们。这就是为什么我们可以知道网络通畅与否，同时可以得知从我们的电脑上传输一条信息到目标机所需的最短时间了。<br />\r\n&nbsp;&nbsp;&nbsp;准确地说，在上面&ldquo;Ping&rdquo;的处理过程中还存在一个问题，假定某两台中转电脑A和B是直接连通的，一条目标机为电脑C的信息到达了A，那么A将把这条信息传输给B，而B也将会把这条信息再传回给A，（因为它们都是有&ldquo;涵养&rdquo;的嘛！），那么这条信息将在A与B之间无限重复的发送下去，为了解决这个问题，如果一条信息已经被转发了超过10次（每次从主机A发送一条信息至主机B称为一次转发），那么接收到这条信息的主机将丢弃该信息。<br />\r\n&nbsp;&nbsp;&nbsp;你的任务是：给定网络的详情，怎样确定回应的时间。请注意，这里所说的回应时间是指从源主机传输一条信息至目标主机所用的最短时间。 <br />\r\n&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;输入文件第一行有3个整数，n(n&le;1000)、m和t(0&le;t&le;n)，其中n表示网络中主机的个数（包括我们自己的电脑），m表示网络中直接连通的主机对数， t表示我们想要ping的目标主机。（可以设定我们的电脑为主机0）<br />\r\n&nbsp;&nbsp;&nbsp;接下来有m行，每一行有3个整数，a(0&le;a&lt; n)、b(0&le;b&lt; n)和c(0&lt; c&le;1000)，表示主机a与主机b直接连通，而信息从a传至b以及从b传至a的时间均为c。&nbsp;&nbsp;</span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp;对于输入的数据，如果我们的电脑能得到目标主机的回应，请输出回应时间，否则输出&ldquo;no&rdquo;。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>ping.in</span></div>\r\n<div>3 2 2<br />\r\n0 1 2<br />\r\n1 2 3<br />\r\n输出文件名：<span>ping.out</span></div>\r\n<div><span>5<br />\r\n</span></div>', 1000, 128, 17, 0, '2012-04-05 16:23:49'),
(556, '解析程序', 'parser', '<p>&nbsp;</p>\r\n<p><span style="font-family: 宋体"><b>【问题描述</b>】 </span></p>\r\n<div>&nbsp;&nbsp;&nbsp; CSV（逗号分隔值）这种文件格式可以在不同的应用程序间做数据交换用，因为曾被用于微软的电子表格（Excel），并逐渐成为一种行业伪标准，甚至也被应用于其它非微软平台上。<br />\r\n&nbsp;&nbsp;&nbsp;本题中的CSV文件格式是这样定义的：<br />\r\n&nbsp;&nbsp;&nbsp;1、一个CSV文件包含0行或多行记录，每一个记录包含0个或多个字段（域）。<br />\r\n&nbsp;&nbsp;&nbsp;2、每一个记录都以一个换行符结尾（ASCII/LF=0X0A）。<br />\r\n&nbsp;&nbsp;&nbsp;当然，一个字段中可能包含自带的换行符（参见下面），所以一个记录也可能跨越多行。<br />\r\n&nbsp;&nbsp;&nbsp;3、字段之间以逗号（英文半角）分隔。<br />\r\n&nbsp;&nbsp;&nbsp;例：Jonh,Doe,120 any st.,&quot;Anytown, WW&quot;,08123<br />\r\n&nbsp;&nbsp;&nbsp;4、如果一个字段未用双引号引起来，那么该字段开头或结尾的空格将被忽略。<br />\r\n&nbsp;&nbsp;&nbsp;比如，John, Doe,&hellip;就可以变成&quot;John&quot;和&quot;Doe&quot;，等等&hellip;&hellip;空格可以是空格键或者Tab键。<br />\r\n&nbsp;&nbsp;&nbsp;5、字段中若有自带的逗号，则必须用双引号引起来。<br />\r\n&nbsp;&nbsp;&nbsp;在上例中，&quot;Anytown, WW&quot;必须加双引号，因为它中间有一个自带的逗号。<br />\r\n&nbsp;&nbsp;&nbsp;6、字段中若有自带双引号，则该字段必须整体被双引号括起来，同时对于原来自带的双引号，每一个双引号都要被替换成两个连续的双引号。<br />\r\n&nbsp;&nbsp;&nbsp;比如，John &quot;Da Man&quot; Doe将被转换成&quot;John &quot;&quot;Da Man&quot;&quot; Doe&quot;,120 any st.,&hellip; <br />\r\n&nbsp;&nbsp;&nbsp;7、如果一个字段中包含自带的换行，则该字段必须完整地用双引号括起来。<br />\r\n&nbsp;&nbsp;&nbsp;比如，<br />\r\n&nbsp;&nbsp;&nbsp;字段1：Conference room 1<br />\r\n&nbsp;&nbsp;&nbsp;字段2：John,<br />\r\n&nbsp;&nbsp;&nbsp;Please bring the M.Mathers file for review<br />\r\n&nbsp;&nbsp;&nbsp;-J.L.<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;字段3：10/18/2002<br />\r\n&nbsp;&nbsp;&nbsp;&hellip;<br />\r\n&nbsp;&nbsp;&nbsp;该记录可以转换为：<br />\r\n&nbsp;&nbsp;&nbsp;Conference room 1,&quot;John,<br />\r\n&nbsp;&nbsp;&nbsp;Please bring the M.Mathers file for review<br />\r\n&nbsp;&nbsp;&nbsp;-J.L.<br />\r\n&nbsp;&nbsp;&nbsp;&quot;,10/18/2002,&hellip;<br />\r\n&nbsp;&nbsp;&nbsp;注意这是符合CSV格式的单个记录，尽管它跨越了多行，因为字段中有自带的换行。<br />\r\n&nbsp;&nbsp;&nbsp;8、字段中若开头或结尾要用空格，则该字段需加双引号。<br />\r\n&nbsp;&nbsp;&nbsp;如：为了保持开头与结尾的空格，John, Doe ,&hellip;要被写为John,&quot; Doe &quot;,&hellip;<br />\r\n&nbsp;&nbsp;&nbsp;9、字段可以总是用双引号括起来，而双引号也总是可以被去掉。<br />\r\n&nbsp;&nbsp;&nbsp;你的任务是写一个程序做为CSV文件解析程序，对输入的CSV格式的文件做解析。<br />\r\n&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;你的程序需要读入输入文件，并参考CSV文件格式对输入内容加以解析，输入以EOF结束。<br />\r\n&nbsp;&nbsp;&nbsp;每一个字段的字符数均不超过50，输入文件中最多有500个字段。</span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp;如果输入文件不是一个符合CSV格式的文件，输出&ldquo;Wrong Format&rdquo;，否则你需要输出所有的字段，每一个字段输出完毕请加上一个换行（&lsquo; &rsquo;），例如，假定输入文件如下:<br />\r\n&nbsp;&nbsp;&nbsp;field11,field12,...,field1n<br />\r\n&nbsp;&nbsp;&nbsp;field21,field22,...,field2n<br />\r\n&nbsp;&nbsp;&nbsp;&hellip;<br />\r\n&nbsp;&nbsp;&nbsp;fieldm1,fieldm2,...,fieldmn<br />\r\n&nbsp;&nbsp;&nbsp;则输出必须为：<br />\r\n&nbsp;&nbsp;&nbsp;field11<br />\r\n&nbsp;&nbsp;&nbsp;field12<br />\r\n&nbsp;&nbsp;&nbsp;...<br />\r\n&nbsp;&nbsp;&nbsp;field1n<br />\r\n&nbsp;&nbsp;&nbsp;field21<br />\r\n&nbsp;&nbsp;&nbsp;field22<br />\r\n&nbsp;&nbsp;&nbsp;...<br />\r\n&nbsp;&nbsp;&nbsp;field2n<br />\r\n&nbsp;&nbsp;&nbsp;&hellip;<br />\r\n&nbsp;&nbsp;&nbsp;fieldm1<br />\r\n&nbsp;&nbsp;&nbsp;fieldm2<br />\r\n&nbsp;&nbsp;&nbsp;...<br />\r\n&nbsp;&nbsp;&nbsp;fieldmn<br />\r\n&nbsp;&nbsp;&nbsp;注意字段中可能会有自带的换行符，所以在输出文件中一个字段可能会占若干行（具体细节你可以参考下面的样例3）。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>parser1.in</span></div>\r\n<div>field11,field12<br />\r\nfield21,field22</div>\r\n<div>输出文件名：<span>parser1.out</span></div>\r\n<div><span>field11<br />\r\nfield12<br />\r\nfield21<br />\r\nfield22</span></div>\r\n<div>输入文件名：<span>parser2.in</span></div>\r\n<div>John, Doe , &quot;Anytown, WW&quot; , &quot;John &quot;&quot;Da Mon&quot;&quot; Von&quot;</div>\r\n<div>输出文件名：<span>parser2.out</span></div>\r\n<div><span>John<br />\r\nDoe<br />\r\nAnytown, WW<br />\r\nJohn &quot;Da Mon&quot; Von</span></div>\r\n<div>输入文件名：<span>parser3.in</span></div>\r\n<div>Conference room 1,&quot;John,<br />\r\nPlease bring the M.Mathers file for review<br />\r\n-J.L.<br />\r\n&quot;,3/20/2006</div>\r\n<div>输出文件名：<span>parser3.out</span></div>\r\n<div><span>Conference room 1<br />\r\nJohn,<br />\r\nPlease bring the M.Mathers file for review<br />\r\n-J.L.</span></div>\r\n<div>3/20/2006<br />\r\n注意：<br />\r\n在这个样例中，输入文件中的第二个字段被双引号括起来了，于是在中间可以有换行符，也因此该字段在输出文件中看起来跟在输入文件中一样，不要忘了在该字段输出完毕、第三个字段输出之前加一个换行。</div>\r\n<div>输入文件名：<span>parser4.in</span></div>\r\n<div>John, &quot;Wrong field&quot; sample&quot;, Bob</div>\r\n<div>输出文件名：<span>parser4.out</span></div>\r\n<div><span>Wrong Format</span></div>', 1000, 128, 11, 0, '2012-04-05 16:23:49'),
(557, '饥饿的母牛', 'hungry', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp;对于去德州圣安东尼奥的旅行，农夫John已经期待很久了，除了将要观看马刺队跟其它NBA队的比赛外，还要去欣赏一下ACM/ICPC（ACM International Collegiate Programming Contest, 国际大学生程序设计竞赛）决赛，然而，还有一个小麻烦：农场上还有一只小母牛，如果他离开的时间太长，小家伙会饿死的。<br />\r\n&nbsp;&nbsp;&nbsp;幸运的是，在他的农舍周围环绕着一大片草地（农舍可以看做一条线段），因此John决定把小母牛拴在农舍前面的一根木桩上，以便它能吃到木桩周围的草。为简便起见，John会保证从木桩到农舍两端的距离相等，下图显示了农舍与木桩的位置关系： <br />\r\n<img alt="" width="529" height="381" src="http://192.168.1.252/os/zhuanti/09dp/hungry-acm/hungry.JPG" /> <br />\r\n&nbsp;&nbsp;&nbsp;由于John只有一根长度有限的绳子，他想知道牛能吃到草的区域，以便确定他旅行期间牛能否存活，你的任务是写一个程序帮助他。请注意牛不可以穿过农舍。</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;输入可能包含若干组数据，第一行是一个整数T（T&le;100），即接下来测试数据的个数，每一个测试数据包括3个正整数：L，D，S（L,d,s&le;10000），L为农舍这条线段的长度（即上图中线段E1E2的长度），D为木桩到农舍中点的距离（即上图中标记为Pole的点到O点的距离），S表示拴牛的绳子的长度，数据中保证S不超过L与木桩到农舍端点E1的距离和。</span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp; 对于每一个测试数据，输出牛能吃到草的区域面积，小数点后保留2位。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>hungry.in</span></div>\r\n<div>3<br />\r\n2 1 1<br />\r\n2 1 2<br />\r\n2 1 3</div>\r\n<div>输出文件名：<span>hungry.out</span></div>\r\n<div><span>3.14<br />\r\n11.23<br />\r\n27.13</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:49'),
(558, '奇怪的函数', 'xx', '<div>问题描述</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>使得<span>x^x达到或超过n位数字的最小正整数x是多少？</span></div>\r\n<div>&nbsp;</div>\r\n<div>输入数据</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>输入一个正整数<span>n。</span></div>\r\n<div>&nbsp;</div>\r\n<div>输出数据</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>输出使得<span>x^x达到n位数字的最小正整数x。</span></div>\r\n<div>&nbsp;</div>\r\n<div>输入样例</div>\r\n<div><span style="background: #d9d9d9">11</span></div>\r\n<div>&nbsp;</div>\r\n<div>输出样例</div>\r\n<div><span style="background: #d9d9d9">10</span></div>\r\n<div>&nbsp;</div>\r\n<div>时间限制</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>各测试点<span>1秒</span></div>\r\n<div>&nbsp;</div>\r\n<div>内存限制</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>你的程序将被分配<span>32MB的运行空间</span></div>\r\n<div>&nbsp;</div>\r\n<div>数据规模</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; n&lt;=2 000 000 000</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:49'),
(559, '小车问题', 'car', '<div><b>[</b><b>问题描述<span>]</span></b></div>\r\n<div style="text-indent: 21pt">甲、乙两人同时从<span>A地出发要尽快同时赶到B地。出发时A地有一辆小车，可是这辆小车除了驾驶员外只能带一人。已知甲、乙两人的步行速度一样，且小于车的速度。问：怎样利用小车才能使两人尽快同时到达。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b>[</b><b>问题输入<span>]</span></b></div>\r\n<div style="text-indent: 21pt">仅一行，三个整数，分别表示<span>AB两地的距离s米（&le;2000），人的步行速度a米/秒，车的速度b米/秒，2000&gt;b&gt;a。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b>[</b><b>问题输出<span>]</span></b></div>\r\n<div style="text-indent: 21pt">两人同时到达<span>B地需要的最短时间,单位秒，保留2位小数。</span></div>\r\n<div>&nbsp;</div>\r\n<div><b>[</b><b>输入输出样例<span>]</span></b></div>\r\n<div>car.in</div>\r\n<div style="text-indent: 10.5pt">120&nbsp;5&nbsp;25</div>\r\n<div style="text-indent: 10.5pt">&nbsp;</div>\r\n<div>car.out</div>\r\n<div style="text-indent: 10.5pt">9.60</div>\r\n<div>&nbsp;</div>', 1000, 128, 5, 0, '2012-04-05 16:23:49'),
(560, '细胞', 'cellnum', '<p>细胞</p>\r\n<p>一矩形阵列由数字0到9组成,数字1到9代表细胞,细胞的定义为沿细胞数字上下左右还是细胞数字则为同一细胞,求给定矩形阵列的细胞个数。如阵列: <br />\r\n0234500067<br />\r\n1034560500<br />\r\n2045600671<br />\r\n0000000089<br />\r\n有4个细胞。<br />\r\n输入：整数m,n(m行，n列 (0&lt;m,n&lt;=100))<br />\r\n矩阵<br />\r\n输出：细胞的个数。<br />\r\n&nbsp;</p>\r\n<p>样例：<br />\r\n输入(cellnum.in)：<br />\r\n4&nbsp; 10<br />\r\n0234500067<br />\r\n1034560500<br />\r\n2045600671<br />\r\n0000000089</p>\r\n<p>输出(cellnum.out)：<br />\r\n4</p>', 1000, 128, 5, 0, '2012-04-05 16:23:49'),
(561, '迷宫', 'maze', '<p>【问题描述】<br />\r\n&nbsp;&nbsp;&nbsp; 给定一个N*M方格的迷宫，迷宫里有T处障碍，障碍处不可通过。给定起点坐标和终点坐标，问每个方格最多经过1次，有多少种从起点坐标到终点坐标的方案。在迷宫中移动有上下左右四种方式。保证起点上没有障碍。<br />\r\n【输入文件】<br />\r\n第一行N、M和T，N为行，M为列，T为障碍总数。<br />\r\n第二行起点坐标SX,SY，终点坐标FX,FY。<br />\r\n接下来T行，每行为障碍的坐标。<br />\r\n【输出文件】<br />\r\n给定起点坐标和终点坐标，问每个方格最多经过1次，从起点坐标到终点坐标的方案总数。<br />\r\n&nbsp;</p>\r\n<p>【样例输入:maze.in】<br />\r\n2 2 1<br />\r\n1 1 2 2<br />\r\n1 2<br />\r\n【样例输出:maze.out】<br />\r\n1<br />\r\n【数据规模】<br />\r\n1&lt;=N,M&lt;=5。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:49');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(562, '跳房子', 'numgrid', '<p>&quot;跳房子&quot; [Hal Burch, 2005]</p>\r\n<p>奶牛们按不太传统的方式玩起了小孩子们玩的&quot;跳房子&quot;游戏。奶牛们创造了<br />\r\n一个5x5的、由与x,y轴平行的数字组成的直线型网格，而不是用来在里面跳<br />\r\n的、线性排列的、带数字的方格。</p>\r\n<p>然后他们熟练地在网格中的数字中跳：向前跳、向后跳、向左跳、向右跳<br />\r\n(从不斜过来跳)，跳到网格中的另一个数字上。他们再这样跳啊跳(按相同规<br />\r\n则)，跳到另外一个数字上(可能是已经跳过的数字)。</p>\r\n<p>一共在网格内跳过五次后，他们的跳跃构建了一个六位整数(可能以0开头，<br />\r\n例如000201)。</p>\r\n<p>求出所有能被这样创造出来的不同整数的总数。</p>\r\n<p>问题名称: numgrid</p>\r\n<p>输入格式:</p>\r\n<p>* 第1到5行: 这样的网格，一行5个整数</p>\r\n<p>输入样例 (numgrid.in):</p>\r\n<p>1 1 1 1 1<br />\r\n1 1 1 1 1<br />\r\n1 1 1 1 1<br />\r\n1 1 1 2 1<br />\r\n1 1 1 1 1</p>\r\n<p>输出格式:</p>\r\n<p>* 第1行: 能构建的不同整数的总数</p>\r\n<p>输出样例 (numgrid.out):</p>\r\n<p>15</p>\r\n<p>输出详细说明:</p>\r\n<p>111111, 111112, 111121, 111211, 111212, 112111, 112121, 121111, 121112,<br />\r\n121211, 121212, 211111, 211121, 212111和 212121 能够被构建。没有其它可<br />\r\n能的数了。<br />\r\n&nbsp;</p>', 1000, 128, 9, 0, '2012-04-05 16:23:49'),
(563, '特殊的质数肋骨', 'sprime', '<p>Superprime Rib 特殊的质数肋骨 <br />\r\n&nbsp;</p>\r\n<p>描述<br />\r\n农民约翰的母牛总是生产出最好的肋骨。你能通过农民约翰和美国农业部标记在每根肋骨上的数字认出它们。 <br />\r\n农民约翰确定他卖给买方的是真正的质数肋骨,是因为从右边开始切下肋骨,每次还剩下的肋骨上的数字都组成一个质数,举例来说:&nbsp; 7 3 3 1<br />\r\n全部肋骨上的数字 7331是质数;三根肋骨 733是质数;二根肋骨 73 是质数;当然,最后一根肋骨 7 也是质数。 <br />\r\n7331 被叫做长度 4 的特殊质数。 <br />\r\n写一个程序对给定的肋骨的数目 N (1&lt;=N&lt;=8),求出所有的特殊质数。数字1不被看作一个质数。 <br />\r\n格式<br />\r\nPROGRAM NAME: sprime <br />\r\nINPUT FORMAT: (file sprime.in) <br />\r\n单独的一行包含N。 <br />\r\nOUTPUT FORMAT: (file sprime.out) <br />\r\n按顺序输出长度为 N 的特殊质数,每行一个。 <br />\r\nSAMPLE INPUT<br />\r\n4 <br />\r\nSAMPLE OUTPUT<br />\r\n2333<br />\r\n2339<br />\r\n2393<br />\r\n2399<br />\r\n2939<br />\r\n3119<br />\r\n3137<br />\r\n3733<br />\r\n3739<br />\r\n3793<br />\r\n3797<br />\r\n5939<br />\r\n7193<br />\r\n7331<br />\r\n7333<br />\r\n7393</p>', 1000, 128, 5, 0, '2012-04-05 16:23:50'),
(564, '排列', 'permutation', '<p><b>【问题描述</b>】</p>\r\n<div>在组合数学中排列是一个非常重要的内容。例如，1 2 3 4 5 and 1 3 5 4 2 是两个5的排列．<br />\r\n众所周知，n的排列数是n!<br />\r\n根据它们的数量关系，如果我们可以在每对相邻的排列数之间插入符号&ldquo;&lt;&rdquo;或&ldquo;&gt;&rdquo;，我们能得到一个符号排列。<br />\r\n例如，1 2 3 4 5 能变成 1&lt;2&lt;3&lt;4&lt;5，<br />\r\n1 3 5 4 2 能变成 1&lt;3&lt;5&gt;4&gt;2．</div>\r\n<div>现在你的任务是计算有多少个用k个&ldquo;&lt;&rdquo;组成的n排列</div>\r\n<div>【输入格式】</div>\r\n<div><span><span>&nbsp;输入文件由多组测试数据组成，每一测试数据占一行，包括两个整数n，k(0&lt;n&le;100,0&le;k&le;100 )，输入文件由EOF结束。</span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;每个测试数据输出一个结果，计算结果为一个非负数，即符合要求的排列数除以2007的余数。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span> permutation.in</span></div>\r\n<div>5 2</div>\r\n<div>输出文件名：<span> <span>permutation.out</span></span></div>\r\n<div><span>66</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:50'),
(565, '儿童节快乐', 'happya', '<p><b>【问题描述</b>】</p>\r\n<div>儿童节要来了,在这一天,孩子们可以得到很多糖果.在大城市,人们开发了糖果自动管理系统(ACM).ACM能管理N堆糖果.这个系统支持两种操作.</div>\r\n<div>(1)I a b c(1&le;a&le;b&le;N，0&lt;c&le;100)，ACM系统将把从a到b堆糖果都增加c;</div>\r\n<div>(2)C a b(1&le;a&le;b&le;N)，ACM系统将在从a到b中选择最大的一堆分给一个孩子.如果最大数量的糖果不只一堆,选择序号小的一堆.&nbsp;&nbsp;<br />\r\n<br />\r\n给出一系列操作,对于每个C a b操作,找出孩子能得到的糖果数.</div>\r\n<div>【输入格式】</div>\r\n<div><span><span>&nbsp;输入数据第一行为两个正整数N，M(0&lt;N,M&lt;=10^5)，N表示糖果堆数,M表示操作数.接下来有M行；每行包含一个操作。</span></span></div>\r\n<div>注意:开始时N堆糖果都为0</div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp; 输出有若干个整数,为每个C a b的结果。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span> happya.in</span></div>\r\n<div>5 4<br />\r\nI 1 5 1<br />\r\nC 2 3<br />\r\nI 2 2 4<br />\r\nC 2 3</div>\r\n<div>输出文件名：<span> happya.out</span></div>\r\n<div><span>1<br />\r\n4</span></div>', 1000, 128, 8, 0, '2012-04-05 16:23:50'),
(566, '圣诞节', 'christmas', '<p><b>【问题描述</b>】</p>\r\n<div>圣诞节要来了,有一个舞会.N个男士和N个女士将要参加.一个男士和一个女士成为一对舞伴.我们知道,如果一对舞伴的年龄和身高相差太多的话会不够和协.现在我们定义一个男士和一个女士的不和协值如下:&nbsp;&nbsp;&nbsp;<br />\r\n<br />\r\nF(i,j)=(Hi-Hj)^2+(AGEi-AGEj)^2<br />\r\nHi是i号人员的身高,AGEi是i号人员的年龄.你的任务是设计一个舞伴搭配方案,使最大不合协值最小.</div>\r\n<div>【输入格式】</div>\r\n<div><span><span>&nbsp;输入数据第一行为一个正整数N（N&le;500），接下来有2N行；每行包含两个正整数x,y，表示身高和年龄（100 &le;x&le;200,10&le;y&le;60）,前N个表示男士,后N个表示女士。</span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp; 输出只有一个整数,表示最小的最大不和协值。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span> christmas.in</span></div>\r\n<div>2<br />\r\n141 27<br />\r\n134 10<br />\r\n169 34<br />\r\n178 18</div>\r\n<div>输出文件名：<span> christmas.out</span></div>\r\n<div><span>1801</span></div>', 1000, 256, 6, 0, '2012-04-05 16:23:50'),
(567, '山峰和山谷', 'grz', '<p>山峰和山谷（grz）<br />\r\nDescription<br />\r\n&nbsp;Byteasar特别喜欢爬山，在爬山的时候他就在研究山峰和山谷。为了能够让他对他的旅程有一个安排，他想知道山峰和山谷的数量。<br />\r\n&nbsp;给定一个地图，为Byteasar想要旅行的区域，地图被分为n*n的网格，每个格子(i,j) 的高度w(i,j)是给定的。<br />\r\n&nbsp;若两个格子有公共顶点，那么他们就是相邻的格子。（所以与(i,j)相邻的格子有(i&minus;1, j&minus;1),(i&minus;1,j),(i&minus;1,j+1),(i,j&minus;1),(i,j+1),(i+1,j&minus;1),(i+1,j),(i+1,j+1)）。<br />\r\n&nbsp;我们定义一个格子的集合S为山峰（山谷）当且仅当：<br />\r\n1.S的所有格子都有相同的高度。<br />\r\n2.S的所有格子都联通<br />\r\n3.对于s属于S，与s相邻的s&rsquo;不属于S。都有ws&gt;ws&rsquo;（山峰），或者ws&lt;ws&rsquo;（山谷）。&nbsp;<br />\r\n你的任务是，对于给定的地图，求出山峰和山谷的数量，如果所有格子都有相同的高度，那么整个地图即是山峰，又是山谷。<br />\r\nInput Format (grz.in)<br />\r\n&nbsp;输入文件grz.in第一行包含一个正整数n，表示地图的大小（1&lt;=n&lt;=1000）。接下来一个n*n的矩阵，表示地图上每个格子的高度。(0&lt;=w&lt;=1000000000)<br />\r\nOutput Format (grz.out)<br />\r\n&nbsp;输出文件grz.out应包含两个数，分别表示山峰和山谷的数量。<br />\r\nSample Input 1<br />\r\n5<br />\r\n8 8 8 7 7<br />\r\n7 7 8 8 7<br />\r\n7 7 7 7 7<br />\r\n7 8 8 7 8<br />\r\n7 8 8 8 8<br />\r\nSample Output 2<br />\r\n2 1<br />\r\nSample Input 2<br />\r\n5<br />\r\n5 7 8 3 1<br />\r\n5 5 7 6 6<br />\r\n6 6 6 2 8<br />\r\n5 7 2 5 8<br />\r\n7 1 0 1 7<br />\r\nSample Output 2<br />\r\n3 3</p>', 1000, 128, 10, 0, '2012-04-05 16:23:50'),
(568, '并行', 'parellel', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp; 为了改善计算机的I/O性能，并行技术被广泛应用。许多计算机都有一个磁带机，容量为32767，适合于16位地址系统（其中最高位用来表示读写状态），传统的结构只有一个读写臂，读写臂带动磁头在磁带的表面上移动，就像留声机的唱针在唱片上滑动一样，操作系统使用指令控制读写臂将磁头移至磁带上指定的位置。<br />\r\n&nbsp;&nbsp;&nbsp;但是在我们的并行磁带机中，磁带被拉长成带状，从一面到另一面上面记录的信息都按顺序被编号，最有特色的是，它有N个读写臂，并能保证在磁带上操作时不发生冲突，因此系统可以一次存取N个记录，如下图所示：<br />\r\n<img height="116" alt="" width="459" src="http://192.168.1.252/os/sj/gdoi/ACM5/4/parellel/parellel.JPG" /> <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;有时我们可能不需要读/写N个不同的记录，比如，可能我们只需N-1个，但是经过了之前的一些操作，N个读写臂都停在了某个地方，这时它们必须准确找到我们需要的信息所存放的地点，读写臂从记录A移动到记录B的距离为|A-B|，出于某种灵活的因素，一条指令所要读取的N-1个记录不一定是互不相同的，这样便会有一些读写头停在相同的位置，但是读写臂不会停在指令中没有要求读/写的记录上。<br />\r\n&nbsp;&nbsp;&nbsp;你的任务是确定移动N个读写臂去读/写N-1个记录，所有的读写头所移动的距离和的最小值。<br />\r\n&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;输入文件包含多组测试数据，文件的结束为单独的一行只含一个数字0。<br />\r\n&nbsp;&nbsp;&nbsp;每一组测试数据的格式如下：<br />\r\n&nbsp;&nbsp;&nbsp;N<br />\r\n&nbsp;&nbsp;&nbsp;P1 P2 ... PN<br />\r\n&nbsp;&nbsp;&nbsp;r1 r2 ... rN-1<br />\r\n&nbsp;&nbsp;&nbsp;其中所有的数据项都是整数，N表示读写臂的个数（2&le;N&le;10000），第二行的N个整数P1,...,PN表示读写臂的位置，整数r1,...,rN表示我们想要在磁带上读/写的位置，所有这些整数均是非负的并且不超过32767。<br />\r\n</span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp; 对于每一组测试数据，在单独一行输出你找到的最小距离。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>parellel.in</span></div>\r\n<div>3<br />\r\n1 3 6<br />\r\n2 5<br />\r\n0</div>\r\n<div>输出文件名：<span>parellel.out</span></div>\r\n<div><span>3</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:50'),
(569, '遥远的距离', 'faraway', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp; 有两个国家正在交战，A国想发射一颗导弹袭击B国的城市，因此科学家们必须找出A国与B国之间任意两个城市最远的距离。<br />\r\n&nbsp;&nbsp;&nbsp;假定所有的城市都在一个平面坐标系中，每一个城市恰好为坐标系中的一个点。<br />\r\n&nbsp;</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;输入文件的第一行包含一个整数t(0&lt; t&le;10)，表示接下来测试数据的个数；对于每一组测试数据，它的第一行有两个整数n,m（1&le;n,m&le;100,000），分别表示每个国家城市的个数，接下来有n+m行，表示城市的坐标，每一行有两个整数X,Y，分别表示一个城市的x轴与y轴坐标。<br />\r\n&nbsp;&nbsp;&nbsp;你可以假定A国的城市坐标：0&lt; X&le;10^8，|Y|&le;10^8，B国的城市坐标：-10^8&le;X&lt; 0，|Y|&le;10^8。</span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp; 对于每一个测试数据，输出占一行，即最长距离，小数点后保留3位。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>faraway.in</span></div>\r\n<div>1<br />\r\n2 2</div>\r\n<div>2 7<br />\r\n4 3<br />\r\n-1 5<br />\r\n-2 0</div>\r\n<div>输出文件名：<span>faraway.out</span></div>\r\n<div><span>8.062</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:50'),
(570, '准备工作', 'preparation', '<p>&nbsp;</p>\r\n<p><b>【问题描述</b>】</p>\r\n<div>对大学生来说，ZSUCPC是一个年度活动。在活动中他们可以挑战编程技巧，发展他们之间的友谊。今年的活动就要举行了。组织者和评判们忙于活动的准备工作。许多工作队都进入实验室进行备战。为了让人们工作的更高效，Bea博士为此作了一个计划。<br />\r\n首先，Bea博士为每一个队评估工作时间。根据他们的提交申请，他想p[i]秒是第i队所需要的时间。Bea博士给第i队一个时间r[i]，在这个时间第i队必须准备工作。例如：<br />\r\n&nbsp;</div>\r\n<p>\r\n<table width="243" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="56">\r\n            <div align="center">I</div>\r\n            </td>\r\n            <td width="47">\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td width="31">\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td width="34">\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td width="41">\r\n            <div align="center">3</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">p[i]</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">4</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">6</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">5</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">r[i]</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">3</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">5</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<div>&nbsp;</div>\r\n<div>在这个例子中，0队可以在开始就进行他们的工作（时间0意味着一天的开始），并且必须在4秒内完成他们的工作，1队不能在1秒以前工作，但可以在这个时间后工作，等等。</div>\r\n<div>不同的队有不同的任务，包括放置课桌，安装系统等等。为避免矛盾，在任何时间Bea博士只允许一个队进入实验室。</div>\r\n<div>最后，Bea博士为每一个队设置一个保留时间d[i]。因为保留时间来自于Bea博士的评估，所以计划表不可能满足所有工作队的需要。所以结束点每个队是不同的，这取决于完成时间和评估时间。设想一个队在s秒开始工作，他们将在s+p秒完成工作。如果他们的评估时间是d，他们的延迟时间是(s+p)-d,如此处理，四个队的评估时间如下所示：<br />\r\n&nbsp;</div>\r\n<p>\r\n<table width="243" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="56">\r\n            <div align="center">I</div>\r\n            </td>\r\n            <td width="47">\r\n            <div align="center">0</div>\r\n            </td>\r\n            <td width="31">\r\n            <div align="center">1</div>\r\n            </td>\r\n            <td width="34">\r\n            <div align="center">2</div>\r\n            </td>\r\n            <td width="41">\r\n            <div align="center">3</div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n            <div align="center">d[i]</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">8</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">12</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">11</div>\r\n            </td>\r\n            <td>\r\n            <div align="center">10</div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<div>我们有许多不同的策略建立计划表。按照顺序，我们可以让0队在0秒到4秒工作，1队在4秒到6秒工作，3队在6秒到12秒工作，4队在12秒到17秒工作。他们的延迟时间是-4，-6，1 和 7。四个队的最大延迟时间是7,是3号队。但如果把戏2队放在最后。他们的最大延迟时间将是5.现在Bea博士很在意所有队的最大延迟时间，他想设计一个计划表尽量降低最大延迟时间。</div>\r\n<div>【输入格式】</div>\r\n<div>n<br />\r\np1p2&hellip;pn<br />\r\nr1r2&hellip;rn<br />\r\nd1d2&hellip;dn</div>\r\n<div>输入文件由多个测试数据组成,(所有数据都是整数),每个测试数据由包括4行,第一行有一个整数n,表示队的数量(n&le;100)．第二行的个整数是每队的工作时间，第三行的n个整数是每队的准备时间，第四行的n个整数是每个队的评估时间。所有这些整数都不超过1000。输入文件以单独一行0表示结束.</div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp; 对于每个测试数据输出单独一个整数，计划表中的最大延迟时间。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>preparation.in</span></div>\r\n<div>4<br />\r\n4 2 6 5<br />\r\n0 1 3 5<br />\r\n8 12 11 10</div>\r\n<div>输出文件名：<span> <span>preparation.out</span></span></div>\r\n<div><span>5</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:50'),
(571, '失落的神庙', 'losttemple', '<div><span style="font-size: 12pt">&nbsp;Long long ago,Lost-Monkey</span><span style="font-size: 12pt">和</span><span style="font-size: 12pt">XXX</span><span style="font-size: 12pt">一起来到一个神庙废墟前，这里曾经是一座雄伟的神庙，他们想进去玩，可是神庙的门紧闭着。聪明的</span><span style="font-size: 12pt">Lost-Monkey</span><span style="font-size: 12pt">发现门上写着这样几句话：</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">不断改变的数字是神的叩问</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">永恒不变的规则是门的钥匙</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">跟上神的节奏你将走向光明</span></div>\r\n<div><span style="font-size: 12pt">再往下看原来所谓的规则是一个递推数列</span></div>\r\n<div><span style="font-size: 12pt">F[0]=1</span></div>\r\n<div><span style="font-size: 12pt">F[1]=1</span></div>\r\n<div><span style="font-size: 12pt">F[n]=F[n div 2]+F[n div 3]+F[n div 5]+F[n div 7]</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">下面则是一个屏幕，不断地改变数字差不多</span><span style="font-size: 12pt">2</span><span style="font-size: 12pt">秒一次，所以你必须在</span><span style="font-size: 12pt">1</span><span style="font-size: 12pt">秒内得到答案。</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp; Lost-Monkey</span><span style="font-size: 12pt">一下就猜到了屏幕上的数字就是要你求数列的第多少项，然后把答案写在下面。</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: 12pt">输入</span><span style="font-size: 12pt">:</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">N</span><span style="font-size: 12pt">表示屏幕上的数。</span></div>\r\n<div><span style="font-size: 12pt">输出：</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">一个数，即</span><span style="font-size: 12pt">F[n]</span></div>\r\n<div><span style="font-size: 12pt">样例</span></div>\r\n<table style="border-right: medium none; border-top: medium none; border-left: medium none; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <div><span style="font-size: 12pt">losttemple.in</span></div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <pre>\r\nlosttemple.out</pre>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <pre>\r\n2</pre>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <div><span style="font-size: 12pt">4</span></div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: 12pt">数据范围约定</span><span style="font-size: 12pt">:</span></div>\r\n<div><span style="font-size: 12pt">40%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">,n&lt;=10000000</span></div>\r\n<div><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据，</span><span style="font-size: 12pt">n&lt;=4000000000000</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:51'),
(572, '失落的猴子', 'lostmonkey', '<div style="text-indent: 24pt"><span style="font-size: 12pt">走着走着，</span><span style="font-size: 12pt">Lost-Monkey</span><span style="font-size: 12pt">遇到一个精灵，精灵老掉牙地说：&ldquo;你只有解决我的一个难题你才能通过！&rdquo;</span></div>\r\n<div style="text-indent: 24pt"><span style="font-size: 12pt">精灵说：&ldquo;我有一块</span><span style="font-size: 12pt">n*m</span><span style="font-size: 12pt">的布</span><span style="font-size: 12pt">(</span><span style="font-size: 12pt">一开始颜色为</span><span style="font-size: 12pt">0)</span><span style="font-size: 12pt">，每次我会把其中的一个矩形染成一种颜色，最后你要告诉我这块布上每个格子的颜色&rdquo;。</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: 12pt">输入：</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">第一行</span><span style="font-size: 12pt">n,m,k</span><span style="font-size: 12pt">表示一个</span><span style="font-size: 12pt">n*m</span><span style="font-size: 12pt">的布</span><span style="font-size: 12pt">,</span><span style="font-size: 12pt">精灵染</span><span style="font-size: 12pt">k</span><span style="font-size: 12pt">次</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">从第二行起共</span><span style="font-size: 12pt">k</span><span style="font-size: 12pt">行描述一个矩形</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x1,y1,x2,y2,l&nbsp;</span><span style="font-size: 12pt">表示矩形从</span><span style="font-size: 12pt">(x1,y1)&mdash;(x2,y2)</span><span style="font-size: 12pt">染成颜色</span><span style="font-size: 12pt">l</span></div>\r\n<div><span style="font-size: 12pt">输出：</span></div>\r\n<div><span style="font-size: 12pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="font-size: 12pt">一个</span><span style="font-size: 12pt">n*m</span><span style="font-size: 12pt">的矩形</span><span style="font-size: 12pt">(</span><span style="font-size: 12pt">数字间没有空格</span><span style="font-size: 12pt">)</span></div>\r\n<div>&nbsp;</div>\r\n<table style="border-right: medium none; border-top: medium none; border-left: medium none; border-bottom: medium none; border-collapse: collapse" cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <div><span style="font-size: 12pt">lostmonkey.in</span></div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <div><span style="font-size: 12pt">lostmonkey.out</span></div>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: windowtext 1pt solid; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <div><span style="font-size: 12pt">1 2 1</span></div>\r\n            <div><span style="font-size: 12pt">1 1 1 1 1</span></div>\r\n            </td>\r\n            <td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: #ece9d8; padding-left: 5.4pt; padding-bottom: 0cm; border-left: #ece9d8; width: 213.05pt; padding-top: 0cm; border-bottom: windowtext 1pt solid; background-color: transparent" valign="top" width="284">\r\n            <pre>\r\n10</pre>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div>&nbsp;</div>\r\n<div><span style="font-size: 12pt">数据范围约定：</span></div>\r\n<div><span style="font-size: 12pt">40%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">n&lt;=100</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m&lt;=100</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">k&lt;=1000</span><span style="font-size: 12pt">。</span></div>\r\n<div><span style="font-size: 12pt">80%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">n=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">k=1000</span><span style="font-size: 12pt">。</span></div>\r\n<div><span style="font-size: 12pt">100%</span><span style="font-size: 12pt">的数据</span><span style="font-size: 12pt">n&lt;=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">m&lt;=1000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">k&lt;=5000</span><span style="font-size: 12pt">，</span><span style="font-size: 12pt">l&lt;10</span><span style="font-size: 12pt">。</span></div>', 1000, 128, 10, 0, '2012-04-05 16:23:51'),
(573, '存在与否', 'exists', '<p><b>【问题描述</b>】</p>\r\n<div>&nbsp;&nbsp;&nbsp; 当前，随着经济的深入变革，我们的社会环境也得到了很大改善，在中国，城市人口每年以7%的速度增长，一些大城市的人口增长速度更是快的惊人，一个显而易见的例子是：今天的上海每小时新增加10所住宅和100平方米的公路，已率先成为世界大都市。<br />\r\n&nbsp;&nbsp;&nbsp; 由于人口和城市面积的急剧增长，公共交通成为一个重要的问题，于是大量的十字路口遍步整个城市。<br />\r\n&nbsp;&nbsp;&nbsp; 举个例子，以前广州海珠区有N个自然村，有一些道路把这些村子连接起来，使得任意两个村子都存在一条路径相通，任意两条路只在某个村子那里相交。简单来说，海珠区可以被视为一棵树，村子是结点，路为边，海珠区政府就位于树的根结点所在的村子。这棵树有M个叶子结点（L[1],...,L[M]，换言之，这M个村子中的每一个都只与一个村子直接相连），其它(N-M)个结点（包括根结点）每一个结点都至少有两个子结点，如下图1所示。<br />\r\n&nbsp;&nbsp;&nbsp; 近年来，又新建了一条环状交叉路穿过了这M个村子（L[1],...,L[M]），如图2所示：<br />\r\n<img height="248" alt="" width="818" src="http://192.168.1.252/os/sj/gdoi/ACM5/4/exists/exists1.JPG" /><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;图1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;图2 <br />\r\n&nbsp;&nbsp;&nbsp;假定L[0]是一个离海珠区很远的邮局，但也在环路上。邮递员想以尽可能快的速度往各个村子送EMS，从统计数据中你可得知邮递员走每条路需花费的时间，现在邮局局长想知道是否存在一个环（L[0]&rarr;L[1]&rarr;...&rarr;L[M]&rarr;L[0]），使得邮递员只需访问这N个村子中的每个村子一次，如果可行，输出完成这个任务所花费的最小时间，否则只需输出&ldquo;-1&rdquo;（双引号不需输出）。</div>\r\n<div>【输入格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;输入数据有两部分组成：<br />\r\n&nbsp;&nbsp;&nbsp;第一部分的第一行是一个正整数N（3&le;N&le;1000），表示村子的个数，接下来有N-1行，第i行有三个正整数Xi(1&le;Xi&le;N),Yi(1&le;Yi&le;N),Ti(0&lt; Ti&le;1000)，用来描述第i条边，其中Yi为树中Xi的父结点，Ti表示从Xi到Yi或者从Yi到Xi所需的时间。<br />\r\n&nbsp;&nbsp;&nbsp;第二部分的第一行是一个正整数M（1&le;M&lt; N），表示叶子结点的个数，接下来有M+1行，表示交叉路，第i(0&le;i&le;M)行有三个非负整数L[i](0&le;L[i]&le;N),L[i+1](0&le;L[i+1]&le;N),Ci(0&lt; Ci&le;1000)，假定L[0]=L[M+1]=0，交叉路是一个环L[0]&rarr;L[1]&rarr;L[2]&rarr;...&rarr;L[M]&rarr;L[M+1]，Ci表示从L[i]到L[i+1]或者从L[i+1]到L[i]所需的时间。<br />\r\n&nbsp;&nbsp;&nbsp; </span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp; 输出只有一个整数，如果存在一个满足上述要求的环，输出从邮局出发遍历所有村子并返回邮局所需的最小时间，否则输出&ldquo;-1&rdquo;（不包括双引号），输出不需要多余的空格。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>exists.in</span></div>\r\n<div>3<br />\r\n2 1 1<br />\r\n3 1 1</div>\r\n<div>2<br />\r\n0 2 1<br />\r\n2 3 1<br />\r\n3 0 1</div>\r\n<div>输出文件名：<span>exists.out</span></div>\r\n<div><span>4</span></div>\r\n<div><span>提示：可行的环为0&rarr;2&rarr;1&rarr;3&rarr;0，总的时间为4，如下图：</span></div>\r\n<div><span><img height="212" alt="" width="323" src="http://192.168.1.252/os/sj/gdoi/ACM5/4/exists/exists2.JPG" /></span></div>', 1000, 128, 20, 0, '2012-04-05 16:23:51'),
(574, '道路重建', 'rebuild', '<p><b>【问题描述</b>】</p>\r\n<div><span>有一次，</span><span>在一个王国中，有N个城市。N条道路可以让你从一个城市到其他任何一个城市。在两个城市之间最多有1条道路，但在一次严酷的战争后，有D条路被破坏。国王想要修理这些路，A和B是两个重要的城市，国王想要让两个城市尽快的连接，现在你的工作就是重建道路使A和B连接且重建道路的总长度最少。</span></div>\r\n<div>【输入格式】</div>\r\n<div><span><span>输入文件第一行包括一个整数N（2&lt;N&le;100）表明城市数。这些城市编号为从1到N。第二行包括一个整数M（N-1&le;M&le;N*（N-1）/2），表明道路的数量。下面有M行，每行有3个整数I,J,K（1&le;I，J&le;N，I&ne;J，0&lt;K<span><span><span>&le;</span></span>100）,意思是城市I与城市J之间道路的长度为K。<br />\r\n下一行包括一个整数D（1&le;D&le;M），表示有几条路被破坏。下面D行包括2个整数I,J，表示城市I与城市J之间的道路被破坏且可以直接连接。<br />\r\n最后一行有两个整数A和B，表示两个重要的城市。<br />\r\n</span></span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp;对于每组测试数据，输出只有一行是可以使A和B连接的重建道路的总长度。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>rebuild.in</span></div>\r\n<div>3<br />\r\n2<br />\r\n1 2 1<br />\r\n2 3 2<br />\r\n1<br />\r\n1 2<br />\r\n1 3<br />\r\n&nbsp;</div>\r\n<div>输出文件名：<span>rebuild.out</span></div>\r\n<div><span>1</span></div>', 1000, 128, 9, 0, '2012-04-05 16:23:51'),
(575, '猴子和香蕉', 'monkeys', '<p><b>【问题描述</b>】</p>\r\n<div><span>你听说过猴子分香蕉的故事吗?这个题目有些不一样.有N只猴子住在一个岛屿上,一天他们发现了很多香蕉,于是他们决定把这些香蕉分成各自的,他们应该怎么做?</span></div>\r\n<div><span>吵闹了很长时间,他们制定了如下规则:他们定出了C条选择,每个选择包含两个整数x,y,我们假设开始有B串香蕉,每只猴子从老的到小的,随机进行一个选择获得他自已的香蕉.如果他选了<span>第i个选择(1&le;i&le;C),他可以先得到yi串香蕉,然后,他把剩余的分成xi堆,每堆是相同的.最后他再获得一堆香蕉.他总共获得了yi和一堆香蕉.每只猴子都这样做.当最后一只猴子选择时,他们发现所有的香蕉都分完了.</span></span></div>\r\n<div>现在我知道他们的计划.但我不知道哪只猴子作了什么选择,也不知道猴子和香蕉的开始数量.如果有B0串香蕉能满足这个分配过程,B0被认为是一个可能的答案.</div>\r\n<div>这是你的工作,我将给你一个数K,你应该输出第K小的可能的答案.</div>\r\n<div>【输入格式】</div>\r\n<div><span>输入文件第一行<span>是两个正整数Nm(Nm&le;100)和C(C&le;20)，表示猴子的最大数量和他们的选择数．下面每行包含两个整数xi(2&le;xi&le;100)和yi(0&le;yi&le;100)，含义如题所述．下面一行包含一个整数K (1&le;K&le;1,000,000),是I号请求．</span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;输出仅一行包含一个整数B，是一个与输入需求一致的答案．如果K是一个比所有答案大的数,则输出&ldquo;-1&rdquo; .<br />\r\n注意:已知香蕉总数不会超过10^9．</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>monkeys.in</span></div>\r\n<div>2 2<br />\r\n2 4<br />\r\n3 2<br />\r\n3</div>\r\n<div>输出文件名：<span>monkeys.out</span></div>\r\n<div><span>5</span></div>\r\n<div>输入文件名：<span><span>monkeys.in</span></span></div>\r\n<div>2 2<br />\r\n2 4<br />\r\n3 2<br />\r\n6</div>\r\n<div>输出文件名：<span>monkeys.out</span></div>\r\n<div><span>-1</span></div>', 1000, 128, 14, 0, '2012-04-05 16:23:51'),
(576, '管道系统', 'paipe', '<p><b>【问题描述</b>】</p>\r\n<div><span>胖莫林是一只胖老鼠，他住在地下。地下有1条被抛弃的管道系统，它们连接着莫林的家和其他建筑物。一天，莫林穿过管道发现了一个大仓库，仓库里堆满了食物，他决定<span>每天早上去这个仓库享受食物。莫林也喜欢在管道中旅行，他想知道从家到仓库有多少种不同的简单的路径（相同位置的路径只算一次）。<br />\r\n这个管道系统被看作一个矩阵，包含M*N个单元格，M是行数，N是列数。每个单元格包含图4.10.1中的一个管道。</span></span></div>\r\n<div><span><img alt="" width="845" height="865" src="http://192.168.1.252/os/sj/gdoi/ACM5/4/pipe/pipe-1.jpg" /></span></div>\r\n<div>在图4.10.1中的管道类型：<br />\r\n注意11和12不一样。在12中横管和竖管并不互相连接，但在11中，他们连接；0中没有管道。莫林的家和仓库都在这个黑客帝国之外，有一个入口可以让他从家进入管道，并且有一个出口通向仓库。进入入口之后，他无法在到达出口之前从管道中出去。<br />\r\n接下来在图4.10.2中的两幅图是最后两个测试数据的样本输入。</div>\r\n<div><img alt="" width="924" height="516" src="http://192.168.1.252/os/sj/gdoi/ACM5/4/pipe/pipe-2.jpg" /></div>\r\n<div>考虑到位置的提高并且出口在这个黑客帝国的分界线上，帮助莫林计算有多少条从入口到出口的简单路径。</div>\r\n<div>【输入格式】</div>\r\n<div><span><span>输入包含一些测试数据。<br />\r\n对于每组测试数据，第一行有2个整数M和N（1&le;M，N&le;6）；<br />\r\n下面M行描述这个黑客帝国的管道系统，每行有N个1~14的数，代表每个单元格中的管道类型。<br />\r\n入口和出口的位置被描绘成一个R,C,D的立方。R和C是整数并且满足1&le;R&le;M，1&le;C&le;N。D是一个字符，它可能是&ldquo;U&rdquo;、&ldquo;D&rdquo;、&ldquo;L&rdquo;或&ldquo;R&rdquo;，表示位置在单元格（R,C）的上/下/左/右。<br />\r\n每组数据的最后一行是2个三倍数Rs、Cs、Ds、RT、CT、DT，表示入口和出口的方位。它保证入口和出口的位置不同，且他们都在黑客帝国的边界上（如果D是&lsquo;U&rsquo;，那么R必定是1；如果D是&lsquo;D&rsquo;，那么R必定是M；如果D是&lsquo;L&rsquo;，那么C必定是1；如果D是&lsquo;R&rsquo;，那么C必定是N）。<br />\r\n输入文件以EOF终止。</span></span></div>\r\n<div>【输出格式】</div>\r\n<p>&nbsp;&nbsp;&nbsp;对于每组测试数据，在单行输出答案。</p>\r\n<div>【输入样例】</div>\r\n<div>输入文件名：<span>paipe.in</span></div>\r\n<div>1 1 <br />\r\n1 <br />\r\n1 1 L 1 1 R <br />\r\n2 2 <br />\r\n11 11 <br />\r\n11 11 <br />\r\n1 1 U 1 1 L <br />\r\n3 3 <br />\r\n6 4 0 <br />\r\n5 13 2 <br />\r\n6 3 0 <br />\r\n1 1 U 2 3 R <br />\r\n3 3 <br />\r\n0 1 0 <br />\r\n5 12 4 <br />\r\n6 10 7 <br />\r\n1 2 U 3 3 D</div>\r\n<div>输出文件名：<span>paipe.out</span></div>\r\n<div><span>0 <br />\r\n1 <br />\r\n1 <br />\r\n2 </span></div>', 1000, 128, 5, 0, '2012-04-05 16:23:51'),
(577, '蝗灾', 'locust', '<p>DESCRIPTION<br />\r\nC国国土辽阔，地大物博......但是最近却在闹蝗灾.....<br />\r\n我们可以把C国国土当成一个W&times;W的矩阵，你会收到一些诸如（X，Y，Z）的信息，代表（X，Y）这个点增多了<br />\r\nZ只蝗虫，而由于C国政府机关比较臃肿，为了批复消灭蝗虫的请求需要询问一大堆的问题......每个询问形如<br />\r\n（X1,Y1,X2,Y2），询问在（X1,Y1,X2,Y2）范围内有多少蝗虫（请注意询问不会改变区域内的蝗虫数），<br />\r\n你作为一个C国的程序员，需要编一个程序快速的回答所有的询问。<br />\r\n<br />\r\nNOTICE<br />\r\nC国一开始没有蝗虫。<br />\r\n<br />\r\nINPUT<br />\r\n输入文件的第一行包括一个整数W，代表C国国土的大小。第二行有一个整数N，表示事件数。接下来有N行表示N个事件，以（0 X Y Z）的形式或（1,X1,Y1,X2,Y2）的形式给出，分别代表蝗虫的增加和询问。<br />\r\n<br />\r\nOUTPUT<br />\r\n对于每个询问输出一个整数表示需要的结果。<br />\r\n<br />\r\nSAMPLE INPUT<br />\r\nlocust.in<br />\r\n5<br />\r\n8<br />\r\n2 4 1 4 2<br />\r\n1 3 1 8<br />\r\n1 4 4 4<br />\r\n2 1 3 4 4<br />\r\n1 1 5 1<br />\r\n1 4 4 5<br />\r\n2 2 2 5 4<br />\r\n2 3 2 4 4<br />\r\n<br />\r\nSAMPLE OUTPUT<br />\r\nlocust.out<br />\r\n0<br />\r\n4<br />\r\n9<br />\r\n9<br />\r\n<br />\r\n数据范围：<br />\r\n10%的数据满足W&lt;=100,N&lt;=100;<br />\r\n30%的数据满足W&lt;=2000,N&lt;=5000;<br />\r\n50%的数据满足W&lt;=100000,N&lt;=50000;<br />\r\n100%的数据满足W&lt;=500000,N&lt;=200000,每次蝗虫增加数不超过1000;<br />\r\n<br />\r\n时间限制：<br />\r\n2s<br />\r\n&nbsp;</p>', 2000, 128, 10, 0, '2012-04-05 16:23:51'),
(578, '汉诺塔', 'ionah', '<p>对于一个有N根柱子的汉诺塔，在第一根柱子上有M个圆盘从大到小依次摆放，问如何用最少的步数把所有的盘子都移动到第N根柱子上。每次只能移动一个圆盘，每个圆盘只能放在比它大的圆盘上，最大的圆盘只能直接放置在地面上。</p>\r\n<p>输入文件：一行，有三个整数N，M</p>\r\n<p>输出文件：一行，最少的步数</p>\r\n<p>样例输入：<br />\r\n4 4<br />\r\n样例输出：</p>\r\n<p>数据规模:<br />\r\n3&lt;=N&lt;=30<br />\r\n1&lt;=M&lt;=200</p>\r\n<p>有20%的数据<br />\r\nN&lt;=6<br />\r\nM&lt;=20</p>', 1000, 128, 10, 0, '2012-04-05 16:23:51'),
(579, '打蚊子', 'fight', '<p>题目描述</p>\r\n<p>输入文件 fight.in<br />\r\n输出文件 fight.out</p>\r\n<p>TB晚上痒得睡不着觉，向墙上一看才发现墙上有N只大蚊子！为了报这笔血海深仇，TB悄悄地拿起电蚊拍。 <br />\r\n电蚊拍可以近似看成一个半径为R的圆形，只要接触到这个圆形的边界或内部，蚊子就会被电死。TB知道，尽管剩下的蚊子都会很生气，但由于难兄难弟们被电发出的噼里啪啦的声音，这些剩下的蚊子肯定会应声逃跑，所以机会只有一次。你能告诉TB，这样一个圆形的电蚊拍一次最多能打死多少蚊子吗？</p>\r\n<p>输入格式：</p>\r\n<p>第一行两个整数N、R分别表示蚊子的个数以及电蚊拍的半径。 <br />\r\n接下来N行，每行两个整数X、Y表示蚊子的横坐标和纵坐标。</p>\r\n<p>输出格式：</p>\r\n<p>一个整数，表示最多打死蚊子的数量。</p>\r\n<p>输入样例 <br />\r\n4 1<br />\r\n0 0<br />\r\n2 0<br />\r\n1 1<br />\r\n1 2</p>\r\n<p>输出样例： <br />\r\n3</p>\r\n<p>数据规模：</p>\r\n<p><strong>X</strong><strong>、Y、R&lt;=2^16</strong></p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="114" valign="top">\r\n            <p>测试点</p>\r\n            </td>\r\n            <td width="86" valign="top">\r\n            <p>N</p>\r\n            </td>\r\n            <td width="85" valign="top">\r\n            <p>备注</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="114" valign="top">\r\n            <p>1~3</p>\r\n            </td>\r\n            <td width="86" valign="top">\r\n            <p>&le;500</p>\r\n            </td>\r\n            <td width="85" valign="top">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="114" valign="top">\r\n            <p>4</p>\r\n            </td>\r\n            <td width="86" valign="top">\r\n            <p>&le;1000</p>\r\n            </td>\r\n            <td width="85" valign="top">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="114" valign="top">\r\n            <p>5</p>\r\n            </td>\r\n            <td width="86" valign="top">\r\n            <p>&le;2000</p>\r\n            </td>\r\n            <td width="85" valign="top">\r\n            <p>R=1</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width="114" valign="top">\r\n            <p>6~10</p>\r\n            </td>\r\n            <td width="86" valign="top">\r\n            <p>&le;2000</p>\r\n            </td>\r\n            <td width="85" valign="top">\r\n            <p>&nbsp;</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p><br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:51'),
(580, 'sumcount', 'sumcount', '<p>题目描述：</p>\r\n<p>求满足不等式a&lt;=x1+x2+...+xn&lt;=b的非负整数解的个数，输出解的个数模p即可。</p>\r\n<p>&nbsp;</p>\r\n<p>输入格式：</p>\r\n<p>一行四个正整数n,a,b,p,用空格隔开，含义如题目描述所示。</p>\r\n<p>&nbsp;</p>\r\n<p>输出格式：</p>\r\n<p>一行输出解的个数模p的值。<br />\r\n&nbsp;</p>\r\n<p>样例输入：<br />\r\n2 2 3 10000</p>\r\n<p>样例输出：<br />\r\n7</p>\r\n<p>&nbsp;</p>\r\n<p>数据规模：</p>\r\n<p>对于10%的数据 n,b&lt;=5.</p>\r\n<p>对于30%的数据 n,b&lt;=500.</p>\r\n<p>对于50%的数据 n,b&lt;=50000.</p>\r\n<p>对于100%的数据 n,b&lt;=1000000. a&lt;=b. p&lt;=10^9.<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:51'),
(581, '01环 ', '01ring', '<p><strong>题目描述： </strong><br />\r\n有足够多的0和1，组成一个长度为N的01环，要求不超过K个0是连续的，求满足条件的方案数。注意：循环同构会被认为是同一种方案。<br />\r\n<strong>输入文件（01ring.in</strong><strong>）： </strong><br />\r\n第一行有两个整数T，M，表示以下有T组数据。<br />\r\n每组数据占一行有两个整数N，K。<br />\r\n每组数据之间有一个空行隔开。<br />\r\n<strong>输出文件（01ring.out</strong><strong>）： </strong><br />\r\n输出T行，每行顺次对应一组测试数据。<br />\r\n每组数据你需要输出最后的方案数除以M的余数。<br />\r\n<strong>输入样例： </strong><br />\r\n3 100000007</p>\r\n<p>3 1</p>\r\n<p>3 3</p>\r\n<p>4 1</p>\r\n<p><strong>输出样例： </strong><br />\r\n2<br />\r\n4<br />\r\n3<br />\r\n<strong>解释： </strong><br />\r\n第一组数据的方案是：111，110。<br />\r\n第二组数据的方案是：111，110，100，000。<br />\r\n第三组数据的方案是：1111，1110，1010。<br />\r\n<strong>约束和限制</strong>：<br />\r\n对于20%的数据T&lt;=20;<br />\r\n对于100%的数据T&lt;=50;<br />\r\n对于20%的数据N,K&lt;=20;<br />\r\n对于100%的数据N,K&lt;=2000;<br />\r\n对于100%的数据 100,000,000&lt;=M&lt;=1,000,000,000 且M是素数。</p>', 2000, 128, 10, 0, '2012-04-05 16:23:51'),
(582, '最后的利益', '9cwy', '<p>最近9C马上就要和WY交收WOW的运营权了，9C为了最后的利益决定让GM控制玩家上线时间。因为9C的小霸王服务器总是容易爆满，所以某服务器中只剩一个玩家的位子，GM为了让玩家在线时间总和最长。他将选择一些上线时间不重复的玩家让他们上线。我们假设某玩家下线以后，另一个玩家可以立即登入。但是GM又笨又懒，他希望你能帮他帮他写一个程序来完成这个任务。 <br />\r\n【输入文件】 <br />\r\n输入文件第一行是一个正整数n，n&lt;=10000，为玩家数量 <br />\r\n一下n行每行含有两个数t1、t2表示某玩家上线时段 <br />\r\n【输出文件】 <br />\r\n输出最长游戏总时间 <br />\r\n【输入样例】 <br />\r\n9cwy.in<br />\r\n12<br />\r\n1 2<br />\r\n3 5<br />\r\n0 4<br />\r\n6 8<br />\r\n7 13<br />\r\n4 6<br />\r\n9 10<br />\r\n9 12<br />\r\n11 14<br />\r\n15 19<br />\r\n14 16<br />\r\n18 20<br />\r\n9cwy.out<br />\r\n16</p>', 1000, 128, 12, 0, '2012-04-05 16:23:52');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(583, '翻硬币', 'xcoins', '<div>明明想得到到红红的一堆一元硬币，红红说：&ldquo;现在有n个硬币放在桌子上，每一个都是反面朝上，假设你每次都只能翻5个不同的硬币，如果你能在1秒内告诉我最少的翻动次数，使所有硬币都正面朝上，这些硬币就给你。每次翻硬币只能从反倒正，或从正到反。&rdquo;</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div>输入：</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>一行 n</div>\r\n<div>输出：</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>最少翻动的次数。</div>\r\n<div>&nbsp;</div>\r\n<div>【样例输入1】 xcoins.in</div>\r\n<div>6</div>\r\n<div>&nbsp;</div>\r\n<div>【样例输出1】 xcoins.out</div>\r\n<div>6</div>\r\n<div>&nbsp;</div>\r\n<div>【数据规模】</div>\r\n<div>20%的数据，5&le;n&le;10，</div>\r\n<div>40%的数据，5&le;n&le;100，</div>\r\n<div>70%的数据，5&le;n&le;1,000。</div>\r\n<div>100%的数据，5&le;n&le;1,000,000,000,000,000。</div>\r\n<p><span style="font-size: 10.5pt">保证最少翻动次数在</span><span style="font-size: 10.5pt"> 2^63-1 </span><span style="font-size: 10.5pt">以内。</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(584, '暗影斗篷', 'blackmantle', '<div>Donny是一个潜行者，有一天，出于某种未知的原因，强大的法师Kilnyy向Donny提出了决斗。出于潜行者的尊严，Donny不得不接受决斗的请求，幸运的是，Donny有一件神奇的暗影斗篷，可以抵抗Kilnyy的魔法。不幸的是，斗篷在使用一定的时间后就会损坏而不能使用。</div>\r\n<div>Kilnyy会使用两种法术，一种可以对Donyy造成伤害，另一种不会造成伤害但会使Donny昏迷一段时间（昏迷时不能使用斗篷）。基于她丰富的战斗经验，Donny提前推测出了Kilnyy会使用的法术列表及使用时间。现在，Donny想请你帮他计算一下在何时开始使用斗篷可以抵抗最多的伤害。</div>\r\n<div>&nbsp;</div>\r\n<div>输入文件（black<span style="color: black">mantle.in</span>）包涵n+1行，第一行包含两个正整数n（n&lt;=1000000）和m（m&lt;2^31），表示Kilnyy释放的法术个数和暗影斗篷的持续时间。</div>\r\n<div>第2行至第n+1行每行有2个整数Ti（0&lt;=Ti&lt;2*10^7）和Di(-2^31&lt;=Di&lt;2^31且Di!=0)，其中Ti表示第i个法术的释放时间（输入保证对于任意i!=j均有Ti!=Tj），若Di&lt;0，则该法术会对Donny造成昏迷，昏迷持续-Di秒；若Di&gt;0，则该法术会对Donny造成伤害，伤害数值为Di。</div>\r\n<div>&nbsp;</div>\r\n<div>输出文件（black<span style="color: black">mantle.out</span>）包涵1行，为Donny使用暗影斗篷的时间。若存在多解，则输出时间最靠前的解。</div>\r\n<div>&nbsp;</div>\r\n<div>输入样例</div>\r\n<div>5 2</div>\r\n<div>0 1</div>\r\n<div>1 2</div>\r\n<div>9 -2</div>\r\n<div>10 3</div>\r\n<div>1000 4</div>\r\n<div>&nbsp;</div>\r\n<div>输出样例</div>\r\n<div>999</div>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(585, '朦胧之旅', 'lovetravel', '<div>背景</div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 21.75pt">基于作者的一些看法，本题已帮读者过滤了单相思和同性之间出现好感的情况。</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>问题描述</div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 21.75pt">暑假到来了，某个班决定出去旅行。已知这个班有共有n个人，编号为1..n,其中有m个男生，剩下的全部为女生。由于个人取向问题，男女生之间会有一些好感值。基于背景这个好感值是双向的，即某男对某女的好感值为a，那么该某女对该某男的好感值也为a。很自然每个人会对很多人有好感值。可是每个班都必然有bug男和bug女的存在。即对bug男来说，任何女生对bug男的好感值都为0（bug女同理）。</div>\r\n<div style="text-indent: 21.75pt">该班的班主任是一个很保守的人，他不希望男女之间产生朦胧之感，即使出现朦胧之感，班主任也希望学生之间总的好感值之和尽量的低，同时班主任很爱学生，他希望在总的好感值之和尽量低的情况下尽量多的人能去旅游。为了保证和谐，男生和女生必须都有人去。由于班主任日理万机，他把这个重要的任务交给了你。现在就是考验神牛你的时候了。</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>输入文件</div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 21.75pt">第一行有三个整数n，m，s。</div>\r\n<div style="text-indent: 21.75pt">接下来s行，每行三个数a，b，c，描述男生a和女生b之间好感值为c。</div>\r\n<div style="text-indent: 21.75pt"><span style="color: black">所有变量的含义可以参见题目描述。</span></div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div><span style="color: black">输出文件</span></div>\r\n<div>&nbsp;</div>\r\n<div style="text-indent: 21.75pt"><span style="color: black">只有一行两个整数，既满足题目描述的好感值之和以及去旅游的人数。</span></div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div><span style="color: black">样例输入</span></div>\r\n<div>&nbsp;</div>\r\n<div><span style="color: black">lovetravel.in</span></div>\r\n<div>&nbsp;</div>\r\n<div>8 4 5</div>\r\n<div>&nbsp;</div>\r\n<div>4 5 10</div>\r\n<div>&nbsp;</div>\r\n<div>6 8 120</div>\r\n<div>&nbsp;</div>\r\n<div>6 1 150</div>\r\n<div>&nbsp;</div>\r\n<div>2 5 30</div>\r\n<div>&nbsp;</div>\r\n<div>3 8 70</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>样例输出</div>\r\n<div>&nbsp;</div>\r\n<div>lovetravel.out</div>\r\n<div>&nbsp;</div>\r\n<div>0 5</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>数据规模和约定</div>\r\n<div>&nbsp;</div>\r\n<div>对于50%的数据中<span>&nbsp;&nbsp;&nbsp; 2&lt;=n&lt;=50&nbsp;&nbsp; 0&lt;=s&lt;=500</span></div>\r\n<p><span style="font-size: 10.5pt">对于</span><span style="font-size: 10.5pt">100%</span><span style="font-size: 10.5pt">的数据中</span><span style="font-size: 10.5pt">&nbsp;&nbsp; 2&lt;=n&lt;=5000&nbsp;&nbsp; 0&lt;=s&lt;=5000</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(586, '线段', 'line', '<div>题目描述：</div>\r\n<div style="text-indent: 21.75pt">在一平面上给出一些线段以及它们之间的关系，判断这些关系是否符合逻辑。</div>\r\n<div>输入：</div>\r\n<div style="text-indent: 21.75pt">第一行有一个整数t表示共t组数据，</div>\r\n<div style="text-indent: 21.75pt">第二行有两个整数n，m，n表示共n条线段，m表示接下来有m行</div>\r\n<div style="text-indent: 21.75pt">接下来m行，每行有三个整数i，j，k表示i与j的的关系为k。（k只有2种情况，k=0平行,k=1垂直）</div>\r\n<div>输出：</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span>共t行，若n条线段的关系都符合逻辑那么输出线段1和n的关系(输出1表示垂直，0表示平行，2表示不确定），否则输出&ldquo;No Answer&rdquo;。</div>\r\n<div>样例输入：</div>\r\n<div>2</div>\r\n<div>3 2</div>\r\n<div>1 2 0</div>\r\n<div>2 3 1</div>\r\n<div>6 4</div>\r\n<div>3 2 1</div>\r\n<div>2 4 1</div>\r\n<div>1 5 0</div>\r\n<div>3 4 1</div>\r\n<div>样例输出：</div>\r\n<div>1</div>\r\n<div>No Answer</div>\r\n<p><span style="font-size: 10.5pt">数据规模：</span><span style="font-size: 10.5pt">t&lt;=10,n&lt;=300,m&lt;=40000</span></p>\r\n<p><span style="font-size: 10.5pt">注示：如果一对线段关系出现了若干次，只取最后一次。</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(587, '购物 ', 'shopping', '<p>【问题描述】 <br />\r\n金明今天很开心，因为今天是他的生日，妈妈给了N元钱。今天一早，金明就开始做预算了，他从因特网上查到了M件物品的价格(每件物品的价格都不相同)。他希望从中购买一些物品能恰好将N元钱花完。请你帮助计算一下共有多少种不同的购物方案。</p>\r\n<div>【输入文件】<br />\r\n输入文件shopping.in的第1行，为两个正整数N，M。接下来一行M个互不相同的正整数，表示M种物品的价格，它们之间用一个空格隔开。<br />\r\n(其中M&lt;=20)</div>\r\n<div>【输出文件】<br />\r\n输出文件shopping.out只有一个正整数，为不同的购物方案数(所有数据都不超出整形范围)。</div>\r\n<div><br />\r\n【输入输出样例】<br />\r\n输入文件：shopping.in<br />\r\n5 6<br />\r\n1 2 3 4 5 6<br />\r\n输出文件：shopping.out<br />\r\n3</div>\r\n<div>样例说明：共有3种方案：<br />\r\n(1)a(1)+a(4)=1+4=5<br />\r\n(2) a(2)+a(3)=2+3=5<br />\r\n(3) a(5)=5</div>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(588, '拦截导弹', 'missile', '<p><font color="#0000ff">题目描述</font></p>\r\n<p>　　某国为了防御敌国的导弹袭击，发明出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。<br />\r\n　　输入导弹依次飞来的高度（雷达给出的高度数据是不大于30000 的正整数），计算这套系统最多能拦截多少导弹，和如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。<br />\r\n&nbsp;</p>\r\n<p>输入输出格式：</p>\r\n<p>输入文件</p>\r\n<p>只有一行，有n个整数，中间用一个空格隔开，表示n枚导弹的高度，</p>\r\n<p>输出文件</p>\r\n<p>有两行，每行一个数</p>\r\n<p>第一行的整数表示一套系统最多拦截的导弹数量</p>\r\n<p>第二行的整数表示拦截所有导弹最少要配备的导弹拦截系统数量</p>\r\n<p>输入输出样例：</p>\r\n<p>missile.in<br />\r\n389 207 155 300 299 170 158 65&nbsp;</p>\r\n<p>missile.out<br />\r\n&nbsp; 6（最多能拦截的导弹数）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />\r\n&nbsp; 2（要拦截所有导弹最少要配备的系统数）<br />\r\n&nbsp;</p>', 5000, 128, 10, 0, '2012-04-05 16:23:52'),
(589, '硬币', 'xoinc', '<p>问题描述:</p>\r\n<p>农夫约翰的奶牛喜欢玩硬币游戏，因此约翰设计了一种新的双人对弈硬币游戏Xoinc。<br />\r\n开始，在地上有N (5 &lt;= N &lt;= 2,000)个硬币堆成的一个栈，硬币i有一个整数值C_i (1 &lt;= C_i &lt;= 100,000)</p>\r\n<p>第一个玩家（先手玩家）可以从硬币栈的顶部开始取一个或两个硬币(C_1 and maybe C_2) 。如果第一个玩家取走了栈顶的一个硬币，第二个玩家（后手玩家）在下一步可以取走一个或两个硬币。如果第一个玩家取走了栈顶的两个硬币，第二个玩家可以取走1，2，3或4个硬币。在每一步，当前玩家至少取一个，最多取对手两倍数量的硬币。</p>\r\n<p>然后，他们用得到的硬币价值宴请约翰，所以他们都想在游戏中获得最大价值的硬币。傲慢的后手玩家说我将使用最理想的策略取得胜利，那么先手玩家如何才能在游戏结束时得到最大价值的硬币。</p>\r\n<p>输入格式：<br />\r\n第1行：一个整数N<br />\r\n第2--N+1行：第i+1行有一个整数表示C_i</p>\r\n<p>输入样例：(xoinc.in):</p>\r\n<p>5<br />\r\n1<br />\r\n3<br />\r\n1<br />\r\n7<br />\r\n2</p>\r\n<p>输入解释：有5个硬币价值分别为1,3,1,7和2</p>\r\n<p>输出格式：<br />\r\n一行：一个整数表示先手玩家能获得的最大硬币价值</p>\r\n<p>输出样例：(xoinc.out):</p>\r\n<p>9<br />\r\n输出解释：先手玩家开始取了一个硬币（价值1）。对手取了一个硬币（价值3）.先手玩家又取了两个硬币（价值1,7,总数为9）。后手玩家得到了剩余的硬币（价值2，总数为5）</p>\r\n<p>数据规模:</p>\r\n<p>对于20%的数据,5&lt;=N&lt;=10<br />\r\n对于30%的数据,5&lt;=N&lt;=100<br />\r\n对于50%的数据,5&lt;=N&lt;=500<br />\r\n对于100%的数据,5&lt;=N&lt;=2000<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(590, '盛大的 Farm-off', 'farmoff', '<p>问题描述:</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;农夫约翰拥有 3*N(1 &lt;= N &lt;= 500,000)只牛，它们的编号为0..3*N-1，每只牛都有一个体重 W_i(1 &lt;= W_i &lt;= d)。约翰参加了一个叫做 Farm-off 的盛大竞赛活动，在这个活动上他可以在整个农业界炫耀他的牛。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;这个竞赛约翰可以派出一队共 N 头牛参赛，他的每头牛都有一个效率值 U_i (1 &lt;= U_i &lt;= h)，这个值用来描述他认为在这个竞赛中每头牛的有用值。约翰想让他选择的一群牛有一个最大的效率总值。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;可能有很多种 N 头牛的集合可以达到这个最大的效率总值。农夫约翰为了防止竞赛中的欺骗行为，对牛的体重加以限制。所以第二个要考虑的因素便是参加竞赛的牛的体重。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;帮助约翰从所有以N头牛组合而得的效率总值最大的集合中，找到一个最小体重的组合。 并且打印出体重总值被M (10,000,000 &lt;= M &lt;= 1,000,000,000)整除后的余数。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;注意：为了尽快地输入，约翰找到一个能够表示出每头牛体重及效率值的多项式：<br />\r\n对于每头牛 &nbsp;&nbsp;0 &lt;= i &lt; 3*N，<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;W_i = (a*i^5+b*i^2+c) mod d<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;U_i = (e*i^5+f*i^3+g) mod h <br />\r\n合理的系数范围： <br />\r\n0 &lt;= a &lt;= 1,000,000,000; <br />\r\n0 &lt;= b &lt;= 1,000,000,000; <br />\r\n0 &lt;= c &lt;= 1,000,000,000;<br />\r\n0 &lt;= e &lt;= 1,000,000,000; <br />\r\n0 &lt;= f &lt;= 1,000,000,000; <br />\r\n0 &lt;= g &lt;= 1,000,000,000; <br />\r\n10,000,000 &lt;= d &lt;= 1,000,000,000; <br />\r\n10,000,000 &lt;= h &lt;= 1,000,000,000.<br />\r\n公式有时会产生一些重复的数字，你的算法应该能够适应这种情况。</p>\r\n<pre>\r\n\r\n PROBLEM NAME: farmoff\r\n\r\n输入格式：<br />第一行：用空格隔开的10个数字：N, a, b, c, d, e, f, g, h,M<br />输入样例：(file farmoff.in):<br /> 2 0 1 5 55555555 0 1 0 55555555 55555555<br />根据公式计算出来的 W_i 分别是：5, 6, 9, 14, 21,30；计算出来的U_i分别是：0, 1, 8, 27, 64,125<br />输出格式：<br />第一行：一个单独的整数用来描述：N头牛的净效率总值最大的条件下的最小体重总值。<br />输出样例（farmoff.out）：<br />51<br />两只牛的组合中效率最大的是牛5和牛6，它们的体重总值为：21+30=51\r\n</pre>', 3000, 128, 10, 0, '2012-04-05 16:23:52'),
(591, '找工作', 'jobhunt', '<p>问题描述:</p>\r\n<p>贝茜牛身无分文了，她正忙着找工作。农夫约翰知道这个情况，他想让他的牛去周游世界，于是他推行了一个规则：在他的牛到另一个城市工作之前，她们只能在一个城市挣得 D （ 1 &lt;= D &lt;= 1,000 ）美元。不管怎样，贝茜可以在别的城市工作过之后，再返回到某个城市，并在这个城市再挣 D 美元，她可以无限次数地这样做。<br />\r\n贝茜牛的世界包括 P （ 1 &lt;= P &lt;= 150 ）条单向边，这些边连接着 C （ 2 &lt;= C &lt;= 220 ）个城市，城市按 1 到 C 的顺序编号，贝茜牛目前正待在 S 城 (1 &lt;= S &lt;= C) 。单向边 i 从城市 A_i 连到城市 B_i ，其中 1 &lt;= A_i &lt;= C; 1 &lt;= B_i &lt;= C ，在路上不花费任何代价。<br />\r\n为了帮助贝茜，约翰授权它使用他的私人喷气飞机服务。这项服务配置了 F 条航线，每条航线是由城市 J_i 到城市 K_i (1 &lt;=J_i &lt;= C; 1 &lt;= K_i &lt;= C) 的单向航线，且在该航线上的费用是 T_i( 1 &lt;= T_i &lt;= 50,000 ) 美元，如果贝茜牛手头没有现钱，它可以将来挣到钱之后再支付飞行费用。<br />\r\n只要它愿意，贝茜可以随时随地选择退出。不限时间，假定它所有去过的城市都能挣足 D 美元，最后贝茜最多能得到多少钱？如果这个数目没有限制的话输出 -1 。 <br />\r\n<br />\r\n程序名：jobhunt</p>\r\n<p>输入格式：<br />\r\n第1行：五个空格隔开的整数，D，P，C，F，S；<br />\r\n第2至P+1行：第i行包括两个空格隔开的整数，表示从城市A_i到B_i有一条单向边。<br />\r\n第P+2至P+F+1行：第P+i行包括三个空格隔开的整数，表示从城市J_i到T_i有一条单向航线，费用是T_i。</p>\r\n<p>输入样例：(jobhunt.in):</p>\r\n<p>100 3 5 2 1<br />\r\n1 5<br />\r\n2 3<br />\r\n1 4<br />\r\n5 2 150<br />\r\n2 5 120<br />\r\n&nbsp;</p>\r\n<p>输入样例解释：这个世界有5个城市，三条有向边，和两条飞行航线，贝茜从城市1开始，在每个城市它能最多挣到100美元。</p>\r\n<p>输出格式：<br />\r\n只有一行，一个整数，表示在遵守规则的情况下，它最多能得到多少钱。</p>\r\n<p>输出样例：(jobhunt.out):</p>\r\n<p>250<br />\r\n输出样例解释：贝茜能从城市1&rarr;城市5&rarr;城市2&rarr;城市3，最后共得到4*100 - 150 = 250美元。</p>', 1000, 128, 11, 0, '2012-04-05 16:23:52'),
(592, '', '', '<div>问题描述</div>\r\n<div>Bessie结束了国外长途旅游回来。为了迎接她的归来，Farmer John准备在牧场给她挂起一个&quot;Welcome Home&quot;的横幅。横幅会挂在两个柱子间的长度介于L1..L2的金属丝上。(1 &lt;= L1 &lt;= L2; L1 &lt;= L2 &lt;= 1,500)。</div>\r\n<div>牧场是一个W&times;H 的矩阵 (1 &lt;= W &lt;= 1,000; 1 &lt;= H &lt;= 1,000)并且FJ在每个坐标点上都树立起了柱子，在这 (W + 1) * (H + 1)个柱子上，FJ要选两个连上金属丝以挂上横幅。</div>\r\n<div>FJ不希望在横幅之间有任何杂物，就是说在这条金属丝下面没有别的柱子。</div>\r\n<div>FJ需要你编程帮他算出有多少种挂横幅的可能。但是这个数据很大，也许32位整数都放不下。</div>\r\n<div>例如如下的牧场地图：</div>\r\n<div>W = 2&nbsp;H = 1</div>\r\n<div>***</div>\r\n<div>***</div>\r\n<div>而横幅长度为2和3之间。</div>\r\n<div>这个牧场共有 (2+1) * (1+1) = 6个点以及有(6 take 5) = (6*5)/(2*1) = 15 种配对方法</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; (0,0)-(0,1)&nbsp;&nbsp; (0,0)-(2,1)&nbsp;&nbsp; (0,1)-(2,1)&nbsp;&nbsp; (1,1)-(2,0)</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp;(0,0)-(1,0)&nbsp;&nbsp; (0,1)-(1,0)&nbsp;&nbsp; (1,0)-(1,1)&nbsp;&nbsp; (1,1)-(2,1)</span></div>\r\n<div>&nbsp;&nbsp;&nbsp;(0,0)-(1,1)<span>&nbsp;&nbsp; (0,1)-(1,1)&nbsp;&nbsp; (1,0)-(2,0)&nbsp;&nbsp; (2,0)-(2,1)</span></div>\r\n<div>&nbsp;<span>&nbsp;&nbsp;(0,0)-(2,0)&nbsp;&nbsp; (0,1)-(2,0)&nbsp;&nbsp; (1,0)-(2,1)</span></div>\r\n<div>在这之中，只有四种是可以配对的</div>\r\n<div>&nbsp;</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>始位&nbsp;末位 长度<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>始位&nbsp;末位 长度</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,0)-(2,0) 2.00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,1)-(2,0) 2.24</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,0)-(2,1) 2.24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,1)-(2,1) 2.00</span></div>\r\n<div>但在这四种之中，(0,0)-(2,0)和(0,1)-(2,1)都不符合&ldquo;没有杂物&rdquo;的要求，所以这个样例中只有2种结果。</div>\r\n<div>输入格式</div>\r\n<div>一行，4个整数W, H, L1, 和 L2</div>\r\n<div>样例输入&nbsp;banner.in</div>\r\n<div>2 1 2 3</div>\r\n<div>输出格式</div>\r\n<div>一行。可能的方案数。</div>\r\n<div>样例输出&nbsp;banner.out</div>\r\n<div>2</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>【数据范围】</div>\r\n<div>50%数据 0&lt;w,h,L1,L2&lt;=100</div>\r\n<div><span style="font-size: 10.5pt"><br clear="all" />\r\n</span>&nbsp;</div>', 1000, 128, 10, 0, '2012-04-05 16:23:52'),
(593, '拜访奶牛', 'vacation', '<div>经过了几周的辛苦工作,贝茜终于迎来了一个假期.作为奶牛群中最会社交的牛,她希望去拜访N(1&lt;=N&lt;=50000)个朋友.这些朋友被标号为1..N.这些奶牛有一个不同寻常的交通系统,里面有N-1条路,每条路连接了一对编号为C1和C2的奶牛(1 &lt;= C1 &lt;= N; 1 &lt;= C2 &lt;= N; C1&lt;&gt;C2).这样,在每一对奶牛之间都有一条唯一的通路.</div>\r\n<div>FJ希望贝茜尽快的回到农场.于是,他就指示贝茜,如果对于一条路直接相连的两个奶牛,贝茜只能拜访其中的一个.当然,贝茜希望她的假期越长越好,所以她想知道她可以拜访的奶牛的最大数目.</div>\r\n<div>输入格式:</div>\r\n<div>第1行:单独的一个整数N</div>\r\n<div>第2..N行:每一行两个整数,代表了一条路的C1和C2.</div>\r\n<div>样例输入(vacation.in):</div>\r\n<div>7</div>\r\n<div>6 2</div>\r\n<div>3 4</div>\r\n<div>2 3</div>\r\n<div>1 2</div>\r\n<div>7 6</div>\r\n<div>5 6</div>\r\n<div>输入说明:</div>\r\n<div>贝茜认识7只奶牛,其中6和2相连,3和4相连,等等...最后形成这么一个网络:</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1--2--3--4</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5--6--7</span></div>\r\n<div>输出格式:</div>\r\n<div>第一行:单独的一个整数,代表了贝茜可以拜访的奶牛的最大数目.</div>\r\n<div>样例输出(vacation.out):</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;4</div>\r\n<div>&nbsp;</div>\r\n<div>输出解释:</div>\r\n<div>{1,3,5,7}或{1,4,5,7}或{2,4,5,7}</div>\r\n<div>&nbsp;</div>\r\n<div>【数码范围】</div>\r\n<div>40%数据 n&lt;=100</div>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(594, '横幅', 'banner', '<div>Bessie结束了国外长途旅游回来。为了迎接她的归来，Farmer John准备在牧场给她挂起一个&quot;Welcome Home&quot;的横幅。横幅会挂在两个柱子间的长度介于L1..L2的金属丝上。(1 &lt;= L1 &lt;= L2; L1 &lt;= L2 &lt;= 1,500)。</div>\r\n<div>牧场是一个W&times;H 的矩阵 (1 &lt;= W &lt;= 1,000; 1 &lt;= H &lt;= 1,000)并且FJ在每个坐标点上都树立起了柱子，在这 (W + 1) * (H + 1)个柱子上，FJ要选两个连上金属丝以挂上横幅。</div>\r\n<div>FJ不希望在横幅之间有任何杂物，就是说在这条金属丝下面没有别的柱子。</div>\r\n<div>FJ需要你编程帮他算出有多少种挂横幅的可能。但是这个数据很大，也许32位整数都放不下。</div>\r\n<div>例如如下的牧场地图：</div>\r\n<div>W = 2&nbsp;H = 1</div>\r\n<div>***</div>\r\n<div>***</div>\r\n<div>而横幅长度为2和3之间。</div>\r\n<div>这个牧场共有 (2+1) * (1+1) = 6个点以及有(6 take 5) = (6*5)/(2*1) = 15 种配对方法</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; (0,0)-(0,1)&nbsp;&nbsp; (0,0)-(2,1)&nbsp;&nbsp; (0,1)-(2,1)&nbsp;&nbsp; (1,1)-(2,0)</span></div>\r\n<div><span>&nbsp;&nbsp; &nbsp;(0,0)-(1,0)&nbsp;&nbsp; (0,1)-(1,0)&nbsp;&nbsp; (1,0)-(1,1)&nbsp;&nbsp; (1,1)-(2,1)</span></div>\r\n<div>&nbsp;&nbsp;&nbsp;(0,0)-(1,1)<span>&nbsp;&nbsp; (0,1)-(1,1)&nbsp;&nbsp; (1,0)-(2,0)&nbsp;&nbsp; (2,0)-(2,1)</span></div>\r\n<div>&nbsp;<span>&nbsp;&nbsp;(0,0)-(2,0)&nbsp;&nbsp; (0,1)-(2,0)&nbsp;&nbsp; (1,0)-(2,1)</span></div>\r\n<div>在这之中，只有四种是可以配对的</div>\r\n<div>&nbsp;</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>始位&nbsp;末位 长度<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>始位&nbsp;末位 长度</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,0)-(2,0) 2.00&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,1)-(2,0) 2.24</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,0)-(2,1) 2.24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (0,1)-(2,1) 2.00</span></div>\r\n<div>但在这四种之中，(0,0)-(2,0)和(0,1)-(2,1)都不符合&ldquo;没有杂物&rdquo;的要求，所以这个样例中只有2种结果。</div>\r\n<div>输入格式</div>\r\n<div>一行，4个整数W, H, L1, 和 L2</div>\r\n<div>样例输入&nbsp;banner.in</div>\r\n<div>2 1 2 3</div>\r\n<div>输出格式</div>\r\n<div>一行。可能的方案数。</div>\r\n<div>样例输出&nbsp;banner.out</div>\r\n<div>2</div>\r\n<div>&nbsp;</div>\r\n<div>&nbsp;</div>\r\n<div>【数据范围】</div>\r\n<div>50%数据 0&lt;w,h,L1,L2&lt;=100</div>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(595, '拱猪计分', 'heart', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;拱猪是一种很有趣的扑克牌游戏。 即使你不知道它的玩法，你也可以由它的计分方式来了解它的趣味性。 假设在此我们仅考虑四个人的拱猪牌局，本题要求你根据下面的计分规则，在牌局结束时计算四位玩家所得分数。</p>\r\n<ol>\r\n    <li>我们分别以 S 、 H 、 D 及 C 来代表黑桃，红心，方块及梅花，并以数字 1 至 13 来代表 A 、 2 、 &hellip; 、 Q 、 K 等牌点，例如︰ H1 为红心 A ， S13 为黑桃 K 。</li>\r\n    <li>牌局结束时，由各玩家持有的有关计分的牌 ( 计分牌 ) 仅有 S12 ( 猪 ) ，所有红心牌， D11 ( 羊 ) 及 C10 ( 加倍 ) 等 16 张牌。其它牌均弃置不计。若未持有这 16 张牌之任一张则以得零分计算。</li>\r\n    <li>若持有 C10 的玩家只有该张牌而没有任何其它牌则得 +50 分，若除了 C10 还有其它计分牌，则将其它计分牌所得分数加倍计算。</li>\r\n    <li>若红心牌不在同一家，则 H1 至 H13 等 13 张牌均以负分计，其数值为 -50 ， -2 ， -3 ， -4 ， -5 ， -6 ， -7 ， -8 ， -9 ， -10 ， -20 ， -30 ， -40 。而且 S12 与 D11 分别以 -100 及 +100 分计算。</li>\r\n    <li>若红心牌 H1 至 H13 均在同一家，有下列情形︰\r\n    <ul>\r\n        <li>所有红心牌以 +200 分计算。</li>\r\n        <li>若 S12 、 D11 皆在吃下所有红心牌之一家，则此玩家得 +500 分。</li>\r\n        <li>而 C10 还是以前面所述原则计算之。</li>\r\n    </ul>\r\n    </li>\r\n</ol>\r\n<p>例一：若各玩家持有计分牌如下： ( 每行代表一玩家所持有之牌 )</p>\r\n<p>S12 H3 H5 H13</p>\r\n<p>D11 H8 H9</p>\r\n<p>C10 H1 H2 H4 H6 H7</p>\r\n<p>H10 H11 H12</p>\r\n<p>则各家之得分依序为： -148 、 +83 、 -138 及 -60 。</p>\r\n<p>例二：若各玩家持有计分牌如下： ( 第四家未持有任何计分牌 )</p>\r\n<p>H1 H2 H3 H4 H5 H6 H7 H8 H9 H10 H11 H12 H13</p>\r\n<p>S12 C10</p>\r\n<p>D11</p>\r\n<p>则各家之得分依序为： +200 、 -200 、 +100 及 0 。</p>\r\n<p>例三：若有一玩家持有所有 16 张计分牌，则得 +1000 分。其余三家均得零分。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 每个输入文件由多组测试数据构成，每组测试数据有四行，每一行第一个数为该玩家所持有计分牌总数，而后列出其所持有之所有计分牌，牌数与各计分牌均以一个以上的空格分开。相邻两组测试数据之间不会有空白行，读到四家持牌数都为 0 表示文件结束。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 每一行输出一组测试数据对应的结果，依次输出各家所得分数，共四个整数 ( 含正负号， 0 除外 ) ，相邻两个整数之间以一个空格分开，符号和数字间不可以有空格。每组输出间不需要有空白行。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nheart.in<br />\r\n4 S12 H3 H5 H13<br />\r\n3 D11 H8 H9<br />\r\n6 C10 H1 H2 H4 H6 H7<br />\r\n3 H10 H11 H12<br />\r\n13 H1 H2 H3 H4 H5 H6 H7 H8 H9 H10 H11 H12 H13 <br />\r\n2 S12 C10<br />\r\n1 D11<br />\r\n0<br />\r\n0<br />\r\n0<br />\r\n0<br />\r\n0<br />\r\n&nbsp;</p>\r\n<p>输出：<br />\r\nheart.out<br />\r\n-148 +83 -138 -60<br />\r\n+200 -200 +100 0<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(596, '垃圾陷阱', 'well', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;卡门&mdash;&mdash;农夫约翰极其珍视的一条 Holsteins 奶牛&mdash;&mdash;已经落了到&ldquo;垃圾井&rdquo;中。&ldquo;垃圾井&rdquo;是农夫们扔垃圾的地方，它的深度为 D (2 &lt;= D &lt;= 100) 英尺。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;卡门想把垃圾堆起来，等到堆得与井同样高时，她就能逃出井外了。另外，卡门可以通过吃一些垃圾来维持自己的生命。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;每个垃圾都可以用来吃或堆放，并且堆放垃圾不用花费卡门的时间。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;假设卡门预先知道了每个垃圾扔下的时间 t(0&lt;t&lt;=1000) ，以及每个垃圾堆放的高度 h(1&lt;=h&lt;=25) 和吃进该垃圾能维持生命的时间 f(1&lt;=f&lt;=30) ，要求出卡门最早能逃出井外的时间，假设卡门当前体内有足够持续 10 小时的能量，如果卡门 10 小时内没有进食，卡门就将饿死。</p>\r\n<p>【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行为2个整数，D和G(1&lt;=G&lt;=100)，D为井的深度，G为被投入井的垃圾的数量。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;第二到第 G+1 行每行包括 3 个整数： T(0&lt;T&lt;=1000)，表示垃圾被投进井中的时间；F(1&lt;=F&lt;=30)，表示该垃圾能维持卡门生命的时间；和 H(1&lt;=H&lt;=25)，该垃圾能垫高的高度。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;如果卡门可以爬出陷阱，输出一个整数表示最早什么时候可以爬出；否则输出卡门最长可以存活多长时间。</p>\r\n<p>【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nwell.in<br />\r\n20 4<br />\r\n5 4 9<br />\r\n9 3 2<br />\r\n12 6 10<br />\r\n13 1 1<br />\r\n&nbsp;</p>\r\n<p>输出：<br />\r\nwell.out<br />\r\n13<br />\r\n<strong>[ </strong><strong>样例说明 ] </strong></p>\r\n<p>卡门堆放她收到的第一个垃圾： height=9 ； <br />\r\n卡门吃掉她收到的第二个垃圾，使她的生命从 10 小时延伸到 13 小时； <br />\r\n卡门堆放第 3 个垃圾， height=19 ； <br />\r\n卡门堆放第 4 个垃圾， height=20 。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(597, '交错匹配', 'crossa', '<p><b>【问题描述】</b><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;有两行自然数， UP[1..N] ， DOWN[1..M] ，如果 UP[I]=DOWN[J]=K ，那么上行的第 I 个位置的数就可以跟下行的第 J 个位置的数连一条线，称为一条 K 匹配，但是 <strong>同一个位置 </strong>的数最多只能连一条线。另外，每个 K 匹配都 <strong>必须且至多 </strong>跟一个 L 匹配相交且 <strong>K </strong><strong>&ne; </strong><strong>L </strong>！现在要求一个最大的匹配数。</p>\r\n<p>例如 ：以下两行数的最大匹配数为 8</p>\r\n<p align="center"><img alt="" width="358" height="62" src="http://192.168.1.252/os/times/2009/09noipmn/091014/cross/mn05e1.jpg" /></p>\r\n<p><br />\r\n【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第一行有两个正整数 N 和 M 。第二行 N 个 UP 的自然数，第三行 M 个 DOWN 的自然数。其中 0&lt;N 、 M&lt;=200 ， UP 、 DOWN 的数都不超过 32767 。</p>\r\n<p>【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;最大匹配数输出到 cross.in 。</p>\r\n<p>【输入输出样例1】&nbsp;<b><br />\r\n</b>输入:<br />\r\ncross.in<br />\r\n12 11<br />\r\n1 2 3 3 2 4 1 5 1 3 5 10<br />\r\n3 1 2 3 2 4 12 1 5 5 3</p>\r\n<p>输出:<br />\r\ncross.out<br />\r\n8</p>\r\n<p>【输入输出样例2】&nbsp;<b><br />\r\n</b>输入:<br />\r\ncross.in<br />\r\n4 4<br />\r\n1 1 3 3<br />\r\n1 1 3 3</p>\r\n<p>输出:<br />\r\ncross.out<br />\r\n0</p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(598, '空中楼阁', 'house', '<div style="line-height: 15pt" align="left"><b><span style="font-size: 10pt">【问题描述】</span></b><span style="font-size: 10pt"><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">话说 Z4 阴差阳错地来到了神秘岛。不久，他们发现，这是一个由 n 个小岛和一个中心岛组成的群岛，群岛之间有 m 座桥。令他们感到惊讶的是，这些桥并不是固定不变的，经较长时间的观察，发现它们会随时间作周期性的变化（即桥的两端会不断更换）。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">立方很早就留意到远远的那个中心岛了。他发现岛的上空好像有一个很巨大的东西，但实在太远了，看不清楚。此时 jakrinchose 得意地从身上拿出一个超高倍数望远镜，好像很自豪的样子，因为他平时专门用来看美女的工具此时终于派得上用场了。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">&ldquo;那是一间小屋！架在一棵好大好大的树上！&rdquo; </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">&ldquo; Terrific ！我们也许可以暂时在那安顿，好用来遮风避雨！&rdquo; </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">于是他们便决定前往中心岛上的那间空中楼阁。 Z4 的懒惰是出了名的，他们当然希望越早到越好，那么，你能帮帮他们吗？ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">为方便计算，Z4 把小岛按 1..n 编号， 0 表示中心岛。 Z4 一开始在编号为 1 的小岛上。在岛上行走的时间忽略不计，过桥的时间为 1 个单位。岛上的桥变化的周期为 T ，在 nT+i(n=0,1,2,&hellip;;i=1,2,&hellip;,T) 时刻岛上的桥为第 i 种状态，一开始的时刻为 1 。两个小岛间可能有多条桥相连。在任一时刻， Z4 可以选择过桥，也可以原地不动。当然，如果无桥可过， Z4 只能在原地等待。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件 house.in 的第一行包括三个整数 n （ 1 &lt;=n&lt;=80 ） ， m(1&lt;=m&lt;=10000) 和 T(1&lt;=T&lt;=10) ，分别表示小岛的个数，岛上桥的数量和桥改变的周期 T 。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">接下来分别描述第 1..T 种状态，每种状态有 m 行，每行有两个整数 a, b （ 0&lt;=a,b&lt;=n ），表示这种状态时小岛 a 和 b 有一条桥相连。两状态之间用一空行隔开。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输出文件 house .out 仅有一个整数，表示 Z4 最少得花多少时间到达中心岛。如果 Z4 无法到达中心岛，则输出&ldquo; Poor Z4! &rdquo;。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入输出样例1】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nhouse.in<br />\r\n4 5 2<br />\r\n1 2<br />\r\n1 3<br />\r\n1 4<br />\r\n2 0<br />\r\n4 0</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">1 3<br />\r\n1 3<br />\r\n2 3<br />\r\n4 3<br />\r\n3 0</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">输出：<br />\r\nhouse.out<br />\r\n2</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入输出样例2】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nhouse.in<br />\r\n7 3 2<br />\r\n1 2<br />\r\n1 4<br />\r\n6 0</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">2 5<br />\r\n3 6<br />\r\n4 7</span></div>\r\n<p><span style="font-size: 10pt">输出：<br />\r\nhouse.out<br />\r\nPoor Z4!</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(599, '抗击SARS', 'sars', '<div style="line-height: 15pt" align="left"><b><span style="font-size: 10pt">【问题描述】</span></b><span style="font-size: 10pt"><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">这天入夜后， jakrinchose 忽然发起烧来，伴随头晕胸闷呼吸不畅等症状&mdash;&mdash; jakrinchose 得了SARS！幸得 jakrinchose 强健的体魄（！！！！！），以及其他人有效的预防措施，总算度过一劫！ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">看来 SARS 病毒是随着 Z4 一起被吹来的。 jakrinchose 带着强烈报复心理，确定要攻克这种病毒 ! 首先就要找到它的繁殖规律。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">jakrinchose </span><span style="font-size: 10pt">以 Z4 起居的木屋作为原点建立了一个 <b>坐标轴 </b>（单位都为 m ），病毒也可以理解为坐标轴上的一点。病毒的增值规律是这样的：第一代病毒只有一个，而任何一代的病毒只会存活 1s ， 1s 后每一个病毒都会分离成 2 个下一代的子体病毒，分别沿坐标轴的正负 2 个方向移动一段距离（移动的时间忽略不计），然后又生存 1s ，再按同样的规则但移动的距离变为上一代的 1/2 再分裂。直到某一代的子体 <b>分裂移动的距离 &lt; 1m </b>时，将由于空间过度狭小难以吸收足够养分而不能存活。但任意一代的病毒侵袭的范围，都是以该病毒体所处点为中心，半径始终为 R 的圆。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">另外，有一点必须考虑的就是岛上时刻吹着沿坐标轴反向吹的风，必将会推移非典病毒。但冰雪聪明的 jakrinchose （呕心！）利用运动的相对性， <b>把风的因素理解为木屋从原点上以风速沿 x 轴正方向移动 </b>。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">现在 jakrinchose 想知道小木屋共会接受到多少代的病毒袭击。 <b>（在病毒侵袭范围以内以及距离病毒侵袭范围 0.00001 的范围内 , 小木屋也会受到病毒的袭击）。 </b></span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;输入文件 sars.in 只有一行 x,r,l,v(l&lt;=2^20) 分别是第一代病毒个体的坐标，病毒侵袭范围的半径，第一代病毒分裂出的子病毒将移动的距离以及&ldquo;木屋移动&rdquo;的速度。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出文件 sars.out 只有一个整数，表示小木屋将受到多少代非典病毒的袭击。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入输出样例】<br />\r\n&nbsp;<b><br />\r\n</b>输入： <br />\r\nsars.in<br />\r\n3 1 3 2 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">输出：<br />\r\nsars.out<br />\r\n2<br />\r\n<b>[ </b><b>样例说明 ] </b></span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">木屋第一秒从 0 移动到 2 ，而第一秒内第一代病毒侵袭的范围为以 3 为中心，半径为 1 的圆，所以木屋将受到第一代病毒的侵袭。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">木屋第二秒从 2 移动到 4 这一过程中，没经过任意一个第二代病毒的侵袭范围。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">木屋第三秒从 4 移动到 6 这一过程中，经过了以 4.5 为中心的病毒体的侵袭。所以木屋受到了第三代病毒的侵袭。 </span></div>\r\n<p><span style="font-size: 10pt">第四秒开始，病毒分裂后移动的距离为 0.75&lt;1 ，所以没有病毒能够在存活。</span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(600, '配药惊魂', 'drug', '<div style="line-height: 15pt" align="left"><b><span style="font-size: 10pt">【问题描述】</span></b><span style="font-size: 10pt"><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">话说由于 Z4 的共同努力，SARS终于被成功击退了。大家都松了一口气。回想之前，当 jakrinchose 患SARS，其它人采取急救措施时，可真有过一段胆颤心惊的经历！ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">当时 jakrinchose 表现出一点像是SARS的症状，大家都怕了！要是真的得了SARS可就麻烦了！于是一向十分冷静的立方立刻提出最好采取一些预防措施的十分明智的建议，之后 hongyan 和 worm 丢下一句&ldquo;包在我身上&rdquo;就出去了，立方只好留下来照顾 jakrinchose 。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">原来他们是找草药去了。把采来的草药调配好后，就叫 jakrinchose 喝下。谁知 jakrinchose 才喝了一两口，就突然吐了出来，并当场晕倒（正在看题的 jakrinchose 说：立方这小子真黑心）！ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">大家都当场惊呆了。幸亏又是立方，他有一位朋友是在 ZSU 学医的，立方从这位朋友处学得一点急救常识，经过一番抢救， jakrinchose 终于醒过来了。看样子他是中毒了。后经立方了解，发现他们把两种不能相混的药材一起调配了。可立方对于药物的知识有限，不知道解药该如何调配。怎么办呢？ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">立方只好决定把一切可能的配药方案先列出来，进行选择，再外出采药。也许还能弄出一些治SARS的药也说不定呢，到时 Z4 可扬名啦&hellip;&hellip; ：） 一种配药方案可以由任意 n 种（ 0&lt;n&lt;=N ， N 为药材种类数目）没有冲突的药材组成，总质量 m 满足 0&lt;m&lt;=n ，其功效 p = ( 组成它的药材的功效之和 ) &times; (m/n)&times;sqrt(n) ,(sqrt表示算术平方根)。由于立方只有一个大袋子，而时间又有限，他们把袋装满或不能再装后就必须赶回来了，不再找第二次，因此，就必须先对配药方案作慎重选择。同一种配药方案只采一份。</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">由于立方对药材比较了解，这次当然要他亲自出马了（！！！）。 hongyan 帮忙去抬药，而 worm 就留下来照顾 jakrinchose 了。现在问题是，已知所有药材种类以及它们能起的功效，所有冲突的药材对，应该选择哪些配药方案，才能使功效达到最大？ jakrinchose 危在旦夕了，你快快行动，帮帮立方他们吧！ </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输入格式】</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">输入文件 drug.in 的第一行包括三个整数 V （ 0&lt;=V&lt;=50000 ） ， N(0&lt;=N&lt;=16) 和 M ，分别表示袋子能装的总质量 (g) ，药材种类数和冲突的药材对数。第二行有 N 个不大于 100 整数，分别表示这 N 种药材的功效。接下来有 M 行，每行有两个整数，表示这两种药材是不可相混的。同一对药材只会出现一次。 </span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp; 输出文件 drug .out 仅有一个实数，表示最大功效。保留一位小数。 <br />\r\n【输入输出样例】&nbsp;<b><br />\r\n</b>输入:<br />\r\ndrug.in<br />\r\n6 4 2<br />\r\n1 2 3 4<br />\r\n1 3<br />\r\n2 4</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">输出:<br />\r\ndrug.out<br />\r\n24.5</span></div>\r\n<div style="line-height: 15pt" align="left"><span style="font-size: 10pt">【样例说明】</span></div>\r\n<p><span style="font-size: 10pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-size: 10pt">将药材按 1..N 编号。可能的配药方案有：（ 1 ），（ 2 ），（ 3 ），（ 4 ），（ 1+2 ），（ 1+4 ），（ 2+3 ），（ 3+4 ）。最终选择的配药方案分别是（不唯一）：（ 4 ） 1g ，（ 1+4 ） 1g ，（ 2+3 ） 2g ，（ 3+4 ） 2g 。其功效之和为 4+ [ （ 1+4 ） &times;(1/2) &times;sqrt(2) ] + [ (2+3) &times;sqrt(2) ] + [ (3+4) &times;sqrt(2) ] = 24.5 。 </span></p>', 1000, 128, 10, 0, '2012-04-05 16:23:53');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(601, '黑匣子', 'blackbox', '<div style="line-height: 15pt" align="left"><b>【问题描述】</b><br />\r\n我们使用黑匣子的一个简单模型。它能存放一个整数序列和一个特别的变量i。在初始时刻，黑匣子为空且i等于0。这个黑匣子能执行一系列的命令。有两类命令： ADD(x)：把元素x放入黑匣子；GET：把i加1的同时，输出黑匣子内所有整数中第i小的数。牢记第i小的数是当黑匣子中的元素已非降序排序后位于第i位的元素。<br />\r\n下面的表是一个11个命令的例子：</div>\r\n<div style="line-height: 15pt" align="left">&nbsp;</div>\r\n<table border="1" cellspacing="1" cellpadding="1" width="571" align="center" height="263">\r\n    <tbody>\r\n        <tr>\r\n            <td>编号</td>\r\n            <td>命令</td>\r\n            <td>i</td>\r\n            <td>黑匣子内容</td>\r\n            <td>输出</td>\r\n        </tr>\r\n        <tr>\r\n            <td>1</td>\r\n            <td>ADD(3)</td>\r\n            <td>0</td>\r\n            <td>3</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>GET</td>\r\n            <td>1</td>\r\n            <td>3</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr>\r\n            <td>3</td>\r\n            <td>ADD(1)</td>\r\n            <td>1</td>\r\n            <td>1,3</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>4</td>\r\n            <td>GET</td>\r\n            <td>2</td>\r\n            <td>1,3</td>\r\n            <td>3</td>\r\n        </tr>\r\n        <tr>\r\n            <td>5</td>\r\n            <td>ADD(-4)</td>\r\n            <td>2</td>\r\n            <td>-4,1,3</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>6</td>\r\n            <td>ADD(2)</td>\r\n            <td>2</td>\r\n            <td>-4,1,2,3</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>7</td>\r\n            <td>ADD(8)</td>\r\n            <td>2</td>\r\n            <td>-4,1,2,3,8</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>8</td>\r\n            <td>ADD(-1000)</td>\r\n            <td>2</td>\r\n            <td>-1000,-4,1,2,3,8</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n            <td>9</td>\r\n            <td>GET</td>\r\n            <td>3</td>\r\n            <td>-1000,-4,1,2,3,8</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>10</td>\r\n            <td>GET</td>\r\n            <td>4</td>\r\n            <td>-1000,-4,1,2,3,8</td>\r\n            <td>2</td>\r\n        </tr>\r\n        <tr>\r\n            <td>11</td>\r\n            <td>ADD(2)</td>\r\n            <td>4</td>\r\n            <td>-1000,-4,1,2,2,3,8</td>\r\n            <td>&nbsp;</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<div style="line-height: 15pt" align="left">&nbsp;</div>\r\n<div style="line-height: 15pt" align="left">现需要一个有效的算法处理给定的一系列命令。ADD和GET命令的总数至多有30000个。定义ADD命令的个数为M个，GET命令的个数为N个。我们用下面的两个整数序列描述命令序列：<br />\r\n(1)A(1)，A(2)，&hellip;，A(M)：加入黑匣子的元素序列。所有的数均为绝对值不超过2000000的整数。例如在上例中A＝(3，1，-4，2，8，-1000，2)。<br />\r\n(2)u(1)，u(2)，&hellip;，u(N)：u(i)表示第i个GET命令在第u(i)个ADD命令之后，例如在上例中，u＝(1，2，6，6)。<br />\r\n你可以假定自然数序列u(1)，u(2)，&hellip;，u(N)以非降序排列，N&le;M，且对于每一个p(1&le;p&le;N)有p&le;u(p)&le;M。<br />\r\n<br />\r\n【输入格式】 <br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 输入文件名为blackbox.in，其中第一行存放M和N的值，第二行存放A(1)，A(2)，&hellip;，<br />\r\nA(M)，第三行存放u(1)，u(2)，&hellip;，u(N)。</div>\r\n<div style="line-height: 15pt" align="left">【输出格式】 <br />\r\n&nbsp;&nbsp;&nbsp;输出黑匣子的处理结果。<br />\r\n【输入输出样例】&nbsp;<b><br />\r\n</b>输入:<br />\r\nblackbox.in<br />\r\n7 4<br />\r\n3 1 -4 2 8 -1000 2<br />\r\n1 2 6 6 </div>\r\n<div style="line-height: 15pt" align="left">输出:<br />\r\nblackbox.out<br />\r\n3 <br />\r\n3 <br />\r\n1 <br />\r\n2 </div>', 1000, 128, 6, 0, '2012-04-05 16:23:53'),
(602, '新的开始', 'newstart', '<p>&nbsp;<br />\r\n&nbsp;【题目描述】</p>\r\n<p>发展采矿业当然首先得有矿井，&nbsp; 小&nbsp; FF&nbsp; 花了上次探险获得的千分之一的财富请人在岛 <br />\r\n<br />\r\n上挖了 n 口矿井，&nbsp; 但他似乎忘记考虑的矿井供电问题&hellip;&hellip; &nbsp;<br />\r\n<br />\r\n为了保证电力的供应，&nbsp; 小 FF 想到了两种办法： &nbsp;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、&nbsp; 在这一口矿井上建立一个发电站，&nbsp; 费用为&nbsp; v（发电站的输出功率可以供给任 <br />\r\n<br />\r\n意多个矿井）。 &nbsp;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、&nbsp; 将这口矿井与另外的已经有电力供应的矿井之间建立电网，&nbsp; 费用为 p。 &nbsp;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 小 FF 希望身为&rdquo;NewBe_One&quot;&nbsp; 计划首席工程师的你帮他想出一个保证所有矿井电力供 <br />\r\n<br />\r\n应的最小花费。 &nbsp;</p>\r\n<p>【输入格式】&nbsp;</p>\r\n<p>&nbsp;第一行一个整数 n，&nbsp; 表示矿井总数。&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第 2～n+1 行，每行一个整数，&nbsp; 第 i 个数 v[i]表示在第 i 口矿井上建立发电站的费用。&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 接下来为一个 n*n 的矩阵 P，&nbsp; 其中 p[ i , j ]表示在第 i 口矿井和第 j 口矿井之间建立 <br />\r\n<br />\r\n电网的费用（数据保证有 p[ i, j ] = p[ j, i ],&nbsp; 且&nbsp; p[ i, i ]=0）。&nbsp;</p>\r\n<p>【输出格式】&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 仅一个整数，&nbsp; 表示让所有矿井获得充足电能的最小花费。&nbsp; <br />\r\n<br />\r\n&nbsp;【输入样例】&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;</p>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 2 2 2&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 0 3 3&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 3 0 4&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 3 4 0&nbsp; <br />\r\n<br />\r\n【输出样例】&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 输出样例说明：&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 小 FF 可以选择在4号矿井建立发电站然后把所有矿井都与其建立电网，总花费是&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; 3+2+2+2 = 9。&nbsp; <br />\r\n<br />\r\n【数据范围】&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于30%的数据：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&lt;=n&lt;=50;&nbsp; <br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 对于100%的数据：&nbsp;&nbsp;&nbsp; 1&lt;=n&lt;=300;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&lt;=v[i], p[i,j] &lt;=10^5.&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(603, '网球赛', 'elimination', '<p>【题目描述】</p>\r\n<p align="left">&nbsp;</p>\r\n<p>中国选手李娜获得了法网公开赛冠军，法网公开赛采用的是一种极其残酷的比赛制度：淘汰赛制。 2^n 名选手分别标号 1 ， 2 ， 3 ，&hellip;&hellip; 2^n-1 ， 2^n ，他们将要参加 n 轮的激烈角逐。每一轮中，将所有参加该轮的选手按标号从小到大排序后，第 1 位与第 2 位比赛，第 3 位与第 4 位比赛，第 5 位与第 6 位比赛&hellip;&hellip;只有每场比赛的胜者才有机会参加下一轮的比赛（不会有平局）。这样，每轮将淘汰一半的选手。 N 轮过后，只剩下一名选手，该选手即为最终的冠军。</p>\r\n<p>现在中网马上就要开始了，已知参加中网的每位选手分别与其他选手比赛获胜的概率，请你预测一下谁夺冠的概率最大。</p>\r\n<p>【输入格式】</p>\r\n<p>第一行是一个整数 n （ 1&lt;=n&lt;=10 ），表示总轮数。接下来 2^n 行，每行 2^n 个整数，第 i 行第 j 个是 pij （ 0&lt;=pij&lt;=100 ， pii=0 ， pij+pji=100 ），表示第 i 号选手与第 j 号选手比赛获胜的概率。</p>\r\n<p>【输出格式】</p>\r\n<p>一个整数 c ，表示夺冠概率最大的选手编号（若有多位选手，输出编号最小者）。</p>\r\n<p>【样例输入】</p>\r\n<p align="left">2 <br />\r\n0 90 50 50 <br />\r\n10 0 10 10 <br />\r\n50 90 0 50 <br />\r\n50 90 50 0 <br />\r\n&nbsp;</p>\r\n<p>【样例输出】</p>\r\n<p>1</p>\r\n<p align="left"><strong>提示 </strong></p>\r\n<p align="left">&nbsp;</p>\r\n<p>30% 的数据满足 n&lt;=3</p>\r\n<p align="left">&nbsp;</p>\r\n<p>100% 的数据满足 n&lt;=10</p>', 1000, 128, 10, 0, '2012-04-05 16:23:53'),
(604, '方程', 'equationz', '<p>【题目描述】</p>\r\n<p>hyc 碰到了一个难题，请你来帮忙解决。</p>\r\n<p>对于不定方程a1+a2+a3+&hellip;&hellip;+ak=g(x) ，其中K.&gt;=2,k是正整数 , x 是正整数 ,</p>\r\n<p>g(x)=x^x mod 1000 , x,k 是给定的数 . 我们要求的是这个不定方程的正整数解组数 .</p>\r\n<p>举例来说 , 当 k=3,x=2 时 ,g(x)=4, 原方程即 A1+A2+A3=4 .</p>\r\n<p>这个方程的正整数解有 3 组 . 分别为 (A1,A2,A3) = （ 2 ， 1 ， 1 ），（ 1 ， 2 ， 1 ），（ 1 ， 1 ， 2 ） .</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件 equation.in 有且只有一行 . 为用空格隔开的两个正整数 , 依次为 k,x.</p>\r\n<p>【输出文件】</p>\r\n<p>输入文件 equation.out 有且只有一行 , 为方程的正整数解组数 .</p>\r\n<p>【样例输入】</p>\r\n<p>3 2</p>\r\n<p>【样例输出】</p>\r\n<p>3</p>\r\n<p>【数据范围】</p>\r\n<p>对于 40% 的数据 , ans&lt;= 10^16 ;</p>\r\n<p>对于 100% 的数据 , k&lt;=100 , x&lt;= 2^31-1 ,k&lt;=g(x)。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(605, '运输公司', 'transz', '<p>【题目描述】</p>\r\n<p>物流公司要把一批货物从码头A运到码头B。由于货物量比较大，需要n天才能运完。货物运输过程中一般要转停好几个码头。物流公司通常会设计一条固定的运输路线，以便对整个运输过程实施严格的管理和跟踪。由于各种因素的存在，有的时候某个码头会无法装卸货物。这时候就必须修改运输路线，让货物能够按时到达目的地。但是修改路线是一件十分麻烦的事情，会带来额外的成本。因此物流公司希望能够订一个n天的运输计划，使得总成本尽可能地小。</p>\r\n<p>【输入文件】</p>\r\n<p>第一行是四个整数n（1&lt;=n&lt;=100）、m（1&lt;=m&lt;=20）、K和e。n表示货物运输所需天数，m表示码头总数，K表示每次修改运输路线所需成本。接下来e行每行是一条航线描述，包括了三个整数，依次表示航线连接的两个码头编号以及航线长度（&gt;0）。其中码头A编号为1，码头B编号为m。单位长度的运输费用为1。航线是双向的。 再接下来一行是一个整数d，后面的d行每行是三个整数P（ 1 &lt; P &lt; m）、a、b（1 &lt; = a &lt; = b &lt; = n）。表示编号为P的码头从第a天到第b天无法装卸货物（含头尾）。同一个码头有可能在多个时间段内不可用。但任何时间都存在至少一条从码头A到码头B的运输路线。</p>\r\n<p>【输出文件】</p>\r\n<p>包括了一个整数表示最小的总成本。总成本=n天运输路线长度之和+K*改变运输路线的次数。</p>\r\n<p>【样例输入】</p>\r\n<p>5 5 10 8 <br />\r\n1 2 1 <br />\r\n1 3 3 <br />\r\n1 4 2 <br />\r\n2 3 2 <br />\r\n2 4 4 <br />\r\n3 4 1 <br />\r\n3 5 2 <br />\r\n4 5 2 <br />\r\n4 <br />\r\n2 2 3 <br />\r\n3 1 1 <br />\r\n3 3 3 <br />\r\n4 4 5 <br />\r\n&nbsp;</p>\r\n<p>【样例输出】</p>\r\n<p>32</p>\r\n<p>【样例说明】</p>\r\n<p>前三天走1&mdash;4&mdash;5，后两天走1&mdash;3&mdash;5，这样总成本为(2+2)*3+(3+2)*2+10=32 .</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(606, '燃烧', 'firez', '<p>【问题描述】</p>\r\n<p>Tom 是调皮的孩子，特别喜欢玩火，现在他手上有若干根长度分别为 1 和 <img alt="" src="http://192.168.1.252/os/times/2008/noizk/2008p-5/fire/1.gif" />的木棍，还有一张不能燃烧的平板，他把平板划分成长度为 1 的单元格，并标上座标。然后按以下规则把平板上的木棍组成一个连通图：木棍的两端必须放在单元格的顶点上。即长度为 1 的木棍放在单元格的某一边上，长度为 <img alt="" src="http://192.168.1.252/os/times/2008/noizk/2008p-5/fire/1.gif" />的木棍放在单元格的对角线上。</p>\r\n<p align="left"><img alt="" width="460" height="359" src="http://192.168.1.252/os/times/2008/noizk/2008p-5/fire/2.png" /></p>\r\n<p>Tom 的点火规则是，只能从木棍的两端点火，而不能从木棍的中间点火。 如图 ，不能在 A 点点火，但在 C 点或 B 点点火都是充许的。点火后，火会沿着木棍向前燃烧（每根都有自己的燃烧速度），并能点燃与它相接的其它木棍。</p>\r\n<p>任务： 写一程序计算从哪里开始点火，使得燃烧的总时间最短，输出最短时间。</p>\r\n<p>Input Data</p>\r\n<p>输入文件第一行为一个正整数 N ，表示组成图形的木棍数目，后面共有 N 行，每行 5 个数： X1 Y1 X2 Y2 T , 其中（ X1 , Y1 ） 和（ X2 , Y2 ）分别表示木棍两端的坐标， T 表示木棍燃烧时间，是指从木棍的某一端点火燃烧到别一端，燃完所需的时间。</p>\r\n<p>Output Data</p>\r\n<p>输出文件是一个保留 4 位小数的实数，表示所有木棍完全燃烧的最少时间。</p>\r\n<p>约束 1 &le;n&le;40</p>\r\n<p>保证图形是连通的，所有的木棍长度都是 1 或 <img alt="" src="http://192.168.1.252/os/times/2008/noizk/2008p-5/fire/1.gif" />，没有任何两根木棍重合 .</p>\r\n<p>-200&le; X1, Y1, X2, Y2 &le;200; 0&le; T &le; 10^7 .</p>\r\n<p>如果你的输出结果与标准答案相差小于 0.001 ，则认为你的结果正确。</p>\r\n<p>样例 1</p>\r\n<table border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>firez.in</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>firez.out</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>解释</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>1</p>\r\n            <p>0 0 1 1 1</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>1.0000</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>从任一端点火都行，燃烧时间都是 1</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>样例 2</p>\r\n<table border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>firez.in</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>firez.out</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>解释</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>5</p>\r\n            <p>0 0 0 1 1</p>\r\n            <p>1 0 0 1 10</p>\r\n            <p>0 0 1 0 1</p>\r\n            <p>0 0 1 1 1</p>\r\n            <p>2 2 1 1 1</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>3.2500</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>在 (0,0) 位置点火</p>\r\n            <p>木棍 1, 3 和 4 将被点燃，燃烧 0.5 分钟后，木棍 2 将被从中间点燃向两端燃烧，再过 0.5 分钟，木棍 1, 3, 4 将被完全燃烧，木棍 5 将被点燃并在 1 分钟后燃烧完 ( 比木棍 2 早燃完 ) 。</p>\r\n            <p>木棍 2 从中间向两端燃烧 0.5 分钟以后，变成两小段，每段的燃烧时间是 4.5 分钟。但因为此时两小段木棍的另一端也同时被点燃，燃烧速度变成原来的两倍，还需 2.25 分钟的燃烧时间， 所以总时间： 1 + 2 . 25 = 3 . 25</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>样例 3</p>\r\n<table border="1" cellspacing="0" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>firez.in</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>firez.out</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>解释</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="103">\r\n            <p>3</p>\r\n            <p>1 1 1 2 10</p>\r\n            <p>1 2 2 2 10</p>\r\n            <p>1 1 2 2 50</p>\r\n            </td>\r\n            <td valign="top" width="84">\r\n            <p>35.0000</p>\r\n            </td>\r\n            <td valign="top" width="324">\r\n            <p>在 (1,2) 位置点火， 木棍 (1 1, 1 2) 和 (1 2, 2 2) 将燃烧 10 分钟。 . 最后一根木棍在 10 分钟后从两端被点燃，燃烧时间为 25 分钟。</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p><br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(607, '产生01串', 'infinit', '<p align="left">【问题描述】</p>\r\n<p align="left">我们按以下方式产生序列： <br />\r\n1、 开始时序列是： &quot; 1 &quot; ； <br />\r\n2、 每一次变化把序列中的 &quot; 1 &quot; 变成 &quot; 10 &quot; ，&quot; 0 &quot; 变成 &quot; 1 &quot;。 <br />\r\n经过无限次变化，我们得到序列&quot; 1011010110110101101... &quot;。 <br />\r\n总共有 Q 个询问，每次询问为：在区间A和B之间有多少个1。</p>\r\n<p align="left">任务 写一个程序回答 Q个询问</p>\r\n<p align="left">输入 第一行为一个整数 Q，后面有Q行，每行两个数用空格隔开的整数 a , b 。</p>\r\n<p align="left">输出 共 Q行，每行一个回答</p>\r\n<p align="left">约定</p>\r\n<ul>\r\n    <li>1 &lt;= Q &lt;= 5000</li>\r\n    <li>1 &lt;= a &lt;= b &lt; 2^63</li>\r\n</ul>\r\n<p align="left">样例</p>\r\n<p>\r\n<table border="1" cellpadding="0">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="50%">\r\n            <p align="left">infinit.in</p>\r\n            </td>\r\n            <td valign="top" width="50%">\r\n            <p align="left">infinit.out</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="50%">\r\n            <p align="left">1 <br />\r\n            2 8</p>\r\n            </td>\r\n            <td valign="top" width="50%">\r\n            <p align="left">4</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(608, '删数', 'remove', '<p>【问题描述】</p>\r\n<p>有 N 个不同的正整数数 x 1 , x 2 , ... x N 排成一排，我们可以从左边或右边去掉连续的 i 个数（只能从两边删除数）， 1&lt;=i&lt;=n ，剩下 N-i 个数，再把剩下的数按以上操作处理，直到所有的数都被删除为止。</p>\r\n<p>每次操作都有一个操作价值，比如现在要删除从 i 位置到 k 位置上的所有的数。操作价值为 |x i &ndash; x k |*(k-i+1) ，如果只去掉一个数，操作价值为这个数的值。</p>\r\n<p>任务</p>\r\n<p>如何操作可以得到最大值，求操作的最大价值。</p>\r\n<p>Input Data</p>\r\n<p>输入文件 remove.in 的第一行为一个正整数 N ，第二行有 N 个用空格隔开的 N 个不同的正整数。</p>\r\n<p>Output Data</p>\r\n<p>输出文件 remove.out 包含一个正整数，为操作的最大值</p>\r\n<p>约束和提示</p>\r\n<p>3&lt;=N&lt;=100 <br />\r\nN 个操作数为 1..1000 之间的整数。 <br />\r\n样例</p>\r\n<p>remove.in</p>\r\n<p>6 <br />\r\n54 29 196 21 133 118</p>\r\n<p>remove.out</p>\r\n<p>768</p>\r\n<p>说明：经过 3 次操作可以得到最大值，第一次去掉前面 3 个数 54 、 29 、 196 ，操作价值为 426 。第二次操作是在剩下的三个数（ 21 133 118 ）中去掉最后一个数 118 ，操作价值为 118 。第三次操作去掉剩下的 2 个数 21 和 133 ，操作价值为 224 。操作总价值为 426+118+224=768 。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(609, '分裂', 'mushroom', '<p>【题目描述】</p>\r\n<p>　　小m在宇宙中发现了一种奇怪的蘑菇，它每天都会固定分裂一次，长度为x的蘑菇会分裂成两个长度分别为x-1和x+l的蘑菇，但是长度为0的蘑菇是不存在的，所以长度为1的蘑菇只能生长成长度为2的蘑菇。　　现在小m第一天有一个长度为2的蘑菇，他想知道第n天他有多少个蘑菇。</p>\r\n<p>【输入格式】</p>\r\n<p>　　一个整数n，意义同上</p>\r\n<p>【输出格式】</p>\r\n<p>　　一个整数ans</p>\r\n<p>【样例输入】</p>\r\n<p>mushroom.in</p>\r\n<p>4</p>\r\n<p>【样例输出】</p>\r\n<p>mushroom.out　　</p>\r\n<p>6</p>\r\n<p>【数据范围】</p>\r\n<p>1&le;n&le;10000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(610, '数对的个数', 'dec', '<p>Description<br />\r\n出题是一件痛苦的事情！<br />\r\n题目看多了也有审美疲劳，于是我舍弃了大家所熟悉的A+B Problem，改用A-B了哈哈！<br />\r\n好吧，题目是这样的：给出一串数以及一个数字C，要求计算出所有A-B=C的数对的个数。（不同位置的数字一样的数对算不同的数对）<br />\r\nInput Format<br />\r\n第一行包括2个非负整数N和C，中间用空格隔开。<br />\r\n第二行有N个整数，中间用空格隔开，作为要求处理的那串数。<br />\r\nOutput Format<br />\r\n输出一行，表示该串数中包含的所有满足A-B=C的数对的个数。<br />\r\nSample Input<br />\r\n4 1<br />\r\n1 1 2 3<br />\r\nSample Output<br />\r\n3<br />\r\nData Limit<br />\r\n对于90%的数据，N &lt;= 2000；<br />\r\n对于100%的数据，N &lt;= 200000。<br />\r\n所有输入数据都在longint范围内。<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(611, '机房', 'orz', '<p>Description<br />\r\n神牛有很多&hellip;当然&hellip;每个同学都有自己衷心膜拜的神牛.<br />\r\n某学校有两位神牛，神牛甲和神牛乙。新入学的N位同学们早已耳闻他们的神话。所以，已经衷心地膜拜其中一位了。现在，老师要给他们分机房。但是，要么保证整个机房都是同一位神牛的膜拜者，或者两个神牛的膜拜者人数差不超过M。另外，现在N位同学排成一排，老师只会把连续一段的同学分进一个机房。老师想知道，至少需要多少个机房。<br />\r\nInput Format<br />\r\n输入文件第一行包括N和M。<br />\r\n之后N行，每行一个整数，1表示神牛甲的崇拜者，2表示神牛乙的崇拜者。<br />\r\nOutput Format<br />\r\n输出一个整数，表示最小需要机房的数量。<br />\r\nSample Input<br />\r\n5 1<br />\r\n2<br />\r\n2<br />\r\n1<br />\r\n2<br />\r\n2<br />\r\nSample Output<br />\r\n2<br />\r\nData Limit<br />\r\n对于30%的数据，有1 &le; N ,M&le; 50；<br />\r\n对于100%的数据，有1 &le; N,M &le; 2500。<br />\r\n&nbsp;</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(612, '摩托车游戏', 'carz', '<p><strong>[问题描述] </strong></p>\r\n<p align="left">晚会上大家在玩一款&ldquo;暴力摩托&rdquo;的游戏，它拥有非常逼真的画面和音响效果，如疾驰而过的汽车呼啸声，摩托车的引擎声和转弯时轮胎与地面摩擦而产生的声音。而且它在游戏中加入了对抗成份，比赛中你可以使用拳、脚去干扰对方，使其落后于你，是不是很卑鄙啊 ? 游戏中千万不能手下留情，因为对手会主动攻击你。如果遇到开摩托车的警察，虽然也可以对他踢上一脚，但可得小心点呀，万一被他们捉住了，那就 GAME OVER 啦!</p>\r\n<p align="left">当然了，车子总是要加油的咯，已知赛道长 S公里（S&le;10000整数，且为10的倍数），赛车的油耗Q=1，即 1公里 路耗 1个单位的油。Q不变，赛车的油箱为无穷大，同时在沿途的任何地方都可以加油。 约定，每次加油的数量为整数，且为 10的倍数，赛车的速度与赛车加油后的总油量有关。其关系如下表列出：</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>加油量</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>车速（公里 / 小时）</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>&le;10</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>100</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>（ 10 ， 20 ]</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>90</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>（ 20 ， 30 ]</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>80</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>（ 30 ， 40 ]</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>75</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="127">\r\n            <p>（ 40 ， + &infin; ）</p>\r\n            </td>\r\n            <td valign="top" width="168">\r\n            <p>70</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>&nbsp;</p>\r\n<p>同时，汽车每加油一次需要耗费 T分钟（T&lt;=100不论加油多少，开始时的加油不计时间）</p>\r\n<p>当 S，T给出之后，选择一个最优的加油方案。使汽车以最少时间跑完全程。</p>\r\n<p>例如：当 S=40，T=6（分钟），加油的方案有许多种，列出一些：</p>\r\n<p>1）起点加油40，用时40/75&asymp;0.53小时</p>\r\n<p>2）起点加油20，中途加20，用时20/90+20/90+6/60（化为小时）&asymp; 0.54 小时</p>\r\n<p><strong>[输入文件] </strong></p>\r\n<p>一行，为两个整数 S、T。</p>\r\n<p><strong>[输出文件] </strong></p>\r\n<p>输出一行，为 最少用时（保留二位小数）</p>\r\n<p><strong>[输入样例] </strong></p>\r\n<p align="left">40 6</p>\r\n<p><strong>[输出样例] </strong></p>\r\n<p>0.53</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(613, '火车站饭店', 'profitz', '<p>【题目描述】</p>\r\n<p>政府邀请了你在火车站开饭店，但不允许同时在两个相连的火车站开。任意两个火车站有且只有一条路径，每个火车站最多有 50 个和它相连接的火车站。</p>\r\n<p>告诉你每个火车站的利润，问你可以获得的最大利润为多少？</p>\r\n<p>例如下图是火车站网络：</p>\r\n<p align="center"><img height="212" width="430" alt="" src="http://192.168.1.252/os/times/2008/noizk/2008-6/profit/2008-6-5.jpg" /></p>\r\n<p>最佳投资方案是 1 ， 2 ， 5 ， 6 这 4 个火车站开饭店可以获得的利润为 90.</p>\r\n<p>【输入格式】</p>\r\n<p>第一行输入整数 N(&lt;=100000), 表示有 N 个火车站，分别用 1,2,&hellip;&hellip;..,N 来编号。接下来 N 行，每行一个整数表示每个站点的利润，接下来 N-1 行描述火车站网络，每行两个整数，表示相连接的两个站点。</p>\r\n<p>【输出格式】</p>\r\n<p>输出一个整数表示可以获得的最大利润。</p>\r\n<p>【样例输入】</p>\r\n<p>6 <br />\r\n10 <br />\r\n20 <br />\r\n25 <br />\r\n40 <br />\r\n30 <br />\r\n30 <br />\r\n4 5 <br />\r\n4 6 <br />\r\n3 4 <br />\r\n1 3 <br />\r\n2 3</p>\r\n<p>【样例输出】</p>\r\n<p>90</p>', 1000, 128, 10, 0, '2012-04-05 16:23:54'),
(614, '游历校园', 'sent', '<p>【问题描述】</p>\r\n<p>刷完牙洗完脸，黄黄同学就要上课去了。可是黄黄同学每次去上课时总喜欢把校园里面的每条路都走一遍，当然，黄黄同学想每条路也只走一遍。我们一般人很可能对一些地图是办不到每条路走一遍且仅走一遍的，但是黄黄同学有个传送机，他可以任意地将一个、人从一个路口传送到任意一个路口。</p>\r\n<p>可是，每传送一次是需要耗费巨大的内力的，黄黄同学希望可以用最少的传送次数完成游遍校园，你能帮助他吗 ?</p>\r\n<p>因为黄黄同学只是游历校园，于是我们可以认为黄黄同学可以从任意点开始，到任意点结束。</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件 sent.in 的第一行有一个整数 N ，表示黄黄的校园里一共有多少路口。</p>\r\n<p>第二行有一个整数 M ，表示路口之间有 M 条路。</p>\r\n<p>后面 M 行每行两个整数 a 、 b 表示 a 与 b 之间有一条路，且路是双向的。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件 sent.out 只包括一个整数 s ，表示黄黄同学最少的传送次数。</p>\r\n<p>【样例输入】</p>\r\n<p>3</p>\r\n<p>2</p>\r\n<p>1 2</p>\r\n<p>2 3</p>\r\n<p>【样例输出】</p>\r\n<p>0</p>\r\n<p>【数据范围】</p>\r\n<p>对于 100 ％的数据，保证 N &le; 100000 ， K &le; 500000 ， 1 &le; a ， b &le; N 。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(615, '韩国明星', 'star', '<h3>【问题描述】</h3>\r\n<p><br />\r\n在LazyCat同学的影响下，Roby同学开始听韩国的音乐，并且越来越喜欢H.o.T，尤其喜欢安七炫和Tony，可是，爱学习爱思考的Roby同学想，如果以后喜欢的韩星越来越多怎么办呢？Roby怎么知道Roby最喜欢谁呢（Roby都不知道谁知道呢。。。。）？ <br />\r\n于是，Roby同学求助于你。 <br />\r\nRoby首先会给你一张表，表上是所有他认识的韩星的名字，一开始他对所有韩星的好感度都为0。 <br />\r\n然后Roby会告诉你一些他对某个韩星的好感度变化。 <br />\r\n最后，请按照Roby对他们好感从大到小的顺序输出他们。 <br />\r\n&nbsp;</p>\r\n<p>[输入] <br />\r\n第一行一个个数N，表示Roby知道的韩星数目。 <br />\r\n后面有N行，表示每一个Roby认识的韩星的名字。 <br />\r\n再下面一行一个数K。 <br />\r\n接下来2*K行，每两行为一组，上面一行为韩星的名字Name，下面一行为好感度变化量Change。 <br />\r\n&nbsp;</p>\r\n<p>[输出] <br />\r\nN*2行，依据韩星们的受Roby好感度从大到小的顺序输出，每两行为一组，第一行输出韩星的名字，第二行输出受Roby的好感度。</p>\r\n<p>[样例输入] <br />\r\n3 <br />\r\nHhIsaGay <br />\r\nZcLoveStudy <br />\r\nOneBlueOne <br />\r\n5 <br />\r\nZcLoveStudy <br />\r\n100 <br />\r\nOneBlueOne <br />\r\n8888 <br />\r\nZcLoveStudy <br />\r\n20 <br />\r\nOneBlueOne <br />\r\n8888 <br />\r\nHhIsaGay <br />\r\n-1000</p>\r\n<p><br />\r\n[样例输出] <br />\r\nOneBlueOne <br />\r\n17776 <br />\r\nZcLoveStudy <br />\r\n120 <br />\r\nHhIsaGay <br />\r\n-1000</p>\r\n<p>[数据范围] <br />\r\n对于20%的数据，保证N&lt;=100，K&lt;=100. <br />\r\n对于40%的数据，保证N&lt;=10000，K&lt;=30000. <br />\r\n对于100%的数据，保证N&lt;=100000　-8888&lt;=Change&lt;=8888　K&lt;=100000.</p>\r\n<p>[时限] <br />\r\n2S</p>', 2000, 128, 10, 0, '2012-04-05 16:23:55'),
(616, '整理牙刷', 'put', '<h3>【问题描述】</h3>\r\n<p>众所周知，XW同学早晨起来是要刷牙的。</p>\r\n<p>XW同学有 N 支牙刷，又有 N 个牙刷套 , 开始的时候，一支牙刷对应放在一个牙刷套中。可是有一天，XW同学把所有牙刷套里的牙刷都拿出来，玩了一会儿，他又要把所有的牙刷都放回去。可是，他忽然一想，我可不可以使得没有任何一支牙刷放回它原来的牙刷套里面呢 ?</p>\r\n<p>XW同学努力试了很久，却一直没有成功过一次。于是他断定这个要求是无法达成的，你怎么认为的呢 ?</p>\r\n<p>【输入文件】</p>\r\n<p>输入文件 put.in 只包括一个整数 N ，表示牙刷和牙刷套的总数。</p>\r\n<p>【输出文件】</p>\r\n<p>输出文件 put.out ，如果存在满足要求的方法，输出放法方案总数 L 。因为方案总数可能比较大，所以你可以将答案 Mod 1206 后再输出。如果不存在满足要求的方法，则输出 &quot;No Solution!&rdquo;</p>\r\n<p>【样例输入】</p>\r\n<p>3</p>\r\n<p>【样例输出】</p>\r\n<p>2</p>\r\n<p>【数据范围】</p>\r\n<p>对于 40 ％的数据，保证 N &le; 9</p>\r\n<p>对于 100 ％的数据，保证 N &le; 100000</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(617, '吉祥数', 'ghillie', '<p><strong>[问题描述] </strong></p>\r\n<p>为了迎接圣诞，信息学兴趣小组的同学在辅导老师的带领下，举办了一个盛大的晚会，晚会的第一项内容是做游戏：猜数。老师给每位同学发一张卡片，每张卡片上都有一个编号 (此编号为非负数，且小于255)，每个编号互不相同。老师制定了以下的游戏规则：第一轮，每位同学将自己卡片上编号的各位数字进行平方后再相加得到一组新数，编号在这组新数中出现的同学淘汰出局，第二轮，余下的同学再将编号的各位数字进行立方相加得到一组新数，编号在这组新数中出现的同学再淘汰出局，第三轮，余下的同学再将编号的各位数字进行4次方相加得到一组新数，编号在这组新数中出现的同学再淘汰出局，&hellip;&hellip;，以此类推，经过n轮后，仍留下来的同学，将获得圣诞特别礼物，卡片上的数即为2011年吉祥数。(假定班级人数不超过200人)</p>\r\n<p><strong>[输入文件] </strong></p>\r\n<p>输入文件 ghillie .in 有两行，第1行为1个正整数n(n&lt;8)，表示有n轮游戏,第二行是卡片上互不相同的编号。</p>\r\n<p>输出：剩下来的各个吉祥数，按从小到大顺序输出，每两个数之间有一个空格。</p>\r\n<p><strong>[输出文件] </strong></p>\r\n<p>输出文件 ghillie .out 是 1 行，为 剩下来的各个吉祥数，按从小到大顺序输出，每两个数之间有一个空格。</p>\r\n<p><strong>[输入样例] </strong></p>\r\n<p>1</p>\r\n<p>24 123 2 12 20 14 4 6 36 72</p>\r\n<p><strong>[输出样例] </strong></p>\r\n<p>2 6 12 24 72 123</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(618, '最优分解方案', 'best', '<p><strong>[问题描述] </strong></p>\r\n<p>经过第一轮的游戏，不少同学将会获得圣诞特别礼物，但这时细心的数学课代表发现了一个问题：留下来的人太多而使礼物数量可能不够，为此，加试了一道数学题：将一个正整数 n 分解成若干个互不相等的正整数的和，使得这些数的乘积最大，当主持人报出一个 n 后，请你立即将这个最大值报出来，现请你帮你的好友编一个程序来解决这个问题。</p>\r\n<p><strong>[输入文件] </strong></p>\r\n<p>输入文件 best.in 中只有 1 个数 n （其中 1&lt;=n&lt;=1000 ）。</p>\r\n<p><strong>[输出文件] </strong></p>\r\n<p>输出文件 best.out 中也是一个数，是乘积的最大值。</p>\r\n<p><strong>[输入样例] </strong></p>\r\n<p>7</p>\r\n<p><strong>[输出样例] </strong></p>\r\n<p>12</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(619, '传话', 'messagez', '<p><strong>[问题描述] </strong></p>\r\n<p>兴趣小组的同学来自各个学校，为了增加友谊，晚会上又进行了一个传话游戏，如果 a 认识 b ，那么 a 收到某个消息，就会把这个消息传给 b ，以及所有 a 认识的人。</p>\r\n<p>如果 a 认识 b ， b 不一定认识 a 。</p>\r\n<p>所有人从 1 到 n 编号，给出所有&ldquo;认识&rdquo;关系，问如果 i 发布一条新消息，那么会不会经过若干次传话后，这个消息传回给了 i ， 1&lt;=i&lt;=n 。</p>\r\n<p><strong>[输入文件] </strong></p>\r\n<p>输入文件 message.in 中的第一行是两个数 n(n&lt;1000) 和 m(m&lt;10000) ，两数之间有一个空格，表示人数和认识关系数。</p>\r\n<p>接下来的 m 行，每行两个数 a 和 b ，表示 a 认识 b 。 1&lt;=a, b&lt;=n 。认识关系可能会重复给出，但一行的两个数不会相同。</p>\r\n<p><strong>[输出文件] </strong></p>\r\n<p>输出文件 message.out 中一共有 n 行，每行一个字符 T 或 F 。第 i 行如果是 T ，表示 i 发出一条新消息会传回给 i ；如果是 F ，表示 i 发出一条新消息不会传回给 i 。</p>\r\n<p><strong>[输入样例] </strong></p>\r\n<p>4 6<br />\r\n1 2 <br />\r\n2 3 <br />\r\n4 1 <br />\r\n3 1 <br />\r\n1 3 <br />\r\n2 3</p>\r\n<p><strong>[输出样例] </strong></p>\r\n<p>T <br />\r\nT <br />\r\nT <br />\r\nF</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(620, '铺地毯', 'carpet', '<p>【问题描述】 <br />\r\n为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 n张地毯，编号从 1 到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。<br />\r\n地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。 <br />\r\n<br />\r\n【输入】 <br />\r\n输入文件名为 carpet.in。 <br />\r\n输入共 n+2行。 <br />\r\n第一行，一个整数 n，表示总共有 n张地毯。 <br />\r\n接下来的 n行中，第 i+1行表示编号 i的地毯的信息，包含四个正整数 a，b，g，k，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）以及地毯在 x 轴和 y轴方向的长度。 <br />\r\n第 n+2 行包含两个正整数 x 和 y，表示所求的地面的点的坐标（x，y） 。 <br />\r\n【输出】 <br />\r\n输出文件名为 carpet.out。 <br />\r\n输出共 1 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。 <br />\r\n<br />\r\n【输入输出样例 1】</p>\r\n<p>carpet.in</p>\r\n<p>3 <br />\r\n1 0 2 3 <br />\r\n0 2 3 3 <br />\r\n2 1 3 3 <br />\r\n2 2</p>\r\n<p>carpet.out</p>\r\n<p>3</p>\r\n<p>【输入输出样例说明】 <br />\r\n如下图，1 号地毯用实线表示，2 号地毯用虚线表示，3 号用双实线表示，覆盖点（2，<br />\r\n2）的最上面一张地毯是 3 号地毯。</p>\r\n<p><img alt="1" src="http://192.168.1.252/os/times/2011/11noip/tg/carpet/carpet-1.jpg" width="435" height="395" /></p>\r\n<p>【输入输出样例 2】</p>\r\n<p>carpet.in</p>\r\n<p>3 <br />\r\n1 0 2 3 <br />\r\n0 2 3 3 <br />\r\n2 1 3 3 <br />\r\n4 5 <br />\r\n&nbsp;</p>\r\n<p>carpet.out</p>\r\n<p>-1</p>\r\n<p>【输入输出样例说明】 <br />\r\n如上图，1 号地毯用实线表示，2 号地毯用虚线表示，3 号用双实线表示，点（4，5）<br />\r\n没有被地毯覆盖，所以输出-1。 <br />\r\n<br />\r\n【数据范围】 <br />\r\n对于 30%的数据，有 n&le;2； <br />\r\n对于 50%的数据，0&le;a, b, g, k&le;100； <br />\r\n对于 100%的数据，有 0&le;n&le;10,000，0&le;a, b, g, k&le;100,000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(621, '选择客栈', 'hotel', '<p>【问题描述】</p>\r\n<p>丽江河边有n 家很有特色的客栈，客栈按照其位置顺序从1 到n 编号。每家客栈都按照某一种色调进行装饰（总共k 种，用整数0 ~ k-1 表示），且每家客栈都设有一家咖啡店，每家咖啡店均有各自的最低消费。<br />\r\n两位游客一起去丽江旅游，他们喜欢相同的色调，又想尝试两个不同的客栈，因此决定分别住在色调相同的两家客栈中。晚上，他们打算选择一家咖啡店喝咖啡，要求咖啡店位于两人住的两家客栈之间（包括他们住的客栈），且咖啡店的最低消费不超过p。<br />\r\n他们想知道总共有多少种选择住宿的方案，保证晚上可以找到一家最低消费不超过p元的咖啡店小聚。</p>\r\n<p>【输入】<br />\r\n输入文件hotel.in，共n+1 行。<br />\r\n第一行三个整数n，k，p，每两个整数之间用一个空格隔开，分别表示客栈的个数，色调的数目和能接受的最低消费的最高值；<br />\r\n接下来的n 行，第i+1 行两个整数，之间用一个空格隔开，分别表示i 号客栈的装饰色调和i 号客栈的咖啡店的最低消费。</p>\r\n<p>【输出】<br />\r\n输出文件名为hotel.out。</p>\r\n<p>输出只有一行，一个整数，表示可选的住宿方案的总数。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>hotel.in</p>\r\n<p>5 2 3<br />\r\n0 5<br />\r\n1 3<br />\r\n0 2<br />\r\n1 4<br />\r\n1 5</p>\r\n<p>hotel.out</p>\r\n<p>3</p>\r\n<p>【输入输出样例说明】</p>\r\n<table border="1" width="200">\r\n    <tbody>\r\n        <tr>\r\n            <td>客栈编号 </td>\r\n            <td>①</td>\r\n            <td>②</td>\r\n            <td>③</td>\r\n            <td>④</td>\r\n            <td>⑤</td>\r\n        </tr>\r\n        <tr>\r\n            <td>色调</td>\r\n            <td>0</td>\r\n            <td>1</td>\r\n            <td>0</td>\r\n            <td>1</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>最低消费</td>\r\n            <td>5</td>\r\n            <td>3</td>\r\n            <td>2</td>\r\n            <td>4</td>\r\n            <td>5</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>2 人要住同样色调的客栈，所有可选的住宿方案包括：住客栈①③，②④，②⑤，④⑤，但是若选择住4、5 号客栈的话，4、5 号客栈之间的咖啡店的最低消费是4，而两人能承受的最低消费是3 元，所以不满足要求。因此只有前3 种方案可选。</p>\r\n<p>【数据范围】<br />\r\n对于30%的数据，有n&le;100；<br />\r\n对于50%的数据，有n&le;1,000；<br />\r\n对于100%的数据，有2&le;n&le;200,000，0&lt;k&le;50，0&le;p&le;100， 0&le;最低消费&le;100。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(622, '玛雅游戏', 'mayan', '<p>【问题描述】<br />\r\nMayan puzzle 是最近流行起来的一个游戏。游戏界面是一个7 行5 列的棋盘，上面堆放着一些方块，方块不能悬空堆放，即方块必须放在最下面一行，或者放在其他方块之上。游戏通关是指在规定的步数内消除所有的方块，消除方块的规则如下：<br />\r\n1、 每步移动可以且仅可以沿横向（即向左或向右）拖动某一方块一格：当拖动这一方块时，如果拖动后到达的位置（以下称目标位置）也有方块，那么这两个方块将交换位置（参见输入输出样例说明中的图6 到图7）；如果目标位置上没有方块，那么被拖动的方块将从原来的竖列中抽出，并从目标位置上掉落（直到不悬空，参见下面图1 和图2）；</p>\r\n<p><img alt="" width="761" height="304" src="http://192.168.1.252/os/times/2011/11noip/tg/mayan/mayan-1.JPG" /></p>\r\n<p>2、 任一时刻，如果在一横行或者竖列上有连续三个或者三个以上相同颜色的方块，则它们将立即被消除（参见图1 到图3）。<br />\r\n注意：<br />\r\na) 如果同时有多组方块满足消除条件，几组方块会同时被消除（例如下面图4，三个颜色为1 的方块和三个颜色为2 的方块会同时被消除，最后剩下一个颜色为2 的方块）。<br />\r\nb) 当出现行和列都满足消除条件且行列共享某个方块时，行和列上满足消除条件的所有方块会被同时消除（例如下面图5 所示的情形，5 个方块会同时被消除）。</p>\r\n<p><img alt="" width="745" height="171" src="http://192.168.1.252/os/times/2011/11noip/tg/mayan/mayan-2.JPG" /></p>\r\n<p>3、 方块消除之后，消除位置之上的方块将掉落，掉落后可能会引起新的方块消除。注意：掉落的过程中将不会有方块的消除。<br />\r\n上面图1 到图3 给出了在棋盘上移动一块方块之后棋盘的变化。棋盘的左下角方块的坐标为（0, 0），将位于（3, 3）的方块向左移动之后，游戏界面从图1 变成图2 所示的状态，此时在一竖列上有连续三块颜色为4 的方块，满足消除条件，消除连续3 块颜色为4 的方块后，上方的颜色为3 的方块掉落，形成图3 所示的局面。</p>\r\n<p>【输入】<br />\r\n输入文件mayan.in，共6 行。<br />\r\n第一行为一个正整数n，表示要求游戏通关的步数。<br />\r\n接下来的5 行，描述7*5 的游戏界面。每行若干个整数，每两个整数之间用一个空格隔开，每行以一个0 结束，自下向上表示每竖列方块的颜色编号（颜色不多于10 种，从1 开始顺序编号，相同数字表示相同颜色）。<br />\r\n输入数据保证初始棋盘中没有可以消除的方块。</p>\r\n<p>【输出】<br />\r\n输出文件名为mayan.out。</p>\r\n<p>如果有解决方案，输出n 行，每行包含3 个整数x，y，g，表示一次移动，每两个整数之间用一个空格隔开，其中（x，y）表示要移动的方块的坐标，g 表示移动的方向，1 表示向右移动，-1 表示向左移动。注意：多组解时，按照x 为第一关健字，y 为第二关健字，1优先于-1，给出一组字典序最小的解。游戏界面左下角的坐标为（0，0）。<br />\r\n如果没有解决方案，输出一行，包含一个整数-1。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>mayan.in</p>\r\n<p>3<br />\r\n1 0<br />\r\n2 1 0<br />\r\n2 3 4 0<br />\r\n3 1 0<br />\r\n2 4 3 4 0</p>\r\n<p>mayan.out</p>\r\n<p>2 1 1<br />\r\n3 1 1<br />\r\n3 0 1</p>\r\n<p>【输入输出样例说明】<br />\r\n按箭头方向的顺序分别为图6 到图11</p>\r\n<p><img alt="" width="734" height="515" src="http://192.168.1.252/os/times/2011/11noip/tg/mayan/mayan-3.JPG" /></p>\r\n<p>样例输入的游戏局面如上面第一个图片所示，依次移动的三步是：（2，1）处的方格向右移动，（3，1）处的方格向右移动，（3，0）处的方格向右移动，最后可以将棋盘上所有方块消除。</p>\r\n<p><br />\r\n【数据范围】<br />\r\n对于30%的数据，初始棋盘上的方块都在棋盘的最下面一行；<br />\r\n对于100%的数据，0 &lt; n&le;5。</p>', 3000, 128, 10, 0, '2012-04-05 16:23:55'),
(623, '数字反转', 'reverse', '<p>【问题描述】<br />\r\n给定一个整数，请将该数各个位上数字反转得到一个新数。新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零（参见样例2）。</p>\r\n<p>【输入】<br />\r\n输入文件名为reverse.in。<br />\r\n输入共1 行，一个整数N。</p>\r\n<p>【输出】<br />\r\n输出文件名为reverse.out。<br />\r\n输出共1 行，一个整数，表示反转后的新数。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>reverse.in</p>\r\n<p>123</p>\r\n<p>reverse.out</p>\r\n<p>321</p>\r\n<p>【输入输出样例2】</p>\r\n<p>reverse.in</p>\r\n<p>-380</p>\r\n<p>reverse.out</p>\r\n<p>-83</p>\r\n<p>【数据范围】<br />\r\n-1,000,000,000 &le; N&le; 1,000,000,000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(624, '统计单词数', 'stat', '<p>【问题描述】<br />\r\n一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。<br />\r\n现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例1），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例2）。</p>\r\n<p>【输入】<br />\r\n输入文件名为stat.in，2 行。<br />\r\n第1 行为一个字符串，其中只含字母，表示给定单词；<br />\r\n第2 行为一个字符串，其中只可能包含字母和空格，表示给定的文章。</p>\r\n<p>【输出】<br />\r\n输出文件名为stat.out。<br />\r\n只有一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从0 开始）；如果单词在文章中没有出现，则直接输出一个整数-1。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>stat.in</p>\r\n<p>To<br />\r\nto be or not to be is a question</p>\r\n<p>stat.out</p>\r\n<p>2 0</p>\r\n<p>【输入输出样例1 说明】<br />\r\n输出结果表示给定的单词To 在文章中出现两次，第一次出现的位置为0。</p>\r\n<p>【输入输出样例2】</p>\r\n<p>stat.in</p>\r\n<p>to<br />\r\nDid the Ottoman Empire lose its power at that time</p>\r\n<p>stat.out</p>\r\n<p>-1</p>\r\n<p>【输入输出样例2 说明】<br />\r\n表示给定的单词to 在文章中没有出现，输出整数-1。</p>\r\n<p>【数据范围】<br />\r\n1 &le; 单词长度&le; 10。<br />\r\n1 &le; 文章长度&le; 1,000,000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:55'),
(625, '瑞士轮', 'swiss', '<p>【背景】<br />\r\n在双人对决的竞技性比赛，如乒乓球、羽毛球、国际象棋中，最常见的赛制是淘汰赛和循环赛。前者的特点是比赛场数少，每场都紧张刺激，但偶然性较高。后者的特点是较为公平，偶然性较低，但比赛过程往往十分冗长。<br />\r\n本题中介绍的瑞士轮赛制，因最早使用于1895 年在瑞士举办的国际象棋比赛而得名。<br />\r\n它可以看作是淘汰赛与循环赛的折衷，既保证了比赛的稳定性，又能使赛程不至于过长。</p>\r\n<p>【问题描述】<br />\r\n2*N 名编号为1~2N 的选手共进行R 轮比赛。每轮比赛开始前，以及所有比赛结束后，都会按照总分从高到低对选手进行一次排名。选手的总分为第一轮开始前的初始分数加上已参加过的所有比赛的得分和。总分相同的，约定编号较小的选手排名靠前。<br />\r\n每轮比赛的对阵安排与该轮比赛开始前的排名有关：第1 名和第2 名、第3 名和第4名、&hellip;&hellip;、第2K &ndash; 1 名和第2K 名、&hellip;&hellip; 、第2N &ndash; 1 名和第2N 名，各进行一场比赛。每场比赛胜者得1 分，负者得0 分。也就是说除了首轮以外，其它轮比赛的安排均不能事先确定，而是要取决于选手在之前比赛中的表现。<br />\r\n现给定每个选手的初始分数及其实力值，试计算在R 轮比赛过后，排名第Q 的选手编号是多少。我们假设选手的实力值两两不同，且每场比赛中实力值较高的总能获胜。</p>\r\n<p>【输入】<br />\r\n输入文件名为swiss.in。<br />\r\n输入的第一行是三个正整数N、R、Q，每两个数之间用一个空格隔开，表示有2*N 名选手、R 轮比赛，以及我们关心的名次Q。<br />\r\n第二行是2*N 个非负整数s1, s2, &hellip;, s2N，每两个数之间用一个空格隔开，其中si 表示编号为i 的选手的初始分数。<br />\r\n第三行是2*N 个正整数w1, w2, &hellip;, w2N，每两个数之间用一个空格隔开，其中wi 表示编号为i 的选手的实力值。</p>\r\n<p>【输出】<br />\r\n输出文件名为swiss.out。<br />\r\n输出只有一行，包含一个整数，即R 轮比赛结束后，排名第Q 的选手的编号。</p>\r\n<p>【输入输出样例】</p>\r\n<p>swiss.in</p>\r\n<p>2 4 2<br />\r\n7 6 6 7<br />\r\n10 5 20 15</p>\r\n<p>swiss.out</p>\r\n<p>1</p>\r\n<p>【输入输出样例说明】</p>\r\n<table width="378" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td width="33"><br />\r\n            <br />\r\n            &nbsp;</td>\r\n            <td width="46">本轮对阵</td>\r\n            <td colspan="4">本轮结束后的得分</td>\r\n        </tr>\r\n        <tr>\r\n            <td>选手编号 <br />\r\n            &nbsp;</td>\r\n            <td>/</td>\r\n            <td width="25">①</td>\r\n            <td width="20">②</td>\r\n            <td width="21">③</td>\r\n            <td width="15">④</td>\r\n        </tr>\r\n        <tr>\r\n            <td>初始 <br />\r\n            &nbsp;</td>\r\n            <td>/</td>\r\n            <td>7</td>\r\n            <td>6</td>\r\n            <td>6</td>\r\n            <td>7</td>\r\n        </tr>\r\n        <tr>\r\n            <td>第1 轮 <br />\r\n            &nbsp;</td>\r\n            <td>①&mdash;④ ②&mdash;③</td>\r\n            <td>7</td>\r\n            <td>6</td>\r\n            <td>7</td>\r\n            <td>8</td>\r\n        </tr>\r\n        <tr>\r\n            <td>第2 轮 <br />\r\n            &nbsp;</td>\r\n            <td>④&mdash;① ③&mdash;②</td>\r\n            <td>7</td>\r\n            <td>6</td>\r\n            <td>8</td>\r\n            <td>9</td>\r\n        </tr>\r\n        <tr>\r\n            <td>第3 轮 <br />\r\n            &nbsp;</td>\r\n            <td>④&mdash;③ ①&mdash;②</td>\r\n            <td>8</td>\r\n            <td>6</td>\r\n            <td>9</td>\r\n            <td>9</td>\r\n        </tr>\r\n        <tr>\r\n            <td>第4 轮</td>\r\n            <td>③&mdash;④ ①&mdash;②</td>\r\n            <td>9</td>\r\n            <td>6</td>\r\n            <td>10</td>\r\n            <td>9</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>【数据范围】<br />\r\n对于30%的数据，1 &le; N&le; 100；<br />\r\n对于50%的数据，1 &le; N&le; 10,000；<br />\r\n对于100%的数据，1 &le; N&le; 100,000，1 &le; R&le; 50，1 &le; Q&le; 2N，0 &le; s1, s2, &hellip;, s2N &le; 10^8，1 &le; w1,<br />\r\nw2, &hellip;, w2N &le; 10^8。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:56'),
(626, '表达式的值', 'exp', '<p>【问题描述】<br />\r\n对于1 位二进制变量定义两种运算：</p>\r\n<table width="200" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td>运算符 <br />\r\n            <br />\r\n            &nbsp;</td>\r\n            <td>运算规则</td>\r\n        </tr>\r\n        <tr>\r\n            <td>&oplus;<br />\r\n            <br />\r\n            &nbsp;</td>\r\n            <td>0&oplus;0=0<br />\r\n            0&oplus;1=1<br />\r\n            1&oplus;0=1<br />\r\n            1&oplus;1=1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>&times;</td>\r\n            <td>0 &times; 0=0<br />\r\n            0 &times; 1=0<br />\r\n            1 &times; 0=0<br />\r\n            1 &times; 1=1</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>运算的优先级是：<br />\r\n1. 先计算括号内的，再计算括号外的。<br />\r\n2. &ldquo;&times;&rdquo;运算优先于&ldquo;&oplus;&rdquo;运算，即计算表达式时，先计算&times;运算，再计算&oplus;运算。<br />\r\n例如：计算表达式A&oplus;B &times; C 时，先计算B &times; C，其结果再与A 做&oplus;运算。<br />\r\n现给定一个未完成的表达式，例如_+(_*_)，请你在横线处填入数字0 或者1，请问有多少种填法可以使得表达式的值为0。</p>\r\n<p>【输入】<br />\r\n输入文件名为exp.in，共2 行。<br />\r\n第1 行为一个整数L，表示给定的表达式中除去横线外的运算符和括号的个数。<br />\r\n第2 行为一个字符串包含L 个字符，其中只包含&rsquo;（&rsquo;、&rsquo;）&rsquo;、&rsquo;+&rsquo;、&rsquo;*&rsquo;这4 种字符，其中&rsquo;（&rsquo;、&rsquo;）&rsquo;是左右括号，&rsquo;+&rsquo;、&rsquo;*&rsquo;分别表示前面定义的运算符&ldquo;&oplus;&rdquo;和&ldquo;&times;&rdquo;。这行字符按顺序给出了给定表达式中除去变量外的运算符和括号。</p>\r\n<p>【输出】<br />\r\n输出文件exp.out 共1 行。包含一个整数，即所有的方案数。注意：这个数可能会很大，请输出方案数对10007 取模后的结果。</p>\r\n<p>【输入输出样例1】</p>\r\n<p>exp.in</p>\r\n<p>4<br />\r\n+(*)</p>\r\n<p>exp.out</p>\r\n<p>3</p>\r\n<p>【输入输出样例说明】<br />\r\n给定的表达式包括横线字符之后为：_+(_*_)<br />\r\n在横线位置填入(0、0、0)、(0、1、0)、(0、0、1)时，表达式的值均为0，所以共有3种填法。</p>\r\n<p><br />\r\n【数据范围】<br />\r\n对于20%的数据有0 &le;L&le; 10。<br />\r\n对于50%的数据有0 &le;L&le; 1,000。<br />\r\n对于70%的数据有0 &le;L&le; 10,000。<br />\r\n对于100%的数据有0 &le;L&le; 100,000。<br />\r\n对于50%的数据输入表达式中不含括号。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:56'),
(627, '简易计算器', 'calculator', '<div style="text-indent: 21pt">【问题描述】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">相信大家都用过计算器，一般来说，计算机都可以计算简单的 加、减、乘、除这几种运算。简易计算器的功能和一般的计算器一样，只是它更加简单，只能处理整数运算，也就是说，它没有小数点按钮，并且它的除法运算是整除运算。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">现在，我们给出简易计算器上的按钮序列，请你编程序，模拟简易计算器的功能，输出最终的结果。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="text-indent: 21pt">【计算器组成】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">简易计算器由以下按钮组成：</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">数字按钮： 0 1 2 3 4 5 6 7 8 9</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">运算按钮： + - * /</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">等于号按钮：=</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">正负转换按钮：+/-</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">为了表述方便，+/- 按钮用 F 表示 ，</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt">【计算器逻辑处理】</div>\r\n<div style="text-indent: 0.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;<span>&nbsp;&nbsp; </span>计算器内存有3个值，M1，M2，OP，ST</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">M1为计算器的左运算值，初始值为0</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">M2为计算器的右运算值，初始值0</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">OP为计算器的当前运算符，初始值为空</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">ST为状态标记，初始值为0</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">状态装换逻辑如下：</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">ST=0<span>&nbsp;&nbsp; (M1/OP</span>输入态)：</div>\r\n<div style="text-indent: 27pt; margin: 0cm 0cm 0pt 21pt">显示值：M1</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入数字N ：</div>\r\n<div style="text-indent: 37.5pt; margin: 0cm 0cm 0pt 21pt">M1=N ，转 ST=1状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入F ：</div>\r\n<div style="text-indent: 37.5pt; margin: 0cm 0cm 0pt 21pt">M1=-M1，转 ST=0状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入运算符：</div>\r\n<div style="text-indent: 37.5pt; margin: 0cm 0cm 0pt 21pt">OP=运算符，转ST=2状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入&ldquo;=&rdquo;：&nbsp;</div>\r\n<div style="text-indent: 32.25pt; margin: 0cm 0cm 0pt 21pt">转 ST=0状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">ST=1<span>&nbsp;&nbsp; (M1+/OP</span>输入态)：</div>\r\n<div style="text-indent: 27pt; margin: 0cm 0cm 0pt 21pt">显示值：M1</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入数字N ：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">如果M1&gt;=0则 M1=M1*10+N 否则M1=M1*10-N;</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">转 ST=1状态；</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入F ：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">M1=-M1，转 ST=1状态；</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入运算符：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">OP=运算符，转ST=2状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入&ldquo;=&rdquo;：&nbsp;</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">转 ST=0状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">ST=2<span>&nbsp;&nbsp; (OP/M2</span>输入态)：</div>\r\n<div style="text-indent: 27pt; margin: 0cm 0cm 0pt 21pt">显示值：M1</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入数字N：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">M2=N，转ST=3状态;</div>\r\n<div style="text-indent: 26.25pt; margin: 0cm 0cm 0pt 21pt">输入F：</div>\r\n<div style="text-indent: 42pt; margin: 0cm 0cm 0pt 21pt">M2=0，转 ST=3状态；</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入运算符：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">OP=运算符，转ST=2状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入&ldquo;=&rdquo;：</div>\r\n<div style="text-indent: 37.5pt; margin: 0cm 0cm 0pt 21pt">&nbsp;转 ST=0状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">ST=3<span>&nbsp;&nbsp; (M2+/OP</span>输入态)：</div>\r\n<div style="text-indent: 27pt; margin: 0cm 0cm 0pt 21pt">显示值：M2</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入数字N：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">如果M2&gt;=0则 M2=M2*10+N 否则M2=M2*10-N；</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">转ST=3状态；</div>\r\n<div style="text-indent: 26.25pt; margin: 0cm 0cm 0pt 21pt">输入F：</div>\r\n<div style="text-indent: 42pt; margin: 0cm 0cm 0pt 21pt">M2=-M2，转 ST=3状态；</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入运算符：</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">M1=[M1][OP][M2] 的值</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">OP=运算符；</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">转ST=2状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;输入&ldquo;=&rdquo;：&nbsp;转 ST=0状态</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">M1=[M1][OP][M2] 的值</div>\r\n<div style="text-indent: 42.75pt; margin: 0cm 0cm 0pt 21pt">转ST=0状态</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输入格式】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">输入只有一行，表示在计算器输入的按钮，长度&lt;=100，里面只包含如下字符 :</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">0123456789+-*/=F</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">输入数据保证不会出现除以0的 情况，运算过程中各个内存的值的范围在</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">[-10000000, 10000000] 以内</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">【输出格式】</div>\r\n<div style="text-indent: 21.75pt"><span>&nbsp;&nbsp;&nbsp; </span>输出包含一行整数，表示最后在计算器显示的结果</div>\r\n<div style="text-indent: 21.75pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输入样例】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;123=*2F-+/3+-=</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span></div>\r\n<div style="text-indent: 21pt">【输出样例】</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">&nbsp;-82</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>', 1000, 128, 5, 0, '2012-04-05 16:23:56'),
(628, '运算符游戏', 'operator', '<div style="text-indent: 21pt">【问题描述】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">小云和小吉很喜欢玩数学游戏，特别是运算符游戏。小云负责写一条等式，该式子由整数组成，还有&ldquo;+&rdquo;、&ldquo;-&rdquo;、&ldquo;*&rdquo;三个运算符，还有一个&ldquo;=&rdquo;，该式子遵守先乘除后加减的方式进行运算。然后他把式子里面的运算符去掉，只剩下一列数字。然后，他告诉小吉从左到右拿走了什么运算符（包括&ldquo;=&rdquo;），让小吉填上去。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">一开始，小云给了一条简单的式子， 123*2-51=195，去掉运算符后数列为 123251195，然后他告诉小吉去掉的运算符是：*-= ，小吉很快就做出来了。然后，小云写了一个几十位数字的式子，这次小吉犯难了，你能帮助他吗？</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输入格式】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">输入有两行</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">第一行为由0-9组成的数字序列，长度不超过50位</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">第二行为运算符序列，长度不超过6个运算符。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">注意：</div>\r\n<div style="text-indent: -18pt; margin: 0cm 0cm 0pt 60pt"><span>1、&nbsp;</span>运算符序列里面，有且只有一个&ldquo;=&rdquo;，其余的符号为&ldquo;+&rdquo;、&ldquo;-&rdquo;、&ldquo;*&rdquo;中的一个；</div>\r\n<div style="text-indent: -18pt; margin: 0cm 0cm 0pt 60pt"><span>2、&nbsp;</span>输入的数据保证有解。</div>\r\n<div style="margin: 0cm 0cm 0pt 42pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输出格式】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>输出只有一行，就是原来的等式。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>注意：</div>\r\n<div style="text-indent: -18pt; margin: 0cm 0cm 0pt 60pt"><span>1、&nbsp;</span>输入的数据保证至少有一个解，如果存在多个解，只需要输出一个即可；</div>\r\n<div style="text-indent: -18pt; margin: 0cm 0cm 0pt 60pt"><span>2、&nbsp;</span>输出的式子中，运算符均为二元运算符，就是说&ldquo;+&rdquo;、&ldquo;-&rdquo;不会作为正数、负数的标记；</div>\r\n<div style="text-indent: -18pt; margin: 0cm 0cm 0pt 60pt"><span>3、&nbsp;</span>输出的式子中的各个整数，前面不会有多余的&ldquo;0&rdquo;</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输入样例】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 123251195</span></div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *-=&nbsp;</span></div>\r\n<div style="text-indent: 21pt">【输出样例】</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">&nbsp;&nbsp;123*2-51=195</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt">&nbsp;</div>', 1000, 128, 5, 0, '2012-04-05 16:23:56'),
(629, '理财年代', 'money', '<div style="text-indent: 21pt">【问题描述】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">最近通货膨胀很厉害，CPI跑得比银行利息要快，要抗通胀，又要避风险，其中一种很好的方式，就是购买银行发行的理财产品。虽然理财产品的利息比银行定期要高，而且没有风险，但是，购买理财产品需要一定的资金门槛，而且还要保证吧钱存入一定时间不能取出来，因此也是有一定的限制的。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">小郭很喜欢研究银行的理财产品，她计划在2011年拿10万元进行理财产品的投资，为了简单方便，她在2011年每次投资理财产品时，都是把这笔资金和之前购买理财产品产生的所有利息投入进去，希望在年底获取最高的利润。</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【理财产品】</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>一个理财产品有如下要素：</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">资金门槛：至少要投入多少资金；</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">发行时间：该理财产品的购买时间；</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">投资天数：资金存放的天数，</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">年利息：该理财产品如果存放一年365天能获取的利息。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">由于郭小姐选择的所有理财产品的门槛都是10万以内，因此理财产品就剩下的3个要素。</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">例如，A1理财产品，发行时间是3月1日，投资天数为30天，年利息为 3.5%，那么，如果10万元购买该产品，那么在30天后，也就是3月30日收市后，她可以获得的资金为：</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">`100000*(1+0.035*30/365)=100287.67元 （四舍五入，保留2位小数）</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">然后，她就可以吧100287.67元这笔资金，购买3月31日或之后发行的任何理财产品。</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">郭小姐在这一年内不断把本金和利息一起全额地购买理财产品，希望在2012年到来之前获得最高的收益。如果购买的两个理财产品之间有时间间隔，那么这笔钱就不能产生利润（银行活期利息太低，利润可以忽略）。请问她这年内，能通过购买理财产品，最多获取多少钱呢？</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输入格式】</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">第一行是整数N(1&lt;=N&lt;=15)，代表理财产品的数目</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">下面N行为3个由空格隔开的字符串 A B C</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">A代表发行时间，格式为MMDD（两位月两位日），例如4月1日则为0401，10月2日则为1002</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">B (整数)，代表投资天数，范围是[10,300]</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">C (最多2位的小数)，代表百分之几的年利息，范围是[3,30]</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt; margin: 0cm 0cm 0pt 21pt">输入数据保证 发行时间+投资天数不会超过2012年。</div>\r\n<div><span>&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="text-indent: 21pt">【输出格式】</div>\r\n<div style="text-indent: 21pt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>输出只有一行，为年底最多可获得的连本带利的资金数目，保留2位小数</div>\r\n<div style="margin: 0cm 0cm 0pt 21pt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="text-indent: 21pt">【输入样例】</div>\r\n<div style="text-indent: 21pt">&nbsp;3</div>\r\n<div style="text-indent: 21pt">&nbsp;0101 100 4.5</div>\r\n<div style="text-indent: 21pt">&nbsp;0201 30 5</div>\r\n<div style="text-indent: 21pt">&nbsp;0402 50 7.8</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【例子分析】</div>\r\n<div style="text-indent: 0.75pt; margin: 0cm 0cm 0pt 42pt">例子中的3个理财产品，只能购买1号产品，或者连续购买2号、3号理财产品。</div>\r\n<div style="text-indent: 0.75pt; margin: 0cm 0cm 0pt 42pt">购买1号理财产品的收益为 100000*(1+0.045*100/365)=101232.88</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">购买2/3号理财产品的收益为：</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;购买2号产品后总资金： 100000*(1+0.05*30/365)=100410.96</div>\r\n<div style="text-indent: 21.75pt; margin: 0cm 0cm 0pt 21pt">&nbsp;再购买3号产品后总资金： 100410.96*(1+0.078*50/365)=101483.84<span>&nbsp;&nbsp;&nbsp; </span></div>\r\n<div style="text-indent: 21pt"><span>&nbsp;&nbsp;&nbsp; </span>因此最高收益为 101483.84</div>\r\n<div style="text-indent: 21pt">&nbsp;</div>\r\n<div style="text-indent: 21pt">【输出样例】</div>\r\n<div><span>&nbsp;&nbsp;&nbsp;&nbsp; 101483.84</span></div>', 1000, 128, 5, 0, '2012-04-05 16:23:56'),
(630, '计算系数 ', 'factor', '<p>【问题描述】 <br />\r\n给定一个多项式 (ax + by)^k ，请求出多项式展开后 x^ny^m 项的系数。 <br />\r\n【输入】 <br />\r\n输入文件名为 factor.in。 <br />\r\n共一行，包含 5 个整数，分别为 a，b，k，n，m，每两个整数之间用一个空格隔开。 <br />\r\n【输出】 <br />\r\n输出文件名为 factor.out。 <br />\r\n输出共 1 行，包含一个整数，表示所求的系数，这个系数可能很大，输出对 10007 取模后的结果。 <br />\r\n<br />\r\n【输入输出样例】</p>\r\n<p>factor.in</p>\r\n<p>1 1 3 1 2</p>\r\n<p>factor.out</p>\r\n<p>3</p>\r\n<p>【数据范围】 <br />\r\n对于 30%的数据，有 0&le;k&le;10； <br />\r\n对于 50%的数据，有 a = 1，b = 1； <br />\r\n对于 100%的数据，有 0&le;k&le;1,000，0&le;n, m&le;k，且 n + m = k，0&le;a，b&le;1,000,000。</p>', 1000, 128, 10, 0, '2012-04-05 16:23:56'),
(631, '聪明的质监员', 'qc', '<p>【问题描述】 <br />\r\n小 T 是一名质量监督员，最近负责检验一批矿产的质量。这批矿产共有 n 个矿石，从 1 到 n 逐一编号，每个矿石都有自己的重量 wi 以及价值 vi。检验矿产的流程是： <br />\r\n1、给定 m个区间[Li，Ri]； <br />\r\n2、选出一个参数 W； <br />\r\n3、对于一个区间[Li，Ri]，计算矿石在这个区间上的检验值 Yi ： <br />\r\n<img height="134" src="http://192.168.1.252/os/times/2011/11noip/tg/qc/qc-1.JPG" width="734" alt="" /><br />\r\n<br />\r\n若这批矿产的检验结果与所给标准值 S 相差太多，就需要再去检验另一批矿产。小 T 不想费时间去检验另一批矿产，所以他想通过调整参数 W 的值，让检验结果尽可能的靠近标准值 S，即使得 S-Y的绝对值最小。请你帮忙求出这个最小值。 <br />\r\n<br />\r\n【输入】 <br />\r\n输入文件 qc.in。</p>\r\n<p>第一行包含三个整数n，m，S，分别表示矿石的个数、区间的个数和标准值。<br />\r\n接下来的n 行，每行2 个整数，中间用空格隔开，第i+1 行表示i 号矿石的重量wi 和价值vi 。<br />\r\n接下来的m 行，表示区间，每行2 个整数，中间用空格隔开，第i+n+1 行表示区间[Li,Ri]的两个端点Li 和Ri。注意：不同区间可能重合或相互重叠。</p>\r\n<p>【输出】<br />\r\n输出文件名为qc.out。<br />\r\n输出只有一行，包含一个整数，表示所求的最小值。</p>\r\n<p>【输入输出样例】</p>\r\n<p>qc.in</p>\r\n<p>5 3 15<br />\r\n1 5<br />\r\n2 5<br />\r\n3 5<br />\r\n4 5<br />\r\n5 5<br />\r\n1 5<br />\r\n2 4<br />\r\n3 3</p>\r\n<p>qc.out</p>\r\n<p>10</p>\r\n<p>【输入输出样例说明】<br />\r\n当W 选4 的时候，三个区间上检验值分别为20、5、0，这批矿产的检验结果为25，此时与标准值S 相差最小为10。<br />\r\n【数据范围】<br />\r\n对于10%的数据，有1&le;n，m&le;10；<br />\r\n对于30%的数据，有1&le;n，m&le;500；<br />\r\n对于50%的数据，有1&le;n，m&le;5,000；<br />\r\n对于70%的数据，有1&le;n，m&le;10,000；<br />\r\n对于100%的数据，有1&le;n，m&le;200,000，0 &lt; wi, vi&le;10^6，0 &lt; S&le;10^12，1&le;Li&le;Ri&le;n。</p>', 1000, 128, 20, 0, '2012-04-05 16:23:56'),
(632, '观光公交', 'bus', '<p>【问题描述】</p>\r\n<p>风景迷人的小城Y 市，拥有n 个美丽的景点。由于慕名而来的游客越来越多，Y 市特意安排了一辆观光公交车，为游客提供更便捷的交通服务。观光公交车在第0 分钟出现在1号景点，随后依次前往2、3、4&hellip;&hellip;n 号景点。从第i 号景点开到第i+1 号景点需要Di 分钟。<br />\r\n任意时刻，公交车只能往前开，或在景点处等待。<br />\r\n设共有m 个游客，每位游客需要乘车1 次从一个景点到达另一个景点，第i 位游客在Ti 分钟来到景点Ai，希望乘车前往景点Bi（Ai&lt;Bi）。为了使所有乘客都能顺利到达目的地，公交车在每站都必须等待需要从该景点出发的所有乘客都上车后才能出发开往下一景点。<br />\r\n假设乘客上下车不需要时间。<br />\r\n一个乘客的旅行时间，等于他到达目的地的时刻减去他来到出发地的时刻。因为只有一辆观光车，有时候还要停下来等其他乘客，乘客们纷纷抱怨旅行时间太长了。于是聪明的司机ZZ 给公交车安装了k 个氮气加速器，每使用一个加速器，可以使其中一个Di 减1。对于同一个Di 可以重复使用加速器，但是必须保证使用后Di 大于等于0。<br />\r\n那么ZZ 该如何安排使用加速器，才能使所有乘客的旅行时间总和最小？</p>\r\n<p>【输入】<br />\r\n输入文件名为bus.in。<br />\r\n第1 行是3 个整数n, m, k，每两个整数之间用一个空格隔开。分别表示景点数、乘客数和氮气加速器个数。<br />\r\n第2 行是n-1 个整数，每两个整数之间用一个空格隔开，第i 个数表示从第i 个景点开往第i+1 个景点所需要的时间，即Di。<br />\r\n第3 行至m+2 行每行3 个整数Ti, Ai, Bi，每两个整数之间用一个空格隔开。第i+2 行表示第i 位乘客来到出发景点的时刻，出发的景点编号和到达的景点编号。</p>\r\n<p>【输出】<br />\r\n输出文件名为bus.out。共一行，包含一个整数，表示最小的总旅行时间。</p>\r\n<p>【输入输出样例】</p>\r\n<h3>&nbsp;</h3>\r\n<p>&nbsp;</p>\r\n<p>bus.in</p>\r\n<p>3 3 2<br />\r\n1 4<br />\r\n0 1 3<br />\r\n1 1 2<br />\r\n5 2 3</p>\r\n<p>bus.out</p>\r\n<p>10</p>\r\n<p>【输入输出样例说明】<br />\r\n对D2 使用2 个加速器，从2 号景点到3 号景点时间变为2 分钟。<br />\r\n公交车在第1 分钟从1 号景点出发，第2 分钟到达2 号景点，第5 分钟从2 号景点出发，第7 分钟到达3 号景点。<br />\r\n第1 个旅客旅行时间 7-0 = 7 分钟。<br />\r\n第2 个旅客旅行时间 2-1 = 1 分钟。<br />\r\n第3 个旅客旅行时间 7-5 = 2 分钟。<br />\r\n总时间 7+1+2 = 10 分钟。<br />\r\n【数据范围】<br />\r\n对于10%的数据，k=0；<br />\r\n对于20%的数据，k=1；<br />\r\n对于40%的数据，2 &le; n &le; 50，1 &le; m&le; 1,000，0 &le; k &le; 20，0 &le; Di &le; 10，0 &le; Ti &le; 500；<br />\r\n对于60%的数据，1 &le; n &le; 100，1 &le; m&le; 1,000，0 &le; k &le; 100，0 &le; Di &le; 100，0 &le; Ti &le; 10,000；<br />\r\n对于100%的数据，1 &le; n &le; 1,000，1 &le; m &le; 10,000，0 &le; k &le; 100,000，0 &le; Di &le; 100，<br />\r\n0 &le; Ti &le; 100,000。</p>', 1000, 128, 20, 0, '2012-04-05 16:23:56'),
(633, '乐谱变调', 'music', '<p>【问题描述】<br />\r\n大家应该听过很多美妙动听的歌曲，也曾经在卡拉OK中唱过不少歌曲。其实，很多歌曲的调子都经过了变调，因为很多歌曲原来的调子一般都偏高，需要把调适当降低，才适合一般人歌唱。现在请你编程解决这个变调的问题，把一个曲谱从原来的调子基础上，升高或降低若干个调，变成一个新的曲谱。<br />\r\n<br />\r\n【音阶】<br />\r\n相信大家都见过电子琴，也听过电子琴，琴中的每个白色键，代表的是简谱中的1,2,3,4,5,6,7的音阶，用字母代表即为 C,D,E,F,G,A,B，见下图：<br />\r\n<img height="113" alt="music-1" src="http://192.168.1.252/os/times/2011/11gzoi/music_clip_image002.jpg" width="318" /></p>\r\n<p>此外，上面的黑键表示半音，按照上图，从左边到右边的5个黑键代表的半音为：#C,#D,#F,#G,#A<br />\r\n由最左边的音阶C数起到第七个音阶B，中间的黑键和键，均处于一个基准八度区域，在B右边的琴键，比原来的音阶高一个八度区域，称为高八度区域； C音阶左边的琴键（图片没有显示），比原来的音阶低一个八度区域，称为低八度区域。</p>\r\n<p>【乐谱】<br />\r\n一个歌曲的乐谱，包括音阶、节奏、小节线、休止符等元素，这里为了简单表示，只保留音阶这一元素，节奏、小节线、休止符不在此题目中展现。<br />\r\n乐谱中的每个音阶，可以用C,D,E,F,G,A,B,#C,#D,#F,#G,#A 表示。<br />\r\n在乐谱中会牵涉到八度区域的迁移问题，我们使用 &ldquo;&gt;&rdquo;、&ldquo;&lt;&rdquo; 来变化当前的八度区域。其中&ldquo;&gt;&rdquo;表示提高当前八度区域（例如从低八度区域=&gt;基准八度区域），&ldquo;&lt;&rdquo;表示降低当前八度区域(例如高八度区域=&gt;基准八度区域)。乐谱一开始的时候，当前八度区域为基准八度区域。</p>\r\n<p>【乐谱变调】<br />\r\n对一个乐谱，提高或者降低N个半音的操作，成为乐谱变调。<br />\r\n首先，对于一个八度区域中，以下音阶均相隔一个半音。<br />\r\nC,#C,D,#D,E,F,#F,G,#G,A,#A,B<br />\r\n然后，B音阶比高它一个八度区域的C音阶，相隔一个半音<br />\r\n变调就是一个简单的升降音阶的操作，只要数着半音阶个数修改音阶即可。例如，C音阶提高6个半音，数过去就是#F，B音阶提高4个音阶，则为下一个八度区域的 #D 音阶，同理，#F降6个半音阶（升-6个半音）则为C。</p>\r\n<p>【输入格式】<br />\r\n输入第一行字符串，包含上面的各个音阶，以及&gt;/&lt;符号，表示一个乐谱，乐谱字符串长度&lt;=200，没有空格和其他字符串。<br />\r\n输入第二行为整数N (-16&lt;=N&lt;=16) ，表示升多少个半音</p>\r\n<p>【输出格式】<br />\r\n输出为一行字符串，代表乐谱。</p>\r\n<p>【输入样例】<br />\r\nCDEFGAB&gt;C<br />\r\n2<br />\r\n【输出样例】<br />\r\nDE#FGAB&gt;#CD</p>\r\n<p>DE#FGAB&gt;#CD</p>', 1000, 128, 5, 0, '2012-04-05 16:23:56'),
(634, '组合式家具', 'pack', '<p><strong>题目描述</strong>：<strong> </strong><br />\r\n你在一个组合式家具厂工作，这种组合式家具由各种形状不同的组件组成，例如：<br />\r\n<img height="111" alt="1" src="http://192.168.1.252/os/times/2011/11gzoi/pack_clip_image002.gif" width="323" /><br />\r\n图1 三种不同形状的组件<br />\r\n这些组件生产出来后将被自动装箱，组件按生产的次序落下，第一个组件落在箱子底部，其后的组件依次落下，直至组件接触到之前装入的组件或箱子底部。例如，假设组件按图1从左至右的次序生产出来，装箱结果将如图2左所示。假如按图1从右至左的次序生产出来，装箱结果将如图2右所示。<br />\r\n<img height="137" alt="2" src="http://192.168.1.252/os/times/2011/11gzoi/pack_clip_image004.gif" width="143" /><br />\r\n图2 不同的生产次序导致两种不同的装箱结果<br />\r\n由于箱子高度有限，如图2左，三个组件已经超过了箱子的高度，这种情况第三个组件及之后的组件需要用新的箱子来装。<br />\r\n你的工作是为自动装箱系统编写程序，根据组件生产的次序，输出装完这些组件后，每个箱子的组件堆叠的高度。<br />\r\n<strong>输入格式</strong>（Pack.in）：<br />\r\n第一行是用空格分隔的三个整数n,w,b。n是一套家具的组件数，1&lt;=n&lt;=100，w和b是箱子的宽和高，1&lt;=w&lt;=10，1&lt;=b&lt;=100。接下来是n个组件的形状描述，按生产的次序排列，每个组件描述第一行是一个整数h，1&lt;=h&lt;=10且h&lt;=b，接下来h行每行w个字符，描述组件的形状，&ldquo;X&rdquo;代表组件的部分，&ldquo;.&rdquo;代表空间。<br />\r\n<strong>输出格式</strong>（Pack.out）：<br />\r\nm个整数（m代表装箱所需的箱子数），按装箱的次序输出m个箱子里组件的高度。<br />\r\n<strong>样例 </strong></p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="284"><br />\r\n            Pack.in</td>\r\n            <td valign="top" width="284">\r\n            <p>Pack.out</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>3 5 12<br />\r\n            5<br />\r\n            XXXXX<br />\r\n            .XXXX<br />\r\n            ..XXX<br />\r\n            ...XX<br />\r\n            ....X<br />\r\n            4<br />\r\n            XXX..<br />\r\n            ..X..<br />\r\n            ..XXX<br />\r\n            ..X..<br />\r\n            6<br />\r\n            X....<br />\r\n            X....<br />\r\n            X....<br />\r\n            X....<br />\r\n            X....<br />\r\n            XXXXX</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>9 6</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>', 1000, 128, 20, 0, '2012-04-05 16:23:56'),
(635, '图形格式', 'gif', '<p><strong>题目描述</strong>：<strong> </strong><br />\r\n大家对GIF这种图形格式一定不陌生，现在我们用字符串压缩来解释GIF压缩图形的基本原理。<br />\r\nGIF压缩的基础是一个数字编码与字符串映射关系的字典。字典只包含可能出现在待压缩字符串中的字符或子串的映射关系，且数字编码长度相同。例如，假如要压缩的字符串可能包含所有26个大写字母，那么字典可初始化为（A,00），（B,01），（C,02），&hellip;，（Z,25），注意数字编码长度都是2。假如我们只是想压缩DNA序列，那么字典可初始化为（A,0），（T,1），（G,2），（C,3）。<br />\r\n压缩算法如下：<br />\r\n1.在字典中查找字串未压缩部分最长的前缀，将这个前缀替换成字典对应的数字编码。<br />\r\n2.如果字串尚有未完成压缩的部分，则在字典中添加一个映射关系（s,n），s是上一步骤找到的前缀加紧接其后的字符，n是字典中尚未使用的最小的编码。<br />\r\n我们以压缩字符串ABABBAABB为例说明，由于字串只包含A和B，字典初始只有两项（A,0）和（B,1）。</p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="142"><br />\r\n            待压缩字串</td>\r\n            <td valign="top" width="142">\r\n            <p>最长前缀</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>替换成编码</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>新增字典条目</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="142">\r\n            <p>ABABBAABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>A</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>0</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>(AB,2)</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="142">\r\n            <p>0BABBAABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>B</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>1</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>(BA,3)</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="142">\r\n            <p>01ABBAABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>AB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>2</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>(ABB,4)</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="142">\r\n            <p>012BAABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>BA</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>3</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>(BAA,5)</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="142">\r\n            <p>0123ABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>ABB</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>4</p>\r\n            </td>\r\n            <td valign="top" width="142">\r\n            <p>---</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>最终的压缩结果是01234。<br />\r\n还有一点要特别注意，当字典中不断添加新的映射关系，数字编码长度在某个步骤将突破初始化时的长度。由于字典所有数字编码长度要保持一致，这时要将字典中原有的数字编码前补0，之后的压缩按新的数字编码进行替换，而原有已替换的数字编码则不受影响。例如，ABABBAABBAABAABAB将压缩成01234027301，而不是0123402731。<br />\r\n请对输入的初始字典和压缩后的编码进行解压。<br />\r\n<strong>输入格式</strong>（GIF.in）：<br />\r\n第一行的字符串是压缩后的数字编码。第二行是初始的字典，由一个正整数n开始，n(1&lt;=n&lt;=100)是字典初始的条目数，后面接着n个字符串，字典中的第一个字符串编码为0（如n&gt;10则是00），第二个字符串编码为1，以此类推。<br />\r\n<strong>输出格式</strong>（GIF.out）：<br />\r\n输出只有一行，是解压后的字符串。我们保证所有输入都是可以解压的。<br />\r\n<strong>样例 </strong></p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="284"><br />\r\n            GIF.in</td>\r\n            <td valign="top" width="284">\r\n            <p>GIF.out</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>01234<br />\r\n            2 A B</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>ABABBAABB</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>01234027301<br />\r\n            2 A B</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>ABABBAABBAABAABAB</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>21104<br />\r\n            3 BA A C</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>CAABAAA</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>01<br />\r\n            2 JA VA</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>JAVA</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>', 1000, 128, 30, 0, '2012-04-05 16:23:56'),
(636, '涂颜色', 'border', '<p><strong>题目描述</strong>：<strong> </strong><br />\r\n你试图在直多边形（一个边都以90度或270度相交，而且内部没有洞的多边形）的基础上，一层层地增加新边框，在新的边框多围出来的区域涂上不同的颜色，以取得特殊的装饰效果。增加的边框与上一层增加的边框（第一层边框则是与直多边形的边）的距离都保持一个固定值d，如下图所示：<br />\r\n<img height="113" alt="1" src="http://192.168.1.252/os/times/2011/11gzoi/border_clip_image002.gif" width="363" /><br />\r\n图3 装饰效果示例<br />\r\n在图3左的例子，在直多边形（灰色）的基础上加了两层边框，图3右的例子直多边形形状更复杂些，增加的边框离断成了两部分。注意边框也许离断成若干部分但绝不相交或重叠，即不会发生以下情况：<br />\r\n<img height="106" alt="2" src="http://192.168.1.252/os/times/2011/11gzoi/border_clip_image004.gif" width="355" /><br />\r\n图4 不会发生的情况<br />\r\n你的任务是计算每层增加的边框长度及每层边框多围出来的面积。<br />\r\n<strong>输入格式</strong>（Border.in）：<br />\r\n第一行是用空格分隔的三个正整数n,m,d。n是直多边形的边数，m是需要增加边框的层数，n&lt;=100，m&lt;=20，d是边框之间的距离。接下来的若干行，以顺时针方向描述直多边形的n个顶点坐标，每个坐标含空格分隔的两个正整数x和y。第一个顶点坐标满足y坐标最大；如果有多个满足此要求的顶点，我们从当中x坐标最小的开始。<br />\r\n<strong>输出格式</strong>（Border.out）：<br />\r\n第一行包含m个整数，按次序输出每层增加的边框长度。<br />\r\n第二行包含m个整数，按次序输出每层边框多围出来的面积。<br />\r\n<strong>样例 </strong></p>\r\n<table cellspacing="0" cellpadding="0" border="1">\r\n    <tbody>\r\n        <tr>\r\n            <td valign="top" width="284"><br />\r\n            Border.in</td>\r\n            <td valign="top" width="284">\r\n            <p>Border.out</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>6 2 10<br />\r\n            20 30 100 30 100 0 0 0 0 10 20 10</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>340 420<br />\r\n            3000 3800</p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td valign="top" width="284">\r\n            <p>10 1 7<br />\r\n            20 50 70 50 70 0 0 0 0 30<br />\r\n            20 30 20 10 60 10 60 40 20 40</p>\r\n            </td>\r\n            <td valign="top" width="284">\r\n            <p>380<br />\r\n            2660</p>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>', 1000, 128, 15, 0, '2012-04-05 16:23:56');
INSERT INTO `problem` (`id`, `title`, `shortname`, `content`, `timelimit`, `memlimit`, `testpoint`, `invisible`, `create`) VALUES
(637, '排序测试', 'sorttest', '<p>这是一个经典的排序问题，通过此问题，你可以学会如何高效处理排序问题。<br />\r\n<br />\r\n【问题描述】<br />\r\n现在有n个整<b>数</b>，请你从文件中读取它们，从小到大进行排序，并把它输出到文件中。<br />\r\n<br />\r\n【输入格式】<br />\r\n第一行：一个整数n</p>\r\n<p>第二行：n个整数,用一个空格隔开<br />\r\n<br />\r\n【输出格式】<br />\r\n一行：n个数,用一个空格隔开<br />\r\n<br />\r\n<br />\r\n【输入样例】<br />\r\n3<br />\r\n2 4 1<br />\r\n<br />\r\n【输出样例】<br />\r\n1 2 4</p>\r\n<p>【数据规模】<br />\r\n1&lt;=n&lt;=200000</p>', 2500, 128, 10, 0, '2012-04-05 16:23:57');

-- --------------------------------------------------------

--
-- テーブルの構造 `problem_tag`
--

CREATE TABLE IF NOT EXISTS `problem_tag` (
  `tag` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) NOT NULL,
  `tagname` text NOT NULL,
  PRIMARY KEY (`tag`),
  KEY `problem_id` (`problem_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;

--
-- テーブルのデータをダンプしています `problem_tag`
--

INSERT INTO `problem_tag` (`tag`, `problem_id`, `tagname`) VALUES
(1, 1, '基本练习'),
(2, 2, '图论算法'),
(3, 2, '最短路径'),
(4, 3, '图论算法'),
(5, 3, '最短路径'),
(6, 4, '图论算法'),
(7, 4, '最短路径'),
(8, 5, '图论算法'),
(9, 5, '最短路径'),
(10, 5, 'NP问题'),
(11, 6, '图论算法'),
(12, 6, '随机化算法'),
(13, 6, 'NP问题'),
(14, 7, '图论算法'),
(15, 7, '最小生成树'),
(16, 8, '图论算法'),
(17, 8, '双连通分量'),
(18, 9, '图论算法'),
(19, 9, '最值子图'),
(20, 10, '图论算法'),
(21, 10, '最值子图'),
(22, 11, '图论算法'),
(23, 11, '网络流'),
(24, 12, '图论算法'),
(25, 12, '网络流'),
(26, 13, '图论算法'),
(27, 13, '网络流'),
(28, 14, '图论算法'),
(29, 14, '网络流'),
(30, 14, '二分图匹配'),
(31, 15, '图论算法'),
(32, 15, '最短路径'),
(33, 15, 'NOI'),
(34, 16, 'NOI'),
(35, 16, '动态规划'),
(36, 16, '平衡树'),
(37, 17, 'NOI'),
(38, 17, '线段树'),
(39, 18, 'NOI'),
(40, 18, '动态规划'),
(41, 18, '数值递推'),
(42, 18, '数学方法'),
(43, 19, '数学方法'),
(44, 19, '贪心算法'),
(45, 19, 'NOI'),
(46, 20, '并查集'),
(47, 20, 'HAOI'),
(48, 21, '图论算法'),
(49, 21, '最短路径'),
(50, 21, 'HAOI'),
(51, 22, '图论算法'),
(52, 22, '最短路径'),
(53, 22, 'HAOI'),
(54, 23, 'HAOI'),
(55, 23, '搜索'),
(56, 24, '动态规划'),
(57, 24, '数值递推'),
(58, 24, '优先队列'),
(59, 24, 'HAOI'),
(60, 25, '动态规划'),
(61, 25, 'NOIP'),
(62, 26, '搜索'),
(63, 27, '图论算法'),
(64, 27, '最小生成树'),
(65, 28, '网络流'),
(66, 28, '图论算法'),
(67, 28, 'NOI'),
(68, 28, '最值子图'),
(69, 29, '图论算法'),
(70, 29, '最小生成树'),
(71, 30, '动态规划'),
(72, 31, '动态规划'),
(73, 31, 'POI'),
(74, 32, '图论算法'),
(75, 32, '最短路径'),
(76, 32, '搜索'),
(77, 32, 'POI'),
(78, 33, '动态规划'),
(79, 33, 'POI'),
(80, 34, 'POI'),
(81, 34, '搜索'),
(82, 34, '数学方法'),
(83, 34, '贪心算法'),
(84, 35, '图论算法'),
(85, 35, '并查集'),
(86, 35, '欧拉路径'),
(87, 35, 'POI'),
(88, 36, '动态规划'),
(89, 36, '高精度计算'),
(90, 37, '基本练习'),
(91, 37, '高精度计算'),
(92, 38, '高精度计算'),
(93, 39, '高精度计算'),
(94, 40, '高精度计算'),
(95, 41, '高精度计算'),
(96, 41, 'NOIP'),
(97, 42, '高精度计算'),
(98, 42, 'NOIP'),
(99, 43, '贪心算法'),
(100, 44, '搜索'),
(101, 45, '搜索'),
(102, 46, '字符串'),
(103, 47, '字符串'),
(104, 47, 'NOIP'),
(105, 48, '字符串'),
(106, 48, 'NOIP'),
(107, 49, '搜索'),
(108, 50, '搜索'),
(109, 50, 'NOIP'),
(110, 51, '搜索'),
(111, 51, '字符串'),
(112, 51, 'NOIP'),
(113, 51, 'NP问题'),
(114, 52, '字符串'),
(115, 53, '动态规划'),
(116, 54, '动态规划'),
(117, 54, '搜索'),
(118, 55, '贪心算法'),
(119, 56, '动态规划'),
(120, 57, '图论算法'),
(121, 57, '最短路径'),
(122, 57, '计算几何'),
(123, 58, '稀疏表'),
(124, 58, '线段树'),
(125, 59, '搜索'),
(126, 60, '动态规划'),
(127, 61, '动态规划'),
(128, 62, '平衡树'),
(129, 63, '计算几何'),
(130, 64, 'USACO'),
(131, 64, '搜索'),
(132, 65, '字符串'),
(133, 65, '搜索'),
(134, 65, 'NOIP'),
(135, 65, '哈希散列'),
(136, 66, '搜索'),
(137, 67, '搜索'),
(138, 67, 'NOI'),
(139, 67, '数学方法'),
(140, 68, 'NOIP'),
(141, 68, '动态规划'),
(142, 69, '搜索'),
(143, 69, 'NOIP'),
(144, 69, '数学方法'),
(145, 70, '搜索'),
(146, 71, '动态规划'),
(147, 71, 'NOIP'),
(148, 72, '基本练习'),
(149, 72, '基本数据结构'),
(150, 73, '搜索'),
(151, 73, '图论算法'),
(152, 73, '最短路径'),
(153, 74, '基本练习'),
(154, 74, 'NOIP'),
(155, 75, '优先队列'),
(156, 75, '贪心算法'),
(157, 75, 'NOIP'),
(158, 76, '基本练习'),
(159, 76, 'NOIP'),
(160, 77, '动态规划'),
(161, 78, 'NOIP'),
(162, 78, '动态规划'),
(163, 78, '数值递推'),
(164, 79, '动态规划'),
(165, 80, '动态规划'),
(166, 80, 'NOI'),
(167, 81, '动态规划'),
(168, 81, '高精度计算'),
(169, 82, '贪心算法'),
(170, 83, '数值递推'),
(171, 84, '搜索'),
(172, 85, '离散化'),
(173, 86, 'NOIP'),
(174, 86, '基本练习'),
(175, 87, 'NOIP'),
(176, 87, '动态规划'),
(177, 88, '基本练习'),
(178, 89, '搜索'),
(179, 89, '动态规划'),
(180, 90, '离散化'),
(181, 91, 'NOIP'),
(182, 91, '数值递推'),
(183, 91, '搜索'),
(184, 92, '基本练习'),
(185, 92, 'NOIP'),
(186, 93, 'NOIP'),
(187, 93, '数值递推'),
(188, 94, 'NOIP'),
(189, 94, '动态规划'),
(190, 94, '字符串'),
(191, 95, '图论算法'),
(192, 95, '最短路径'),
(193, 95, 'NOIP'),
(194, 96, '动态规划'),
(195, 96, 'NOIP'),
(196, 97, 'NOIP'),
(197, 97, '图论算法'),
(198, 98, 'NOIP'),
(199, 98, '贪心算法'),
(200, 99, '搜索'),
(201, 99, '数值递推'),
(202, 100, '搜索'),
(203, 100, '动态规划'),
(204, 100, 'NOI'),
(205, 101, '搜索'),
(206, 102, 'NOIP'),
(207, 102, '基本练习'),
(208, 103, 'NOIP'),
(209, 103, '搜索'),
(210, 103, '离散化'),
(211, 104, '图论算法'),
(212, 104, '数值递推'),
(213, 104, 'NOIP'),
(214, 105, '字符串'),
(215, 105, '搜索'),
(216, 105, 'NOIP'),
(217, 106, 'NOIP'),
(218, 106, '动态规划'),
(219, 107, '搜索'),
(220, 107, 'NOIP'),
(221, 108, 'NOIP'),
(222, 108, '基本练习'),
(223, 109, 'NOIP'),
(224, 109, '动态规划'),
(225, 110, 'NOIP'),
(226, 110, '基本练习'),
(227, 111, 'NOIP'),
(228, 111, '动态规划'),
(229, 112, 'NOIP'),
(230, 112, '图论算法'),
(231, 113, '表达式树'),
(232, 113, '基本数据结构'),
(233, 113, 'NOIP'),
(234, 114, '数值递推'),
(235, 115, '搜索'),
(236, 116, 'NOIP'),
(237, 116, '动态规划'),
(238, 117, '动态规划'),
(239, 117, 'NOIP'),
(240, 118, 'NOIP'),
(241, 118, '贪心算法'),
(242, 119, 'NOIP'),
(243, 119, '数值递推'),
(244, 119, '高精度计算'),
(245, 120, '数值递推'),
(246, 120, '高精度计算'),
(247, 120, 'NOIP'),
(248, 121, '贪心算法'),
(249, 121, 'NOIP'),
(250, 122, 'NOIP'),
(251, 122, '基本练习'),
(252, 123, '数值递推'),
(253, 124, '动态规划'),
(254, 124, '高精度计算'),
(255, 125, '动态规划'),
(256, 126, '基本练习'),
(257, 126, 'USACO'),
(258, 127, 'USACO'),
(259, 127, '基本练习'),
(260, 128, 'USACO'),
(261, 128, '图论算法'),
(262, 128, '搜索'),
(263, 129, 'USACO'),
(264, 129, '图论算法'),
(265, 129, '搜索'),
(266, 130, 'USACO'),
(267, 130, '动态规划'),
(268, 131, 'USACO'),
(269, 131, '动态规划'),
(270, 132, 'USACO'),
(271, 132, '贪心算法'),
(272, 133, 'USACO'),
(273, 133, '动态规划'),
(274, 133, '图论算法'),
(275, 133, '搜索'),
(276, 133, '最短路径'),
(277, 134, 'USACO'),
(278, 134, '数值递推'),
(279, 135, 'USACO'),
(280, 135, '基本练习'),
(281, 136, 'USACO'),
(282, 136, '基本练习'),
(283, 137, 'USACO'),
(284, 137, '计算几何'),
(285, 138, 'USACO'),
(286, 138, '动态规划'),
(287, 138, '搜索'),
(288, 139, 'USACO'),
(289, 139, '动态规划'),
(290, 140, 'USACO'),
(291, 140, '分治算法'),
(292, 141, 'USACO'),
(293, 141, '基本练习'),
(294, 142, 'USACO'),
(295, 142, '基本练习'),
(296, 143, 'USACO'),
(297, 143, '基本练习'),
(298, 143, '基本数据结构'),
(299, 144, 'USACO'),
(300, 144, '动态规划'),
(301, 145, 'USACO'),
(302, 145, '图论算法'),
(303, 145, '搜索'),
(304, 146, 'USACO'),
(305, 146, '动态规划'),
(306, 147, 'USACO'),
(307, 147, '图论算法'),
(308, 147, '分治算法'),
(309, 147, '最短路径'),
(310, 148, 'USACO'),
(311, 148, '贪心算法'),
(312, 149, 'USACO'),
(313, 149, '动态规划'),
(314, 149, '搜索'),
(315, 150, 'USACO'),
(316, 150, '贪心算法'),
(317, 151, 'USACO'),
(318, 151, '图论算法'),
(319, 151, '最小生成树'),
(320, 152, 'USACO'),
(321, 152, '搜索'),
(322, 153, 'USACO'),
(323, 153, '基本练习'),
(324, 153, '贪心算法'),
(325, 154, 'USACO'),
(326, 154, '基本练习'),
(327, 155, 'USACO'),
(328, 155, '搜索'),
(329, 156, 'USACO'),
(330, 156, '动态规划'),
(331, 157, 'USACO'),
(332, 157, '图论算法'),
(333, 157, '最短路径'),
(334, 158, 'USACO'),
(335, 158, '贪心算法'),
(336, 159, 'USACO'),
(337, 159, '基本练习'),
(338, 160, 'USACO'),
(339, 160, '动态规划'),
(340, 160, '搜索'),
(341, 161, '动态规划'),
(342, 161, 'USACO'),
(343, 161, '搜索'),
(344, 162, '哈希散列'),
(345, 162, 'USACO'),
(346, 162, '基本练习'),
(347, 163, 'USACO'),
(348, 163, '字符串'),
(349, 164, 'USACO'),
(350, 164, '搜索'),
(351, 165, '动态规划'),
(352, 165, '图论算法'),
(353, 165, 'USACO'),
(354, 166, 'USACO'),
(355, 166, '哈希散列'),
(356, 166, '贪心算法'),
(357, 167, 'USACO'),
(358, 167, '分治算法'),
(359, 168, 'USACO'),
(360, 168, '字符串'),
(361, 168, '搜索'),
(362, 169, 'USACO'),
(363, 169, '搜索'),
(364, 170, 'USACO'),
(365, 170, '基本练习'),
(366, 170, '贪心算法'),
(367, 171, '基本练习'),
(368, 171, '字符串'),
(369, 172, '动态规划'),
(370, 173, '图论算法'),
(371, 173, '动态规划'),
(372, 173, '贪心算法'),
(373, 174, 'USACO'),
(374, 174, '动态规划'),
(375, 175, 'USACO'),
(376, 175, '动态规划'),
(377, 175, '图论算法'),
(378, 175, '搜索'),
(379, 175, '最短路径'),
(380, 176, 'USACO'),
(381, 176, '图论算法'),
(382, 176, '最短路径'),
(383, 177, 'USACO'),
(384, 177, '基本练习'),
(385, 178, 'USACO'),
(386, 178, '动态规划'),
(387, 179, 'USACO'),
(388, 179, '搜索'),
(389, 180, 'USACO'),
(390, 180, '贪心算法'),
(391, 181, 'USACO'),
(392, 181, '图论算法'),
(393, 181, '离散化'),
(394, 182, 'USACO'),
(395, 182, '稀疏表'),
(396, 182, '线段树'),
(397, 183, 'USACO'),
(398, 183, '基本练习'),
(399, 184, 'USACO'),
(400, 184, '动态规划'),
(401, 184, '数学方法'),
(402, 185, 'USACO'),
(403, 185, '图论算法'),
(404, 185, '最小生成树'),
(405, 186, 'USACO'),
(406, 186, '图论算法'),
(407, 186, '搜索'),
(408, 187, 'USACO'),
(409, 187, '基本练习'),
(410, 188, 'USACO'),
(411, 188, '图论算法'),
(412, 188, '最短路径'),
(413, 189, '动态规划'),
(414, 190, '动态规划'),
(415, 191, '动态规划'),
(416, 192, '动态规划'),
(417, 193, '搜索'),
(418, 194, '贪心算法'),
(419, 195, '动态规划'),
(420, 196, '搜索'),
(421, 196, '计算几何'),
(422, 197, '平衡树'),
(423, 197, 'HAOI'),
(424, 197, '字符串'),
(425, 198, '搜索'),
(426, 199, '动态规划'),
(427, 200, '数值递推'),
(428, 201, '图论算法'),
(429, 201, '最短路径'),
(430, 202, '数学方法'),
(431, 203, '动态规划'),
(432, 204, '动态规划'),
(433, 205, '图论算法'),
(434, 205, '连通分量'),
(435, 206, '基本练习'),
(436, 207, '数学方法'),
(437, 208, '哈希散列'),
(438, 208, '搜索'),
(439, 209, '动态规划'),
(440, 210, '离散化'),
(441, 211, '动态规划'),
(442, 212, '搜索'),
(443, 213, '动态规划'),
(444, 214, '贪心算法'),
(445, 215, '动态规划'),
(446, 215, '计算几何'),
(447, 216, '动态规划'),
(448, 217, '搜索'),
(449, 218, '基本练习'),
(450, 218, 'NOIP'),
(451, 219, 'NOIP'),
(452, 219, '动态规划'),
(453, 220, 'NOIP'),
(454, 220, '搜索'),
(455, 221, 'NOIP'),
(456, 221, '动态规划'),
(457, 221, '图论算法'),
(458, 221, '数学方法'),
(459, 221, '贪心算法'),
(460, 222, '动态规划'),
(461, 222, 'POI'),
(462, 223, 'POI'),
(463, 223, '动态规划'),
(464, 223, '数学方法'),
(465, 224, 'POI'),
(466, 224, '动态规划'),
(467, 225, 'POI'),
(468, 225, '贪心算法'),
(469, 226, 'POI'),
(470, 226, '数学方法'),
(471, 227, 'POI'),
(472, 227, '搜索'),
(473, 228, '数值递推'),
(474, 228, '高精度计算'),
(475, 228, 'POI'),
(476, 229, 'POI'),
(477, 229, '图论算法'),
(478, 229, '并查集'),
(479, 229, '连通分量'),
(480, 229, '高精度计算'),
(481, 229, '数学方法'),
(482, 230, 'POI'),
(483, 230, '图论算法'),
(484, 230, '搜索'),
(485, 230, '最短路径'),
(486, 231, 'POI'),
(487, 231, '图论算法'),
(488, 231, '搜索'),
(489, 231, '数学方法'),
(490, 231, '最短路径'),
(491, 232, '优先队列'),
(492, 232, 'POI'),
(493, 232, '贪心算法'),
(494, 233, 'POI'),
(495, 233, '图论算法'),
(496, 233, '并查集'),
(497, 233, '离散化'),
(498, 233, '连通分量'),
(499, 234, 'POI'),
(500, 234, '并查集'),
(501, 234, '计算几何'),
(502, 234, '连通分量'),
(503, 235, 'POI'),
(504, 235, '动态规划'),
(505, 236, 'POI'),
(506, 236, '图论算法'),
(507, 236, '网络流'),
(508, 237, 'POI'),
(509, 237, '动态规划'),
(510, 238, 'POI'),
(511, 238, '动态规划'),
(512, 239, '优先队列'),
(513, 239, 'POI'),
(514, 239, '贪心算法'),
(515, 240, 'POI'),
(516, 240, '图论算法'),
(517, 240, '搜索'),
(518, 240, '双连通分量'),
(519, 241, 'POI'),
(520, 241, '贪心算法'),
(521, 242, 'POI'),
(522, 242, '数学方法'),
(523, 242, '数值递推'),
(524, 243, 'POI'),
(525, 243, '数学方法'),
(526, 243, '贪心算法'),
(527, 244, 'POI'),
(528, 244, '图论算法'),
(529, 244, '搜索'),
(530, 244, '贪心算法'),
(531, 245, 'POI'),
(532, 245, '优先队列'),
(533, 246, 'POI'),
(534, 246, '图论算法'),
(535, 246, '搜索'),
(536, 247, '线段树'),
(537, 248, 'POI'),
(538, 248, '数值递推'),
(539, 248, '高精度计算'),
(540, 249, '分治算法'),
(541, 249, 'POI'),
(542, 249, '字符串'),
(543, 250, 'POI'),
(544, 250, '动态规划'),
(545, 250, '数值递推'),
(546, 251, 'POI'),
(547, 251, '离散化'),
(548, 252, 'POI'),
(549, 252, '图论算法'),
(550, 252, '搜索'),
(551, 253, 'POI'),
(552, 253, '搜索'),
(553, 253, '数学方法'),
(554, 254, 'POI'),
(555, 254, '图论算法'),
(556, 254, '最短路径'),
(557, 255, 'POI'),
(558, 255, '图论算法'),
(559, 255, '搜索'),
(560, 255, '连通分量'),
(561, 255, '数值递推'),
(562, 256, '线段树'),
(563, 256, 'POI'),
(564, 256, '平衡树'),
(565, 256, '数学方法'),
(566, 256, '离散化'),
(567, 256, '数值递推'),
(568, 257, '平衡树'),
(569, 257, '分治算法'),
(570, 257, '线段树'),
(571, 258, 'NOI'),
(572, 258, '离散化'),
(573, 258, '计算几何'),
(574, 259, '并查集'),
(575, 260, 'NOI'),
(576, 260, '并查集'),
(577, 261, 'NOI'),
(578, 261, '动态规划'),
(579, 262, 'NOI'),
(580, 262, '基本练习'),
(581, 263, '线段树'),
(582, 264, '线段树'),
(583, 264, '树状数组'),
(584, 265, '线段树'),
(585, 266, 'NOI'),
(586, 266, '贪心算法'),
(587, 267, 'NOI'),
(588, 267, '图论算法'),
(589, 267, '最短路径'),
(590, 268, 'NOI'),
(591, 268, '搜索'),
(592, 269, 'NOI'),
(593, 269, '基本练习'),
(594, 270, 'NOI'),
(595, 270, '动态规划'),
(596, 271, 'NOI'),
(597, 271, '贪心算法'),
(598, 271, '随机化算法'),
(599, 271, '表达式树'),
(600, 272, 'NOI'),
(601, 272, '动态规划'),
(602, 273, 'NOI'),
(603, 273, '搜索'),
(604, 274, 'USACO'),
(605, 274, '动态规划'),
(606, 275, 'USACO'),
(607, 275, '连通分量'),
(608, 276, 'USACO'),
(609, 276, '基本练习'),
(610, 277, 'USACO'),
(611, 277, '图论算法'),
(612, 278, 'USACO'),
(613, 278, '动态规划'),
(614, 278, '图论算法'),
(615, 279, '优先队列'),
(616, 279, 'USACO'),
(617, 279, '图论算法'),
(618, 279, '最短路径'),
(619, 280, 'USACO'),
(620, 280, '图论算法'),
(621, 281, 'USACO'),
(622, 281, '字符串'),
(623, 282, 'NOI'),
(624, 282, '动态规划'),
(625, 282, '图论算法'),
(626, 282, '最短路径'),
(627, 283, 'NOI'),
(628, 283, '数值递推'),
(629, 284, '优先队列'),
(630, 284, 'NOI'),
(631, 285, 'NOI'),
(632, 285, '动态规划'),
(633, 285, '图论算法'),
(634, 286, 'NOI'),
(635, 286, '图论算法'),
(636, 286, '数学方法'),
(637, 286, '最短路径'),
(638, 286, '差分约束系统'),
(639, 287, 'NOI'),
(640, 287, '图论算法'),
(641, 288, 'NOI'),
(642, 288, '数学方法'),
(643, 288, '网络流'),
(644, 289, 'NOI'),
(645, 289, '动态规划'),
(646, 289, '图论算法'),
(647, 290, '二分图匹配'),
(648, 290, '计算几何'),
(649, 290, '网络流'),
(650, 291, 'NOI'),
(651, 291, '动态规划'),
(652, 291, '图论算法'),
(653, 292, 'NOI'),
(654, 292, '基本练习'),
(655, 292, '数学方法'),
(656, 293, 'NOI'),
(657, 293, '字符串'),
(658, 294, 'NOI'),
(659, 294, '数值递推'),
(660, 295, 'NOI'),
(661, 295, '字符串'),
(662, 296, 'NOI'),
(663, 296, '动态规划'),
(664, 296, '字符串'),
(665, 297, 'NOI'),
(666, 297, '搜索'),
(667, 297, '表达式树'),
(668, 298, '并查集'),
(669, 298, 'NOI'),
(670, 299, 'NOI'),
(671, 299, '搜索'),
(672, 300, 'NOI'),
(673, 300, '动态规划'),
(674, 301, 'NOI'),
(675, 301, '动态规划'),
(676, 302, 'HAOI'),
(677, 302, '动态规划'),
(678, 302, '数学方法'),
(679, 303, 'NOI'),
(680, 303, '数学方法'),
(681, 304, 'NOI'),
(682, 304, '搜索'),
(683, 304, '哈希散列'),
(684, 305, '分治算法'),
(685, 305, '动态规划'),
(686, 305, 'HAOI'),
(687, 306, 'NOI'),
(688, 306, '二分图匹配'),
(689, 306, '数学方法'),
(690, 307, 'HAOI'),
(691, 307, '搜索'),
(692, 307, '随机化算法'),
(693, 308, '稀疏表'),
(694, 308, '优先队列'),
(695, 308, 'HAOI'),
(696, 308, '动态规划'),
(697, 309, 'USACO'),
(698, 309, '最短路径'),
(699, 310, 'USACO'),
(700, 310, '最小生成树'),
(701, 311, 'USACO'),
(702, 311, '双连通分量'),
(703, 312, 'HAOI'),
(704, 312, '动态规划'),
(705, 312, '分治算法'),
(706, 313, 'POI'),
(707, 313, '连通分量'),
(708, 313, '图论算法'),
(709, 313, '拓扑排序'),
(710, 314, '线段树'),
(711, 314, '树状数组'),
(712, 314, '平衡树'),
(713, 314, 'NOI'),
(714, 315, 'USACO'),
(715, 315, '最短路径'),
(716, 315, '图论算法'),
(717, 316, '离散化'),
(718, 316, '最短路径'),
(719, 316, '图论算法'),
(720, 317, 'HAOI'),
(721, 317, '动态规划'),
(722, 318, '搜索'),
(723, 319, '动态规划'),
(724, 320, '最短路径'),
(725, 320, '图论算法'),
(726, 320, '网络流'),
(727, 321, '数值递推'),
(728, 322, '字符串'),
(729, 322, '平衡树'),
(730, 324, '动态规划'),
(731, 324, '数值递推'),
(732, 325, '图论算法'),
(733, 325, '最小生成树'),
(734, 326, '动态规划'),
(735, 326, '图论算法'),
(736, 326, '最短路径'),
(737, 327, '动态规划'),
(738, 327, '数值递推'),
(739, 328, '图论算法'),
(740, 328, '最短路径'),
(741, 329, '图论算法'),
(742, 329, '网络流'),
(743, 330, 'NOI'),
(744, 330, '字符串'),
(745, 330, '平衡树'),
(746, 331, 'NOI'),
(747, 331, '动态规划'),
(748, 332, 'NOI'),
(749, 332, '数值递推'),
(750, 332, '数学方法'),
(751, 333, 'NOI'),
(752, 333, '数学方法'),
(753, 334, 'NOI'),
(754, 334, '搜索'),
(755, 334, '基本练习'),
(756, 335, 'NOI'),
(757, 335, '动态规划'),
(758, 335, '图论算法'),
(759, 336, 'NOI'),
(760, 336, '搜索'),
(761, 337, 'NOI'),
(762, 337, '动态规划'),
(763, 337, '搜索'),
(764, 338, 'NOI'),
(765, 338, '计算几何'),
(766, 339, 'NOI'),
(767, 339, '平衡树'),
(768, 340, 'NOI'),
(769, 340, '优先队列'),
(770, 340, '动态规划'),
(771, 341, 'NOI'),
(772, 341, '动态规划'),
(773, 341, '数值递推'),
(774, 342, 'NOI'),
(775, 342, '动态规划'),
(776, 343, 'NOI'),
(777, 343, '动态规划'),
(778, 344, 'NOI'),
(779, 344, '数学方法'),
(780, 344, '高精度计算'),
(781, 345, '二分图匹配'),
(782, 345, '图论算法'),
(783, 345, '网络流'),
(784, 345, '连通分量'),
(785, 346, '动态规划'),
(786, 346, '图论算法'),
(787, 346, '贪心算法'),
(788, 347, '平衡树'),
(789, 348, '动态规划'),
(790, 348, '双连通分量'),
(791, 349, '动态规划'),
(792, 349, '数值递推'),
(793, 350, '动态规划'),
(794, 351, '默认分类'),
(795, 352, '动态规划'),
(796, 353, '哈希散列'),
(797, 353, '动态规划'),
(798, 354, '动态规划'),
(799, 355, '网络流'),
(800, 356, '默认分类'),
(801, 357, '二分图匹配'),
(802, 362, '优先队列'),
(803, 362, '动态规划'),
(804, 363, 'USACO'),
(805, 363, '优先队列'),
(806, 363, '动态规划'),
(807, 364, '基本练习'),
(808, 364, '最短路径'),
(809, 365, '基本练习'),
(810, 365, '数学方法'),
(811, 366, '动态规划'),
(812, 367, '优先队列'),
(813, 367, '动态规划'),
(814, 371, '基本练习'),
(815, 371, '搜索'),
(816, 371, '数学方法'),
(817, 372, '基本数据结构'),
(818, 373, '数学方法'),
(819, 374, '搜索'),
(820, 375, '动态规划'),
(821, 375, '字符串'),
(822, 376, '动态规划'),
(823, 377, '动态规划'),
(824, 382, '分治算法'),
(825, 382, '基本练习'),
(826, 384, '动态规划'),
(827, 385, '贪心算法'),
(828, 386, 'USACO'),
(829, 386, '分治算法'),
(830, 386, '图论算法'),
(831, 386, '最短路径'),
(832, 387, '基本练习'),
(833, 387, '高精度计算'),
(834, 387, '字符串'),
(835, 388, '动态规划'),
(836, 388, '离散化'),
(837, 389, '基本练习'),
(838, 389, '排序'),
(839, 390, '基本练习'),
(840, 390, '数学方法'),
(841, 391, '搜索'),
(842, 391, '数学方法'),
(843, 392, '基本练习'),
(844, 392, '贪心算法'),
(845, 393, 'USACO'),
(846, 393, '基本练习'),
(847, 393, '字符串'),
(848, 394, 'USACO'),
(849, 394, '搜索'),
(850, 394, '数值递推'),
(851, 395, 'USACO'),
(852, 395, '搜索'),
(853, 396, '最值子图'),
(854, 396, '网络流'),
(855, 397, 'USACO'),
(856, 397, '图论算法'),
(857, 397, '最短路径'),
(858, 398, '基本练习'),
(859, 398, '数值递推'),
(860, 399, '基本练习'),
(861, 399, '字符串'),
(862, 401, '基本数据结构'),
(863, 402, '基本数据结构'),
(864, 402, '基本练习'),
(865, 403, '分治算法'),
(866, 403, '计算几何'),
(867, 404, 'NOIP'),
(868, 404, '基本练习'),
(869, 404, '字符串'),
(870, 405, 'NOIP'),
(871, 405, '数学方法'),
(872, 406, 'NOIP'),
(873, 406, '动态规划'),
(874, 406, '拓扑排序'),
(875, 406, '最短路径'),
(876, 407, '搜索'),
(877, 407, 'NOIP'),
(878, 408, 'NOI'),
(879, 408, '动态规划'),
(880, 408, '平衡树'),
(881, 409, 'NOI'),
(882, 409, '二分图匹配'),
(883, 409, '贪心算法'),
(884, 410, 'NOI'),
(885, 410, '图论算法'),
(886, 410, '最值子图'),
(887, 410, '网络流'),
(888, 411, 'NOI'),
(889, 411, '动态规划'),
(890, 411, '数值递推'),
(891, 411, '数学方法'),
(892, 412, '搜索'),
(893, 412, 'IOI'),
(894, 413, 'HAOI'),
(895, 413, '贪心算法'),
(896, 414, 'HAOI'),
(897, 414, '数值递推'),
(898, 415, 'HAOI'),
(899, 415, '图论算法'),
(900, 415, '最短路径'),
(901, 416, '数学方法'),
(902, 417, '图论算法'),
(903, 417, '动态规划'),
(904, 417, 'HAOI'),
(905, 418, 'HAOI'),
(906, 418, '线段树'),
(907, 418, '字符串'),
(908, 418, '贪心算法'),
(909, 419, '分治算法'),
(910, 419, '搜索'),
(911, 419, 'IOI'),
(912, 420, '网络流'),
(913, 420, '费用流'),
(914, 421, '树状数组'),
(915, 421, '线段树'),
(916, 422, '动态规划'),
(917, 422, '字符串'),
(918, 423, '图论算法'),
(919, 423, '数值递推'),
(920, 423, '最短路径'),
(921, 424, '分治算法'),
(922, 424, '线段树'),
(923, 424, '平衡树'),
(924, 425, '动态规划'),
(925, 425, '双连通分量'),
(926, 425, '图论算法'),
(927, 426, '二分图匹配'),
(928, 426, '网络流'),
(929, 426, '连通分量'),
(930, 427, 'HAOI'),
(931, 427, '网络流'),
(932, 427, '贪心算法'),
(933, 427, '费用流'),
(934, 428, '基本数据结构'),
(935, 428, '基本练习'),
(936, 428, '字符串'),
(937, 429, '图论算法'),
(938, 429, '最短路径'),
(939, 430, '图论算法'),
(940, 431, 'NP问题'),
(941, 431, '搜索'),
(942, 432, '数学方法'),
(943, 433, '基本练习'),
(944, 433, '字符串'),
(945, 434, '基本练习'),
(946, 435, '搜索'),
(947, 436, '网络流'),
(948, 437, '基本练习'),
(949, 438, '二分图匹配'),
(950, 438, '贪心算法'),
(951, 439, '搜索'),
(952, 439, '最短路径'),
(953, 440, '图论算法'),
(954, 440, '搜索'),
(955, 441, '图论算法'),
(956, 441, '搜索'),
(957, 442, '动态规划'),
(958, 442, '计算几何'),
(959, 443, 'HAOI'),
(960, 443, '数值递推'),
(961, 443, '数学方法'),
(962, 444, 'HAOI'),
(963, 444, '动态规划'),
(964, 445, 'HAOI'),
(965, 445, '动态规划'),
(966, 446, 'HAOI'),
(967, 446, '动态规划'),
(968, 446, '网络流'),
(969, 446, '费用流'),
(970, 447, 'USACO'),
(971, 447, '数值递推'),
(972, 448, '基本练习'),
(973, 448, '贪心算法'),
(974, 449, '图论算法'),
(975, 451, '线段树'),
(976, 452, '博弈论'),
(977, 461, '动态规划'),
(978, 461, '费用流'),
(979, 462, '搜索'),
(980, 463, 'NOIP'),
(981, 463, '字符串'),
(982, 464, '动态规划'),
(983, 464, '基本练习'),
(984, 464, '字符串'),
(985, 465, '基本练习'),
(986, 465, '并查集'),
(987, 465, '离散化'),
(988, 468, 'NOI'),
(989, 469, 'NOI'),
(990, 470, 'NOI'),
(991, 471, 'NOI'),
(992, 476, '动态规划'),
(993, 477, '你猜'),
(994, 478, '基本练习'),
(995, 479, '动态规划'),
(996, 480, '图论算法'),
(997, 481, '图论算法'),
(998, 481, '搜索'),
(999, 487, '并查集'),
(1000, 487, '数学方法'),
(1001, 487, '数论'),
(1002, 488, '动态规划'),
(1003, 488, '排序'),
(1004, 496, '动态规划'),
(1005, 497, '图论算法'),
(1006, 497, '最短路径'),
(1007, 500, '动态规划'),
(1008, 502, '基本练习'),
(1009, 503, '动态规划'),
(1010, 515, '排序'),
(1011, 516, '数值递推'),
(1012, 539, '图论算法'),
(1013, 539, '数学方法'),
(1014, 544, 'HAOI'),
(1015, 544, '数学方法'),
(1016, 545, 'NOI'),
(1017, 545, '计算几何'),
(1018, 546, 'HAOI'),
(1019, 547, '平衡树'),
(1020, 547, '计算几何'),
(1021, 548, 'HAOI'),
(1022, 548, '数学方法'),
(1023, 549, 'HAOI'),
(1024, 550, 'NOI'),
(1025, 588, 'NOIP'),
(1026, 588, '动态规划'),
(1027, 602, '最小生成树'),
(1028, 623, 'NOIP'),
(1029, 625, 'NOIP'),
(1030, 625, '基本练习'),
(1031, 626, 'NOIP'),
(1032, 626, '基本数据结构'),
(1033, 631, 'NOIP'),
(1034, 637, '排序');

-- --------------------------------------------------------

--
-- テーブルの構造 `related_problem`
--

CREATE TABLE IF NOT EXISTS `related_problem` (
  `problem_id` int(11) NOT NULL,
  `note_id` int(11) NOT NULL,
  KEY `problem_id` (`problem_id`),
  KEY `note_id` (`note_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `reply`
--

CREATE TABLE IF NOT EXISTS `reply` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` mediumtext NOT NULL,
  `member_id` int(11) NOT NULL,
  `topic_id` int(11) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `topic_id` (`topic_id`),
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `reset_mail`
--

CREATE TABLE IF NOT EXISTS `reset_mail` (
  `member_id` int(11) NOT NULL,
  `secret` varchar(100) NOT NULL,
  `create` datetime NOT NULL,
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `submit`
--

CREATE TABLE IF NOT EXISTS `submit` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `problem_id` int(11) NOT NULL,
  `member_id` int(11) NOT NULL,
  `code` mediumtext NOT NULL,
  `status` int(11) NOT NULL DEFAULT '0',
  `testpoint` text,
  `testpoint_time` text,
  `testpoint_memory` text,
  `score` int(11) NOT NULL DEFAULT '0',
  `costtime` int(11) NOT NULL DEFAULT '0',
  `costmemory` int(11) NOT NULL DEFAULT '0',
  `timestamp` varchar(50) NOT NULL,
  `lang` int(11) NOT NULL,
  `msg` text,
  `user_agent` text NOT NULL,
  `ip` varchar(100) NOT NULL,
  `create` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `problem_id` (`problem_id`),
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- テーブルの構造 `topic`
--

CREATE TABLE IF NOT EXISTS `topic` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` text NOT NULL,
  `content` mediumtext NOT NULL,
  `node_id` int(11) NOT NULL,
  `member_id` int(11) NOT NULL,
  `create` datetime NOT NULL,
  `last_reply` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `node_id` (`node_id`),
  KEY `member_id` (`member_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- ダンプしたテーブルの制約
--

--
-- テーブルの制約 `auth`
--
ALTER TABLE `auth`
  ADD CONSTRAINT `auth_ibfk_1` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

--
-- テーブルの制約 `contest_problem`
--
ALTER TABLE `contest_problem`
  ADD CONSTRAINT `contest_problem_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contest` (`id`),
  ADD CONSTRAINT `contest_problem_ibfk_2` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`);

--
-- テーブルの制約 `contest_submit`
--
ALTER TABLE `contest_submit`
  ADD CONSTRAINT `contest_submit_ibfk_1` FOREIGN KEY (`contest_id`) REFERENCES `contest` (`id`),
  ADD CONSTRAINT `contest_submit_ibfk_2` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`),
  ADD CONSTRAINT `contest_submit_ibfk_3` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

--
-- テーブルの制約 `note`
--
ALTER TABLE `note`
  ADD CONSTRAINT `note_ibfk_1` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

--
-- テーブルの制約 `problem_tag`
--
ALTER TABLE `problem_tag`
  ADD CONSTRAINT `problem_tag_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`);

--
-- テーブルの制約 `related_problem`
--
ALTER TABLE `related_problem`
  ADD CONSTRAINT `related_problem_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`),
  ADD CONSTRAINT `related_problem_ibfk_2` FOREIGN KEY (`note_id`) REFERENCES `note` (`id`);

--
-- テーブルの制約 `reply`
--
ALTER TABLE `reply`
  ADD CONSTRAINT `reply_ibfk_1` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`),
  ADD CONSTRAINT `reply_ibfk_2` FOREIGN KEY (`topic_id`) REFERENCES `topic` (`id`);

--
-- テーブルの制約 `reset_mail`
--
ALTER TABLE `reset_mail`
  ADD CONSTRAINT `reset_mail_ibfk_1` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

--
-- テーブルの制約 `submit`
--
ALTER TABLE `submit`
  ADD CONSTRAINT `submit_ibfk_1` FOREIGN KEY (`problem_id`) REFERENCES `problem` (`id`),
  ADD CONSTRAINT `submit_ibfk_2` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

--
-- テーブルの制約 `topic`
--
ALTER TABLE `topic`
  ADD CONSTRAINT `topic_ibfk_1` FOREIGN KEY (`node_id`) REFERENCES `node` (`id`),
  ADD CONSTRAINT `topic_ibfk_2` FOREIGN KEY (`member_id`) REFERENCES `member` (`id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
